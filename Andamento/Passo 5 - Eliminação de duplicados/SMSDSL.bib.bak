% Encoding: UTF-8

@Book{Kelker:2013:CDL:2613607,
  title     = {Clojure for Domain-specific Languages},
  publisher = {Packt Publishing},
  year      = {2013},
  author    = {Kelker, Ryan D.},
  groups    = {ACM, Inclusos},
  isbn      = {1782166505, 9781782166504},
}

@Book{Bettini:2013:IDL:2563543,
  title     = {Implementing Domain-Specific Languages with Xtext and Xtend},
  publisher = {Packt Publishing},
  year      = {2013},
  author    = {Bettini, Lorenzo},
  groups    = {ACM, Inclusos},
  isbn      = {1782160302, 9781782160304},
}

@InProceedings{Cheng:2014:GDL:2950284.2950285,
  author        = {Cheng, Betty H. and Combemale, Benoit and France, Robert B. and J{\'e}z{\'e}quel, Jean-Marc and Rumpe, Bernhard},
  title         = {On the Globalization of Domain-Specific Languages},
  booktitle     = {Revised Papers of the International Dagstuhl Seminar on Globalizing Domain-Specific Languages - Volume 9400},
  year          = {2015},
  pages         = {1--6},
  address       = {New York, NY, USA},
  publisher     = {Springer-Verlag New York, Inc.},
  __markedentry = {[Neto:5]},
  acmid         = {2950285},
  doi           = {10.1007/978-3-319-26172-0_1},
  groups        = {SpringerLink, Scopus, Duplicados},
  isbn          = {978-3-319-26171-3},
  keywords      = {DSL, Domain-specific language, Globalization of DSLs, Model coordination, Modelling, rank3},
  numpages      = {6},
  url           = {http://dx.doi.org/10.1007/978-3-319-26172-0_1},
}

@InProceedings{Kaminski:2013:CUD:2489812.2489817,
  author    = {Kaminski, Ted and Van Wyk, Eric},
  title     = {Creating and Using Domain-specific Language Features},
  booktitle = {Proceedings of the First Workshop on the Globalization of Domain Specific Languages},
  year      = {2013},
  series    = {GlobalDSL '13},
  pages     = {18--21},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2489817},
  doi       = {10.1145/2489812.2489817},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-2043-6},
  location  = {Montpellier, France},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2489812.2489817},
}

@InProceedings{Clark:2014:CMG:2950284.2950286,
  author    = {Clark, Tony and Brand, Mark and Combemale, Benoit and Rumpe, Bernhard},
  title     = {Conceptual Model of the Globalization for Domain-Specific Languages},
  booktitle = {Revised Papers of the International Dagstuhl Seminar on Globalizing Domain-Specific Languages - Volume 9400},
  year      = {2015},
  pages     = {7--20},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2950286},
  doi       = {10.1007/978-3-319-26172-0_2},
  groups    = {Scopus, Inclusos},
  isbn      = {978-3-319-26171-3},
  keywords  = {Conceptual model, Globalized DSLs},
  numpages  = {14},
  url       = {http://dx.doi.org/10.1007/978-3-319-26172-0_2},
}

@InProceedings{Zarrin:2014:DDL:2688447.2688452,
  author    = {Zarrin, Bahram and Baumeister, Hubert},
  title     = {Design of a Domain-Specific Language for Material Flow Analysis Using Microsoft DSL Tools: An Experience Paper},
  booktitle = {Proceedings of the 14th Workshop on Domain-Specific Modeling},
  year      = {2014},
  series    = {DSM '14},
  pages     = {23--28},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2688452},
  doi       = {10.1145/2688447.2688452},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-2156-3},
  keywords  = {domain-specific modeling languages, material flow, ms dsl tools},
  location  = {Portland, Oregon, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2688447.2688452},
}

@InProceedings{Kulkarni:2013:EDE:2505351.2505355,
  author        = {Kulkarni, Abhishek and Newton, Ryan R.},
  title         = {Embrace, Defend, Extend: A Methodology for Embedding Preexisting DSLs},
  booktitle     = {Proceedings of the 1st Annual Workshop on Functional Programming Concepts in Domain-specific Languages},
  year          = {2013},
  series        = {FPCDSL '13},
  pages         = {27--34},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2505355},
  doi           = {10.1145/2505351.2505355},
  groups        = {Scopus, Compendex, Duplicados},
  isbn          = {978-1-4503-2380-2},
  keywords      = {haskell, parallel, streaming, rank3},
  location      = {Boston, Massachusetts, USA},
  numpages      = {8},
  url           = {http://doi.acm.org/10.1145/2505351.2505355},
}

@InProceedings{Pescador:2016:DRD:2970276.2970328,
  author    = {Pescador, Ana and de Lara, Juan},
  title     = {DSL-maps: From Requirements to Design of Domain-specific Languages},
  booktitle = {Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  year      = {2016},
  series    = {ASE 2016},
  pages     = {438--443},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2970328},
  doi       = {10.1145/2970276.2970328},
  groups    = {IEEEDSL, Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-3845-5},
  keywords  = {Domain Analysis, Domain Specific Languages, Meta-Modelling Patterns, Model-Driven Engineering},
  location  = {Singapore, Singapore},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2970276.2970328},
}

@InProceedings{Cheng:2014:MUC:2950284.2950287,
  author    = {Cheng, Betty H. and Degueule, Thomas and Atkinson, Colin and Clarke, Siobhan and Frank, Ulrich and Mosterman, Pieter J. and Sztipanovits, Janos},
  title     = {Motivating Use Cases for the Globalization of DSLs},
  booktitle = {Revised Papers of the International Dagstuhl Seminar on Globalizing Domain-Specific Languages - Volume 9400},
  year      = {2015},
  pages     = {21--42},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2950287},
  doi       = {10.1007/978-3-319-26172-0_3},
  groups    = {Scopus, Inclusos},
  isbn      = {978-3-319-26171-3},
  keywords  = {Language integration, Multi-model integration},
  numpages  = {22},
  url       = {http://dx.doi.org/10.1007/978-3-319-26172-0_3},
}

@InProceedings{Liao:2015:EDS:2830018.2830022,
  author    = {Liao, Chunhua and Lin, Pei-Hung and Quinlan, Daniel J. and Zhao, Yue and Shen, Xipeng},
  title     = {Enhancing Domain Specific Language Implementations Through Ontology},
  booktitle = {Proceedings of the 5th International Workshop on Domain-Specific Languages and High-Level Frameworks for High Performance Computing},
  year      = {2015},
  series    = {WOLFHPC '15},
  pages     = {3:1--3:9},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2830022},
  articleno = {3},
  doi       = {10.1145/2830018.2830022},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-4016-8},
  keywords  = {compiler, domain-specific language, high-performance computing, knowledge base, ontology},
  location  = {Austin, Texas},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2830018.2830022},
}

@Article{MoreiraDeSousa:2016:DSL:2874825.2874902,
  author     = {Moreira De Sousa, Lu\'{\i}s and Rodrigues Da Silva, Alberto},
  title      = {A Domain Specific Language for Spatial Simulation Scenarios},
  journal    = {Geoinformatica},
  year       = {2016},
  volume     = {20},
  number     = {1},
  pages      = {117--149},
  month      = jan,
  acmid      = {2874902},
  address    = {Hingham, MA, USA},
  doi        = {10.1007/s10707-015-0233-y},
  groups     = {Scopus, Compendex, Inclusos},
  issn       = {1384-6175},
  issue_date = {January 2016},
  keywords   = {Domain specific language, Model-driven development, Spatial simulation, UML profile},
  numpages   = {33},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s10707-015-0233-y},
}

@InProceedings{Krikava:2014:MMU:2554850.2555127,
  author    = {K\v{r}ikava, Filip and Collet, Philippe and France, Robert B.},
  title     = {Manipulating Models Using Internal Domain-specific Languages},
  booktitle = {Proceedings of the 29th Annual ACM Symposium on Applied Computing},
  year      = {2014},
  series    = {SAC '14},
  pages     = {1612--1614},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2555127},
  doi       = {10.1145/2554850.2555127},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-2469-4},
  keywords  = {domain-specific languages, model manipulation, model transformation, model-driven engineering, scala},
  location  = {Gyeongju, Republic of Korea},
  numpages  = {3},
  url       = {http://doi.acm.org/10.1145/2554850.2555127},
}

@InProceedings{Haser:2016:ITE:2915970.2916010,
  author    = {H\"{a}ser, Florian and Felderer, Michael and Breu, Ruth},
  title     = {An Integrated Tool Environment for Experimentation in Domain Specific Language Engineering},
  booktitle = {Proceedings of the 20th International Conference on Evaluation and Assessment in Software Engineering},
  year      = {2016},
  series    = {EASE '16},
  pages     = {20:1--20:5},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2916010},
  articleno = {20},
  doi       = {10.1145/2915970.2916010},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-1-4503-3691-8},
  keywords  = {controlled experiment, domain specific languages (DSLs), empirical evaluation, experimentation, language engineering, meta programming system (MPS), tool support},
  location  = {Limerick, Ireland},
  numpages  = {5},
  url       = {http://doi.acm.org/10.1145/2915970.2916010},
}

@Article{Slivnik:2016:MCD:2967981.2967995,
  author     = {Slivnik, Bo\v{s}tjan},
  title      = {Measuring the Complexity of Domain-specific Languages Developed Using MDD},
  journal    = {Software Quality Journal},
  year       = {2016},
  volume     = {24},
  number     = {3},
  pages      = {737--753},
  month      = sep,
  acmid      = {2967995},
  address    = {Hingham, MA, USA},
  doi        = {10.1007/s11219-015-9279-1},
  groups     = {Scopus, Inclusos},
  issn       = {0963-9314},
  issue_date = {September 2016},
  keywords   = {Domain-specific languages, Metamodel quality, Model-driven development, Quality metrics},
  numpages   = {17},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s11219-015-9279-1},
}

@Article{Tairas:2015:CAD:2776899.2776926,
  author     = {Tairas, Robert and Cabot, Jordi},
  title      = {Corpus-based Analysis of Domain-specific Languages},
  journal    = {Softw. Syst. Model.},
  year       = {2015},
  volume     = {14},
  number     = {2},
  pages      = {889--904},
  month      = may,
  acmid      = {2776926},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-013-0352-6},
  groups     = {Scopus, SpringerLink, Compendex, Inclusos},
  issn       = {1619-1366},
  issue_date = {May 2015},
  keywords   = {ATL, Analysis, Corpus, DSL, Domain-specific languages, Puppet},
  numpages   = {16},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-013-0352-6},
}

@Article{Sevenich:2016:UDL:3007263.3007265,
  author     = {Sevenich, Martin and Hong, Sungpack and van Rest, Oskar and Wu, Zhe and Banerjee, Jayanta and Chafi, Hassan},
  title      = {Using Domain-specific Languages for Analytic Graph Databases},
  journal    = {Proc. VLDB Endow.},
  year       = {2016},
  volume     = {9},
  number     = {13},
  pages      = {1257--1268},
  month      = sep,
  acmid      = {3007265},
  doi        = {10.14778/3007263.3007265},
  groups     = {ACM, Inclusos},
  issn       = {2150-8097},
  issue_date = {September 2016},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/3007263.3007265},
}

@InProceedings{LeGoaer:2013:YDC:2489812.2489819,
  author    = {Le Goaer, Olivier and Waltham, Sacha},
  title     = {Yet Another DSL for Cross-platforms Mobile Development},
  booktitle = {Proceedings of the First Workshop on the Globalization of Domain Specific Languages},
  year      = {2013},
  series    = {GlobalDSL '13},
  pages     = {28--33},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2489819},
  doi       = {10.1145/2489812.2489819},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-2043-6},
  keywords  = {DSL, MDA, cross-platform, mobile},
  location  = {Montpellier, France},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2489812.2489819},
}

@InProceedings{Diaz:2013:IMD:2569433.2569962,
  author    = {D\'{\i}az, Oscar and Arellano, Crist\'{o}bal},
  title     = {Integrating Microblogging Into Domain Specific Language Editors},
  booktitle = {Proceedings of the 2013 International Conference on Cloud and Green Computing},
  year      = {2013},
  series    = {CGC '13},
  pages     = {219--225},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2569962},
  doi       = {10.1109/CGC.2013.42},
  groups    = {IEEEDSML, IEEEDSL, Scopus, Inclusos},
  isbn      = {978-0-7695-5114-2},
  keywords  = {Microblogging, Domain Specific Languages, Social Networking Services},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1109/CGC.2013.42},
}

@InProceedings{Jezequel:2014:DSL:2676585.2676586,
  author    = {Jezequel, Jean-Marc},
  title     = {Domain Specific Languages: From Craft to Engineering},
  booktitle = {Proceedings of the Fifth Symposium on Information and Communication Technology},
  year      = {2014},
  series    = {SoICT '14},
  pages     = {6--6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2676586},
  doi       = {10.1145/2676585.2676586},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-2930-9},
  location  = {Hanoi, Viet Nam},
  numpages  = {1},
  url       = {http://doi.acm.org/10.1145/2676585.2676586},
}

@InProceedings{Jacek:2014:DLT:2971130.2971186,
  author    = {Jacek, Kesik and Kamil, Nowakowski and Kamil, \v{Z}y\la},
  title     = {Domain-specific Languages As Tools for Teaching 3D Graphics},
  booktitle = {Proceedings of the 2Nd International Conference on Model-Driven Engineering and Software Development},
  year      = {2014},
  series    = {MODELSWARD 2014},
  pages     = {498--503},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2971186},
  doi       = {10.5220/0004884404980503},
  groups    = {IEEEDSML, IEEEDSL, Scopus, Inclusos},
  isbn      = {978-989-758-007-9},
  keywords  = {3D graphics, DSL, MDE, modeling shaders, teaching},
  location  = {Lisbon, Portugal},
  numpages  = {6},
  url       = {http://dx.doi.org/10.5220/0004884404980503},
}

@InProceedings{deSousa:2015:DSL:2695664.2695972,
  author        = {de Sousa, Lu\'{\i}s and da Silva, Alberto Rodrigues},
  title         = {A Domain Specific Language for Spatial Simulation Scenarios (DSL3S): Introduction and Tool Support},
  booktitle     = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
  year          = {2015},
  series        = {SAC '15},
  pages         = {1854--1856},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2695972},
  doi           = {10.1145/2695664.2695972},
  groups        = {Scopus, Duplicados},
  isbn          = {978-1-4503-3196-8},
  keywords      = {UML profile, domain specific language, model-driven development, spatial simulation, rank3},
  location      = {Salamanca, Spain},
  numpages      = {3},
  url           = {http://doi.acm.org/10.1145/2695664.2695972},
}

@InProceedings{Mooij:2013:GIC:2546568.2546649,
  author    = {Mooij, Arjan J. and Hooman, Jozef and Albers, Rob},
  title     = {Gaining Industrial Confidence for the Introduction of Domain-Specific Languages},
  booktitle = {Proceedings of the 2013 IEEE 37th Annual Computer Software and Applications Conference Workshops},
  year      = {2013},
  series    = {COMPSACW '13},
  pages     = {662--667},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2546649},
  doi       = {10.1109/COMPSACW.2013.83},
  groups    = {IEEEDSL, Scopus, Inclusos},
  isbn      = {978-1-4799-2159-1},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/COMPSACW.2013.83},
}

@InProceedings{Franceschini:2014:DDS:2665008.2665023,
  author    = {Franceschini, Romain and Bisgambiglia, Paul-Antoine and Bisgambiglia, Paul and Hill, David},
  title     = {DEVS-ruby: A Domain Specific Language for DEVS Modeling and Simulation (WIP)},
  booktitle = {Proceedings of the Symposium on Theory of Modeling \& Simulation - DEVS Integrative},
  year      = {2014},
  series    = {DEVS '14},
  pages     = {15:1--15:6},
  address   = {San Diego, CA, USA},
  publisher = {Society for Computer Simulation International},
  acmid     = {2665023},
  articleno = {15},
  groups    = {Compendex, Scopus, Inclusos},
  keywords  = {DEVS, DSL, discrete event simulation, domain specific language},
  location  = {Tampa, Florida},
  numpages  = {6},
  url       = {http://dl.acm.org/citation.cfm?id=2665008.2665023},
}

@InProceedings{Dayibas:2012:KDL:2408859.2409966,
  author    = {Dayibas, Orcun and Oguztuzun, Halit},
  title     = {Kutulu: A Domain-Specific Language for Feature-Driven Product Derivation},
  booktitle = {Proceedings of the 2012 IEEE 36th Annual Computer Software and Applications Conference},
  year      = {2012},
  series    = {COMPSAC '12},
  pages     = {105--110},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2409966},
  doi       = {10.1109/COMPSAC.2012.20},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, Inclusos},
  isbn      = {978-0-7695-4736-7},
  keywords  = {Software Product Line, Domain-specific Language, Variability Management, Feature-Component Binding, Dependency Injection},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/COMPSAC.2012.20},
}

@InProceedings{Firmenich:2013:DSL:2526120.2526146,
  author    = {Firmenich, S{\'e}rgio and Rossi, Gustavo and Winckler, Marco},
  title     = {A Domain Specific Language for Orchestrating User Tasks Whilst Navigation Web Sites},
  booktitle = {Proceedings of the 13th International Conference on Web Engineering},
  year      = {2013},
  series    = {ICWE'13},
  pages     = {224--232},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2526146},
  doi       = {10.1007/978-3-642-39200-9_20},
  groups    = {Scopus, Inclusos},
  isbn      = {978-3-642-39199-6},
  keywords  = {task and process modeling, web application, web augmentation},
  location  = {Aalborg, Denmark},
  numpages  = {9},
  url       = {http://dx.doi.org/10.1007/978-3-642-39200-9_20},
}

@Article{Montenegro-Marin:2012:DSL:2230876.2230878,
  author     = {Montenegro-Mar\'{\i}n, Carlos Enrique and Cueva-Lovelle, Juan Manuel and Sanju\'{a}n-Mart\'{\i}nez, Oscar and Garc\'{\i}a-D\'{\i}az, Vicente},
  title      = {Domain Specific Language for the Generation of Learning Management Systems Modules},
  journal    = {J. Web Eng.},
  year       = {2012},
  volume     = {11},
  number     = {1},
  pages      = {23--50},
  month      = mar,
  acmid      = {2230878},
  address    = {Paramus, NJ},
  groups     = {Compendex, Scopus, Inclusos},
  issn       = {1540-9589},
  issue_date = {March 2012},
  keywords   = {domain specific language (DSL), metamodel, model transformation, model-driven architecture (MDA), platform independent model},
  numpages   = {28},
  publisher  = {Rinton Press, Incorporated},
  url        = {http://dl.acm.org/citation.cfm?id=2230876.2230878},
}

@InProceedings{Erdweg:2014:DSW:2660252.2663600,
  author    = {Erdweg, Sebastian and Welc, Adam},
  title     = {DSLDI 2014: Second Workshop on Domain Specific Languages Design and Implementation},
  booktitle = {Proceedings of the Companion Publication of the 2014 ACM SIGPLAN Conference on Systems, Programming, and Applications: Software for Humanity},
  year      = {2014},
  series    = {SPLASH '14},
  pages     = {71--72},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2663600},
  doi       = {10.1145/2660252.2663600},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-3208-8},
  keywords  = {DSLS, programming languages},
  location  = {Portland, Oregon, USA},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2660252.2663600},
}

@Article{Troya:2014:SSQ:2592293.2592378,
  author     = {Troya, Javier and Vallecillo, Antonio},
  title      = {Specification and Simulation of Queuing Network Models Using Domain-Specific Languages},
  journal    = {Comput. Stand. Interfaces},
  year       = {2014},
  volume     = {36},
  number     = {5},
  pages      = {863--879},
  month      = sep,
  acmid      = {2592378},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.csi.2014.01.002},
  groups     = {ScienceDirect, Scopus, Inclusos},
  issn       = {0920-5489},
  issue_date = {September, 2014},
  keywords   = {Domain-Specific Languages, PMIF, Queuing network models},
  numpages   = {17},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.csi.2014.01.002},
}

@InProceedings{Lai:2012:DVB:2325276.2325277,
  author    = {Lai, Qinan and Carpenter, Andy},
  title     = {Defining and Verifying Behaviour of Domain Specific Language with fUML},
  booktitle = {Proceedings of the Fourth Workshop on Behaviour Modelling - Foundations and Applications},
  year      = {2012},
  series    = {BM-FA '12},
  pages     = {1:1--1:7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2325277},
  articleno = {1},
  doi       = {10.1145/2325276.2325277},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-1-4503-1187-8},
  keywords  = {behavioural semantics, fUML, semantics of modeling languages},
  location  = {Kgs. Lyngby, Denmark},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2325276.2325277},
}

@Article{Acher:2013:FDL:2459520.2459796,
  author     = {Acher, Mathieu and Collet, Philippe and Lahire, Philippe and France, Robert B.},
  title      = {FAMILIAR: A Domain-specific Language for Large Scale Management of Feature Models},
  journal    = {Sci. Comput. Program.},
  year       = {2013},
  volume     = {78},
  number     = {6},
  pages      = {657--681},
  month      = jun,
  acmid      = {2459796},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2012.12.004},
  groups     = {ScienceDirect, Compendex, Scopus, Inclusos},
  issn       = {0167-6423},
  issue_date = {June, 2013},
  keywords   = {Domain-specific language, Feature model, Model management, Software product lines, Variability},
  numpages   = {25},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2012.12.004},
}

@InProceedings{Holmes:2014:FDP:2707679.2708056,
  author    = {Holmes, Ta'id},
  title     = {Facilitating Development and Provisioning of Service Topologies Through Domain-Specific Languages},
  booktitle = {Proceedings of the 2014 IEEE 18th International Enterprise Distributed Object Computing Conference Workshops and Demonstrations},
  year      = {2014},
  series    = {EDOCW '14},
  pages     = {422--425},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2708056},
  doi       = {10.1109/EDOCW.2014.72},
  groups    = {IEEEDSL, Scopus, Inclusos},
  isbn      = {978-1-4799-5467-4},
  keywords  = {automation, coordination, development, DSL, MDE, provisioning, service topology},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1109/EDOCW.2014.72},
}

@InProceedings{Jezequel:2014:DSL:2684200.2684370,
  author        = {Jezequel, Jean-Marc},
  title         = {Domain Specific Languages: From Craft to Engineering},
  booktitle     = {Proceedings of the 16th International Conference on Information Integration and Web-based Applications \&\#38; Services},
  year          = {2014},
  series        = {iiWAS '14},
  pages         = {2--2},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2684370},
  doi           = {10.1145/2684200.2684370},
  groups        = {Duplicados},
  isbn          = {978-1-4503-3001-5},
  keywords      = {rank3},
  location      = {Hanoi, Viet Nam},
  numpages      = {1},
  url           = {http://doi.acm.org/10.1145/2684200.2684370},
}

@InProceedings{Barisic:2012:UED:2477172.2477475,
  author    = {Barisic, Ankica and Amaral, Vasco and Goulao, Miguel},
  title     = {Usability Evaluation of Domain-Specific Languages},
  booktitle = {Proceedings of the 2012 Eighth International Conference on the Quality of Information and Communications Technology},
  year      = {2012},
  series    = {QUATIC '12},
  pages     = {342--347},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2477475},
  doi       = {10.1109/QUATIC.2012.63},
  groups    = {IEEEDSL, Scopus, Inclusos},
  isbn      = {978-0-7695-4777-0},
  keywords  = {Domain-Specific Languages, Usability Evaluation, Software Language Engineering},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/QUATIC.2012.63},
}

@Article{Adam:2015:TTS:2936314.2814215,
  author     = {Adam, Sorin and Schultz, Ulrik Pagh},
  title      = {Towards Tool Support for Spreadsheet-based Domain-specific Languages},
  journal    = {SIGPLAN Not.},
  year       = {2015},
  volume     = {51},
  number     = {3},
  pages      = {95--98},
  month      = oct,
  acmid      = {2814215},
  address    = {New York, NY, USA},
  doi        = {10.1145/2936314.2814215},
  groups     = {Inclusos},
  issn       = {0362-1340},
  issue_date = {March 2016},
  keywords   = {Domain-specific language, parser, spreadsheet},
  numpages   = {4},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2936314.2814215},
}

@InProceedings{Adam:2015:TTS:2814204.2814215,
  author        = {Adam, Sorin and Schultz, Ulrik Pagh},
  title         = {Towards Tool Support for Spreadsheet-based Domain-specific Languages},
  booktitle     = {Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  year          = {2015},
  series        = {GPCE 2015},
  pages         = {95--98},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2814215},
  doi           = {10.1145/2814204.2814215},
  groups        = {Compendex, Scopus, Duplicados},
  isbn          = {978-1-4503-3687-1},
  keywords      = {Domain-specific language, parser, spreadsheet, rank3},
  location      = {Pittsburgh, PA, USA},
  numpages      = {4},
  url           = {http://doi.acm.org/10.1145/2814204.2814215},
}

@InProceedings{Lezos:2016:AGC:2889420.2889422,
  author    = {Lezos, Christakis and Dimitroulakos, Grigoris and Latifis, Ioannis and Masselos, Konstantinos},
  title     = {Automatic Generation of Code Analysis Tools: The CastQL Approach},
  booktitle = {Proceedings of the 1st International Workshop on Real World Domain Specific Languages},
  year      = {2016},
  series    = {RWDSL '16},
  pages     = {3:1--3:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2889422},
  articleno = {3},
  doi       = {10.1145/2889420.2889422},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-1-4503-4051-9},
  keywords  = {Domain specific languages, code query languages, compiler generators, source code analysis},
  location  = {Barcelona, Spain},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2889420.2889422},
}

@InProceedings{Nakamura:2012:QED:2419061.2419430,
  author    = {Nakamura, Hiroki and Nagano, Rina and Hisazumi, Kenji and Kamei, Yasutaka and Ubayashi, Naoyasu and Fukuda, Akira},
  title     = {QORAL: An External Domain-Specific Language for Mining Software Repositories},
  booktitle = {Proceedings of the 2012 Fourth International Workshop on Empirical Software Engineering in Practice},
  year      = {2012},
  series    = {IWESEP '12},
  pages     = {23--29},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2419430},
  doi       = {10.1109/IWESEP.2012.20},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, Inclusos},
  isbn      = {978-0-7695-4866-1},
  keywords  = {DSL, QORAL, MSR},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1109/IWESEP.2012.20},
}

@InProceedings{Goldschmidt:2014:TID:2734913.2734931,
  author    = {Goldschmidt, Thomas},
  title     = {Towards an Infrastructure for Domain-Specific Languages in a Multi-domain Cloud Platform},
  booktitle = {Proceedings of the 10th European Conference on Modelling Foundations and Applications - Volume 8569},
  year      = {2014},
  pages     = {242--253},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2734931},
  doi       = {10.1007/978-3-319-09195-2_16},
  groups    = {SpringerLink, Scopus, Inclusos},
  isbn      = {978-3-319-09194-5},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1007/978-3-319-09195-2_16},
}

@Article{Hoyos:2013:DLC:2527804.2527882,
  author     = {Hoyos, Jos{\'e} R. and Garc\'{\i}a-Molina, Jes\'{u}s and Bot\'{\i}a, Juan A.},
  title      = {A Domain-specific Language for Context Modeling in Context-aware Systems},
  journal    = {J. Syst. Softw.},
  year       = {2013},
  volume     = {86},
  number     = {11},
  pages      = {2890--2905},
  month      = nov,
  acmid      = {2527882},
  address    = {New York, NY, USA},
  doi        = {10.1016/j.jss.2013.07.008},
  groups     = {Scopus, ScienceDirect, Compendex, Inclusos},
  issn       = {0164-1212},
  issue_date = {November, 2013},
  keywords   = {Context aware, Context modeling, Model Driven Development},
  numpages   = {16},
  publisher  = {Elsevier Science Inc.},
  url        = {http://dx.doi.org/10.1016/j.jss.2013.07.008},
}

@InProceedings{Li:2012:DLS:2259278.2259323,
  author    = {Li, Huiqing and Thompson, Simon},
  title     = {A Domain-specific Language for Scripting Refactorings in Erlang},
  booktitle = {Proceedings of the 15th International Conference on Fundamental Approaches to Software Engineering},
  year      = {2012},
  series    = {FASE'12},
  pages     = {501--515},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2259323},
  doi       = {10.1007/978-3-642-28872-2_34},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-3-642-28871-5},
  keywords  = {API, DSL, Wrangler, analysis, erlang, refactoring, transformation},
  location  = {Tallinn, Estonia},
  numpages  = {15},
  url       = {http://dx.doi.org/10.1007/978-3-642-28872-2_34},
}

@InProceedings{Sporer:2015:MDL:2811411.2811533,
  author    = {Sporer, Harald},
  title     = {A Model-based Domain-specific Language Approach for the Automotive E/E-System Design},
  booktitle = {Proceedings of the 2015 Conference on Research in Adaptive and Convergent Systems},
  year      = {2015},
  series    = {RACS},
  pages     = {357--362},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2811533},
  doi       = {10.1145/2811411.2811533},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-1-4503-3738-0},
  keywords  = {E/E-Systems, automotive embedded systems, domain-specific modeling, system architectural design},
  location  = {Prague, Czech Republic},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2811411.2811533},
}

@InProceedings{Rabbi:2012:TDS:2404962.2404968,
  author    = {Rabbi, Fazle and MacCaull, Wendy},
  title     = {T-square: A Domain Specific Language for Rapid Workflow Development},
  booktitle = {Proceedings of the 15th International Conference on Model Driven Engineering Languages and Systems},
  year      = {2012},
  series    = {MODELS'12},
  pages     = {36--52},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2404968},
  doi       = {10.1007/978-3-642-33666-9_4},
  groups    = {ACM, Inclusos},
  isbn      = {978-3-642-33665-2},
  keywords  = {domain specific language, model driven engineering, ontology, workflow management system},
  location  = {Innsbruck, Austria},
  numpages  = {17},
  url       = {http://dx.doi.org/10.1007/978-3-642-33666-9_4},
}

@InProceedings{Miyajima:2012:DSL:2471887.2473439,
  author        = {Miyajima, Takaaki and Thomas, David and Amano, Hideharu},
  title         = {A Domain Specific Language and Toolchain for OpenCV Runtime Binary Acceleration Using GPU},
  booktitle     = {Proceedings of the 2012 Third International Conference on Networking and Computing},
  year          = {2012},
  series        = {ICNC '12},
  pages         = {175--181},
  address       = {Washington, DC, USA},
  publisher     = {IEEE Computer Society},
  __markedentry = {[Neto:5]},
  acmid         = {2473439},
  doi           = {10.1109/ICNC.2012.34},
  groups        = {Scopus, IEEEDSML, IEEEDSL, Duplicados},
  isbn          = {978-0-7695-4893-7},
  keywords      = {Runtime Binary Acceleration, Domain Spefic Language, OpenCV, Dynamic Off-loading, GPU, rank3},
  numpages      = {7},
  url           = {http://dx.doi.org/10.1109/ICNC.2012.34},
}

@InProceedings{Mahadik:2016:SDS:2925426.2926283,
  author    = {Mahadik, Kanak and Wright, Christopher and Zhang, Jinyi and Kulkarni, Milind and Bagchi, Saurabh and Chaterji, Somali},
  title     = {SARVAVID: A Domain Specific Language for Developing Scalable Computational Genomics Applications},
  booktitle = {Proceedings of the 2016 International Conference on Supercomputing},
  year      = {2016},
  series    = {ICS '16},
  pages     = {34:1--34:12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2926283},
  articleno = {34},
  doi       = {10.1145/2925426.2926283},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-4361-9},
  keywords  = {Computational Genomics, Distributed Systems},
  location  = {Istanbul, Turkey},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2925426.2926283},
}

@InProceedings{Marek:2012:DDL:2162049.2162077,
  author    = {Marek, Luk\'{a}\v{s} and Villaz\'{o}n, Alex and Zheng, Yudi and Ansaloni, Danilo and Binder, Walter and Qi, Zhengwei},
  title     = {DiSL: A Domain-specific Language for Bytecode Instrumentation},
  booktitle = {Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development},
  year      = {2012},
  series    = {AOSD '12},
  pages     = {239--250},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2162077},
  doi       = {10.1145/2162049.2162077},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-1092-5},
  keywords  = {JVM, aspect-oriented programming, bytecode instrumentation, dynamic program analysis},
  location  = {Potsdam, Germany},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2162049.2162077},
}

@InProceedings{Collet:2014:DSL:2770151.2770175,
  author    = {Collet, Philippe},
  title     = {Domain Specific Languages for Managing Feature Models: Advances and Challenges},
  booktitle = {Part I of the Proceedings of the 6th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change - Volume 8802},
  year      = {2014},
  pages     = {273--288},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2770175},
  doi       = {10.1007/978-3-662-45234-9_20},
  groups    = {SpringerLink, Compendex, Scopus, Inclusos},
  isbn      = {978-3-662-45233-2},
  numpages  = {16},
  url       = {http://dx.doi.org/10.1007/978-3-662-45234-9_20},
}

@InProceedings{Chiba:2016:DRR:2972206.2972219,
  author    = {Chiba, Shigeru and Zhuang, YungYu and Scherr, Maximilian},
  title     = {Deeply Reifying Running Code for Constructing a Domain-Specific Language},
  booktitle = {Proceedings of the 13th International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools},
  year      = {2016},
  series    = {PPPJ '16},
  pages     = {1:1--1:12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2972219},
  articleno = {1},
  doi       = {10.1145/2972206.2972219},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-4135-6},
  keywords  = {Embedded DSL, Meta programming, Parallel computing, Reflection},
  location  = {Lugano, Switzerland},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2972206.2972219},
}

@InProceedings{Cuenca:2015:USC:2846680.2846686,
  author    = {Cuenca, Fredy and Bergh, Jan Van den and Luyten, Kris and Coninx, Karin},
  title     = {A User Study for Comparing the Programming Efficiency of Modifying Executable Multimodal Interaction Descriptions: A Domain-specific Language Versus Equivalent Event-callback Code},
  booktitle = {Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools},
  year      = {2015},
  series    = {PLATEAU 2015},
  pages     = {31--38},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2846686},
  doi       = {10.1145/2846680.2846686},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-1-4503-3907-0},
  keywords  = {composite events, declarative languages, domain-specific languages, multimodal systems},
  location  = {Pittsburgh, PA, USA},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2846680.2846686},
}

@InProceedings{Luzhou:2012:DLC:2247078.2247082,
  author    = {Luzhou, Wang and Sano, Kentaro and Yamamoto, Satoru},
  title     = {Domain-Specific Language and Compiler for Stencil Computation on FPGA-Based Systolic Computational-memory Array},
  booktitle = {Proceedings of the 8th International Conference on Reconfigurable Computing: Architectures, Tools and Applications},
  year      = {2012},
  series    = {ARC'12},
  pages     = {26--39},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2247082},
  doi       = {10.1007/978-3-642-28365-9_3},
  groups    = {ACM, Inclusos},
  isbn      = {978-3-642-28364-2},
  keywords  = {compiler, domain-specific language, stencil computation, systolic computational-memory architecture},
  location  = {Hong Kong, China},
  numpages  = {14},
  url       = {http://dx.doi.org/10.1007/978-3-642-28365-9_3},
}

@InProceedings{Maro:2015:IGT:2814251.2814253,
  author    = {Maro, Salome and Stegh\"{o}fer, Jan-Philipp and Anjorin, Anthony and Tichy, Matthias and Gelin, Lars},
  title     = {On Integrating Graphical and Textual Editors for a UML Profile Based Domain Specific Language: An Industrial Experience},
  booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2015},
  series    = {SLE 2015},
  pages     = {1--12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2814253},
  doi       = {10.1145/2814251.2814253},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-3686-4},
  keywords  = {DSL, Graphical editor, Textual editor, UML profile},
  location  = {Pittsburgh, PA, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2814251.2814253},
}

@Article{Liu:2012:IDL:2595132.2595135,
  author     = {Liu, Shih-Hsi and Cardenas, Adam and Mernik, Marjan and Bryant, Barrett R. and Gray, Jeff and Xiong, Xang},
  title      = {Introducing Domain-specific Language Implementation Using Web Service-oriented Technologies},
  journal    = {Multiagent Grid Syst.},
  year       = {2012},
  volume     = {8},
  number     = {1},
  pages      = {19--44},
  month      = jan,
  acmid      = {2595135},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.3233/MGS-2012-0183},
  groups     = {Scopus, Inclusos},
  issn       = {1574-1702},
  issue_date = {January 2012},
  keywords   = {Domain-Specific Languages, Service-Oriented Architecture},
  numpages   = {26},
  publisher  = {IOS Press},
  url        = {http://dx.doi.org/10.3233/MGS-2012-0183},
}

@InProceedings{Nordmann:2014:SDL:2694513.2694533,
  author    = {Nordmann, Arne and Hochgeschwender, Nico and Wrede, Sebastian},
  title     = {A Survey on Domain-Specific Languages in Robotics},
  booktitle = {Proceedings of the 4th International Conference on Simulation, Modeling, and Programming for Autonomous Robots - Volume 8810},
  year      = {2014},
  series    = {SIMPAR 2014},
  pages     = {195--206},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2694533},
  doi       = {10.1007/978-3-319-11900-7_17},
  groups    = {Scopus, SpringerLink, Inclusos},
  isbn      = {978-3-319-11899-4},
  location  = {Bergamo, Italy},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1007/978-3-319-11900-7_17},
}

@InProceedings{Efftinge:2012:XID:2371401.2371419,
  author    = {Efftinge, Sven and Eysholdt, Moritz and K\"{o}hnlein, Jan and Zarnekow, Sebastian and von Massow, Robert and Hasselbring, Wilhelm and Hanus, Michael},
  title     = {Xbase: Implementing Domain-specific Languages for Java},
  booktitle = {Proceedings of the 11th International Conference on Generative Programming and Component Engineering},
  year      = {2012},
  series    = {GPCE '12},
  pages     = {112--121},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2371419},
  doi       = {10.1145/2371401.2371419},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-1129-8},
  keywords  = {domain-specific languages, language inheritance, object-oriented programming},
  location  = {Dresden, Germany},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2371401.2371419},
}

@Article{Efftinge:2012:XID:2480361.2371419,
  author        = {Efftinge, Sven and Eysholdt, Moritz and K\"{o}hnlein, Jan and Zarnekow, Sebastian and von Massow, Robert and Hasselbring, Wilhelm and Hanus, Michael},
  title         = {Xbase: Implementing Domain-specific Languages for Java},
  journal       = {SIGPLAN Not.},
  year          = {2012},
  volume        = {48},
  number        = {3},
  pages         = {112--121},
  month         = sep,
  __markedentry = {[Neto:5]},
  acmid         = {2371419},
  address       = {New York, NY, USA},
  doi           = {10.1145/2480361.2371419},
  groups        = {Duplicados},
  issn          = {0362-1340},
  issue_date    = {March 2013},
  keywords      = {domain-specific languages, language inheritance, object-oriented programming, rank3},
  numpages      = {10},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2480361.2371419},
}

@InProceedings{Yount:2016:YSK:3019129.3019133,
  author    = {Yount, Charles and Tobin, Josh and Breuer, Alexander and Duran, Alejandro},
  title     = {YASK-yet Another Stencil Kernel: A Framework for HPC Stencil Code-generation and Tuning},
  booktitle = {Proceedings of the Sixth International Workshop on Domain-Specific Languages and High-Level Frameworks for HPC},
  year      = {2016},
  series    = {WOLFHPC '16},
  pages     = {30--39},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {3019133},
  doi       = {10.1109/WOLFHPC.2016.8},
  groups    = {ACM, excluidos},
  isbn      = {978-1-5090-6156-3},
  location  = {Salt Lake City, Utah},
  numpages  = {10},
  url       = {https://doi.org/10.1109/WOLFHPC.2016.8},
}

@InProceedings{Franchi:2012:DSL:2456719.2456928,
  author    = {Franchi, Enrico},
  title     = {A Domain Specific Language Approach for Agent-Based Social Network Modeling},
  booktitle = {Proceedings of the 2012 International Conference on Advances in Social Networks Analysis and Mining (ASONAM 2012)},
  year      = {2012},
  series    = {ASONAM '12},
  pages     = {607--612},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2456928},
  doi       = {10.1109/ASONAM.2012.102},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, Inclusos},
  isbn      = {978-0-7695-4799-2},
  keywords  = {Social Network Analysis, Agent Based Modeling},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/ASONAM.2012.102},
}

@InProceedings{Bayol:2015:WPG:2872965.2872985,
  author    = {Bayol, Beno\^{\i}t and Chen, Yuting and Baey, Charlotte and Viaud, Gautier and Courn\`{e}de, Paul-Henry},
  title     = {WIP - Promoting Good Modeling Practice with a Domain-specific Language and Statistical Algorithms Designed for Parallel Computing},
  booktitle = {Proceedings of the Symposium on Theory of Modeling \& Simulation: DEVS Integrative M\&S Symposium},
  year      = {2015},
  series    = {DEVS '15},
  pages     = {143--148},
  address   = {San Diego, CA, USA},
  publisher = {Society for Computer Simulation International},
  acmid     = {2872985},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-5108-0105-9},
  keywords  = {dynamical system, good modeling practice, hidden Markov models, parallel computing, statistical algorithms},
  location  = {Alexandria, Virginia},
  numpages  = {6},
  url       = {http://dl.acm.org/citation.cfm?id=2872965.2872985},
}

@Article{Strickland:2014:CDL:2775052.2661092,
  author     = {Strickland, T. Stephen and Ren, Brianna M. and Foster, Jeffrey S.},
  title      = {Contracts for Domain-specific Languages in Ruby},
  journal    = {SIGPLAN Not.},
  year       = {2014},
  volume     = {50},
  number     = {2},
  pages      = {23--34},
  month      = oct,
  acmid      = {2661092},
  address    = {New York, NY, USA},
  doi        = {10.1145/2775052.2661092},
  groups     = {Scopus, Inclusos},
  issn       = {0362-1340},
  issue_date = {February 2015},
  keywords   = {domain-specific languages, software contracts},
  numpages   = {12},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2775052.2661092},
}

@InProceedings{Strickland:2014:CDL:2661088.2661092,
  author        = {Strickland, T. Stephen and Ren, Brianna M. and Foster, Jeffrey S.},
  title         = {Contracts for Domain-specific Languages in Ruby},
  booktitle     = {Proceedings of the 10th ACM Symposium on Dynamic Languages},
  year          = {2014},
  series        = {DLS '14},
  pages         = {23--34},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2661092},
  doi           = {10.1145/2661088.2661092},
  groups        = {Duplicados},
  isbn          = {978-1-4503-3211-8},
  keywords      = {domain-specific languages, software contracts, rank3},
  location      = {Portland, Oregon, USA},
  numpages      = {12},
  url           = {http://doi.acm.org/10.1145/2661088.2661092},
}

@InProceedings{Ratiu:2016:ATD:2896921.2896922,
  author    = {Ratiu, Daniel and Voelter, Markus},
  title     = {Automated Testing of DSL Implementations: Experiences from Building Mbeddr},
  booktitle = {Proceedings of the 11th International Workshop on Automation of Software Test},
  year      = {2016},
  series    = {AST '16},
  pages     = {15--21},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2896922},
  doi       = {10.1145/2896921.2896922},
  groups    = {Scopus, Compendex},
  isbn      = {978-1-4503-4151-6},
  location  = {Austin, Texas},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2896921.2896922},
}

@Book{Campagne:2014:MLW:2683916,
  title     = {The MPS Language Workbench, Vol. 1},
  publisher = {CreateSpace Independent Publishing Platform},
  year      = {2014},
  author    = {Campagne, Fabien and Campagne, Fabien},
  address   = {USA},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1497378656, 9781497378650},
}

@InProceedings{Tcholtchev:2014:IMD:2671854.2672509,
  author    = {Tcholtchev, Nikolay and Dudeck, Grit and Wagner, Michael and Hein, Christian and Prakash, Arun and Ritter, Tom},
  title     = {Integrating the Modelica DSL into a Platform for Model-Based Tool Interoperability},
  booktitle = {Proceedings of the 2014 IEEE 38th International Computer Software and Applications Conference Workshops},
  year      = {2014},
  series    = {COMPSACW '14},
  pages     = {528--534},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2672509},
  doi       = {10.1109/COMPSACW.2014.88},
  groups    = {IEEEDSL, Compendex, Scopus, Inclusos},
  isbn      = {978-1-4799-3578-9},
  keywords  = {DSL, domain specific languages, modeling, Modelica, Model Bus, tool interoperability, model driven engineering, MDE},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1109/COMPSACW.2014.88},
}

@InProceedings{Mendez-Acuna:2016:PTA:2986168.2986201,
  author    = {M{\'e}ndez-Acu\~{n}a, David and Galindo, Jos{\'e} A. and Combemale, Benoit and Blouin, Arnaud and Baudry, Benoit},
  title     = {Puzzle: A Tool for Analyzing and Extracting Specification Clones in DSLs},
  booktitle = {Proceedings of the 15th International Conference on Software Reuse: Bridging with Social-Awareness - Volume 9679},
  year      = {2016},
  series    = {ICSR 2016},
  pages     = {393--396},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2986201},
  doi       = {10.1007/978-3-319-35122-3_26},
  groups    = {Scopus, Inclusos},
  isbn      = {978-3-319-35121-6},
  location  = {Limassol, Cyprus},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1007/978-3-319-35122-3_26},
}

@InProceedings{Santos:2016:XDT:2997364.2997377,
  author    = {Santos, Andr{\'e} L. and Gomes, Eduardo},
  title     = {Xdiagram: A Declarative Textual DSL for Describing Diagram Editors (Tool Demo)},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2016},
  series    = {SLE 2016},
  pages     = {253--257},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2997377},
  doi       = {10.1145/2997364.2997377},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-4447-0},
  keywords  = {DSLs, EMF, diagrams, graphical syntax, language workbenches},
  location  = {Amsterdam, Netherlands},
  numpages  = {5},
  url       = {http://doi.acm.org/10.1145/2997364.2997377},
}

@InProceedings{Mayer:2013:TAC:2541348.2541350,
  author    = {Mayer, Philip and Schroeder, Andreas},
  title     = {Towards Automated Cross-language Refactorings Between Java and DSLs Used by Java Frameworks},
  booktitle = {Proceedings of the 2013 ACM Workshop on Workshop on Refactoring Tools},
  year      = {2013},
  series    = {WRT '13},
  pages     = {5--8},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2541350},
  doi       = {10.1145/2541348.2541350},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-2604-9},
  keywords  = {automation, cross-language, dsls, java, multi-language software applications, polyglot programming, refactoring},
  location  = {Indianapolis, Indiana, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2541348.2541350},
}

@InProceedings{Birken:2014:BCG:2770151.2770185,
  author    = {Birken, Klaus},
  title     = {Building Code Generators for DSLs Using a Partial Evaluator for the Xtend Language},
  booktitle = {Part I of the Proceedings of the 6th International Symposium on Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change - Volume 8802},
  year      = {2014},
  pages     = {407--424},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2770185},
  doi       = {10.1007/978-3-662-45234-9_29},
  groups    = {Scopus, SpringerLink, Inclusos},
  isbn      = {978-3-662-45233-2},
  keywords  = {Xtend, Xtext, code generation, domain-specific languages, interpreters, partial evaluation, program specialization},
  numpages  = {18},
  url       = {http://dx.doi.org/10.1007/978-3-662-45234-9_29},
}

@InProceedings{Sulzmann:2012:MCD:2364065.2364090,
  author    = {Sulzmann, Martin and Zechner, Axel},
  title     = {Model Checking DSL-generated C Source Code},
  booktitle = {Proceedings of the 19th International Conference on Model Checking Software},
  year      = {2012},
  series    = {SPIN'12},
  pages     = {241--247},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2364090},
  doi       = {10.1007/978-3-642-31759-0_18},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-3-642-31758-3},
  location  = {Oxford, UK},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1007/978-3-642-31759-0_18},
}

@InProceedings{Drey:2016:ODP:2997364.2997373,
  author    = {Drey, Zo{\'e} and Teodorov, Ciprian},
  title     = {Object-oriented Design Pattern for DSL Program Monitoring},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2016},
  series    = {SLE 2016},
  pages     = {70--83},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2997373},
  doi       = {10.1145/2997364.2997373},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-4447-0},
  keywords  = {domain-specific language, execution monitoring, language workbench},
  location  = {Amsterdam, Netherlands},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2997364.2997373},
}

@InProceedings{Bacikova:2015:BDU:2695664.2695994,
  author    = {Ba\v{c}\'{\i}kov\'{a}, Michaela and Porub\"{a}n, Jaroslav and Chodarev, Sergej and Nos\'{a}l', Milan},
  title     = {Bootstrapping DSLs from User Interfaces},
  booktitle = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
  year      = {2015},
  series    = {SAC '15},
  pages     = {2115--2118},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2695994},
  doi       = {10.1145/2695664.2695994},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-3196-8},
  keywords  = {domain analysis, domain model, domain-specific language, graphical user interface},
  location  = {Salamanca, Spain},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2695664.2695994},
}

@InProceedings{Degueule:2015:RLD:2846696.2846697,
  author    = {Degueule, Thomas and Combemale, Benoit and Blouin, Arnaud and Barais, Olivier},
  title     = {Reusing Legacy DSLs with Melange},
  booktitle = {Proceedings of the Workshop on Domain-Specific Modeling},
  year      = {2015},
  series    = {DSM 2015},
  pages     = {45--46},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2846697},
  doi       = {10.1145/2846696.2846697},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-3903-2},
  keywords  = {Domain-specific languages, language reuse, language workbench, melange, model typing},
  location  = {Pittsburgh, PA, USA},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2846696.2846697},
}

@InProceedings{Rose:2012:ELF:2467307.2467311,
  author    = {Rose, Louis M. and Kolovos, Dimitrios S. and Paige, Richard F.},
  title     = {EuGENia Live: A Flexible Graphical Modelling Tool},
  booktitle = {Proceedings of the 2012 Extreme Modeling Workshop},
  year      = {2012},
  series    = {XM '12},
  pages     = {15--20},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2467311},
  doi       = {10.1145/2467307.2467311},
  groups    = {Compendex, Scopus, Duvida},
  isbn      = {978-1-4503-1804-4},
  keywords  = {domain-specific languages, flexible modelling, model-driven engineering},
  location  = {Innsbruck, Austria},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2467307.2467311},
}

@InProceedings{Funk:2012:PSD:2405577.2405659,
  author    = {Funk, Mathias and Rauterberg, Matthias},
  title     = {PULP Scription: A DSL for Mobile HTML5 Game Applications},
  booktitle = {Proceedings of the 11th International Conference on Entertainment Computing},
  year      = {2012},
  series    = {ICEC'12},
  pages     = {504--510},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2405659},
  doi       = {10.1007/978-3-642-33542-6_65},
  groups    = {Scopus},
  isbn      = {978-3-642-33541-9},
  location  = {Bremen, Germany},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1007/978-3-642-33542-6_65},
}

@InProceedings{Szabo:2016:DSA:2984043.2984050,
  author    = {Szab\'{o}, Tam\'{a}s},
  title     = {Dedicated Support for Analyses and Optimizations in Language Workbenches},
  booktitle = {Companion Proceedings of the 2016 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity},
  year      = {2016},
  series    = {SPLASH Companion 2016},
  pages     = {3--5},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2984050},
  doi       = {10.1145/2984043.2984050},
  groups    = {ACM, Duvida},
  isbn      = {978-1-4503-4437-1},
  keywords  = {Domain-specific Language, Incremental Computation, Language Workbench, Static Analysis},
  location  = {Amsterdam, Netherlands},
  numpages  = {3},
  url       = {http://doi.acm.org/10.1145/2984043.2984050},
}

@InProceedings{Yamashita:2013:MCA:2457392.2457409,
  author    = {Yamashita, Kazuhiro},
  title     = {Modular Construction of an Analysis Tool for Mining Software Repositories},
  booktitle = {Proceedings of the 12th Annual International Conference Companion on Aspect-oriented Software Development},
  year      = {2013},
  series    = {AOSD '13 Companion},
  pages     = {37--38},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2457409},
  doi       = {10.1145/2457392.2457409},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-1873-0},
  keywords  = {mining software repositories, software evolution},
  location  = {Fukuoka, Japan},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2457392.2457409},
}

@InProceedings{Degueule:2015:MMM:2814251.2814252,
  author    = {Degueule, Thomas and Combemale, Benoit and Blouin, Arnaud and Barais, Olivier and J{\'e}z{\'e}quel, Jean-Marc},
  title     = {Melange: A Meta-language for Modular and Reusable Development of DSLs},
  booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2015},
  series    = {SLE 2015},
  pages     = {25--36},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2814252},
  doi       = {10.1145/2814251.2814252},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-3686-4},
  keywords  = {Domain-specific languages, language composition, language reuse, melange, model typing},
  location  = {Pittsburgh, PA, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2814251.2814252},
}

@InProceedings{Li:2012:LMR:2328876.2328881,
  author    = {Li, Huiqing and Thompson, Simon},
  title     = {Let's Make Refactoring Tools User-extensible!},
  booktitle = {Proceedings of the Fifth Workshop on Refactoring Tools},
  year      = {2012},
  series    = {WRT '12},
  pages     = {32--39},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2328881},
  doi       = {10.1145/2328876.2328881},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-1500-5},
  keywords  = {API, DSL, Erlang, Wrangler, analysis, concrete syntax, extensible, program transformation, refactoring},
  location  = {Rapperswil, Switzerland},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2328876.2328881},
}

@InProceedings{Deantoni:2015:TMC:2755753.2755823,
  author    = {Deantoni, Julien and Diallo, Issa Papa and Teodorov, Ciprian and Champeau, Joel and Combemale, Benoit},
  title     = {Towards a Meta-language for the Concurrency Concern in DSLs},
  booktitle = {Proceedings of the 2015 Design, Automation \& Test in Europe Conference \& Exhibition},
  year      = {2015},
  series    = {DATE '15},
  pages     = {313--316},
  address   = {San Jose, CA, USA},
  publisher = {EDA Consortium},
  acmid     = {2755823},
  groups    = {IEEEDSL, Compendex, Scopus, Inclusos},
  isbn      = {978-3-9815370-4-8},
  location  = {Grenoble, France},
  numpages  = {4},
  url       = {http://dl.acm.org/citation.cfm?id=2755753.2755823},
}

@InProceedings{Oliveira:2014:HSC:2672598.2672894,
  author    = {Oliveira, Cristiano Bacelar de and Cardoso, Jo\~{a}o M. P. and Marques, Eduardo},
  title     = {High-Level Synthesis from C vs. A DSL-Based Approach},
  booktitle = {Proceedings of the 2014 IEEE International Parallel \& Distributed Processing Symposium Workshops},
  year      = {2014},
  series    = {IPDPSW '14},
  pages     = {257--262},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2672894},
  doi       = {10.1109/IPDPSW.2014.34},
  groups    = {IEEEDSL, Scopus, Inclusos},
  isbn      = {978-1-4799-4116-2},
  keywords  = {High-Level Synthesis, Loop Pipelining, FPGA, Hardware Accelerators, Domain-Specific Languages},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/IPDPSW.2014.34},
}

@Article{Sujeeth:2013:FGH:2637365.2517220,
  author     = {Sujeeth, Arvind K. and Gibbons, Austin and Brown, Kevin J. and Lee, HyoukJoong and Rompf, Tiark and Odersky, Martin and Olukotun, Kunle},
  title      = {Forge: Generating a High Performance DSL Implementation from a Declarative Specification},
  journal    = {SIGPLAN Not.},
  year       = {2013},
  volume     = {49},
  number     = {3},
  pages      = {145--154},
  month      = oct,
  acmid      = {2517220},
  address    = {New York, NY, USA},
  doi        = {10.1145/2637365.2517220},
  groups     = {Scopus, Compendex, Inclusos},
  issn       = {0362-1340},
  issue_date = {March 2014},
  keywords   = {code generation, domain-specific languages, multi-stage programming, parallel programming},
  numpages   = {10},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2637365.2517220},
}

@InProceedings{Sujeeth:2013:FGH:2517208.2517220,
  author        = {Sujeeth, Arvind K. and Gibbons, Austin and Brown, Kevin J. and Lee, HyoukJoong and Rompf, Tiark and Odersky, Martin and Olukotun, Kunle},
  title         = {Forge: Generating a High Performance DSL Implementation from a Declarative Specification},
  booktitle     = {Proceedings of the 12th International Conference on Generative Programming: Concepts \&\#38; Experiences},
  year          = {2013},
  series        = {GPCE '13},
  pages         = {145--154},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2517220},
  doi           = {10.1145/2517208.2517220},
  groups        = {Compendex, Duplicados},
  isbn          = {978-1-4503-2373-4},
  keywords      = {code generation, domain-specific languages, multi-stage programming, parallel programming, rank3},
  location      = {Indianapolis, Indiana, USA},
  numpages      = {10},
  url           = {http://doi.acm.org/10.1145/2517208.2517220},
}

@InProceedings{Kourzanov:2013:DMC:2589650.2559634,
  author    = {Kourzanov, Peter},
  title     = {DSL Methods for CPS Simulation in the Cloud: Experience Report},
  booktitle = {Proceedings of International Workshop on Engineering Simulations for Cyber-Physical Systems},
  year      = {2007},
  series    = {ES4CPS '14},
  pages     = {25:25--25:32},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2559634},
  articleno = {25},
  doi       = {10.1145/2559627.2559634},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-2614-8},
  keywords  = {Cloud computing, Cyber-physical systems, Declarative programming, Discrete-event modeling, Domain-specific languages, Network simulation},
  location  = {Dresden, Germany},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2559627.2559634},
}

@InProceedings{Huang:2015:ADC:2954852.2954876,
  author    = {Huang, Changyun and Osaka, Ataru and Kamei, Yasutaka and Ubayashi, Naoyasu},
  title     = {Automated DSL Construction Based on Software Product Lines},
  booktitle = {Proceedings of the 3rd International Conference on Model-Driven Engineering and Software Development},
  year      = {2015},
  series    = {MODELSWARD 2015},
  pages     = {247--254},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2954876},
  doi       = {10.5220/0005239902470254},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, Inclusos},
  isbn      = {978-989-758-083-3},
  keywords  = {Domain-Specific Language Software Product Line Mining Software Repositories},
  location  = {ESEO, Angers, Loire Valley, France},
  numpages  = {8},
  url       = {http://dx.doi.org/10.5220/0005239902470254},
}

@Article{Gouseti:2014:ELI:2775053.2658765,
  author        = {Gouseti, Maria and Peters, Chiel and Storm, Tijs van der},
  title         = {Extensible Language Implementation with Object Algebras (Short Paper)},
  journal       = {SIGPLAN Not.},
  year          = {2014},
  volume        = {50},
  number        = {3},
  pages         = {25--28},
  month         = sep,
  __markedentry = {[Neto:5]},
  acmid         = {2658765},
  address       = {New York, NY, USA},
  doi           = {10.1145/2775053.2658765},
  groups        = {Scopus, Duplicados},
  issn          = {0362-1340},
  issue_date    = {March 2015},
  keywords      = {Object Algebras, domain-specific languages, extensibility, interpreter, rank3},
  numpages      = {4},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2775053.2658765},
}

@InProceedings{Gouseti:2014:ELI:2658761.2658765,
  author        = {Gouseti, Maria and Peters, Chiel and Storm, Tijs van der},
  title         = {Extensible Language Implementation with Object Algebras (Short Paper)},
  booktitle     = {Proceedings of the 2014 International Conference on Generative Programming: Concepts and Experiences},
  year          = {2014},
  series        = {GPCE 2014},
  pages         = {25--28},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2658765},
  doi           = {10.1145/2658761.2658765},
  groups        = {Scopus, Duplicados},
  isbn          = {978-1-4503-3161-6},
  keywords      = {Object Algebras, domain-specific languages, extensibility, interpreter, rank3},
  location      = {V\&\#228;ster\&\#229;s, Sweden},
  numpages      = {4},
  url           = {http://doi.acm.org/10.1145/2658761.2658765},
}

@InProceedings{Athanasiadis:2013:RDS:2541928.2541934,
  author    = {Athanasiadis, Ioannis N. and Villa, Ferdinando},
  title     = {A Roadmap to Domain Specific Programming Languages for Environmental Modeling: Key Requirements and Concepts},
  booktitle = {Proceedings of the 2013 ACM Workshop on Domain-specific Modeling},
  year      = {2013},
  series    = {DSM '13},
  pages     = {27--32},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2541934},
  doi       = {10.1145/2541928.2541934},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-2600-1},
  keywords  = {domain specific languages, ecoinformatics, environmental modeling, semantic modeling, software interoperability, software reuse},
  location  = {Indianapolis, Indiana, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2541928.2541934},
}

@InProceedings{Schutzel:2014:PLS:2693848.2694208,
  author    = {Sch\"{u}tzel, Johannes and Peng, Danhua and Uhrmacher, Adelinde M. and Perrone, L. Felipe},
  title     = {Perspectives on Languages for Specifying Simulation Experiments},
  booktitle = {Proceedings of the 2014 Winter Simulation Conference},
  year      = {2014},
  series    = {WSC '14},
  pages     = {2836--2847},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2694208},
  groups    = {IEEEDSL, Scopus, excluidos},
  location  = {Savannah, Georgia},
  numpages  = {12},
  url       = {http://dl.acm.org/citation.cfm?id=2693848.2694208},
}

@InProceedings{Torsel:2013:TTW:2510665.2511620,
  author    = {Torsel, Arne-Michael},
  title     = {A Testing Tool for Web Applications Using a Domain-Specific Modelling Language and the NuSMV Model Checker},
  booktitle = {Proceedings of the 2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
  year      = {2013},
  series    = {ICST '13},
  pages     = {383--390},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2511620},
  doi       = {10.1109/ICST.2013.54},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, Inclusos},
  isbn      = {978-0-7695-4968-2},
  keywords  = {web applications, model-based testing, model checking, test automation},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1109/ICST.2013.54},
}

@Article{Pereira:2016:OAD:2956216.2956334,
  author     = {Pereira, Maria Jo\~{a}o Varanda and Fonseca, Jo\~{a}o and Henriques, Pedro Rangel},
  title      = {Ontological Approach for DSL Development},
  journal    = {Comput. Lang. Syst. Struct.},
  year       = {2016},
  volume     = {45},
  number     = {C},
  pages      = {35--52},
  month      = apr,
  acmid      = {2956334},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.cl.2015.12.004},
  groups     = {ScienceDirect, Compendex, Scopus, Inclusos},
  issn       = {1477-8424},
  issue_date = {April 2016},
  keywords   = {DSL, Grammars, Ontologies, Problem domain concepts},
  numpages   = {18},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.cl.2015.12.004},
}

@InProceedings{Ureche:2012:SCS:2103746.2103762,
  author    = {Ureche, Vlad and Rompf, Tiark and Sujeeth, Arvind and Chafi, Hassan and Odersky, Martin},
  title     = {StagedSAC: A Case Study in Performance-oriented DSL Development},
  booktitle = {Proceedings of the ACM SIGPLAN 2012 Workshop on Partial Evaluation and Program Manipulation},
  year      = {2012},
  series    = {PEPM '12},
  pages     = {73--82},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2103762},
  doi       = {10.1145/2103746.2103762},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-1118-2},
  keywords  = {DSL, SAC, domain specific languages, optimization, single assignment c, staging},
  location  = {Philadelphia, Pennsylvania, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2103746.2103762},
}

@InProceedings{Lillack:2016:ERM:2934466.2962733,
  author    = {Lillack, Max and Berger, Thorsten and Hebig, Regina},
  title     = {Experiences from Reengineering and Modularizing a Legacy Software Generator with a Projectional Language Workbench},
  booktitle = {Proceedings of the 20th International Systems and Software Product Line Conference},
  year      = {2016},
  series    = {SPLC '16},
  pages     = {346--353},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2962733},
  doi       = {10.1145/2934466.2962733},
  groups    = {Compendex, Duvida},
  isbn      = {978-1-4503-4050-2},
  location  = {Beijing, China},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2934466.2962733},
}

@InProceedings{Semerath:2013:VDF:2945964.2945976,
  author    = {Semer\'{a}th, Oszk\'{a}r and Horv\'{a}th, \'{A}kos and Varr\'{o}, D\'{a}niel},
  title     = {Validation of Derived Features and Well-Formedness Constraints in DSLs},
  booktitle = {Proceedings of the 16th International Conference on Model-Driven Engineering Languages and Systems - Volume 8107},
  year      = {2013},
  pages     = {538--554},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2945976},
  doi       = {10.1007/978-3-642-41533-3_33},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-3-642-41532-6},
  keywords  = {SMT-solvers, model queries, model validation},
  numpages  = {17},
  url       = {http://dx.doi.org/10.1007/978-3-642-41533-3_33},
}

@InProceedings{Kranz:2014:SCE:2643135.2643157,
  author    = {Kranz, Julian and Simon, Axel},
  title     = {Structure-Preserving Compilation: Efficient Integration of Functional DSLs into Legacy Systems},
  booktitle = {Proceedings of the 16th International Symposium on Principles and Practice of Declarative Programming},
  year      = {2014},
  series    = {PPDP '14},
  pages     = {187--198},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2643157},
  doi       = {10.1145/2643135.2643157},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-2947-7},
  keywords  = {Domain specific languages, code optimization, functional languages, instruction decoding, interfacing between programming languages, translation scheme, type inference},
  location  = {Canterbury, United Kingdom},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2643135.2643157},
}

@InProceedings{Haitzer:2012:DSS:2304696.2304709,
  author    = {Haitzer, Thomas and Zdun, Uwe},
  title     = {DSL-based Support for Semi-automated Architectural Component Model Abstraction Throughout the Software Lifecycle},
  booktitle = {Proceedings of the 8th International ACM SIGSOFT Conference on Quality of Software Architectures},
  year      = {2012},
  series    = {QoSA '12},
  pages     = {61--70},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2304709},
  doi       = {10.1145/2304696.2304709},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-1346-9},
  keywords  = {architectural abstraction, architectural component models, dsl, model transformation, software evolution, uml},
  location  = {Bertinoro, Italy},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2304696.2304709},
}

@Article{Jezequel:2015:MMI:2776899.2776922,
  author     = {J{\'e}z{\'e}quel, Jean-Marc and Combemale, Benoit and Barais, Olivier and Monperrus, Martin and Fouquet, Fran\c{c}ois},
  title      = {Mashup of Metalanguages and Its Implementation in the Kermeta Language Workbench},
  journal    = {Softw. Syst. Model.},
  year       = {2015},
  volume     = {14},
  number     = {2},
  pages      = {905--920},
  month      = may,
  acmid      = {2776922},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-013-0354-4},
  groups     = {SpringerLink, Compendex, Scopus, Duvida},
  issn       = {1619-1366},
  issue_date = {May 2015},
  keywords   = {DSL design and Implementation, Model-driven engineering, Software language engineering},
  numpages   = {16},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-013-0354-4},
}

@InProceedings{Hadas:2015:FDS:2735386.2735929,
  author    = {Hadas, Arik and Lorenz, David H.},
  title     = {First-class Domain Specific Aspect Languages},
  booktitle = {Companion Proceedings of the 14th International Conference on Modularity},
  year      = {2015},
  series    = {MODULARITY Companion 2015},
  pages     = {29--30},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2735929},
  doi       = {10.1145/2735386.2735929},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-3283-5},
  keywords  = {Aspect oriented programming (AOP), Domain specific aspect language (DSAL), Domain specific language (DSL), Language workbench},
  location  = {Fort Collins, CO, USA},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2735386.2735929},
}

@InProceedings{Edwards:2013:NTU:2513456.2513459,
  author    = {Edwards, Craig and Gruner, Stefan},
  title     = {A New Tool for URDAD to Java EE EJB Transformations},
  booktitle = {Proceedings of the South African Institute for Computer Scientists and Information Technologists Conference},
  year      = {2013},
  series    = {SAICSIT '13},
  pages     = {144--153},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2513459},
  doi       = {10.1145/2513456.2513459},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-1-4503-2112-9},
  keywords  = {CASE tool, EJB, JaMoPP, MDA, MOF, QVT, URDAD, model transformation},
  location  = {East London, South Africa},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2513456.2513459},
}

@Article{Gibbs:2015:SUA:2735609.2741494,
  author     = {Gibbs, Ivan and Dascalu, Sergiu and Harris, Jr., Frederick C.},
  title      = {A Separation-based UI Architecture with a DSL for Role Specialization},
  journal    = {J. Syst. Softw.},
  year       = {2015},
  volume     = {101},
  number     = {C},
  pages      = {69--85},
  month      = mar,
  acmid      = {2741494},
  address    = {New York, NY, USA},
  doi        = {10.1016/j.jss.2014.11.039},
  groups     = {Scopus, ScienceDirect, Compendex, Inclusos},
  issn       = {0164-1212},
  issue_date = {March 2015},
  keywords   = {Domain specific language, Model driven engineering, User experience},
  numpages   = {17},
  publisher  = {Elsevier Science Inc.},
  url        = {http://dx.doi.org/10.1016/j.jss.2014.11.039},
}

@InProceedings{Vollebregt:2012:DST:2427048.2427056,
  author    = {Vollebregt, Tobi and Kats, Lennart C. L. and Visser, Eelco},
  title     = {Declarative Specification of Template-based Textual Editors},
  booktitle = {Proceedings of the Twelfth Workshop on Language Descriptions, Tools, and Applications},
  year      = {2012},
  series    = {LDTA '12},
  pages     = {8:1--8:7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2427056},
  articleno = {8},
  doi       = {10.1145/2427048.2427056},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-1536-4},
  location  = {Tallinn, Estonia},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2427048.2427056},
}

@InProceedings{Ozik:2013:RAM:2676128.2676178,
  author    = {Ozik, Jonathan and Collier, Nicholson T. and Murphy, John T. and North, Michael J.},
  title     = {The Relogo Agent-based Modeling Language},
  booktitle = {Proceedings of the 2013 Winter Simulation Conference: Simulation: Making Decisions in a Complex World},
  year      = {2013},
  series    = {WSC '13},
  pages     = {1560--1568},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2676178},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  location  = {Washington, D.C.},
  numpages  = {9},
  url       = {http://dl.acm.org/citation.cfm?id=2676128.2676178},
}

@InProceedings{Ozik:2013:RAM:2675983.2676178,
  author        = {Ozik, Jonathan and Collier, Nicholson T. and Murphy, John T. and North, Michael J.},
  title         = {The Relogo Agent-based Modeling Language},
  booktitle     = {Proceedings of the 2013 Winter Simulation Conference: Simulation: Making Decisions in a Complex World},
  year          = {2013},
  series        = {WSC '13},
  pages         = {1560--1568},
  address       = {Piscataway, NJ, USA},
  publisher     = {IEEE Press},
  __markedentry = {[Neto:5]},
  acmid         = {2676178},
  groups        = {Duplicados},
  isbn          = {978-1-4799-2077-8},
  keywords      = {rank3},
  location      = {Washington, D.C.},
  numpages      = {9},
  url           = {http://dl.acm.org/citation.cfm?id=2675983.2676178},
}

@PhdThesis{Gibbs:2013:SUA:2604672,
  author        = {Gibbs, Ivan},
  title         = {A Separation-based Ui Architecture with a Dsl for Role Specialization},
  year          = {2013},
  address       = {Reno, NV, USA},
  note          = {AAI3608713},
  __markedentry = {[Neto:5]},
  advisor       = {Dascalu, Sergiu},
  groups        = {Duplicados},
  isbn          = {978-1-303-67100-5},
  keywords      = {rank3},
  publisher     = {University of Nevada, Reno},
}

@InProceedings{Wegeler:2013:EBU:2541928.2541930,
  author    = {Wegeler, Timo and Gutzeit, Friederike and Destailleur, Aur\`{e}le and Dock, Bernhard},
  title     = {Evaluating the Benefits of Using Domain-specific Modeling Languages: An Experience Report},
  booktitle = {Proceedings of the 2013 ACM Workshop on Domain-specific Modeling},
  year      = {2013},
  series    = {DSM '13},
  pages     = {7--12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2541930},
  doi       = {10.1145/2541928.2541930},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-2600-1},
  keywords  = {assessment, domain specific languages, domain specific modeling, evaluation, metrics},
  location  = {Indianapolis, Indiana, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2541928.2541930},
}

@InProceedings{Ravishankar:2015:FDI:2716282.2716290,
  author    = {Ravishankar, Mahesh and Holewinski, Justin and Grover, Vinod},
  title     = {Forma: A DSL for Image Processing Applications to Target GPUs and Multi-core CPUs},
  booktitle = {Proceedings of the 8th Workshop on General Purpose Processing Using GPUs},
  year      = {2015},
  series    = {GPGPU-8},
  pages     = {109--120},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2716290},
  doi       = {10.1145/2716282.2716290},
  groups    = {Scopus, Inclusos},
  isbn      = {978-1-4503-3407-5},
  keywords  = {DSL, GPGPU, Image processing, Stencils, multi-core},
  location  = {San Francisco, CA, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2716282.2716290},
}

@InProceedings{Erdweg:2012:LCU:2427048.2427055,
  author    = {Erdweg, Sebastian and Giarrusso, Paolo G. and Rendel, Tillmann},
  title     = {Language Composition Untangled},
  booktitle = {Proceedings of the Twelfth Workshop on Language Descriptions, Tools, and Applications},
  year      = {2012},
  series    = {LDTA '12},
  pages     = {7:1--7:8},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2427055},
  articleno = {7},
  doi       = {10.1145/2427048.2427055},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-1536-4},
  keywords  = {domain-specific language, language composition, language extension, language unification, self-extension},
  location  = {Tallinn, Estonia},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2427048.2427055},
}

@Article{2014:DPA:2842042.2842212,
  author     = {Aibek Sarimbekov, Yudi Zheng, Danilo Ansaloni, Lubomír Bulej, Lukáš Marek, Walter Binder, Petr Tůma, Zhengwei Qi},
  title      = {Dynamic Program analysis-Reconciling Developer Productivity and Tool Performance},
  journal    = {Sci. Comput. Program.},
  year       = {2014},
  volume     = {95},
  number     = {P3},
  pages      = {344--358},
  month      = dec,
  acmid      = {2842212},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2014.03.014},
  groups     = {Compendex, excluidos},
  issn       = {0167-6423},
  issue_date = {December 2014},
  key        = {{$\!\!$}},
  numpages   = {15},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2014.03.014},
}

@InProceedings{Geyer:2014:PPE:2747650.2747655,
  author    = {Geyer, Fabien and Schneele, Stefan and Carle, Georg},
  title     = {PETFEN: A Performance Evaluation Tool for Flow-level Network Modeling of Ethernet Networks},
  booktitle = {Proceedings of the 8th International Conference on Performance Evaluation Methodologies and Tools},
  year      = {2014},
  series    = {VALUETOOLS '14},
  pages     = {25--30},
  address   = {ICST, Brussels, Belgium, Belgium},
  publisher = {ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)},
  acmid     = {2747655},
  doi       = {10.4108/icst.Valuetools.2014.258166},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-63190-057-0},
  keywords  = {flow-level network modeling, network traffic modeling, performance evaluation},
  location  = {Bratislava, Slovakia},
  numpages  = {6},
  url       = {http://dx.doi.org/10.4108/icst.Valuetools.2014.258166},
}

@InProceedings{vanHoorn:2014:AEP:2747650.2747676,
  author    = {van Hoorn, Andr{\'e} and V\"{o}gele, Christian and Schulz, Eike and Hasselbring, Wilhelm and Krcmar, Helmut},
  title     = {Automatic Extraction of Probabilistic Workload Specifications for Load Testing Session-based Application Systems},
  booktitle = {Proceedings of the 8th International Conference on Performance Evaluation Methodologies and Tools},
  year      = {2014},
  series    = {VALUETOOLS '14},
  pages     = {139--146},
  address   = {ICST, Brussels, Belgium, Belgium},
  publisher = {ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)},
  acmid     = {2747676},
  doi       = {10.4108/icst.valuetools.2014.258171},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-1-63190-057-0},
  keywords  = {clustering, load test extraction, load testing, session-based application systems, workload specifications},
  location  = {Bratislava, Slovakia},
  numpages  = {8},
  url       = {http://dx.doi.org/10.4108/icst.valuetools.2014.258171},
}

@InProceedings{Lindholm:2016:DIT:2997364.2997378,
  author    = {Lindholm, Joel and Thorsberg, Johan and Hedin, G\"{o}rel},
  title     = {DrAST: An Inspection Tool for Attributed Syntax Trees (Tool Demo)},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2016},
  series    = {SLE 2016},
  pages     = {176--180},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2997378},
  doi       = {10.1145/2997364.2997378},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4447-0},
  keywords  = {attribute grammars, debugging tools, syntax trees},
  location  = {Amsterdam, Netherlands},
  numpages  = {5},
  url       = {http://doi.acm.org/10.1145/2997364.2997378},
}

@Article{Popovic:2015:DMA:2826737.2826924,
  author     = {Popovic, Aleksandar and Lukovic, Ivan and Dimitrieski, Vladimir and Djukic, Verislav},
  title      = {A DSL for Modeling Application-specific Functionalities of Business Applications},
  journal    = {Comput. Lang. Syst. Struct.},
  year       = {2015},
  volume     = {43},
  number     = {C},
  pages      = {69--95},
  month      = oct,
  acmid      = {2826924},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.cl.2015.03.003},
  groups     = {Scopus, ScienceDirect, Compendex, Inclusos},
  issn       = {1477-8424},
  issue_date = {October 2015},
  keywords   = {Application-specific functionalities, Domain-specific languages, IIS\&\#42;CFuncLang, IIS\&\#42;Case, Model transformations},
  numpages   = {27},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.cl.2015.03.003},
}

@InProceedings{Benchaib:2012:VMM:2348688.2348703,
  author    = {Bencha\"{\i}b, Yacine and Chaudet, Claude},
  title     = {VIRMANEL: A Mobile Multihop Network Virtualization Tool},
  booktitle = {Proceedings of the Seventh ACM International Workshop on Wireless Network Testbeds, Experimental Evaluation and Characterization},
  year      = {2012},
  series    = {WiNTECH '12},
  pages     = {67--74},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2348703},
  doi       = {10.1145/2348688.2348703},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-1-4503-1527-2},
  keywords  = {mobility, virtualization, wireless multihop networks},
  location  = {Istanbul, Turkey},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2348688.2348703},
}

@InProceedings{Coutinho:2013:DRE:2458140.2458176,
  author    = {Coutinho, Jos{\'e} G. F. and Cardoso, Jo\~{a}o M. P. and Carvalho, Tiago and Nobre, Ricardo and Bhattacharya, Sujit and Diniz, Pedro C. and Fitzpatrick, Liam and Nane, Razvan},
  title     = {Deriving Resource Efficient Designs Using the REFLECT Aspect-oriented Approach},
  booktitle = {Proceedings of the 9th International Conference on Reconfigurable Computing: Architectures, Tools, and Applications},
  year      = {2013},
  series    = {ARC'13},
  pages     = {226--228},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2458176},
  doi       = {10.1007/978-3-642-36812-7_29},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-642-36811-0},
  location  = {Los Angeles, CA},
  numpages  = {3},
  url       = {http://dx.doi.org/10.1007/978-3-642-36812-7_29},
}

@InProceedings{Jongmans:2016:PPP:2945480.2945559,
  author    = {Jongmans, Sung-Shik T. and Arbab, Farhad},
  title     = {PrDK: Protocol Programming with Automata},
  booktitle = {Proceedings of the 22Nd International Conference on Tools and Algorithms for the Construction and Analysis of Systems - Volume 9636},
  year      = {2016},
  pages     = {547--552},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2945559},
  doi       = {10.1007/978-3-662-49674-9_33},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-662-49673-2},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1007/978-3-662-49674-9_33},
}

@InProceedings{Aerts:2015:TPM:2951510.2951554,
  author    = {Aerts, Arend and Mousavi, Mohammad Reza and Reniers, Michel},
  title     = {A Tool Prototype for Model-Based Testing of Cyber-Physical Systems},
  booktitle = {Proceedings of the 12th International Colloquium on Theoretical Aspects of Computing - ICTAC 2015 - Volume 9399},
  year      = {2015},
  pages     = {563--572},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2951554},
  doi       = {10.1007/978-3-319-25150-9_32},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-3-319-25149-3},
  keywords  = {Acumen, Conformance testing, Cyber-physical systems, Hybrid systems, Matlab, Model-based testing},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1007/978-3-319-25150-9_32},
}

@InProceedings{Roussev:2015:BFC:2760444.2761573,
  author    = {Roussev, Vassil},
  title     = {Building a Forensic Computing Language},
  booktitle = {Proceedings of the 2015 48th Hawaii International Conference on System Sciences},
  year      = {2015},
  series    = {HICSS '15},
  pages     = {5228--5233},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2761573},
  doi       = {10.1109/HICSS.2015.617},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, Duvida},
  isbn      = {978-1-4799-7367-5},
  keywords  = {digital forensics, dsl, nugget forensic computing language},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/HICSS.2015.617},
}

@InProceedings{Kuhn:2014:ACD:2681964.2682040,
  author    = {K\"{u}hn, Eva and Cra{\$\beta\$}, Stefan and Hamb\"{o}ck, Thomas},
  title     = {Approaching Coordination in Distributed Embedded Applications with the Peer Model DSL},
  booktitle = {Proceedings of the 2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
  year      = {2014},
  series    = {SEAA '14},
  pages     = {64--68},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2682040},
  doi       = {10.1109/SEAA.2014.72},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, Inclusos},
  isbn      = {978-1-4799-5795-8},
  numpages  = {5},
  url       = {http://dx.doi.org/10.1109/SEAA.2014.72},
}

@InProceedings{Yang:2014:FTD:2677832.2677840,
  author    = {Yang, Qiliang and Tao, Xianping and Xie, Hongwei and Xing, Jianchun and Song, Wei},
  title     = {FuAET: A Tool for Developing Fuzzy Self-adaptive Software Systems},
  booktitle = {Proceedings of the 6th Asia-Pacific Symposium on Internetware on Internetware},
  year      = {2014},
  series    = {INTERNETWARE 2014},
  pages     = {54--63},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2677840},
  doi       = {10.1145/2677832.2677840},
  groups    = {ACM, Duvida},
  isbn      = {978-1-4503-3303-0},
  keywords  = {Self-adaptive software, Software fuzzy self-adaptation},
  location  = {Hong Kong, China},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2677832.2677840},
}

@Article{Groenewegen:2013:IDV:2443690.2443695,
  author     = {Groenewegen, Danny M. and Visser, Eelco},
  title      = {Integration of Data Validation and User Interface Concerns in a DSL for Web Applications},
  journal    = {Softw. Syst. Model.},
  year       = {2013},
  volume     = {12},
  number     = {1},
  pages      = {35--52},
  month      = feb,
  acmid      = {2443695},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-010-0173-9},
  groups     = {SpringerLink, Scopus, Inclusos},
  issn       = {1619-1366},
  issue_date = {February 2013},
  keywords   = {Data validation, Domain-specific language, Web application},
  numpages   = {18},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-010-0173-9},
}

@PhdThesis{Kahlaoui:2012:MPL:2522106,
  author    = {Kahlaoui, Abdelilah},
  title     = {Methode Pour La Definition Des Langages Dedies Basee Sur Le Metamodele Iso/Iec 24744},
  year      = {2012},
  note      = {AAINR78334},
  advisor   = {Abran, Alain},
  groups    = {ACM, excluidos},
  isbn      = {978-0-494-78334-4},
  publisher = {Ecole de Technologie Superieure (Canada)},
}

@Article{Sporer:2016:AES:2924715.2924716,
  author     = {Sporer, Harald and Brenner, Eugen},
  title      = {An Automotive E/E System Domain-specific Modelling Approach with Various Tool Support},
  journal    = {SIGAPP Appl. Comput. Rev.},
  year       = {2016},
  volume     = {16},
  number     = {1},
  pages      = {5--14},
  month      = apr,
  acmid      = {2924716},
  address    = {New York, NY, USA},
  doi        = {10.1145/2924715.2924716},
  groups     = {ACM, Duvida},
  issn       = {1559-6915},
  issue_date = {March 2016},
  keywords   = {E/E systems, automotive embedded systems, domain-specific modelling, system architectural design},
  numpages   = {10},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2924715.2924716},
}

@Article{Bachtarzi:2014:MLT:2661487.2661492,
  author     = {Bachtarzi, Fay\c{c}al and Chaoui, Allaoua},
  title      = {A Modelling Language and a Tool for Web Services Composition},
  journal    = {Int. J. Commun. Netw. Distrib. Syst.},
  year       = {2014},
  volume     = {13},
  number     = {2},
  pages      = {221--240},
  month      = jul,
  acmid      = {2661492},
  address    = {Inderscience Publishers, Geneva, SWITZERLAND},
  doi        = {10.1504/IJCNDS.2014.064168},
  groups     = {Scopus, Compendex, Inclusos},
  issn       = {1754-3916},
  issue_date = {July 2014},
  numpages   = {20},
  publisher  = {Inderscience Publishers},
  url        = {http://dx.doi.org/10.1504/IJCNDS.2014.064168},
}

@InProceedings{Thiery:2014:DDT:2624300.2624475,
  author    = {Thiery, Adrien and Cerqueus, Thomas and Thorpe, Christina and Suny{\'e}, Gerson and Murphy, John},
  title     = {A DSL for Deployment and Testing in the Cloud},
  booktitle = {Proceedings of the 2014 IEEE International Conference on Software Testing, Verification, and Validation Workshops},
  year      = {2014},
  series    = {ICSTW '14},
  pages     = {376--382},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2624475},
  doi       = {10.1109/ICSTW.2014.43},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, Inclusos},
  isbn      = {978-1-4799-5790-3},
  keywords  = {DSL, Cloud, Deployment, Testing in the Cloud},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1109/ICSTW.2014.43},
}

@InProceedings{George:2012:TMT:2367051.2367067,
  author        = {George, Lars and Wider, Arif and Scheidgen, Markus},
  title         = {Type-Safe Model Transformation Languages As Internal DSLs in Scala},
  booktitle     = {Proceedings of the 5th International Conference on Theory and Practice of Model Transformations},
  year          = {2012},
  series        = {ICMT'12},
  pages         = {160--175},
  address       = {Berlin, Heidelberg},
  publisher     = {Springer-Verlag},
  __markedentry = {[Neto:5]},
  acmid         = {2367067},
  doi           = {10.1007/978-3-642-30476-7_11},
  groups        = {Scopus, Duplicados},
  isbn          = {978-3-642-30475-0},
  keywords      = {rank3},
  location      = {Prague, Czech Republic},
  numpages      = {16},
  url           = {http://dx.doi.org/10.1007/978-3-642-30476-7_11},
}

@InProceedings{Bakanov:2014:RSL:2567634.2567636,
  author    = {Bakanov, Konstantin and Spence, Ivor and Vandierendonck, Hans and Gillan, Charles J.},
  title     = {Rigorous Specification and Low-latency Implementation of Technical Market Indicators},
  booktitle = {Proceedings of the First Workshop on Parallel Programming for Analytics Applications},
  year      = {2014},
  series    = {PPAA '14},
  pages     = {43--52},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2567636},
  doi       = {10.1145/2567634.2567636},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2654-4},
  keywords  = {click router, domain-specific languages, in-kernel processing, technical market indicators},
  location  = {Orlando, Florida, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2567634.2567636},
}

@Article{Dejanovic:2016:ARP:2895217.2895257,
  author        = {Dejanovi\'{c}, I. and Milosavljevi\'{c}, G. and Vaderna, R.},
  title         = {Arpeggio},
  journal       = {Know.-Based Syst.},
  year          = {2016},
  volume        = {95},
  number        = {C},
  pages         = {71--74},
  month         = mar,
  __markedentry = {[Neto:5]},
  acmid         = {2895257},
  address       = {Amsterdam, The Netherlands, The Netherlands},
  doi           = {10.1016/j.knosys.2015.12.004},
  groups        = {ScienceDirect, Scopus, Compendex, Duplicados},
  issn          = {0950-7051},
  issue_date    = {March 2016},
  keywords      = {DSL, PEG, Packrat, Parser, Python, TextX, rank3},
  numpages      = {4},
  publisher     = {Elsevier Science Publishers B. V.},
  url           = {http://dx.doi.org/10.1016/j.knosys.2015.12.004},
}

@Article{Cazzola:2016:LCM:2956216.2956331,
  author     = {Cazzola, Walter and Vacchi, Edoardo},
  title      = {Language Components for Modular DSLs Using Traits},
  journal    = {Comput. Lang. Syst. Struct.},
  year       = {2016},
  volume     = {45},
  number     = {C},
  pages      = {16--34},
  month      = apr,
  acmid      = {2956331},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.cl.2015.12.001},
  groups     = {ScienceDirect, Inclusos},
  issn       = {1477-8424},
  issue_date = {April 2016},
  numpages   = {19},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.cl.2015.12.001},
}

@InProceedings{Barnett:2015:BMA:2819009.2819130,
  author    = {Barnett, Scott and Vasa, Rajesh and Grundy, John},
  title     = {Bootstrapping Mobile App Development},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 2},
  year      = {2015},
  series    = {ICSE '15},
  pages     = {657--660},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2819130},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, excluidos},
  location  = {Florence, Italy},
  numpages  = {4},
  url       = {http://dl.acm.org/citation.cfm?id=2819009.2819130},
}

@InProceedings{Gobillot:2014:MFS:2694513.2694543,
  author    = {Gobillot, Nicolas and Lesire, Charles and Doose, David},
  title     = {A Modeling Framework for Software Architecture Specification and Validation},
  booktitle = {Proceedings of the 4th International Conference on Simulation, Modeling, and Programming for Autonomous Robots - Volume 8810},
  year      = {2014},
  series    = {SIMPAR 2014},
  pages     = {303--314},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2694543},
  doi       = {10.1007/978-3-319-11900-7_26},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-319-11899-4},
  location  = {Bergamo, Italy},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1007/978-3-319-11900-7_26},
}

@InProceedings{Edwards:2012:AAC:2412104.2412317,
  author    = {Edwards, George and Brun, Yuriy and Medvidovic, Nenad},
  title     = {Automated Analysis and Code Generation for Domain-Specific Models},
  booktitle = {Proceedings of the 2012 Joint Working IEEE/IFIP Conference on Software Architecture and European Conference on Software Architecture},
  year      = {2012},
  series    = {WICSA-ECSA '12},
  pages     = {161--170},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2412317},
  doi       = {10.1109/WICSA-ECSA.212.24},
  groups    = {Scopus, IEEEDSL, Duvida},
  isbn      = {978-0-7695-4827-2},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/WICSA-ECSA.212.24},
}

@InProceedings{Zhang:2016:PSA:2998407.2998411,
  author    = {Zhang, Jia and Brand, Mark van den and \c{S}ut\^{\i}i, Ana Maria and Hamilton, Marc},
  title     = {Pattern Specification and Application in Metamodels in Ecore},
  booktitle = {Proceedings of the 1st Industry Track on Software Language Engineering},
  year      = {2016},
  series    = {ITSLE 2016},
  pages     = {3--12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2998411},
  doi       = {10.1145/2998407.2998411},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4646-7},
  keywords  = {Ecore, metamodels, pattern application, pattern specification},
  location  = {Amsterdam, Netherlands},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2998407.2998411},
}

@InProceedings{Hardin:2012:GLV:2260516.2260521,
  author    = {Hardin, David and Slind, Konrad and Whalen, Michael and Pham, Tuan-Hung},
  title     = {The Guardol Language and Verification System},
  booktitle = {Proceedings of the 18th International Conference on Tools and Algorithms for the Construction and Analysis of Systems},
  year      = {2012},
  series    = {TACAS'12},
  pages     = {18--32},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2260521},
  doi       = {10.1007/978-3-642-28756-5_3},
  groups    = {ACM, excluidos},
  isbn      = {978-3-642-28755-8},
  location  = {Tallinn, Estonia},
  numpages  = {15},
  url       = {http://dx.doi.org/10.1007/978-3-642-28756-5_3},
}

@InProceedings{Tesoriero:2012:IMH:2379636.2379672,
  author    = {Tesoriero, Ricardo and Gallud, Jos{\'e} A. and Villanueva, Pedro G. and Sebasti\'{a}n, Gabriel},
  title     = {Interaction Modeling on Heterogeneous Spaces},
  booktitle = {Proceedings of the 13th International Conference on Interacci\'{O}N Persona-Ordenador},
  year      = {2012},
  series    = {INTERACCION '12},
  pages     = {37:1--37:2},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2379672},
  articleno = {37},
  doi       = {10.1145/2379636.2379672},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-1314-8},
  keywords  = {human computer interaction, human-computer interaction, location-aware applications, model-driven architectures, palabras clave, user interface model-based development},
  location  = {Elche, Spain},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2379636.2379672},
}

@InProceedings{Sarimbekov:2013:PDD:2510148.2510237,
  author    = {Sarimbekov, Aibek and Zheng, Yudi and Ansaloni, Danilo and Bulej, Lubomir and Marek, Lukas and Binder, Walter and Tuma, Petr and Qi, Zhengwei},
  title     = {Productive Development of Dynamic Program Analysis Tools with DiSL},
  booktitle = {Proceedings of the 2013 22Nd Australian Conference on Software Engineering},
  year      = {2013},
  series    = {ASWEC '13},
  pages     = {11--19},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2510237},
  doi       = {10.1109/ASWEC.2013.12},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, Inclusos},
  isbn      = {978-0-7695-4995-8},
  keywords  = {Dynamic program analysis, bytecode instrumentation, development productivity, controlled experiment},
  numpages  = {9},
  url       = {http://dx.doi.org/10.1109/ASWEC.2013.12},
}

@Article{Hrncic:2012:IGI:2719652.2719700,
  author     = {Hrncic, Dejan and Mernik, Marjan and Bryant, Barrett R.},
  title      = {Improving Grammar Inference by a Memetic Algorithm},
  journal    = {Trans. Sys. Man Cyber Part C},
  year       = {2012},
  volume     = {42},
  number     = {5},
  pages      = {692--703},
  month      = sep,
  acmid      = {2719700},
  address    = {Piscataway, NJ, USA},
  doi        = {10.1109/TSMCC.2012.2186802},
  groups     = {IEEEDSL, Compendex, Scopus, excluidos},
  issn       = {1094-6977},
  issue_date = {September 2012},
  numpages   = {12},
  publisher  = {IEEE Press},
  url        = {http://dx.doi.org/10.1109/TSMCC.2012.2186802},
}

@InProceedings{Blunk:2012:CSM:2429759.2430249,
  author    = {Blunk, Andreas and Fischer, Joachim},
  title     = {Comparison of Slx and Model-driven Language Development for Creating Domain-specific Simulation Languages},
  booktitle = {Proceedings of the Winter Simulation Conference},
  year      = {2012},
  series    = {WSC '12},
  pages     = {375:1--375:2},
  publisher = {Winter Simulation Conference},
  acmid     = {2430249},
  articleno = {375},
  groups    = {ACM, Inclusos},
  location  = {Berlin, Germany},
  numpages  = {2},
  url       = {http://dl.acm.org/citation.cfm?id=2429759.2430249},
}

@InProceedings{Bhat:2015:TSA:2981280.2981297,
  author    = {Bhat, Manoj and Reschenhofer, Thomas and Matthes, Florian},
  title     = {Tool Support for Analyzing the Evolution of Enterprise Architecture Metrics},
  booktitle = {Proceedings of the 17th International Conference on Enterprise Information Systems - Volume 3},
  year      = {2015},
  series    = {ICEIS 2015},
  pages     = {154--161},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2981297},
  doi       = {10.5220/0005370701540161},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-989-758-098-7},
  keywords  = {Domain Specific Language., Enterprise Architecture Management, Metrics},
  location  = {Barcelona, Spain},
  numpages  = {8},
  url       = {http://dx.doi.org/10.5220/0005370701540161},
}

@InProceedings{Scholz:2016:FLP:2892208.2892226,
  author    = {Scholz, Bernhard and Jordan, Herbert and Suboti\'{c}, Pavle and Westmann, Till},
  title     = {On Fast Large-scale Program Analysis in Datalog},
  booktitle = {Proceedings of the 25th International Conference on Compiler Construction},
  year      = {2016},
  series    = {CC 2016},
  pages     = {196--206},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2892226},
  doi       = {10.1145/2892208.2892226},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-4241-4},
  keywords  = {Compiler, Datalog, Program Synthesis, Static Program Analysis},
  location  = {Barcelona, Spain},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/2892208.2892226},
}

@InProceedings{Reis:2014:DSE:2554850.2554898,
  author        = {Reis, Leonardo V. S. and Di Iorio, Vladimir O. and Bigonha, Roberto S.},
  title         = {Defining the Syntax of Extensible Languages},
  booktitle     = {Proceedings of the 29th Annual ACM Symposium on Applied Computing},
  year          = {2014},
  series        = {SAC '14},
  pages         = {1570--1576},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2554898},
  doi           = {10.1145/2554850.2554898},
  groups        = {Scopus, Duplicados},
  isbn          = {978-1-4503-2469-4},
  keywords      = {APEG, PEG, extensible languages, rank3},
  location      = {Gyeongju, Republic of Korea},
  numpages      = {7},
  url           = {http://doi.acm.org/10.1145/2554850.2554898},
}

@InProceedings{Iliasov:2012:SDL:2420239.2420390,
  author    = {Iliasov, Alexei and Romanovsky, Alexander},
  title     = {SafeCap Domain Language for Reasoning About Safety and Capacity},
  booktitle = {Proceedings of the 2012 Workshop on Dependable Transportation Systems/Recent Advances in Software Dependability},
  year      = {2012},
  series    = {WDTS-RASD '12},
  pages     = {1--10},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2420390},
  doi       = {10.1109/WDTS-RASD.2012.11},
  groups    = {IEEEDSML, IEEEDSL, Scopus, Duvida},
  isbn      = {978-0-7695-4933-0},
  keywords  = {railway modelling, formal verification, domain language, route-based signalling, safety},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/WDTS-RASD.2012.11},
}

@Article{Esterie:2014:NTT:2841458.2841781,
  author     = {Est{\'e}rie, Pierre and Falcou, Joel and Gaunard, Mathias and Laprest{\'e}, Jean-Thierry and Lacassagne, Lionel},
  title      = {The Numerical Template Toolbox},
  journal    = {J. Parallel Distrib. Comput.},
  year       = {2014},
  volume     = {74},
  number     = {12},
  pages      = {3240--3253},
  month      = dec,
  acmid      = {2841781},
  address    = {Orlando, FL, USA},
  doi        = {10.1016/j.jpdc.2014.07.002},
  groups     = {Scopus, excluidos},
  issn       = {0743-7315},
  issue_date = {December 2014},
  keywords   = {C++, Embedded domain specific languages, Generative programming, Generic programming, Parallel skeletons},
  numpages   = {14},
  publisher  = {Academic Press, Inc.},
  url        = {http://dx.doi.org/10.1016/j.jpdc.2014.07.002},
}

@InProceedings{Kovesdan:2015:ACD:2954852.2954865,
  author    = {K\"{o}vesd\'{a}n, G\'{a}bor and Asztalos, M\'{a}rk and Lengyel, L\'{a}szl\'{o}},
  title     = {Aggregate Callback: A Design Pattern for Flexible and Robust Runtime Model Building},
  booktitle = {Proceedings of the 3rd International Conference on Model-Driven Engineering and Software Development},
  year      = {2015},
  series    = {MODELSWARD 2015},
  pages     = {149--156},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2954865},
  doi       = {10.5220/0005197901490156},
  groups    = {Scopus, IEEEDSL, Compendex, excluidos},
  isbn      = {978-989-758-083-3},
  keywords  = {Agility, Code Generation, Design Pattern, Domain-Specific Modeling, Model Transformation, Modeling},
  location  = {ESEO, Angers, Loire Valley, France},
  numpages  = {8},
  url       = {http://dx.doi.org/10.5220/0005197901490156},
}

@Article{Abetamann:2014:DDO:2581033.2581036,
  author        = {A{\$\beta\$}mann, Uwe and Bartho, Andreas and B\"{u}rger, Christoff and Cech, Sebastian and Demuth, Birgit and Heidenreich, Florian and Johannes, Jendrik and Karol, Sven and Polowinski, Jan and Reimann, Jan and Schroeter, Julia and Seifert, Mirko and Thiele, Michael and Wende, Christian and Wilke, Claas},
  title         = {DropsBox: The Dresden Open Software Toolbox},
  journal       = {Softw. Syst. Model.},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {133--169},
  month         = feb,
  __markedentry = {[Neto:5]},
  acmid         = {2581036},
  address       = {Secaucus, NJ, USA},
  doi           = {10.1007/s10270-012-0284-6},
  groups        = {SpringerLink, Compendex, Scopus, Duplicados},
  issn          = {1619-1366},
  issue_date    = {February 2014},
  keywords      = {Domain-specific language, Domain-specific modelling environment, EMF, Language life cycle, MDSD, Modelling tool, rank3},
  numpages      = {37},
  publisher     = {Springer-Verlag New York, Inc.},
  url           = {http://dx.doi.org/10.1007/s10270-012-0284-6},
}

@Article{Weichhart:2016:SIC:3009223.3009578,
  author     = {Weichhart, Georg and Gu{\'e}dria, Wided and Naudet, Yannick},
  title      = {Supporting Interoperability in Complex Adaptive Enterprise Systems},
  journal    = {Data Knowl. Eng.},
  year       = {2016},
  volume     = {105},
  number     = {C},
  pages      = {90--106},
  month      = sep,
  acmid      = {3009578},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.datak.2016.04.001},
  groups     = {Scopus, excluidos},
  issn       = {0169-023X},
  issue_date = {September 2016},
  keywords   = {Complex Adaptive Systems, Enterprise Interoperability, Multi Agent Systems, Ontology of interoperability, Scala},
  numpages   = {17},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.datak.2016.04.001},
}

@InProceedings{Sanz:2015:AMT:2954852.2954875,
  author    = {Sanz, Concepci\'{o}n and Salas, Alejandro and de Miguel, Miguel and Alonso, Alejandro and Antonio de la Puente, Juan and Benac, Clara},
  title     = {Automated Model-Based Testing Based on an Agnostic-Platform Modeling Language},
  booktitle = {Proceedings of the 3rd International Conference on Model-Driven Engineering and Software Development},
  year      = {2015},
  series    = {MODELSWARD 2015},
  pages     = {239--246},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2954875},
  doi       = {10.5220/0005237802390246},
  groups    = {Scopus, IEEEDSL, excluidos},
  isbn      = {978-989-758-083-3},
  keywords  = {Agile Development, Automated Testing, Model-Based Testing},
  location  = {ESEO, Angers, Loire Valley, France},
  numpages  = {8},
  url       = {http://dx.doi.org/10.5220/0005237802390246},
}

@Article{Satyanarayan:2014:ANV:2771495.2771532,
  author     = {Satyanarayan, Arvind and Heer, Jeffrey},
  title      = {Authoring Narrative Visualizations with Ellipsis},
  journal    = {Comput. Graph. Forum},
  year       = {2014},
  volume     = {33},
  number     = {3},
  pages      = {361--370},
  month      = jun,
  acmid      = {2771532},
  address    = {Chichester, UK},
  doi        = {10.1111/cgf.12392},
  groups     = {Scopus, Compendex, excluidos},
  issn       = {0167-7055},
  issue_date = {June 2014},
  keywords   = {Categories and Subject Descriptors according to ACM CCS:, H.5.2 [Information Interfaces]: User Interfaces-GUI},
  numpages   = {10},
  publisher  = {The Eurographs Association \&\#38; John Wiley \&\#38; Sons, Ltd.},
  url        = {http://dx.doi.org/10.1111/cgf.12392},
}

@InProceedings{Patwari:2016:LDD:2856636.2856653,
  author    = {Patwari, Puneet and Banerjee, Amar and Chaudhuri, Subhrojyoti Roy and Natarajan, Swaminathan},
  title     = {Learning's from Developing a Domain Specific Engineering Environment for Control Systems},
  booktitle = {Proceedings of the 9th India Software Engineering Conference},
  year      = {2016},
  series    = {ISEC '16},
  pages     = {177--183},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2856653},
  doi       = {10.1145/2856636.2856653},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-4018-2},
  keywords  = {DSL, MDA, MDE, Monitoring and Control (M\&C)},
  location  = {Goa, India},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2856636.2856653},
}

@Article{Dimitrieski:2015:CEE:2852359.2852433,
  author     = {Dimitrieski, Vladimir and \v{C}elikovi\'{c}, Milan and Aleksi\'{c}, Slavica and Risti\'{c}, Sonja and Alargt, Abdalla and Lukovi\'{c}, Ivan},
  title      = {Concepts and Evaluation of the Extended Entity-relationship Approach to Database Design in a Multi-paradigm Information System Modeling Tool},
  journal    = {Comput. Lang. Syst. Struct.},
  year       = {2015},
  volume     = {44},
  number     = {PC},
  pages      = {299--318},
  month      = dec,
  acmid      = {2852433},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.cl.2015.08.011},
  groups     = {Scopus, ScienceDirect, Compendex, excluidos},
  issn       = {1477-8424},
  issue_date = {December 2015},
  keywords   = {Domain-specific language, Entity-relationship, Evaluation study, Information system design, Model transformation},
  numpages   = {20},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.cl.2015.08.011},
}

@InProceedings{Biely:2013:DFI:2514941.2515225,
  author    = {Biely, Martin and Delgado, Pamela and Milosevic, Zarko and Schiper, Andre},
  title     = {Distal: A Framework for Implementing Fault-tolerant Distributed Algorithms},
  booktitle = {Proceedings of the 2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
  year      = {2013},
  series    = {DSN '13},
  pages     = {1--8},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2515225},
  doi       = {10.1109/DSN.2013.6575306},
  groups    = {IEEEDSML, IEEEDSL, Compendex, excluidos},
  isbn      = {978-1-4673-6471-3},
  keywords  = {Protocols,DSL,Distributed algorithms,Fault tolerance,Fault tolerant systems,Algorithm design and analysis,Java,SMR,DSL,fault-tolerant distributed algorithms,Paxos},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1109/DSN.2013.6575306},
}

@InProceedings{Satyanarayan:2014:ANV:2854210.2854260,
  author        = {Satyanarayan, Arvind and Heer, Jeffrey},
  title         = {Authoring Narrative Visualizations with Ellipsis},
  booktitle     = {Proceedings of the 16th Eurographics Conference on Visualization},
  year          = {2014},
  series        = {EuroVis '14},
  pages         = {361--370},
  address       = {Aire-la-Ville, Switzerland, Switzerland},
  publisher     = {Eurographics Association},
  __markedentry = {[Neto:5]},
  acmid         = {2854260},
  doi           = {10.1111/cgf.12392},
  groups        = {Duplicados},
  keywords      = {rank3},
  location      = {Swansea, Wales, United Kingdom},
  numpages      = {10},
  url           = {http://dx.doi.org/10.1111/cgf.12392},
}

@InProceedings{Creff:2012:RFM:2452575.2454495,
  author    = {Creff, Stephen and Champeau, Joel and Monegier, Arnaud and Jezequel, Jean-Marc},
  title     = {Relationships Formalization for Model-Based Product Lines},
  booktitle = {Proceedings of the 2012 19th Asia-Pacific Software Engineering Conference - Volume 01},
  year      = {2012},
  series    = {APSEC '12},
  pages     = {158--163},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2454495},
  doi       = {10.1109/APSEC.2012.127},
  groups    = {IEEEDSML, IEEEDSL, excluidos},
  isbn      = {978-0-7695-4922-4},
  keywords  = {MBE, PLE, Modeling Space, DSL, Feature Models, Intentional Relations, Relationships},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/APSEC.2012.127},
}

@InProceedings{Solms:2016:CUM:3017121.3017135,
  author    = {Solms, Fritz and Hammond, Priscilla Naa Dedei and Marshall, Linda},
  title     = {Constraints-based URDAD Model Verification},
  booktitle = {Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering},
  year      = {2016},
  series    = {ENASE 2016},
  pages     = {148--155},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {3017135},
  doi       = {10.5220/0005829401480155},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-989-758-189-2},
  keywords  = {Domain-Specific Language., Metamodel, Model Validation, Model-driven Engineering, Object Constraint Language, URDAD},
  location  = {Rome, Italy},
  numpages  = {8},
  url       = {https://doi.org/10.5220/0005829401480155},
}

@InProceedings{Atkinson:2013:HTG:2489820.2489823,
  author    = {Atkinson, Colin and Gerbig, Ralph},
  title     = {Harmonizing Textual and Graphical Visualizations of Domain Specific Models},
  booktitle = {Proceedings of the Second Workshop on Graphical Modeling Language Development},
  year      = {2013},
  series    = {GMLD '13},
  pages     = {32--41},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2489823},
  doi       = {10.1145/2489820.2489823},
  groups    = {Scopus, Duvida},
  isbn      = {978-1-4503-2044-3},
  keywords  = {diagram, domain-specific languages, linguistic classification, modeling languages, multi-level modeling, ontological classification, orthogonal classification architecture, symbiotic languages, visual languages},
  location  = {Montpellier, France},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2489820.2489823},
}

@InProceedings{DiLorenzo:2016:IFD:2983990.2984034,
  author    = {DiLorenzo, Jonathan and Zhang, Richard and Menzies, Erin and Fisher, Kathleen and Foster, Nate},
  title     = {Incremental Forest: A DSL for Efficiently Managing Filestores},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  year      = {2016},
  series    = {OOPSLA 2016},
  pages     = {252--271},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2984034},
  doi       = {10.1145/2983990.2984034},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-4444-9},
  keywords  = {Data description languages, ad hoc data, domain-specific languages, file systems, filestores, laziness},
  location  = {Amsterdam, Netherlands},
  numpages  = {20},
  url       = {http://doi.acm.org/10.1145/2983990.2984034},
}

@InProceedings{Li:2014:RLT:2670979.2671004,
  author    = {Li, Kaituo and Joshi, Pallavi and Gupta, Aarti and Ganai, Malay K.},
  title     = {ReproLite: A Lightweight Tool to Quickly Reproduce Hard System Bugs},
  booktitle = {Proceedings of the ACM Symposium on Cloud Computing},
  year      = {2014},
  series    = {SOCC '14},
  pages     = {25:1--25:13},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2671004},
  articleno = {25},
  doi       = {10.1145/2670979.2671004},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-3252-1},
  keywords  = {Cloud Computing, Debugging, Hard System Bug, Lightweight},
  location  = {Seattle, WA, USA},
  numpages  = {13},
  url       = {http://doi.acm.org/10.1145/2670979.2671004},
}

@InProceedings{Nobre:2014:ESD:2556863.2556870,
  author    = {Nobre, Ricardo and Pinto, Pedro and Carvalho, Tiago and Cardoso, Jo\~{a}o M. P. and Diniz, Pedro C.},
  title     = {On Expressing Strategies for Directive-Driven Multicore Programing Models},
  booktitle = {Proceedings of Workshop on Parallel Programming and Run-Time Management Techniques for Many-core Architectures and Design Tools and Architectures for Multicore Embedded Computing Platforms},
  year      = {2014},
  series    = {PARMA-DITAM '14},
  pages     = {7:7--7:12},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2556870},
  articleno = {7},
  doi       = {10.1145/2556863.2556870},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-2607-0},
  keywords  = {Aspect-oriented programming, LARA, code instrumentation, directive-based compilation, multicore architectures},
  location  = {Vienna, Austria},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2556863.2556870},
}

@InProceedings{Marek:2013:IDP:2479871.2479940,
  author    = {Marek, Luk\'{a}a and Zheng, Yudi and Ansaloni, Danilo and Bulej, Lubom\'{\i}r and Sarimbekov, Aibek and Binder, Walter and Qi, Zhengwei},
  title     = {Introduction to Dynamic Program Analysis with DiSL},
  booktitle = {Proceedings of the 4th ACM/SPEC International Conference on Performance Engineering},
  year      = {2013},
  series    = {ICPE '13},
  pages     = {429--430},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2479940},
  doi       = {10.1145/2479871.2479940},
  groups    = {ScienceDirect, Scopus, excluidos},
  isbn      = {978-1-4503-1636-1},
  keywords  = {aspect-oriented programming, bytecode instrumentation, domain-specific languages, dynamic program analysis, java virtual machine},
  location  = {Prague, Czech Republic},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2479871.2479940},
}

@InProceedings{Hallenberg:2012:DAT:2663608.2663628,
  author    = {Hallenberg, Niels and Carlsen, Philip Lykke},
  title     = {Declarative Automated Test},
  booktitle = {Proceedings of the 7th International Workshop on Automation of Software Test},
  year      = {2012},
  series    = {AST '12},
  pages     = {96--102},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2663628},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  isbn      = {978-1-4673-1822-8},
  keywords  = {F\#, automated testing, domain specific language, functional testing},
  location  = {Zurich, Switzerland},
  numpages  = {7},
  url       = {http://dl.acm.org/citation.cfm?id=2663608.2663628},
}

@InProceedings{Horpacsi:2013:EEU:2505305.2505314,
  author    = {Horp\'{a}csi, D\'{a}niel},
  title     = {Extending Erlang by Utilising RefactorErl},
  booktitle = {Proceedings of the Twelfth ACM SIGPLAN Workshop on Erlang},
  year      = {2013},
  series    = {Erlang '13},
  pages     = {63--72},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2505314},
  doi       = {10.1145/2505305.2505314},
  groups    = {Scopus, Duvida},
  isbn      = {978-1-4503-2385-7},
  keywords  = {domain specific language, erlang, language extension, precompiler, preprocessor, refactoring, static code analysis, transformation, translation},
  location  = {Boston, Massachusetts, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2505305.2505314},
}

@InProceedings{Iliasov:2013:SPM:2741755.2741784,
  author    = {Iliasov, Alexei and Lopatkin, Ilya and Romanovsky, Alexander},
  title     = {The SafeCap Platform for Modelling Railway Safety and Capacity},
  booktitle = {Proceedings of the 32Nd International Conference on Computer Safety, Reliability, and Security - Volume 8153},
  year      = {2013},
  series    = {SAFECOMP 2013},
  pages     = {130--137},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2741784},
  doi       = {10.1007/978-3-642-40793-2_12},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-642-40792-5},
  keywords  = {Domain-specific language, EMF, Eclipse, Event-B, GMF, ProB, SMT solvers, capacity-improving patterns, model transformation},
  location  = {Toulouse, France},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1007/978-3-642-40793-2_12},
}

@InProceedings{Prado:2015:FMG:2866593.2866968,
  author    = {Prado, Ely Fernando do and Lucrédio, Daniel},
  title     = {A Flexible Model-Driven Game Development Approach},
  booktitle = {Proceedings of the 2015 IX Brazilian Symposium on Components, Architectures and Reuse Software},
  year      = {2015},
  series    = {SBCARS '15},
  pages     = {130--139},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2866968},
  doi       = {10.1109/SBCARS.2015.24},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  isbn      = {978-1-4673-9630-1},
  keywords  = {Model-Driven Game Development, Code Generation},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/SBCARS.2015.24},
}

@InProceedings{Moline:2014:RES:2694513.2694530,
  author    = {Molin{\'e}, \'{E}ric and Morette, Nicolas and Novales, Cyril and Vieyres, Pierre},
  title     = {Robotic Engineer's Specifications for a Well-Fitted Model-Driven Control Architecture for Robots},
  booktitle = {Proceedings of the 4th International Conference on Simulation, Modeling, and Programming for Autonomous Robots - Volume 8810},
  year      = {2014},
  series    = {SIMPAR 2014},
  pages     = {170--181},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2694530},
  doi       = {10.1007/978-3-319-11900-7_15},
  groups    = {ACM, excluidos},
  isbn      = {978-3-319-11899-4},
  keywords  = {Component-based Robot Architecture, Model-Driven Robotic Architecture, Robot, Robotics Designer},
  location  = {Bergamo, Italy},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1007/978-3-319-11900-7_15},
}

@InProceedings{Biboudis:2016:RJD:2993236.2993239,
  author    = {Biboudis, Aggelos and Inostroza, Pablo and Storm, Tijs van der},
  title     = {Recaf: Java Dialects As Libraries},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  year      = {2016},
  series    = {GPCE 2016},
  pages     = {2--13},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2993239},
  doi       = {10.1145/2993236.2993239},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4446-3},
  keywords  = {extensible languages, language virtualization, object algebras, transformation},
  location  = {Amsterdam, Netherlands},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2993236.2993239},
}

@Article{Benchaib:2013:UVS:2436196.2436207,
  author     = {Bencha\"{\i}b, Yacine and Chaudet, Claude},
  title      = {Using Virtualization to Study Mobile Multihop Networks},
  journal    = {SIGMOBILE Mob. Comput. Commun. Rev.},
  year       = {2013},
  volume     = {16},
  number     = {4},
  pages      = {18--19},
  month      = feb,
  acmid      = {2436207},
  address    = {New York, NY, USA},
  doi        = {10.1145/2436196.2436207},
  groups     = {Compendex, excluidos},
  issn       = {1559-1662},
  issue_date = {October 2012},
  keywords   = {to describe most mobility models},
  numpages   = {2},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2436196.2436207},
}

@InProceedings{Gunalp:2015:RTS:2866597.2867162,
  author    = {G\"{u}nalp, Ozan and Escoffier, Cl{\'e}ment and Lalanda, Philippe},
  title     = {Rondo: A Tool Suite for Continuous Deployment in Dynamic Environments},
  booktitle = {Proceedings of the 2015 IEEE International Conference on Services Computing},
  year      = {2015},
  series    = {SCC '15},
  pages     = {720--727},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2867162},
  doi       = {10.1109/SCC.2015.102},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-1-4673-7281-7},
  keywords  = {Dynamism, Continuous Deployment, Service-Oriented Computing},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1109/SCC.2015.102},
}

@InProceedings{Groce:2015:TLT:2771783.2784769,
  author    = {Groce, Alex and Pinto, Jervis and Azimi, Pooria and Mittal, Pranjal},
  title     = {TSTL: A Language and Tool for Testing (Demo)},
  booktitle = {Proceedings of the 2015 International Symposium on Software Testing and Analysis},
  year      = {2015},
  series    = {ISSTA 2015},
  pages     = {414--417},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2784769},
  doi       = {10.1145/2771783.2784769},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-3620-8},
  keywords  = {Domain-specific languages, Python, testing tools},
  location  = {Baltimore, MD, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2771783.2784769},
}

@InProceedings{Rein:2016:GIP:2986012.2986022,
  author    = {Rein, Patrick and Hirschfeld, Robert and Taeumel, Marcel},
  title     = {Gramada: Immediacy in Programming Language Development},
  booktitle = {Proceedings of the 2016 ACM International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software},
  year      = {2016},
  series    = {Onward! 2016},
  pages     = {165--179},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2986022},
  doi       = {10.1145/2986012.2986022},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4076-2},
  keywords  = {domain-specific languages, immediate feedback, incremental compilation, language development, tools},
  location  = {Amsterdam, Netherlands},
  numpages  = {15},
  url       = {http://doi.acm.org/10.1145/2986012.2986022},
}

@Article{Domagala:2016:GCT:2980930.2907960,
  author        = {Domaga\la, \Lukasz and van Amstel, Duco and Rastello, Fabrice},
  title         = {Generalized Cache Tiling for Dataflow Programs},
  journal       = {SIGPLAN Not.},
  year          = {2016},
  volume        = {51},
  number        = {5},
  pages         = {52--61},
  month         = jun,
  __markedentry = {[Neto:5]},
  acmid         = {2907960},
  address       = {New York, NY, USA},
  doi           = {10.1145/2980930.2907960},
  groups        = {ACM, Duplicados},
  issn          = {0362-1340},
  issue_date    = {May 2016},
  keywords      = {Cache optimization, Constraint programming, Data reuse, Dataflow language, Heuristics, StreamIt, Tiling, rank3},
  numpages      = {10},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2980930.2907960},
}

@InProceedings{Domagala:2016:GCT:2907950.2907960,
  author    = {Domaga\la, \Lukasz and van Amstel, Duco and Rastello, Fabrice},
  title     = {Generalized Cache Tiling for Dataflow Programs},
  booktitle = {Proceedings of the 17th ACM SIGPLAN/SIGBED Conference on Languages, Compilers, Tools, and Theory for Embedded Systems},
  year      = {2016},
  series    = {LCTES 2016},
  pages     = {52--61},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2907960},
  doi       = {10.1145/2907950.2907960},
  groups    = {excluidos},
  isbn      = {978-1-4503-4316-9},
  keywords  = {Cache optimization, Constraint programming, Data reuse, Dataflow language, Heuristics, StreamIt, Tiling},
  location  = {Santa Barbara, CA, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2907950.2907960},
}

@Article{Yoo:2016:EEE:2996048.2996064,
  author     = {Yoo, Hwan-Soo and Kim, Seong-Whan},
  title      = {ESOTAG: E-book Evolution Using Collaborative Social Tagging by Readers},
  journal    = {Multimedia Tools Appl.},
  year       = {2016},
  volume     = {75},
  number     = {20},
  pages      = {12795--12813},
  month      = oct,
  acmid      = {2996064},
  address    = {Hingham, MA, USA},
  doi        = {10.1007/s11042-016-3404-4},
  groups     = {ACM, excluidos},
  issn       = {1380-7501},
  issue_date = {October 2016},
  keywords   = {Collaborative filtering, E-book, External DSL, Smart devices, Social tag},
  numpages   = {19},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s11042-016-3404-4},
}

@InProceedings{Viera:2012:GFF:2427048.2427053,
  author    = {Viera, Marcos and Swierstra, Doaitse and Dijkstra, Atze},
  title     = {Grammar Fragments Fly First-class},
  booktitle = {Proceedings of the Twelfth Workshop on Language Descriptions, Tools, and Applications},
  year      = {2012},
  series    = {LDTA '12},
  pages     = {5:1--5:7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2427053},
  articleno = {5},
  doi       = {10.1145/2427048.2427053},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-1536-4},
  keywords  = {Haskell, first-class grammars, parsers, typed transformations},
  location  = {Tallinn, Estonia},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2427048.2427053},
}

@Article{Challenger:2016:DSD:2838436.2838660,
  author     = {Challenger, Moharram and Mernik, Marjan and Kardas, Geylani and Kosar, Toma\v{z}},
  title      = {Declarative Specifications for the Development of Multi-agent Systems},
  journal    = {Comput. Stand. Interfaces},
  year       = {2016},
  volume     = {43},
  number     = {C},
  pages      = {91--115},
  month      = jan,
  acmid      = {2838660},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.csi.2015.08.012},
  groups     = {Scopus, ScienceDirect, excluidos},
  issn       = {0920-5489},
  issue_date = {January 2016},
  keywords   = {Declarative specifications, Domain-specific language, Formal semantics, Multi-agent system, Semantic Web},
  numpages   = {25},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.csi.2015.08.012},
}

@InProceedings{deJonge:2012:LGS:2427048.2427050,
  author    = {de Jonge, Maartje and Visser, Eelco},
  title     = {A Language Generic Solution for Name Binding Preservation in Refactorings},
  booktitle = {Proceedings of the Twelfth Workshop on Language Descriptions, Tools, and Applications},
  year      = {2012},
  series    = {LDTA '12},
  pages     = {2:1--2:8},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2427050},
  articleno = {2},
  doi       = {10.1145/2427048.2427050},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-1536-4},
  keywords  = {refactoring, static analysis},
  location  = {Tallinn, Estonia},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2427048.2427050},
}

@Article{Shambaugh:2016:RCV:2980983.2908083,
  author     = {Shambaugh, Rian and Weiss, Aaron and Guha, Arjun},
  title      = {Rehearsal: A Configuration Verification Tool for Puppet},
  journal    = {SIGPLAN Not.},
  year       = {2016},
  volume     = {51},
  number     = {6},
  pages      = {416--430},
  month      = jun,
  acmid      = {2908083},
  address    = {New York, NY, USA},
  doi        = {10.1145/2980983.2908083},
  groups     = {Scopus, excluidos},
  issn       = {0362-1340},
  issue_date = {June 2016},
  keywords   = {Puppet, domain-specific languages, system configuration, verification},
  numpages   = {15},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2980983.2908083},
}

@InProceedings{Shambaugh:2016:RCV:2908080.2908083,
  author        = {Shambaugh, Rian and Weiss, Aaron and Guha, Arjun},
  title         = {Rehearsal: A Configuration Verification Tool for Puppet},
  booktitle     = {Proceedings of the 37th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year          = {2016},
  series        = {PLDI '16},
  pages         = {416--430},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2908083},
  doi           = {10.1145/2908080.2908083},
  groups        = {Duplicados},
  isbn          = {978-1-4503-4261-2},
  keywords      = {Puppet, domain-specific languages, system configuration, verification, rank3},
  location      = {Santa Barbara, CA, USA},
  numpages      = {15},
  url           = {http://doi.acm.org/10.1145/2908080.2908083},
}

@Article{Polozov:2015:FFI:2858965.2814310,
  author     = {Polozov, Oleksandr and Gulwani, Sumit},
  title      = {FlashMeta: A Framework for Inductive Program Synthesis},
  journal    = {SIGPLAN Not.},
  year       = {2015},
  volume     = {50},
  number     = {10},
  pages      = {107--126},
  month      = oct,
  acmid      = {2814310},
  address    = {New York, NY, USA},
  doi        = {10.1145/2858965.2814310},
  groups     = {Scopus, excluidos},
  issn       = {0362-1340},
  issue_date = {October 2015},
  keywords   = {Inductive program synthesis, deductive inference, domain-specific languages, frameworks, programming by examples, search-based synthesis},
  numpages   = {20},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2858965.2814310},
}

@InProceedings{Polozov:2015:FFI:2814270.2814310,
  author        = {Polozov, Oleksandr and Gulwani, Sumit},
  title         = {FlashMeta: A Framework for Inductive Program Synthesis},
  booktitle     = {Proceedings of the 2015 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  year          = {2015},
  series        = {OOPSLA 2015},
  pages         = {107--126},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2814310},
  doi           = {10.1145/2814270.2814310},
  groups        = {Duplicados},
  isbn          = {978-1-4503-3689-5},
  keywords      = {Inductive program synthesis, deductive inference, domain-specific languages, frameworks, programming by examples, search-based synthesis, rank3},
  location      = {Pittsburgh, PA, USA},
  numpages      = {20},
  url           = {http://doi.acm.org/10.1145/2814270.2814310},
}

@InProceedings{Simic:2012:PTT:2254129.2254160,
  author    = {Simic, Hrvoje},
  title     = {Predicate Trees: A Tool for Descriptive Subgraph Extraction},
  booktitle = {Proceedings of the 2Nd International Conference on Web Intelligence, Mining and Semantics},
  year      = {2012},
  series    = {WIMS '12},
  pages     = {24:1--24:9},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2254160},
  articleno = {24},
  doi       = {10.1145/2254129.2254160},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-0915-8},
  keywords  = {RDF data access, SPARQL, linked data, scala, subgraph extraction},
  location  = {Craiova, Romania},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2254129.2254160},
}

@Article{Dinkelaker:2013:ICS:2459520.2459794,
  author     = {Dinkelaker, Tom and Eichberg, Michael and Mezini, Mira},
  title      = {Incremental Concrete Syntax for Embedded Languages with Support for Separate Compilation},
  journal    = {Sci. Comput. Program.},
  year       = {2013},
  volume     = {78},
  number     = {6},
  pages      = {615--632},
  month      = jun,
  acmid      = {2459794},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2012.12.002},
  groups     = {ScienceDirect, Compendex, Scopus, excluidos},
  issn       = {0167-6423},
  issue_date = {June, 2013},
  keywords   = {Domain-specific languages, Generic pre-processor, Language design and implementation, Language embeddings, Program transformation},
  numpages   = {18},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2012.12.002},
}

@InProceedings{Lopez-Fernandez:2015:EVD:2814251.2814256,
  author    = {L\'{o}pez-Fern\'{a}ndez, Jes\'{u}s J. and Guerra, Esther and de Lara, Juan},
  title     = {Example-based Validation of Domain-specific Visual Languages},
  booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2015},
  series    = {SLE 2015},
  pages     = {101--112},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2814256},
  doi       = {10.1145/2814251.2814256},
  groups    = {Compendex, Scopus, Inclusos},
  isbn      = {978-1-4503-3686-4},
  keywords  = {Domain-Specific Visual Languages, Meta-model Validation and Verification, Meta-modelling},
  location  = {Pittsburgh, PA, USA},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2814251.2814256},
}

@InProceedings{Goldschmidt:2014:VAT:2631675.2631679,
  author    = {Goldschmidt, Thomas},
  title     = {A View-based Approach Towards an Engineering Platform for Industrial Automation in the Cloud},
  booktitle = {Proceedings of the 2Nd Workshop on View-Based, Aspect-Oriented and Orthographic Software Modelling},
  year      = {2014},
  series    = {VAO '14},
  pages     = {39:39--39:42},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2631679},
  articleno = {39},
  doi       = {10.1145/2631675.2631679},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2900-2},
  keywords  = {Cloud Computing, Domain-Specific Languages, Industrial Automation, Language Workbenches},
  location  = {York, United Kingdom},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2631675.2631679},
}

@InProceedings{Beaugnon:2014:VVO:2597809.2597818,
  author    = {Beaugnon, Ulysse and Kravets, Alexey and van Haastregt, Sven and Baghdadi, Riyadh and Tweed, David and Absar, Javed and Lokhmotov, Anton},
  title     = {VOBLA: A Vehicle for Optimized Basic Linear Algebra},
  booktitle = {Proceedings of the 2014 SIGPLAN/SIGBED Conference on Languages, Compilers and Tools for Embedded Systems},
  year      = {2014},
  series    = {LCTES '14},
  pages     = {115--124},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2597818},
  doi       = {10.1145/2597809.2597818},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-2877-7},
  keywords  = {blas, domain-specific language, gpu, linear algebra, parallel, sparse matrix},
  location  = {Edinburgh, United Kingdom},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2597809.2597818},
}

@Article{Beaugnon:2014:VVO:2666357.2597818,
  author        = {Beaugnon, Ulysse and Kravets, Alexey and van Haastregt, Sven and Baghdadi, Riyadh and Tweed, David and Absar, Javed and Lokhmotov, Anton},
  title         = {VOBLA: A Vehicle for Optimized Basic Linear Algebra},
  journal       = {SIGPLAN Not.},
  year          = {2014},
  volume        = {49},
  number        = {5},
  pages         = {115--124},
  month         = jun,
  __markedentry = {[Neto:5]},
  acmid         = {2597818},
  address       = {New York, NY, USA},
  doi           = {10.1145/2666357.2597818},
  groups        = {Duplicados},
  issn          = {0362-1340},
  issue_date    = {May 2014},
  keywords      = {blas, domain-specific language, gpu, linear algebra, parallel, sparse matrix, rank3},
  numpages      = {10},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2666357.2597818},
}

@InProceedings{Cappiello:2012:MEU:2187980.2188083,
  author    = {Cappiello, Cinzia and Matera, Maristella and Picozzi, Matteo and Caio, Alessandro and Guevara, Mariano Tomas},
  title     = {MobiMash: End User Development for Mobile Mashups},
  booktitle = {Proceedings of the 21st International Conference on World Wide Web},
  year      = {2012},
  series    = {WWW '12 Companion},
  pages     = {473--474},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2188083},
  doi       = {10.1145/2187980.2188083},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-1230-1},
  keywords  = {data fusion, data integration, end-user development, mobile mashups, model-based mashups},
  location  = {Lyon, France},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2187980.2188083},
}

@InProceedings{Urban:2013:IJJ:2500828.2500849,
  author    = {Urban, Bernhard and Steinlechner, Harald},
  title     = {Implementing a Java JIT Compiler in Haskell: Case Study},
  booktitle = {Proceedings of the 2013 International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools},
  year      = {2013},
  series    = {PPPJ '13},
  pages     = {177--180},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2500849},
  doi       = {10.1145/2500828.2500849},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-2111-2},
  keywords  = {Haskell, Java, code generation, data-flow analysis, intermediate representation, virtual machine},
  location  = {Stuttgart, Germany},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2500828.2500849},
}

@InProceedings{Klarl:2015:HES:2951604.2951610,
  author    = {Klarl, Annabelle},
  title     = {From Helena Ensemble Specifications to Promela Verification Models},
  booktitle = {Proceedings of the 22Nd International Symposium on Model Checking Software - Volume 9232},
  year      = {2015},
  series    = {SPIN 2015},
  pages     = {39--45},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2951610},
  doi       = {10.1007/978-3-319-23404-5_4},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-319-23403-8},
  location  = {Stellenbosch, South Africa},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1007/978-3-319-23404-5_4},
}

@InProceedings{Tyugu:2014:CSC:2971130.2971150,
  author    = {Tyugu, Enn and Harf, Mait and Grigorenko, Pavel},
  title     = {A Case Study of Combining Compositional and Object-oriented Software Development},
  booktitle = {Proceedings of the 2Nd International Conference on Model-Driven Engineering and Software Development},
  year      = {2014},
  series    = {MODELSWARD 2014},
  pages     = {201--208},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2971150},
  doi       = {10.5220/0004698502010208},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-989-758-007-9},
  keywords  = {Domain-specific modeling, compositional software design., model driven software development, structural synthesis of programs},
  location  = {Lisbon, Portugal},
  numpages  = {8},
  url       = {http://dx.doi.org/10.5220/0004698502010208},
}

@InProceedings{Karakoidas:2015:GBJ:2865656.2866113,
  author    = {Karakoidas, Vassilios and Mitropoulos, Dimitrios and Louridas, Panos and Gousios, Georgios and Spinellis, Diomidis},
  title     = {Generating the Blueprints of the Java Ecosystem},
  booktitle = {Proceedings of the 2015 IEEE/ACM 12th Working Conference on Mining Software Repositories},
  year      = {2015},
  series    = {MSR '15},
  pages     = {510--513},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2866113},
  doi       = {10.1109/MSR.2015.76},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-0-7695-5594-2},
  keywords  = {Java, Software Metrics, Chidamber and Kemerer, Maven},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1109/MSR.2015.76},
}

@InProceedings{Karakoidas:2015:GBJ:2820518.2820600,
  author        = {Karakoidas, Vassilios and Mitropoulos, Dimitris and Louridas, Panos and Gousios, Georgios and Spinellis, Diomidis},
  title         = {Generating the Blueprints of the Java Ecosystem},
  booktitle     = {Proceedings of the 12th Working Conference on Mining Software Repositories},
  year          = {2015},
  series        = {MSR '15},
  pages         = {510--513},
  address       = {Piscataway, NJ, USA},
  publisher     = {IEEE Press},
  __markedentry = {[Neto:5]},
  acmid         = {2820600},
  groups        = {Duplicados},
  keywords      = {rank3},
  location      = {Florence, Italy},
  numpages      = {4},
  url           = {http://dl.acm.org/citation.cfm?id=2820518.2820600},
}

@InProceedings{Kuhn:2016:AOC:2934466.2934470,
  author    = {K\"{u}hn, Thomas and Cazzola, Walter},
  title     = {Apples and Oranges: Comparing Top-down and Bottom-up Language Product Lines},
  booktitle = {Proceedings of the 20th International Systems and Software Product Line Conference},
  year      = {2016},
  series    = {SPLC '16},
  pages     = {50--59},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2934470},
  doi       = {10.1145/2934466.2934470},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-4050-2},
  location  = {Beijing, China},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2934466.2934470},
}

@InProceedings{Sakellariou:2015:FMA:2980992.2981001,
  author    = {Sakellariou, Ilias and Dranidis, Dimitris and Ntika, Marina and Kefalas, Petros},
  title     = {From Formal Modelling to Agent Simulation Execution and Testing},
  booktitle = {Proceedings of the International Conference on Agents and Artificial Intelligence - Volume 1},
  year      = {2015},
  series    = {ICAART 2015},
  pages     = {87--98},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2981001},
  doi       = {10.5220/0005222200870098},
  groups    = {Scopus, excluidos},
  isbn      = {978-989-758-073-4},
  keywords  = {Agent Based Simulation, Formal Methods, NetLogo, Test Case Generation.},
  location  = {Lisbon, Portugal},
  numpages  = {12},
  url       = {http://dx.doi.org/10.5220/0005222200870098},
}

@InProceedings{Bezirgiannis:2016:HPH:3017327.3017339,
  author    = {Bezirgiannis, Nikolaos and Prasetya, I. S. W. B. and Sakellariou, Ilias},
  title     = {HLogo: A Parallel Haskell Variant of NetLogo},
  booktitle = {Proceedings of the 6th International Conference on Simulation and Modeling Methodologies, Technologies and Applications},
  year      = {2016},
  series    = {SIMULTECH 2016},
  pages     = {119--128},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {3017339},
  doi       = {10.5220/0005983501190128},
  groups    = {Scopus, excluidos},
  isbn      = {978-989-758-199-1},
  keywords  = {Agent-based Modeling, Agent-based Simulation, Concurrent Agent-based Simulation, Concurrent NetLogo.},
  location  = {Lisbon, Portugal},
  numpages  = {10},
  url       = {https://doi.org/10.5220/0005983501190128},
}

@InProceedings{Kilgo:2012:VML:2428224.2428242,
  author    = {Kilgo, Paul and Syriani, Eugene and Anderson, Monica},
  title     = {A Visual Modeling Language for RDIS and ROS Nodes Using AToM3},
  booktitle = {Proceedings of the Third International Conference on Simulation, Modeling, and Programming for Autonomous Robots},
  year      = {2012},
  series    = {SIMPAR'12},
  pages     = {125--136},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2428242},
  doi       = {10.1007/978-3-642-34327-8_14},
  groups    = {ACM, Inclusos},
  isbn      = {978-3-642-34326-1},
  location  = {Tsukuba, Japan},
  numpages  = {12},
  url       = {http://dx.doi.org/10.1007/978-3-642-34327-8_14},
}

@InProceedings{Kalnins:2016:MSG:2976767.2976779,
  author    = {Kalnins, Audris and Barzdins, Janis},
  title     = {Metamodel Specialization for Graphical Modeling Language Support},
  booktitle = {Proceedings of the ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems},
  year      = {2016},
  series    = {MODELS '16},
  pages     = {103--112},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2976779},
  doi       = {10.1145/2976767.2976779},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-4321-3},
  keywords  = {graphical DSL, graphical editors, graphical syntax definition, metamodel specialization, metamodeling},
  location  = {Saint-malo, France},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2976767.2976779},
}

@Article{Gore:2014:CCM:2594460.2567897,
  author     = {Gore, Ross and Diallo, Saikou and Padilla, Jose},
  title      = {ConceVE: Conceptual Modeling and Formal Validation for Everyone},
  journal    = {ACM Trans. Model. Comput. Simul.},
  year       = {2014},
  volume     = {24},
  number     = {2},
  pages      = {12:1--12:17},
  month      = feb,
  acmid      = {2567897},
  address    = {New York, NY, USA},
  articleno  = {12},
  doi        = {10.1145/2567897},
  groups     = {Scopus, excluidos},
  issn       = {1049-3301},
  issue_date = {February 2014},
  keywords   = {M\&S formalism, Verification, conceptual modeling, interoperability, validity},
  numpages   = {17},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2567897},
}

@Article{Molina:2013:MDV:2486215.2486567,
  author     = {Molina, Ana I. and Gallardo, Jes\'{u}S and Redondo, Miguel A. and Ortega, Manuel and Giraldo, William J.},
  title      = {Metamodel-driven Definition of a Visual Modeling Language for Specifying Interactive Groupware Applications: An Empirical Study},
  journal    = {J. Syst. Softw.},
  year       = {2013},
  volume     = {86},
  number     = {7},
  pages      = {1772--1789},
  month      = jul,
  acmid      = {2486567},
  address    = {New York, NY, USA},
  doi        = {10.1016/j.jss.2012.07.049},
  groups     = {ScienceDirect, Compendex, Scopus, excluidos},
  issn       = {0164-1212},
  issue_date = {July, 2013},
  keywords   = {DSL, Groupware design, Interaction Design, MDE, Metamodel},
  numpages   = {18},
  publisher  = {Elsevier Science Inc.},
  url        = {http://dx.doi.org/10.1016/j.jss.2012.07.049},
}

@Article{CanovasIzquierdo:2014:EMS:2617318.2617337,
  author     = {C\'{a}novas Izquierdo, Javier Luis and Garc\'{\i}a Molina, Jes\'{u}s},
  title      = {Extracting Models from Source Code in Software Modernization},
  journal    = {Softw. Syst. Model.},
  year       = {2014},
  volume     = {13},
  number     = {2},
  pages      = {713--734},
  month      = may,
  acmid      = {2617337},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-012-0270-z},
  groups     = {Scopus, excluidos},
  issn       = {1619-1366},
  issue_date = {May 2014},
  keywords   = {Domain-specific languages, Model-driven engineering, Model-driven software development, Model-driven software modernization, Software modernization},
  numpages   = {22},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-012-0270-z},
}

@InProceedings{Voelter:2015:TIS:2846696.2846698,
  author    = {Voelter, Markus and Molotnikov, Zaur and Kolb, Bernd},
  title     = {Towards Improving Software Security Using Language Engineering and Mbeddr C},
  booktitle = {Proceedings of the Workshop on Domain-Specific Modeling},
  year      = {2015},
  series    = {DSM 2015},
  pages     = {55--62},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2846698},
  doi       = {10.1145/2846696.2846698},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-3903-2},
  keywords  = {Domain-Specific Languages, IDEs, Language Extensions, Modeling, Software Security},
  location  = {Pittsburgh, PA, USA},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2846696.2846698},
}

@Book{Muhlbach:2015:RAD:2821227,
  title     = {Reconfigurable Architectures and Design Automation Tools for Application-Level Network Security},
  publisher = {Logos Verlag},
  year      = {2015},
  author    = {M\"{u}hlbach, Sascha},
  address   = {Berlin},
  groups    = {ACM, excluidos},
  isbn      = {3832539557, 9783832539559},
}

@InProceedings{Mayer:2015:EAU:2745802.2745805,
  author    = {Mayer, Philip and Bauer, Alexander},
  title     = {An Empirical Analysis of the Utilization of Multiple Programming Languages in Open Source Projects},
  booktitle = {Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering},
  year      = {2015},
  series    = {EASE '15},
  pages     = {4:1--4:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2745805},
  articleno = {4},
  doi       = {10.1145/2745802.2745805},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-3350-4},
  location  = {Nanjing, China},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2745802.2745805},
}

@InProceedings{Ribeiro:2012:SCL:2477172.2477453,
  author    = {Ribeiro, Andre and da Silva, Alberto Rodrigues},
  title     = {Survey on Cross-Platforms and Languages for Mobile Apps},
  booktitle = {Proceedings of the 2012 Eighth International Conference on the Quality of Information and Communications Technology},
  year      = {2012},
  series    = {QUATIC '12},
  pages     = {255--260},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2477453},
  doi       = {10.1109/QUATIC.2012.56},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-0-7695-4777-0},
  keywords  = {Application, Cross-platform, Domain Specific Language, Mobile, Model-driven development},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/QUATIC.2012.56},
}

@InProceedings{Scholz:2015:DST:2876975.2876979,
  author        = {Scholz, Bernhard and Vorobyov, Kostyantyn and Krishnan, Padmanabhan and Westmann, Till},
  title         = {A Datalog Source-to-Source Translator for Static Program Analysis: An Experience Report},
  booktitle     = {Proceedings of the 2015 24th Australasian Software Engineering Conference (ASWEC)},
  year          = {2015},
  series        = {ASWEC '15},
  pages         = {28--37},
  address       = {Washington, DC, USA},
  publisher     = {IEEE Computer Society},
  __markedentry = {[Neto:5]},
  acmid         = {2876979},
  doi           = {10.1109/ASWEC.2015.15},
  groups        = {IEEEDSML, IEEEDSL, Duplicados},
  isbn          = {978-1-4673-9390-4},
  keywords      = {rank3},
  numpages      = {10},
  url           = {http://dx.doi.org/10.1109/ASWEC.2015.15},
}

@Article{Devedzic:2012:IOP:2334811.2334876,
  author     = {Devedzic, Dragan Djuric and Vladan},
  title      = {Incorporating the Ontology Paradigm Into Software Engineering: Enhancing Domain-Driven Programming in Clojure/Java},
  journal    = {Trans. Sys. Man Cyber Part C},
  year       = {2012},
  volume     = {42},
  number     = {1},
  pages      = {3--14},
  month      = jan,
  acmid      = {2334876},
  address    = {Piscataway, NJ, USA},
  doi        = {10.1109/TSMCC.2011.2140316},
  groups     = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  issn       = {1094-6977},
  issue_date = {January 2012},
  numpages   = {12},
  publisher  = {IEEE Press},
  url        = {http://dx.doi.org/10.1109/TSMCC.2011.2140316},
}

@InProceedings{Cledou:2014:VFS:2691195.2691288,
  author    = {Cledou, Guillermina},
  title     = {A Virtual Factory for Smart City Service Integration},
  booktitle = {Proceedings of the 8th International Conference on Theory and Practice of Electronic Governance},
  year      = {2014},
  series    = {ICEGOV '14},
  pages     = {536--539},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2691288},
  doi       = {10.1145/2691195.2691288},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-60558-611-3},
  keywords  = {domain specific language, e-government, formal methods, service integration, smart cities, software product line, workflows},
  location  = {Guimaraes, Portugal},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2691195.2691288},
}

@Article{Sohr:2012:CTA:2365358.2365402,
  author     = {Sohr, Karsten and Kuhlmann, Mirco and Gogolla, Martin and Hu, Hongxin and Ahn, Gail-Joon},
  title      = {Comprehensive Two-level Analysis of Role-based Delegation and Revocation Policies with UML and OCL},
  journal    = {Inf. Softw. Technol.},
  year       = {2012},
  volume     = {54},
  number     = {12},
  pages      = {1396--1417},
  month      = dec,
  acmid      = {2365402},
  address    = {Newton, MA, USA},
  doi        = {10.1016/j.infsof.2012.06.008},
  groups     = {Scopus, ScienceDirect, Compendex, excluidos},
  issn       = {0950-5849},
  issue_date = {December, 2012},
  keywords   = {Delegation, OCL, RBAC, Revocation, UML},
  numpages   = {22},
  publisher  = {Butterworth-Heinemann},
  url        = {http://dx.doi.org/10.1016/j.infsof.2012.06.008},
}

@InProceedings{Ratiu:2012:LEE:2663689.2663692,
  author    = {Ratiu, Daniel and Schaetz, Bernhard and Voelter, Markus and Kolb, Bernd},
  title     = {Language Engineering As an Enabler for Incrementally Defined Formal Analyses},
  booktitle = {Proceedings of the First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches},
  year      = {2012},
  series    = {FormSERA '12},
  pages     = {9--15},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2663692},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-1-4673-1906-5},
  location  = {Zurich, Switzerland},
  numpages  = {7},
  url       = {http://dl.acm.org/citation.cfm?id=2663689.2663692},
}

@InProceedings{Gunter:2012:IMM:2247596.2247658,
  author    = {G\"{u}nter, Manuel},
  title     = {Introducing MapLan to Map Banking Survey Data into a Time Series Database},
  booktitle = {Proceedings of the 15th International Conference on Extending Database Technology},
  year      = {2012},
  series    = {EDBT '12},
  pages     = {528--533},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2247658},
  doi       = {10.1145/2247596.2247658},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-0790-1},
  location  = {Berlin, Germany},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2247596.2247658},
}

@Article{Martini:2016:FDA:3010164.3010567,
  author        = {Martini, Ricardo Giuliani and Librelotto, Giovani Rubert and Henriques, Pedro Rangel},
  title         = {Formal Description and Automatic Generation of Learning Spaces Based on Ontologies},
  journal       = {Procedia Comput. Sci.},
  year          = {2016},
  volume        = {96},
  number        = {C},
  pages         = {235--244},
  month         = oct,
  __markedentry = {[Neto:5]},
  acmid         = {3010567},
  address       = {Amsterdam, The Netherlands, The Netherlands},
  doi           = {10.1016/j.procs.2016.08.136},
  groups        = {ScienceDirect, Scopus, Duplicados},
  issn          = {1877-0509},
  issue_date    = {October 2016},
  keywords      = {Cultural Heritage, Domain Specific Language, Exhibition Rooms, Learning Spaces, Ontology, rank3},
  numpages      = {10},
  publisher     = {Elsevier Science Publishers B. V.},
  url           = {http://dx.doi.org/10.1016/j.procs.2016.08.136},
}

@InProceedings{Ma:2016:JTA:2847263.2847341,
  author    = {Ma, Sen and Aklah, Zeyad and Andrews, David},
  title     = {Just In Time Assembly of Accelerators},
  booktitle = {Proceedings of the 2016 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
  year      = {2016},
  series    = {FPGA '16},
  pages     = {173--178},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2847341},
  doi       = {10.1145/2847263.2847341},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-3856-1},
  keywords  = {fpga, overlay, fpga;overlay;just-in-time hardware compilation, just in time, partial reconfiguration},
  location  = {Monterey, California, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2847263.2847341},
}

@InProceedings{Semerath:2016:IIM:2964602.2964611,
  author        = {Semer\'{a}th, Oszk\'{a}r and V\"{o}r\"{o}s, Andr\'{a}s and Varr\'{o}, D\'{a}niel},
  title         = {Iterative and Incremental Model Generation by\'{z}Logic Solvers},
  booktitle     = {Proceedings of the 19th International Conference on Fundamental Approaches to Software Engineering - Volume 9633},
  year          = {2016},
  pages         = {87--103},
  address       = {New York, NY, USA},
  publisher     = {Springer-Verlag New York, Inc.},
  __markedentry = {[Neto:5]},
  acmid         = {2964611},
  doi           = {10.1007/978-3-662-49665-7_6},
  groups        = {ACM, Duplicados},
  isbn          = {978-3-662-49664-0},
  keywords      = {Domain-specific languages, Logic solvers, Model generation, rank3},
  numpages      = {17},
  url           = {http://dx.doi.org/10.1007/978-3-662-49665-7_6},
}

@InProceedings{Beckmann:2015:IEP:2954852.2954877,
  author    = {Beckmann, Kai},
  title     = {Integrating Existing Proprietary System Models into a Model-Driven Test Process for an Industrial Automation Scenario},
  booktitle = {Proceedings of the 3rd International Conference on Model-Driven Engineering and Software Development},
  year      = {2015},
  series    = {MODELSWARD 2015},
  pages     = {255--262},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2954877},
  doi       = {10.5220/0005240302550262},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-989-758-083-3},
  keywords  = {DSL, MDSD, MDT, Metamodelling, Model Transformation, Model-Driven Testing, Testing},
  location  = {ESEO, Angers, Loire Valley, France},
  numpages  = {8},
  url       = {http://dx.doi.org/10.5220/0005240302550262},
}

@InProceedings{Burnim:2012:CTC:2342788.2342804,
  author    = {Burnim, Jacob and Elmas, Tayfun and Necula, George and Sen, Koushik},
  title     = {CONCURRIT: Testing Concurrent Programs with Programmable State-space Exploration},
  booktitle = {Proceedings of the 4th USENIX Conference on Hot Topics in Parallelism},
  year      = {2012},
  series    = {HotPar'12},
  pages     = {16--16},
  address   = {Berkeley, CA, USA},
  publisher = {USENIX Association},
  acmid     = {2342804},
  groups    = {ACM, excluidos},
  location  = {Berkeley, CA},
  numpages  = {1},
  url       = {http://dl.acm.org/citation.cfm?id=2342788.2342804},
}

@Article{Yang:2016:HTM:2876473.2876477,
  author     = {Yang, Fan and Li, Jinfeng and Cheng, James},
  title      = {Husky: Towards a More Efficient and Expressive Distributed Computing Framework},
  journal    = {Proc. VLDB Endow.},
  year       = {2016},
  volume     = {9},
  number     = {5},
  pages      = {420--431},
  month      = jan,
  acmid      = {2876477},
  doi        = {10.14778/2876473.2876477},
  groups     = {Scopus, excluidos},
  issn       = {2150-8097},
  issue_date = {January 2016},
  numpages   = {12},
  publisher  = {VLDB Endowment},
  url        = {http://dx.doi.org/10.14778/2876473.2876477},
}

@InProceedings{Trask:2016:LMD:2934466.2956654,
  author    = {Trask, Bruce and Roman, Angel},
  title     = {Leveraging Model Driven Engineering in Software Product Line Architectures},
  booktitle = {Proceedings of the 20th International Systems and Software Product Line Conference},
  year      = {2016},
  series    = {SPLC '16},
  pages     = {310--310},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2956654},
  doi       = {10.1145/2934466.2956654},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-4050-2},
  location  = {Beijing, China},
  numpages  = {1},
  url       = {http://doi.acm.org/10.1145/2934466.2956654},
}

@InProceedings{Berger:2014:SAI:2688447.2688455,
  author    = {Berger, Christian},
  title     = {SenseDSL: Automating the Integration of Sensors for MCU-Based Robots and Cyber-Physical Systems},
  booktitle = {Proceedings of the 14th Workshop on Domain-Specific Modeling},
  year      = {2014},
  series    = {DSM '14},
  pages     = {41--46},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2688455},
  doi       = {10.1145/2688447.2688455},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-2156-3},
  keywords  = {code generation, csp, cyber-physical systems, verification},
  location  = {Portland, Oregon, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2688447.2688455},
}

@InProceedings{James:2013:VSP:2734948.2734966,
  author        = {James, Philip and Moller, Faron and Nguyen, Hoang Nga and Roggenbach, Markus and Schneider, Steve and Treharne, Helen and Trumble, Matthew and Williams, David},
  title         = {Verification of Scheme Plans Using CSP\$\$, , \$\$, , B},
  booktitle     = {Revised Selected Papers of the SEFM 2013 Collocated Workshops on Software Engineering and Formal Methods - Volume 8368},
  year          = {2014},
  pages         = {189--204},
  address       = {New York, NY, USA},
  publisher     = {Springer-Verlag New York, Inc.},
  __markedentry = {[Neto:5]},
  acmid         = {2734966},
  doi           = {10.1007/978-3-319-05032-4_15},
  groups        = {Scopus, Compendex, Duplicados},
  isbn          = {978-3-319-05031-7},
  keywords      = {rank3},
  numpages      = {16},
  url           = {http://dx.doi.org/10.1007/978-3-319-05032-4_15},
}

@InProceedings{Pike:2012:ERD:2364527.2364553,
  author    = {Pike, Lee and Wegmann, Nis and Niller, Sebastian and Goodloe, Alwyn},
  title     = {Experience Report: A Do-it-yourself High-assurance Compiler},
  booktitle = {Proceedings of the 17th ACM SIGPLAN International Conference on Functional Programming},
  year      = {2012},
  series    = {ICFP '12},
  pages     = {335--340},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2364553},
  doi       = {10.1145/2364527.2364553},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-1054-3},
  keywords  = {compiler, embedded domain-specific language, verification},
  location  = {Copenhagen, Denmark},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2364527.2364553},
}

@Article{Pike:2012:ERD:2398856.2364553,
  author        = {Pike, Lee and Wegmann, Nis and Niller, Sebastian and Goodloe, Alwyn},
  title         = {Experience Report: A Do-it-yourself High-assurance Compiler},
  journal       = {SIGPLAN Not.},
  year          = {2012},
  volume        = {47},
  number        = {9},
  pages         = {335--340},
  month         = sep,
  __markedentry = {[Neto:5]},
  acmid         = {2364553},
  address       = {New York, NY, USA},
  doi           = {10.1145/2398856.2364553},
  groups        = {Duplicados},
  issn          = {0362-1340},
  issue_date    = {September 2012},
  keywords      = {compiler, embedded domain-specific language, verification, rank3},
  numpages      = {6},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2398856.2364553},
}

@InProceedings{Ma:2016:RTI:2971808.2972016,
  author    = {Ma, Sen and Aklah, Zeyad and Andrews, David},
  title     = {Run Time Interpretation for Creating Custom Accelerators},
  booktitle = {Proceedings of the 2016 Conference on Design, Automation \& Test in Europe},
  year      = {2016},
  series    = {DATE '16},
  pages     = {900--905},
  address   = {San Jose, CA, USA},
  publisher = {EDA Consortium},
  acmid     = {2972016},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-3-9815370-6-2},
  location  = {Dresden, Germany},
  numpages  = {6},
  url       = {http://dl.acm.org/citation.cfm?id=2971808.2972016},
}

@InProceedings{Ferry:2014:CMA:2759989.2760048,
  author    = {Ferry, Nicolas and Song, Hui and Rossini, Alessandro and Chauvel, Franck and Solberg, Arnor},
  title     = {Cloud MF: Applying MDE to Tame the Complexity of Managing Multi-cloud Applications},
  booktitle = {Proceedings of the 2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing},
  year      = {2014},
  series    = {UCC '14},
  pages     = {269--277},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2760048},
  doi       = {10.1109/UCC.2014.36},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-1-4799-7881-6},
  keywords  = {Cloud computing, multi-cloud, Cloud ML, Model-driven engineering},
  numpages  = {9},
  url       = {http://dx.doi.org/10.1109/UCC.2014.36},
}

@InProceedings{Al-Sibahi:2016:SEH:2997364.2997382,
  author    = {Al-Sibahi, Ahmad Salim and Dimovski, Aleksandar S. and W\k{a}sowski, Andrzej},
  title     = {Symbolic Execution of High-level Transformations},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2016},
  series    = {SLE 2016},
  pages     = {207--220},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2997382},
  doi       = {10.1145/2997364.2997382},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4447-0},
  keywords  = {automated white-box test generation, model transformation, program transformation, symbolic execution},
  location  = {Amsterdam, Netherlands},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2997364.2997382},
}

@InCollection{Bache:2014:SEG:2813544.2813570,
  author    = {Bache, Emily and Bache, Geoffrey},
  title     = {Agile Processes in Software Engineering and Extreme Programming},
  publisher = {Springer-Verlag},
  year      = {2014},
  editor    = {Cantone, Giovanni and Marchesi, Michele},
  chapter   = {Specification by Example with GUI Tests - How Could That Work?},
  pages     = {320--326},
  address   = {Berlin, Heidelberg},
  acmid     = {2813570},
  groups    = {Compendex, excluidos},
  isbn      = {978-3-642-20677-1},
  keywords  = {ATDD, GUI testing, capture-replay testing, specification by example},
  numpages  = {7},
  url       = {http://dl.acm.org/citation.cfm?id=2813544.2813570},
}

@InProceedings{Efendioglu:2015:MMD:2837185.2837206,
  author    = {Efendioglu, Nesat and Woitsch, Robert and Karagiannis, Dimitris},
  title     = {Modelling Method Design: A Model-driven Approach},
  booktitle = {Proceedings of the 17th International Conference on Information Integration and Web-based Applications \& Services},
  year      = {2015},
  series    = {iiWAS '15},
  pages     = {59:1--59:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2837206},
  articleno = {59},
  doi       = {10.1145/2837185.2837206},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-3491-4},
  keywords  = {meta-modelling, modelling method design, modelling method engineering},
  location  = {Brussels, Belgium},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2837185.2837206},
}

@Article{Iglberger:2012:ETR:2340033.2340066,
  author     = {Iglberger, Klaus and Hager, Georg and Treibig, Jan and R\"{u}de, Ulrich},
  title      = {Expression Templates Revisited: A Performance Analysis of Current Methodologies},
  journal    = {SIAM J. Sci. Comput.},
  year       = {2012},
  volume     = {34},
  number     = {2},
  pages      = {42--69},
  month      = mar,
  acmid      = {2340066},
  address    = {Philadelphia, PA, USA},
  doi        = {10.1137/110830125},
  groups     = {Compendex, Scopus, excluidos},
  issn       = {1064-8275},
  issue_date = {April 2012},
  keywords   = {Blaze, Blitz++, Boost, Eigen3, MTL4, expression templates, high performance programming, linear algebra, performance optimization, uBLAS},
  numpages   = {28},
  publisher  = {Society for Industrial and Applied Mathematics},
  url        = {http://dx.doi.org/10.1137/110830125},
}

@InProceedings{Araujo:2013:AMB:2480362.2480596,
  author    = {Ara\'{u}jo, Jo\~{a}o and Goul\~{a}o, Miguel and Moreira, Ana and Sim\~{a}o, In\^{e}s and Amaral, Vasco and Baniassad, Elisa},
  title     = {Advanced Modularity for Building SPL Feature Models: A Model-driven Approach},
  booktitle = {Proceedings of the 28th Annual ACM Symposium on Applied Computing},
  year      = {2013},
  series    = {SAC '13},
  pages     = {1246--1253},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2480596},
  doi       = {10.1145/2480362.2480596},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-1656-9},
  keywords  = {advanced modularity, model-driven development, software product lines},
  location  = {Coimbra, Portugal},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2480362.2480596},
}

@InProceedings{Kurpick:2012:MCS:2491617.2491619,
  author    = {Kurpick, Thomas and Pinkernell, Claas and Look, Markus and Rumpe, Bernhard},
  title     = {Modeling Cyber-physical Systems: Model-driven Specification of Energy Efficient Buildings},
  booktitle = {Proceedings of the Modelling of the Physical World Workshop},
  year      = {2012},
  series    = {MOTPW '12},
  pages     = {2:1--2:6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2491619},
  articleno = {2},
  doi       = {10.1145/2491617.2491619},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-1808-2},
  keywords  = {CPS, DSL, UML, energy, energy-efficiency, model-driven, modeling, specification},
  location  = {Innsbruck, Austria},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2491617.2491619},
}

@Article{Zhou:2014:AWT:2659118.2659136,
  author     = {Zhou, Jingang and Yin, Kun},
  title      = {Automated Web Testing Based on Textual-visual UI Patterns: The UTF Approach},
  journal    = {SIGSOFT Softw. Eng. Notes},
  year       = {2014},
  volume     = {39},
  number     = {5},
  pages      = {1--6},
  month      = sep,
  acmid      = {2659136},
  address    = {New York, NY, USA},
  doi        = {10.1145/2659118.2659136},
  groups     = {ACM, excluidos},
  issn       = {0163-5948},
  issue_date = {September 2014},
  keywords   = {automated testing, domain-specific language, user-interface pattern, web application},
  numpages   = {6},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2659118.2659136},
}

@InProceedings{Rath:2012:DFE:2352640.2352650,
  author    = {R\'{a}th, Istv\'{a}n and Heged\"{u}s, \'{A}bel and Varr\'{o}, D\'{a}niel},
  title     = {Derived Features for EMF by Integrating Advanced Model Queries},
  booktitle = {Proceedings of the 8th European Conference on Modelling Foundations and Applications},
  year      = {2012},
  series    = {ECMFA'12},
  pages     = {102--117},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2352650},
  doi       = {10.1007/978-3-642-31491-9_10},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-642-31490-2},
  location  = {Kgs. Lyngby, Denmark},
  numpages  = {16},
  url       = {http://dx.doi.org/10.1007/978-3-642-31491-9_10},
}

@InProceedings{Martins:2012:WPC:2954006.2954029,
  author    = {Martins, Pedro and Fernandes, Jo\~{a}o P. and Saraiva, Jo\~{a}o},
  title     = {A Web Portal for the Certification of Open Source Software},
  booktitle = {Revised Selected Papers of the SEFM 2012 Satellite Events on Information Technology and Open Source: Applications for Education, Innovation, and Sustainability - Volume 7991},
  year      = {2014},
  pages     = {244--260},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2954029},
  doi       = {10.1007/978-3-642-54338-8_20},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-642-54337-1},
  keywords  = {Open source software, Programming languages, Software analysis, Software certification},
  numpages  = {17},
  url       = {http://dx.doi.org/10.1007/978-3-642-54338-8_20},
}

@InProceedings{Wettinger:2014:DAG:2707679.2708088,
  author    = {Wettinger, Johannes and G\"{o}rlach, Katharina and Leymann, Frank},
  title     = {Deployment Aggregates - A Generic Deployment Automation Approach for Applications Operated in the Cloud},
  booktitle = {Proceedings of the 2014 IEEE 18th International Enterprise Distributed Object Computing Conference Workshops and Demonstrations},
  year      = {2014},
  series    = {EDOCW '14},
  pages     = {173--180},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2708088},
  doi       = {10.1109/EDOCW.2014.34},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4799-5467-4},
  keywords  = {Deployment, aggregate, topology, provisioning, operations, unification, orchestration, transformation, meta-model, Cloud computing, DevOps},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1109/EDOCW.2014.34},
}

@InProceedings{McCabe:2013:FDJ:2500828.2500837,
  author    = {McCabe, Frank and Sperber, Michael},
  title     = {Feel Different on the Java Platform: The Star Programming Language},
  booktitle = {Proceedings of the 2013 International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools},
  year      = {2013},
  series    = {PPPJ '13},
  pages     = {89--100},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2500837},
  doi       = {10.1145/2500828.2500837},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2111-2},
  keywords  = {actors, compilation, functional programming, multiparadigm programming},
  location  = {Stuttgart, Germany},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2500828.2500837},
}

@Article{Woithe:2015:TPA:2808704.2754971,
  author        = {Woithe, Hans Christian and Kremer, Ulrich},
  title         = {TrilobiteG: A Programming Architecture for Autonomous Underwater Vehicles},
  journal       = {SIGPLAN Not.},
  year          = {2015},
  volume        = {50},
  number        = {5},
  pages         = {14:1--14:10},
  month         = jun,
  __markedentry = {[Neto:5]},
  acmid         = {2754971},
  address       = {New York, NY, USA},
  articleno     = {14},
  doi           = {10.1145/2808704.2754971},
  groups        = {ACM, Duplicados},
  issn          = {0362-1340},
  issue_date    = {May 2015},
  keywords      = {rank3},
  numpages      = {10},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2808704.2754971},
}

@InProceedings{Woithe:2015:TPA:2670529.2754971,
  author    = {Woithe, Hans Christian and Kremer, Ulrich},
  title     = {TrilobiteG: A Programming Architecture for Autonomous Underwater Vehicles},
  booktitle = {Proceedings of the 16th ACM SIGPLAN/SIGBED Conference on Languages, Compilers and Tools for Embedded Systems 2015 CD-ROM},
  year      = {2015},
  series    = {LCTES'15},
  pages     = {14:1--14:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2754971},
  articleno = {14},
  doi       = {10.1145/2670529.2754971},
  groups    = {excluidos},
  isbn      = {978-1-4503-3257-6},
  location  = {Portland, OR, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2670529.2754971},
}

@InProceedings{Nabuco:2014:MTC:2723218.2723238,
  author    = {Nabuco, Miguel and Paiva, Ana C.},
  title     = {Model-Based Test Case Generation for Web Applications},
  booktitle = {Proceedings of the 14th International Conference on Computational Science and Its Applications \&\#151; ICCSA 2014 - Volume 8584},
  year      = {2014},
  pages     = {248--262},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2723238},
  doi       = {10.1007/978-3-319-09153-2_19},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-319-09152-5},
  numpages  = {15},
  url       = {http://dx.doi.org/10.1007/978-3-319-09153-2_19},
}

@InProceedings{Kim:2015:KVD:2789770.2789775,
  author    = {Kim, Hyojoon and Reich, Joshua and Gupta, Arpit and Shahbaz, Muhammad and Feamster, Nick and Clark, Russ},
  title     = {Kinetic: Verifiable Dynamic Network Control},
  booktitle = {Proceedings of the 12th USENIX Conference on Networked Systems Design and Implementation},
  year      = {2015},
  series    = {NSDI'15},
  pages     = {59--72},
  address   = {Berkeley, CA, USA},
  publisher = {USENIX Association},
  acmid     = {2789775},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-931971-218},
  location  = {Oakland, CA},
  numpages  = {14},
  url       = {http://dl.acm.org/citation.cfm?id=2789770.2789775},
}

@Article{Brambilla:2014:LME:2748146.2748462,
  author     = {Brambilla, Marco and Fraternali, Piero},
  title      = {Large-scale Model-Driven Engineering of Web User Interaction},
  journal    = {Sci. Comput. Program.},
  year       = {2014},
  volume     = {89},
  number     = {PB},
  pages      = {71--87},
  month      = sep,
  acmid      = {2748462},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2013.03.010},
  groups     = {Scopus, excluidos},
  issn       = {0167-6423},
  issue_date = {September 2014},
  keywords   = {BPM, Code generation, IFML, Model-Driven Engineering, Software engineering},
  numpages   = {17},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2013.03.010},
}

@InProceedings{Moser:2014:DMI:2593783.2593787,
  author    = {Moser, Michael and Pfeiffer, Michael and Pichler, Josef},
  title     = {Domain-specific Modeling in Industrial Automation: Challenges and Experiences},
  booktitle = {Proceedings of the 1st International Workshop on Modern Software Engineering Methods for Industrial Automation},
  year      = {2014},
  series    = {MoSEMInA 2014},
  pages     = {42--51},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2593787},
  doi       = {10.1145/2593783.2593787},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2851-7},
  keywords  = {Domain-specific modeling, domain-specific language, end-user programming, industrial automation, usability evaluation},
  location  = {Hyderabad, India},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2593783.2593787},
}

@Article{Klein:2012:RYR:2103621.2103691,
  author     = {Klein, Casey and Clements, John and Dimoulas, Christos and Eastlund, Carl and Felleisen, Matthias and Flatt, Matthew and McCarthy, Jay A. and Rafkind, Jon and Tobin-Hochstadt, Sam and Findler, Robert Bruce},
  title      = {Run Your Research: On the Effectiveness of Lightweight Mechanization},
  journal    = {SIGPLAN Not.},
  year       = {2012},
  volume     = {47},
  number     = {1},
  pages      = {285--296},
  month      = jan,
  acmid      = {2103691},
  address    = {New York, NY, USA},
  doi        = {10.1145/2103621.2103691},
  groups     = {excluidos},
  issn       = {0362-1340},
  issue_date = {January 2012},
  keywords   = {lightweight semantics engineering},
  numpages   = {12},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2103621.2103691},
}

@InProceedings{Klein:2012:RYR:2103656.2103691,
  author        = {Klein, Casey and Clements, John and Dimoulas, Christos and Eastlund, Carl and Felleisen, Matthias and Flatt, Matthew and McCarthy, Jay A. and Rafkind, Jon and Tobin-Hochstadt, Sam and Findler, Robert Bruce},
  title         = {Run Your Research: On the Effectiveness of Lightweight Mechanization},
  booktitle     = {Proceedings of the 39th Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year          = {2012},
  series        = {POPL '12},
  pages         = {285--296},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2103691},
  doi           = {10.1145/2103656.2103691},
  groups        = {Compendex, Scopus, Duplicados},
  isbn          = {978-1-4503-1083-3},
  keywords      = {lightweight semantics engineering, rank3},
  location      = {Philadelphia, PA, USA},
  numpages      = {12},
  url           = {http://doi.acm.org/10.1145/2103656.2103691},
}

@InProceedings{Kuraj:2014:SSF:2637647.2637655,
  author    = {Kuraj, Ivan and Kuncak, Viktor},
  title     = {SciFe: Scala Framework for Efficient Enumeration of Data Structures with Invariants},
  booktitle = {Proceedings of the Fifth Annual Scala Workshop},
  year      = {2014},
  series    = {SCALA '14},
  pages     = {45--49},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2637655},
  doi       = {10.1145/2637647.2637655},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-2868-5},
  keywords  = {Scala, embedded language, enumeration, exhaustive search, memoisation, metaprogramming, property-based testing, test generation},
  location  = {Uppsala, Sweden},
  numpages  = {5},
  url       = {http://doi.acm.org/10.1145/2637647.2637655},
}

@Article{Vara:2012:FMD:2330373.2330440,
  author     = {Vara, Juan Manuel and Marcos, Esperanza},
  title      = {A Framework for Model-driven Development of Information Systems},
  journal    = {J. Syst. Softw.},
  year       = {2012},
  volume     = {85},
  number     = {10},
  pages      = {2368--2384},
  month      = oct,
  acmid      = {2330440},
  address    = {New York, NY, USA},
  doi        = {10.1016/j.jss.2012.04.080},
  groups     = {Scopus, excluidos},
  issn       = {0164-1212},
  issue_date = {October, 2012},
  keywords   = {Domain-specific modeling, Model-driven engineering, Software development frameworks},
  numpages   = {17},
  publisher  = {Elsevier Science Inc.},
  url        = {http://dx.doi.org/10.1016/j.jss.2012.04.080},
}

@InProceedings{Bettini:2016:JEJ:2972206.2972217,
  author    = {Bettini, Lorenzo},
  title     = {Jbase: Embedding Java Expressions in Xtext DSLs},
  booktitle = {Proceedings of the 13th International Conference on Principles and Practices of Programming on the Java Platform: Virtual Machines, Languages, and Tools},
  year      = {2016},
  series    = {PPPJ '16},
  pages     = {16:1--16:6},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2972217},
  articleno = {16},
  doi       = {10.1145/2972206.2972217},
  groups    = {ACM, Inclusos},
  isbn      = {978-1-4503-4135-6},
  keywords  = {Eclipse, IDE, Implementation, Java, Type System, Xtext},
  location  = {Lugano, Switzerland},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2972206.2972217},
}

@Article{Unutulmaz:2014:TCL:2560803.2560841,
  author     = {Unutulmaz, Ahmet and D\"{u}ndar, G\"{u}nhan and Fern\'{a}ndez, Francisco V.},
  title      = {Template Coding with LDS and Applications of LDS in EDA},
  journal    = {Analog Integr. Circuits Signal Process.},
  year       = {2014},
  volume     = {78},
  number     = {1},
  pages      = {137--151},
  month      = jan,
  acmid      = {2560841},
  address    = {Hingham, MA, USA},
  doi        = {10.1007/s10470-013-0213-9},
  groups     = {Compendex, Scopus, excluidos},
  issn       = {0925-1030},
  issue_date = {January 2014},
  keywords   = {Constraints in analog layout, Hybrid template language, Layout description script, Layout template, Layout-aware circuit synthesis},
  numpages   = {15},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s10470-013-0213-9},
}

@InProceedings{Hills:2012:PAS:2413819.2413821,
  author    = {Hills, Mark and Klint, Paul and Vinju, Jurgen J.},
  title     = {Program Analysis Scenarios in Rascal},
  booktitle = {Proceedings of the 9th International Conference on Rewriting Logic and Its Applications},
  year      = {2012},
  series    = {WRLA'12},
  pages     = {10--30},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2413821},
  doi       = {10.1007/978-3-642-34005-5_2},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-642-34004-8},
  location  = {Tallinn, Estonia},
  numpages  = {21},
  url       = {http://dx.doi.org/10.1007/978-3-642-34005-5_2},
}

@InProceedings{Gargantini:2012:CLC:2224481.2224827,
  author    = {Gargantini, Angelo and Vavassori, Paolo},
  title     = {CITLAB: A Laboratory for Combinatorial Interaction Testing},
  booktitle = {Proceedings of the 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  year      = {2012},
  series    = {ICST '12},
  pages     = {559--568},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2224827},
  doi       = {10.1109/ICST.2012.141},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  isbn      = {978-0-7695-4670-4},
  keywords  = {combinatorial testing, xtext, domain specific languages, eclipse, XTEXT},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/ICST.2012.141},
}

@InProceedings{Al-Mahfoudh:2016:TRD:2897667.2897674,
  author    = {Al-Mahfoudh, Mohammed and Gopalakrishnan, Ganesh and Stutsman, Ryan},
  title     = {Toward Rigorous Design of Domain-specific Distributed Systems},
  booktitle = {Proceedings of the 4th FME Workshop on Formal Methods in Software Engineering},
  year      = {2016},
  series    = {FormaliSE '16},
  pages     = {42--48},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2897674},
  doi       = {10.1145/2897667.2897674},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-4159-2},
  keywords  = {actors, concurrency, distributed systems, fault tolerance, formal methods},
  location  = {Austin, Texas},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2897667.2897674},
}

@Article{Geneves:2014:EIX:2656491.2602573,
  author        = {Genev\`{e}s, Pierre and Laya\"{\i}da, Nabil},
  title         = {Equipping IDEs with XML-Path Reasoning Capabilities},
  journal       = {ACM Trans. Internet Technol.},
  year          = {2014},
  volume        = {13},
  number        = {4},
  pages         = {13:1--13:20},
  month         = jul,
  __markedentry = {[Neto:5]},
  acmid         = {2602573},
  address       = {New York, NY, USA},
  articleno     = {13},
  doi           = {10.1145/2602573},
  groups        = {Scopus, Duplicados},
  issn          = {1533-5399},
  issue_date    = {July 2014},
  keywords      = {Programming, XML, analysis, compile time, environment, path, query, reasoning, schema, rank3},
  numpages      = {20},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2602573},
}

@InProceedings{Molotnikov:2014:ADC:2642937.2642938,
  author    = {Molotnikov, Zaur and V\"{o}lter, Markus and Ratiu, Daniel},
  title     = {Automated Domain-specific C Verification with Mbeddr},
  booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  year      = {2014},
  series    = {ASE '14},
  pages     = {539--550},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2642938},
  doi       = {10.1145/2642937.2642938},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-3013-8},
  keywords  = {cbmc, domain-specific languages, mbeddr, verification},
  location  = {Vasteras, Sweden},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2642937.2642938},
}

@InProceedings{Lakin:2014:CDS:2695475.2695481,
  author    = {Lakin, Matthew R. and Phillips, Andrew},
  title     = {Compiling DNA Strand Displacement Reactions Using a Functional Programming Language},
  booktitle = {Proceedings of the 16th International Symposium on Practical Aspects of Declarative Languages - Volume 8324},
  year      = {2014},
  series    = {PADL 2014},
  pages     = {81--86},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2695481},
  doi       = {10.1007/978-3-319-04132-2_6},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-319-04131-5},
  keywords  = {DNA strand displacement, biological modelling, process calculus},
  location  = {San Diego, CA, USA},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1007/978-3-319-04132-2_6},
}

@InProceedings{Deneke:2013:ACE:2569429.2569651,
  author    = {Deneke, Wesley and Li, Wing-Ning and Thompson, Craig},
  title     = {Automatic Composition of ETL Workflows from Business Intents},
  booktitle = {Proceedings of the 2013 IEEE 16th International Conference on Computational Science and Engineering},
  year      = {2013},
  series    = {CSE '13},
  pages     = {1036--1042},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2569651},
  doi       = {10.1109/CSE.2013.151},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  isbn      = {978-0-7695-5096-1},
  keywords  = {workflows, domain-specific modeling, domain-specific language, extract-transform-load (ETL), content type, semantic annotation},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1109/CSE.2013.151},
}

@InProceedings{Sulzmann:2013:TEC:2426890.2426904,
  author    = {Sulzmann, Martin and Nicklisch-Franken, J\"{u}rgen and Zechner, Axel},
  title     = {Traceability and Evidence of Correctness of EDSL Abstractions},
  booktitle = {Proceedings of the ACM SIGPLAN 2013 Workshop on Partial Evaluation and Program Manipulation},
  year      = {2013},
  series    = {PEPM '13},
  pages     = {71--74},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2426904},
  doi       = {10.1145/2426890.2426904},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-1842-6},
  keywords  = {EDSL, abstractions, correctness, traceability},
  location  = {Rome, Italy},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2426890.2426904},
}

@InProceedings{Cabot:2012:OCL:2367348.2367351,
  author    = {Cabot, Jordi and Gogolla, Martin},
  title     = {Object Constraint Language (OCL): A Definitive Guide},
  booktitle = {Proceedings of the 12th International Conference on Formal Methods for the Design of Computer, Communication, and Software Systems: Formal Methods for Model-driven Engineering},
  year      = {2012},
  series    = {SFM'12},
  pages     = {58--90},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2367351},
  doi       = {10.1007/978-3-642-30982-3_3},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-642-30981-6},
  location  = {Bertinoro, Italy},
  numpages  = {33},
  url       = {http://dx.doi.org/10.1007/978-3-642-30982-3_3},
}

@InProceedings{Gray:2015:WPW:2814189.2833204,
  author        = {Gray, Jeff and Sprinkle, Jonathan and Tolvanen, Juha-Pekka and Rossi, Matti},
  title         = {Workshop Preview of the 15th Workshop on Domain Specific Modeling (DSM 2015)},
  booktitle     = {Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity},
  year          = {2015},
  series        = {SPLASH Companion 2015},
  pages         = {101--102},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2833204},
  doi           = {10.1145/2814189.2833204},
  groups        = {Scopus, Duplicados},
  isbn          = {978-1-4503-3722-9},
  keywords      = {Code Generation, Domain-Specific Languages, Metamodeling, Modeling Languages, rank3},
  location      = {Pittsburgh, PA, USA},
  numpages      = {2},
  url           = {http://doi.acm.org/10.1145/2814189.2833204},
}

@InProceedings{Oliveira:2016:ODE:3017167.3017177,
  author    = {Oliveira, Bruno and Belo, Orlando},
  title     = {An Ontology for Describing ETL Patterns Behavior},
  booktitle = {Proceedings of the 5th International Conference on Data Management Technologies and Applications},
  year      = {2016},
  series    = {DATA 2016},
  pages     = {102--109},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {3017177},
  doi       = {10.5220/0005974001020109},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-989-758-193-9},
  keywords  = {Data Warehousing Systems, Domain Specific Language, ETL Conceptual Modeling, ETL Patterns, ETL Skeletons., Ontologies, PL4ETL},
  location  = {Lisbon, Portugal},
  numpages  = {8},
  url       = {https://doi.org/10.5220/0005974001020109},
}

@InProceedings{Meszaros:2012:VOP:2224481.2224937,
  author    = {Meszaros, Tamas and Levendovszky, Tihamer},
  title     = {Verified Operational Patterns with Graph Transformation},
  booktitle = {Proceedings of the 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  year      = {2012},
  series    = {ICST '12},
  pages     = {954--961},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2224937},
  doi       = {10.1109/ICST.2012.201},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-0-7695-4670-4},
  keywords  = {Active Model Patterns, Graph Transformation, Transformation Verification},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1109/ICST.2012.201},
}

@InProceedings{Amaral:2012:TRS:2477172.2477454,
  author    = {Amaral, Vasco and Barroca, Bruno and Carreira, Paulo},
  title     = {Towards a Robust Solution in Building Automation Systems: Supporting Rapid Prototyping and Analysis},
  booktitle = {Proceedings of the 2012 Eighth International Conference on the Quality of Information and Communications Technology},
  year      = {2012},
  series    = {QUATIC '12},
  pages     = {261--264},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2477454},
  doi       = {10.1109/QUATIC.2012.59},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-0-7695-4777-0},
  keywords  = {Software Language Engineering, Model Transformations, Model Transformations Analysis, Model Checking, DSLTrans, Quality in MDD},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1109/QUATIC.2012.59},
}

@Article{Urma:2015:SQG:2841451.2841700,
  author     = {Urma, Raoul-Gabriel and Mycroft, Alan},
  title      = {Source-code Queries with Graph Databases-with Application to Programming Language Usage and Evolution},
  journal    = {Sci. Comput. Program.},
  year       = {2015},
  volume     = {97},
  number     = {P1},
  pages      = {127--134},
  month      = jan,
  acmid      = {2841700},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2013.11.010},
  groups     = {ACM, excluidos},
  issn       = {0167-6423},
  issue_date = {January 2015},
  keywords   = {Graph databases, Programming language evolution, Source-code queries and DSLs},
  numpages   = {8},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2013.11.010},
}

@PhdThesis{Jacob:2013:MHP:2518925,
  author    = {Jacob, Ferosh},
  title     = {Modeling of High Performance Programs to Support Heterogeneous Computing},
  year      = {2013},
  address   = {Tuscaloosa, AL, USA},
  note      = {AAI3562426},
  advisor   = {Gray, Jeff},
  groups    = {ACM, excluidos},
  isbn      = {978-1-303-10079-6},
  publisher = {University of Alabama},
}

@InProceedings{Bockisch:2013:ELI:2457392.2457398,
  author    = {Bockisch, Christoph and Sewe, Andreas},
  title     = {Efficient Language Implementation with ALIA4J and EMFText: Forum Demonstration},
  booktitle = {Proceedings of the 12th Annual International Conference Companion on Aspect-oriented Software Development},
  year      = {2013},
  series    = {AOSD '13 Companion},
  pages     = {7--10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2457398},
  doi       = {10.1145/2457392.2457398},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-1873-0},
  keywords  = {advanced dispatching, language implementation, modular optimization},
  location  = {Fukuoka, Japan},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2457392.2457398},
}

@Article{Diaz:2013:LEW:2460383.2460388,
  author     = {D\'{\i}az, Oscar and Arellano, Crist\'{o}bal and Azanza, Maider},
  title      = {A Language for End-user Web Augmentation: Caring for Producers and Consumers Alike},
  journal    = {ACM Trans. Web},
  year       = {2013},
  volume     = {7},
  number     = {2},
  pages      = {9:1--9:51},
  month      = may,
  acmid      = {2460388},
  address    = {New York, NY, USA},
  articleno  = {9},
  doi        = {10.1145/2460383.2460388},
  groups     = {Scopus, excluidos},
  issn       = {1559-1131},
  issue_date = {May 2013},
  keywords   = {Greasemonkey, JavaScript, Web augmentation, domain-specific language, end-user programming},
  numpages   = {51},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2460383.2460388},
}

@Article{Dubois:2014:MFS:2748146.2748465,
  author     = {Dubois, Emmanuel and Bortolaso, Christophe and Appert, Damien and Gauffre, Guillaume},
  title      = {An MDE-based Framework to Support the Development of Mixed Interactive Systems},
  journal    = {Sci. Comput. Program.},
  year       = {2014},
  volume     = {89},
  number     = {PB},
  pages      = {199--221},
  month      = sep,
  acmid      = {2748465},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2013.03.007},
  groups     = {Scopus, ScienceDirect, excluidos},
  issn       = {0167-6423},
  issue_date = {September 2014},
  keywords   = {Development process, Domain-specific language, Flexible model transformation, Mixed Interactive System, Model-Driven Engineering},
  numpages   = {23},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2013.03.007},
}

@InProceedings{Alvarez:2013:MFT:2491279.2491286,
  author    = {Alvarez, Camilo and Casallas, Rubby},
  title     = {MTC Flow: A Tool to Design, Develop and Deploy Model Transformation Chains},
  booktitle = {Proceedings of the Workshop on ACadeMics Tooling with Eclipse},
  year      = {2013},
  series    = {ACME '13},
  pages     = {7:1--7:9},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2491286},
  articleno = {7},
  doi       = {10.1145/2491279.2491286},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-2036-8},
  keywords  = {interoperability, model transformation chain},
  location  = {Montpellier, France},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2491279.2491286},
}

@Book{Cardoso:2013:CSE:2500978,
  title         = {Compilation and Synthesis for Embedded Reconfigurable Systems: An Aspect-Oriented Approach},
  publisher     = {Springer Publishing Company, Incorporated},
  year          = {2013},
  author        = {Cardoso, Joo Manuel Paiva and Diniz, Pedro C. and de Figueiredo Coutinho, Jos Gabriel and Petrov, Zlatko Marinov},
  __markedentry = {[Neto:5]},
  groups        = {Duplicados},
  isbn          = {146144893X, 9781461448938},
  keywords      = {rank3},
}

@Book{PaivaCardoso:2015:CSE:2843022,
  title         = {Compilation and Synthesis for Embedded Reconfigurable Systems: An Aspect-Oriented Approach},
  publisher     = {Springer Publishing Company, Incorporated},
  year          = {2015},
  author        = {Paiva Cardoso, Joo Manuel and Diniz, Pedro C. and de Figueiredo Coutinho, Jos Gabriel and Petrov, Zlatko Marinov},
  __markedentry = {[Neto:5]},
  groups        = {Scopus, Duplicados},
  isbn          = {1489988343, 9781489988348},
  keywords      = {rank3},
}

@InProceedings{Song:2012:MIC:2337223.2337305,
  author    = {Song, Myoungkyu and Tilevich, Eli},
  title     = {Metadata Invariants: Checking and Inferring Metadata Coding Conventions},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  year      = {2012},
  series    = {ICSE '12},
  pages     = {694--704},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2337305},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-1-4673-1067-3},
  location  = {Zurich, Switzerland},
  numpages  = {11},
  url       = {http://dl.acm.org/citation.cfm?id=2337223.2337305},
}

@Article{Basten:2015:MLI:2853240.2853602,
  author        = {Basten, Bas and van den Bos, Jeroen and Hills, Mark and Klint, Paul and Lankamp, Arnold and Lisser, Bert and van der Ploeg, Atze and van der Storm, Tijs and Vinju, Jurgen},
  title         = {Modular Language Implementation in Rascal - Experience Report},
  journal       = {Sci. Comput. Program.},
  year          = {2015},
  volume        = {114},
  number        = {C},
  pages         = {7--19},
  month         = dec,
  __markedentry = {[Neto:5]},
  acmid         = {2853602},
  address       = {Amsterdam, The Netherlands, The Netherlands},
  doi           = {10.1016/j.scico.2015.11.003},
  groups        = {Scopus, Duplicados},
  issn          = {0167-6423},
  issue_date    = {December 2015},
  keywords      = {Compiler generators, Language engineering, Language workbench, Meta-programming, Modularity, rank3},
  numpages      = {13},
  publisher     = {Elsevier North-Holland, Inc.},
  url           = {http://dx.doi.org/10.1016/j.scico.2015.11.003},
}

@InProceedings{Trask:2014:LMD:2648511.2648558,
  author        = {Trask, Bruce and Roman, Angel},
  title         = {Leveraging Model Driven Engineering in Software Product Line Architectures},
  booktitle     = {Proceedings of the 18th International Software Product Line Conference - Volume 1},
  year          = {2014},
  series        = {SPLC '14},
  pages         = {360--361},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2648558},
  doi           = {10.1145/2648511.2648558},
  groups        = {Duplicados},
  isbn          = {978-1-4503-2740-4},
  keywords      = {DSL, MDE, abstraction, constraint, domain specific, domain specific testing, graphical, language workbench, meta model, modeling, programming languages, refinement, requirements engineering, textual, traceability, transformation, rank3},
  location      = {Florence, Italy},
  numpages      = {2},
  url           = {http://doi.acm.org/10.1145/2648511.2648558},
}

@Book{Nathan:2013:EDW:2559295,
  title     = {Enterprise Data Workflows with Cascading},
  publisher = {O'Reilly Media, Inc.},
  year      = {2013},
  author    = {Nathan, Paco},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1449358721, 9781449358723},
}

@InProceedings{Ciraci:2014:RVF:2671850.2671895,
  author    = {Ciraci, Selim and Fuller, Jason C. and Daily, Jeff and Makhmalbaf, Atefe and Callahan, David},
  title     = {A Runtime Verification Framework for Control System Simulation},
  booktitle = {Proceedings of the 2014 IEEE 38th Annual Computer Software and Applications Conference},
  year      = {2014},
  series    = {COMPSAC '14},
  pages     = {75--84},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2671895},
  doi       = {10.1109/COMPSAC.2014.14},
  groups    = {Scopus, IEEEDSML, Compendex, excluidos},
  isbn      = {978-1-4799-3575-8},
  keywords  = {simulation, control system, runtime verification, timed automata},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/COMPSAC.2014.14},
}

@InProceedings{Akinyele:2014:CSE:2708449.2708695,
  author    = {Akinyele, Joseph A. and Barthe, Gilles and Gr{\'e}goire, Benjamin and Schmidt, Benedikt and Strub, Pierre-Yves},
  title     = {Certified Synthesis of Efficient Batch Verifiers},
  booktitle = {Proceedings of the 2014 IEEE 27th Computer Security Foundations Symposium},
  year      = {2014},
  series    = {CSF '14},
  pages     = {153--165},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2708695},
  doi       = {10.1109/CSF.2014.19},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, excluidos},
  isbn      = {978-1-4799-4290-9},
  keywords  = {cryptography, certified proofs, signature schemes, cryptographic design},
  numpages  = {13},
  url       = {http://dx.doi.org/10.1109/CSF.2014.19},
}

@InProceedings{Lindner:2014:RCC:2829957.2829962,
  author    = {Lindner, Marcus and Lindner, Andreas and Lindgren, Per},
  title     = {RTFM-core: Course in Compiler Construction},
  booktitle = {Proceedings of the WESE'14: Workshop on Embedded and Cyber-Physical Systems Education},
  year      = {2015},
  series    = {WESE'14},
  pages     = {4:1--4:9},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2829962},
  articleno = {4},
  doi       = {10.1145/2829957.2829962},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-3090-9},
  location  = {New Delhi, India},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2829957.2829962},
}

@InProceedings{Rabbi:2014:UUE:2650281.2665110,
  author    = {Rabbi, Fazle and MacCaull, Wendy},
  title     = {User-Friendly UIs for the Execution of Clinical Practice Guidelines},
  booktitle = {Proceedings of the 2014 IEEE 27th International Symposium on Computer-Based Medical Systems},
  year      = {2014},
  series    = {CBMS '14},
  pages     = {489--490},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2665110},
  doi       = {10.1109/CBMS.2014.104},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-1-4799-4435-4},
  keywords  = {user friendly interface, clinical practice guidelines, workflow management system, domain specific language},
  numpages  = {2},
  url       = {http://dx.doi.org/10.1109/CBMS.2014.104},
}

@InProceedings{Albuquerque:2014:HDL:2709404.2709906,
  author    = {Albuquerque, Marco T\'{u}lio C. F. and Ramalho, Geber Lisboa and Corruble, Vincent and Santos, Andr{\'e} Lu\'{\i}s Medeiros and Freitas, Fred},
  title     = {Helping Developers to Look Deeper Inside Game Sessions},
  booktitle = {Proceedings of the 2014 Brazilian Symposium on Computer Games and Digital Entertainment},
  year      = {2014},
  series    = {SBGAMES '14},
  pages     = {31--40},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2709906},
  doi       = {10.1109/SBGAMES.2014.28},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-1-4799-8065-9},
  keywords  = {game analytics, knowledge representation, game data mining},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/SBGAMES.2014.28},
}

@Article{Puente:2015:RAC:2785905.2785906,
  author     = {Puente, Gorka and D\&\#xed;az, Oscar and Azanza, Maider},
  title      = {Refactoring Affordances in Corporate Wikis: A Case for the Use of Mind Maps},
  journal    = {Enterp. Inf. Syst.},
  year       = {2015},
  volume     = {9},
  number     = {8},
  pages      = {785--834},
  month      = nov,
  acmid      = {2785906},
  address    = {Bristol, PA, USA},
  doi        = {10.1080/17517575.2013.830343},
  groups     = {Compendex, Scopus, excluidos},
  issn       = {1751-7575},
  issue_date = {November 2015},
  keywords   = {FreeMind, MediaWiki, affordance, corporate wikis, mind map, refactoring},
  numpages   = {50},
  publisher  = {Taylor \&amp; Francis, Inc.},
  url        = {http://dx.doi.org/10.1080/17517575.2013.830343},
}

@InProceedings{Wu:2014:SLL:2970445.2970483,
  author    = {Wu, Shaoqun and Fitzgerald, Alannah and H. Witten, Ian},
  title     = {Second Language Learning in the Context of MOOCs},
  booktitle = {Proceedings of the 6th International Conference on Computer Supported Education - Volume 1},
  year      = {2014},
  series    = {CSEDU 2014},
  pages     = {354--359},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2970483},
  doi       = {10.5220/0004924703540359},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-989-758-020-8},
  keywords  = {Corpus-based Language Learning, English for Academic Purposes, FLAX, MOOCs, Open Educational Resources., Second Language Learning},
  location  = {Barcelona, Spain},
  numpages  = {6},
  url       = {http://dx.doi.org/10.5220/0004924703540359},
}

@InProceedings{Cho:2014:RJB:2567948.2579219,
  author    = {Cho, Hyunghun and Ryu, Sukyoung},
  title     = {REST to JavaScript for Better Client-side Development},
  booktitle = {Proceedings of the 23rd International Conference on World Wide Web},
  year      = {2014},
  series    = {WWW '14 Companion},
  pages     = {937--942},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2579219},
  doi       = {10.1145/2567948.2579219},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2745-9},
  keywords  = {API design, REST API, javascript api, javascript wrapper, web IDL, web services},
  location  = {Seoul, Korea},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2567948.2579219},
}

@InProceedings{Prud'hommeaux:2014:SER:2660517.2660523,
  author    = {Prud'hommeaux, Eric and Labra Gayo, Jose Emilio and Solbrig, Harold},
  title     = {Shape Expressions: An RDF Validation and Transformation Language},
  booktitle = {Proceedings of the 10th International Conference on Semantic Systems},
  year      = {2014},
  series    = {SEM '14},
  pages     = {32--40},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2660523},
  doi       = {10.1145/2660517.2660523},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2927-9},
  keywords  = {RDF, graphs, transformation, validation},
  location  = {Leipzig, Germany},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2660517.2660523},
}

@InProceedings{Just:2014:MMF:2610384.2628053,
  author    = {Just, Ren{\'e}},
  title     = {The Major Mutation Framework: Efficient and Scalable Mutation Analysis for Java},
  booktitle = {Proceedings of the 2014 International Symposium on Software Testing and Analysis},
  year      = {2014},
  series    = {ISSTA 2014},
  pages     = {433--436},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2628053},
  doi       = {10.1145/2610384.2628053},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-2645-2},
  keywords  = {Mutation testing, compiler-integrated mutation, strong mutation, weak mu- tation},
  location  = {San Jose, CA, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2610384.2628053},
}

@Book{Vanderbauwhede:2013:HCU:2500908,
  title     = {High-Performance Computing Using FPGAs},
  publisher = {Springer Publishing Company, Incorporated},
  year      = {2013},
  author    = {Vanderbauwhede, Wim and Benkrid, Khaled},
  groups    = {Scopus, excluidos},
  isbn      = {1461417902, 9781461417903},
}

@InProceedings{Song:2012:DMB:2337223.2337450,
  author    = {Song, Myoungkyu and Tilevich, Eli},
  title     = {Detecting Metadata Bugs on the Fly},
  booktitle = {Proceedings of the 34th International Conference on Software Engineering},
  year      = {2012},
  series    = {ICSE '12},
  pages     = {1455--1456},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2337450},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-1-4673-1067-3},
  location  = {Zurich, Switzerland},
  numpages  = {2},
  url       = {http://dl.acm.org/citation.cfm?id=2337223.2337450},
}

@InProceedings{Wilder:2016:EFI:2896825.2896833,
  author    = {Wilder, Nathan and Smith, Jared M. and Mockus, Audris},
  title     = {Exploring a Framework for Identity and Attribute Linking Across Heterogeneous Data Systems},
  booktitle = {Proceedings of the 2Nd International Workshop on BIG Data Software Engineering},
  year      = {2016},
  series    = {BIGDSE '16},
  pages     = {19--25},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2896833},
  doi       = {10.1145/2896825.2896833},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-4152-3},
  keywords  = {big data architecture, domain specific language, entity extraction, entity identification, identity linking},
  location  = {Austin, Texas},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2896825.2896833},
}

@InProceedings{Prehofer:2016:MAM:2976767.2976776,
  author    = {Prehofer, Christian and Wagner, Andreas and Jin, Yucheng},
  title     = {A Model-based Approach for Multi-device User Interactions},
  booktitle = {Proceedings of the ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems},
  year      = {2016},
  series    = {MODELS '16},
  pages     = {13--23},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2976776},
  doi       = {10.1145/2976767.2976776},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4321-3},
  keywords  = {cross-device UI, model-based development and tools, multi-device UI, multi-device applications, task models},
  location  = {Saint-malo, France},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/2976767.2976776},
}

@Article{Jezequel:2012:BCM:2400267.2400302,
  author     = {J{\'e}z{\'e}quel, Jean-Marc and Combemale, Benoit and Derrien, Steven and Guy, Cl{\'e}ment and Rajopadhye, Sanjay},
  title      = {Bridging the Chasm Between MDE and the World of Compilation},
  journal    = {Softw. Syst. Model.},
  year       = {2012},
  volume     = {11},
  number     = {4},
  pages      = {581--597},
  month      = oct,
  acmid      = {2400302},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-012-0266-8},
  groups     = {Scopus, SpringerLink, excluidos},
  issn       = {1619-1366},
  issue_date = {October 2012},
  keywords   = {Compilation, Domain-specific language (DSL), Intermediate representation (IR), Model-driven engineering (MDE), Software language engineering (SLE)},
  numpages   = {17},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-012-0266-8},
}

@InProceedings{Schneider:2012:TFT:2110363.2110458,
  author    = {Schneider, Oliver and Dutchyn, Christopher and Osgood, Nathaniel},
  title     = {Towards Frabjous: A Two-level System for Functional Reactive Agent-based Epidemic Simulation},
  booktitle = {Proceedings of the 2Nd ACM SIGHIT International Health Informatics Symposium},
  year      = {2012},
  series    = {IHI '12},
  pages     = {785--790},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2110458},
  doi       = {10.1145/2110363.2110458},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-0781-9},
  keywords  = {agent- based modeling, agent-based simulation, domain-specific language, dynamic model, functional programming, functional reactive, simulation},
  location  = {Miami, Florida, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2110363.2110458},
}

@InProceedings{Duran:2016:SMC:2964602.2964625,
  author    = {Dur\'{a}n, Francisco and Moreno-Delgado, Antonio and \'{A}lvarez-Palomo, Jos{\'e} M.},
  title     = {Statistical Model Checking of e-Motions Domain-Specific Modeling Languages},
  booktitle = {Proceedings of the 19th International Conference on Fundamental Approaches to Software Engineering - Volume 9633},
  year      = {2016},
  pages     = {305--322},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2964625},
  doi       = {10.1007/978-3-662-49665-7_18},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-662-49664-0},
  numpages  = {18},
  url       = {http://dx.doi.org/10.1007/978-3-662-49665-7_18},
}

@InProceedings{Ecker:2014:MAS:2616606.2617055,
  author    = {Ecker, Wolfgang and Velten, Michael and Zafari, Leily and Goyal, Ajay},
  title     = {The Metamodeling Approach to System Level Synthesis},
  booktitle = {Proceedings of the Conference on Design, Automation \& Test in Europe},
  year      = {2014},
  series    = {DATE '14},
  pages     = {311:1--311:2},
  address   = {3001 Leuven, Belgium, Belgium},
  publisher = {European Design and Automation Association},
  acmid     = {2617055},
  articleno = {311},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-3-9815370-2-4},
  keywords  = {code generation, metamodeling, system level synthesis},
  location  = {Dresden, Germany},
  numpages  = {2},
  url       = {http://dl.acm.org/citation.cfm?id=2616606.2617055},
}

@Article{Edge:2012:DFR:2181339.2181715,
  author     = {Edge, Michael E. and Falcone Sampaio, Pedro R.},
  title      = {The Design of FFML: A Rule-based Policy Modelling Language for Proactive Fraud Management in Financial Data Streams},
  journal    = {Expert Syst. Appl.},
  year       = {2012},
  volume     = {39},
  number     = {11},
  pages      = {9966--9985},
  month      = sep,
  acmid      = {2181715},
  address    = {Tarrytown, NY, USA},
  doi        = {10.1016/j.eswa.2012.01.143},
  groups     = {ScienceDirect, Compendex, Scopus, excluidos},
  issn       = {0957-4174},
  issue_date = {September, 2012},
  keywords   = {Domain specific policy-based languages, Financial information systems, Fraud detection, Information security, Rule-based expert systems},
  numpages   = {20},
  publisher  = {Pergamon Press, Inc.},
  url        = {http://dx.doi.org/10.1016/j.eswa.2012.01.143},
}

@InProceedings{Dietrich:2012:SMD:2483739.2483745,
  author    = {Dietrich, Jens and McCartin, Catherine},
  title     = {Scalable Motif Detection and Aggregation},
  booktitle = {Proceedings of the Twenty-Third Australasian Database Conference - Volume 124},
  year      = {2012},
  series    = {ADC '12},
  pages     = {31--40},
  address   = {Darlinghurst, Australia, Australia},
  publisher = {Australian Computer Society, Inc.},
  acmid     = {2483745},
  groups    = {ACM, excluidos},
  isbn      = {978-1-921770-05-0},
  location  = {Melbourne, Australia},
  numpages  = {10},
  url       = {http://dl.acm.org/citation.cfm?id=2483739.2483745},
}

@InProceedings{Porwol:2015:KEM:2958280.2958288,
  author    = {Porwol, Lukasz and Hassan, Islam and Ojo, Adegbojega and Breslin, John},
  title     = {A Knowledge Extraction and Management Component to Support Spontaneous Participation},
  booktitle = {Proceedings of the 7th IFIP 8.5 International Conference on Electronic Participation - Volume 9249},
  year      = {2015},
  pages     = {68--80},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2958288},
  doi       = {10.1007/978-3-319-22500-5_6},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-319-22499-2},
  keywords  = {Citizen-led e-Participation, Information extraction IE, Natural Language Processing NLP, Public services, e-Government, e-Participation},
  numpages  = {13},
  url       = {http://dx.doi.org/10.1007/978-3-319-22500-5_6},
}

@InProceedings{vanGijzel:2013:TFI:2620678.2620688,
  author    = {van Gijzel, Bas and Nilsson, Henrik},
  title     = {Towards a Framework for the Implementation and Verification of Translations Between Argumentation Models},
  booktitle = {Proceedings of the 25th Symposium on Implementation and Application of Functional Languages},
  year      = {2014},
  series    = {IFL '13},
  pages     = {93:93--93:103},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2620688},
  articleno = {93},
  doi       = {10.1145/2620678.2620688},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-2988-0},
  keywords  = {Haskell, argumentation, domain specific language, functional programming},
  location  = {Nijmegen, Netherlands},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/2620678.2620688},
}

@InProceedings{Collins:2014:NFL:2627373.2627375,
  author    = {Collins, Alexander and Grewe, Dominik and Grover, Vinod and Lee, Sean and Susnea, Adriana},
  title     = {NOVA: A Functional Language for Data Parallelism},
  booktitle = {Proceedings of ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming},
  year      = {2014},
  series    = {ARRAY'14},
  pages     = {8:8--8:13},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2627375},
  articleno = {8},
  doi       = {10.1145/2627373.2627375},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2937-8},
  keywords  = {Array-oriented programming, CUDA, Code generation, Compilation, Functional programming, Multi-core CPU},
  location  = {Edinburgh, United Kingdom},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2627373.2627375},
}

@Article{Ragan-Kelley:2012:DAS:2185520.2185528,
  author     = {Ragan-Kelley, Jonathan and Adams, Andrew and Paris, Sylvain and Levoy, Marc and Amarasinghe, Saman and Durand, Fr{\'e}do},
  title      = {Decoupling Algorithms from Schedules for Easy Optimization of Image Processing Pipelines},
  journal    = {ACM Trans. Graph.},
  year       = {2012},
  volume     = {31},
  number     = {4},
  pages      = {32:1--32:12},
  month      = jul,
  acmid      = {2185528},
  address    = {New York, NY, USA},
  articleno  = {32},
  doi        = {10.1145/2185520.2185528},
  groups     = {Scopus, excluidos},
  issn       = {0730-0301},
  issue_date = {July 2012},
  keywords   = {compilers, image processing, performance},
  numpages   = {12},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2185520.2185528},
}

@InProceedings{Sharma:2014:FIA:2593861.2593862,
  author    = {Sharma, Vibhu Saujanya and Ramnani, Roshni R. and Sengupta, Shubhashis},
  title     = {A Framework for Identifying and Analyzing Non-functional Requirements from Text},
  booktitle = {Proceedings of the 4th International Workshop on Twin Peaks of Requirements and Architecture},
  year      = {2014},
  series    = {TwinPeaks 2014},
  pages     = {1--8},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2593862},
  doi       = {10.1145/2593861.2593862},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-1-4503-2848-7},
  keywords  = {NFRs, Natural Language Processing, Non-Functional Requirements, Requirement Analysis},
  location  = {Hyderabad, India},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2593861.2593862},
}

@InProceedings{Fragkoulis:2014:RAU:2592798.2592802,
  author    = {Fragkoulis, Marios and Spinellis, Diomidis and Louridas, Panos and Bilas, Angelos},
  title     = {Relational Access to Unix Kernel Data Structures},
  booktitle = {Proceedings of the Ninth European Conference on Computer Systems},
  year      = {2014},
  series    = {EuroSys '14},
  pages     = {12:1--12:14},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2592802},
  articleno = {12},
  doi       = {10.1145/2592798.2592802},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2704-6},
  keywords  = {SQL, Unix, diagnostics, kernel},
  location  = {Amsterdam, The Netherlands},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/2592798.2592802},
}

@InProceedings{Makki:2016:ART:2993236.2993257,
  author    = {Makki, Majid and Van Landuyt, Dimitri and Joosen, Wouter},
  title     = {Automated Regression Testing of BPMN 2.0 Processes: A Capture and Replay Framework for Continuous Delivery},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  year      = {2016},
  series    = {GPCE 2016},
  pages     = {178--189},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2993257},
  doi       = {10.1145/2993236.2993257},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4446-3},
  keywords  = {BPMN 2.0, Business Process Execution, Node Mocking, Performance Overhead, Regression Testing, Test Automation, jBPM},
  location  = {Amsterdam, Netherlands},
  numpages  = {12},
  url       = {http://doi.acm.org/10.1145/2993236.2993257},
}

@InProceedings{TranconyWidemann:2012:PPM:2367051.2367073,
  author        = {Tranc\'{o}n y Widemann, Baltasar and Lepper, Markus},
  title         = {Paisley: Pattern Matching \`{a} La Carte},
  booktitle     = {Proceedings of the 5th International Conference on Theory and Practice of Model Transformations},
  year          = {2012},
  series        = {ICMT'12},
  pages         = {240--247},
  address       = {Berlin, Heidelberg},
  publisher     = {Springer-Verlag},
  __markedentry = {[Neto:5]},
  acmid         = {2367073},
  doi           = {10.1007/978-3-642-30476-7_16},
  groups        = {Compendex, Scopus, Duplicados},
  isbn          = {978-3-642-30475-0},
  keywords      = {rank3},
  location      = {Prague, Czech Republic},
  numpages      = {8},
  url           = {http://dx.doi.org/10.1007/978-3-642-30476-7_16},
}

@InProceedings{Schivo:2012:MBP:2457122.2457260,
  author    = {Schivo, Stefano and Scholma, Jetse and Wanders, Brend and Camacho, Ricardo A. Urquidi and van der Vet, Paul E. and Karperien, Marcel and Langerak, Rom and van de Pol, Jaco and Post, Janine N.},
  title     = {Modelling Biological Pathway Dynamics with Timed Automata},
  booktitle = {Proceedings of the 2012 IEEE 12th International Conference on Bioinformatics \& Bioengineering (BIBE)},
  year      = {2012},
  series    = {BIBE '12},
  pages     = {447--453},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2457260},
  doi       = {10.1109/BIBE.2012.6399719},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-1-4673-4357-2},
  keywords  = {Biological system modeling,Automata,Kinetic theory,Computational modeling,Data models,Analytical models,dynamic behaviour,timed automata,signalling pathway,modelling},
  numpages  = {7},
  url       = {http://dx.doi.org/10.1109/BIBE.2012.6399719},
}

@Article{Blouin:2015:AUS:2784072.2784630,
  author     = {Blouin, Arnaud and Moha, Naouel and Baudry, Benoit and Sahraoui, Houari and J{\'e}z{\'e}quel, Jean-Marc},
  title      = {Assessing the Use of Slicing-based Visualizing Techniques on the Understanding of Large Metamodels},
  journal    = {Inf. Softw. Technol.},
  year       = {2015},
  volume     = {62},
  number     = {C},
  pages      = {124--142},
  month      = jun,
  acmid      = {2784630},
  address    = {Newton, MA, USA},
  doi        = {10.1016/j.infsof.2015.02.007},
  groups     = {Scopus, ScienceDirect, Compendex, excluidos},
  issn       = {0950-5849},
  issue_date = {June 2015},
  keywords   = {Class diagram, Human-computer interaction, Metamodel, Model slicing, Model-Driven Engineering, Visualization},
  numpages   = {19},
  publisher  = {Butterworth-Heinemann},
  url        = {http://dx.doi.org/10.1016/j.infsof.2015.02.007},
}

@Article{Sloane:2015:OK:2853240.2853600,
  author     = {Sloane, Anthony M. and Roberts, Matthew},
  title      = {Oberon-0 in Kiama},
  journal    = {Sci. Comput. Program.},
  year       = {2015},
  volume     = {114},
  number     = {C},
  pages      = {20--32},
  month      = dec,
  acmid      = {2853600},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2015.10.010},
  groups     = {ScienceDirect, Scopus, excluidos},
  issn       = {0167-6423},
  issue_date = {December 2015},
  keywords   = {Attribute grammars, Mixins, Oberon-0, Scala, Term rewriting},
  numpages   = {13},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2015.10.010},
}

@InProceedings{Groce:2012:FCG:2338966.2336800,
  author    = {Groce, Alex and Erwig, Martin},
  title     = {Finding Common Ground: Choose, Assert, and Assume},
  booktitle = {Proceedings of the Ninth International Workshop on Dynamic Analysis},
  year      = {2012},
  series    = {WODA 2012},
  pages     = {12--17},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2336800},
  doi       = {10.1145/2338966.2336800},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-1455-8},
  location  = {Minneapolis, MN, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2338966.2336800},
}

@InProceedings{Roos-Frantz:2015:UPN:2981125.2981134,
  author    = {Roos-Frantz, Fabricia and Binelo, Manuel and Z. Frantz, Rafael and Sawicki, Sandro and Basto-Fernandes, Vitor},
  title     = {Using Petri Nets to Enable the Simulation of Application Integration Solutions Conceptual Models},
  booktitle = {Proceedings of the 17th International Conference on Enterprise Information Systems - Volume 1},
  year      = {2015},
  series    = {ICEIS 2015},
  pages     = {87--96},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2981134},
  doi       = {10.5220/0005351900870096},
  groups    = {Scopus, excluidos},
  isbn      = {978-989-758-096-3},
  keywords  = {Enterprise Application Integration, Integration Patterns., Integration Solution, Simulation, Stochastic Petri Net},
  location  = {Barcelona, Spain},
  numpages  = {10},
  url       = {http://dx.doi.org/10.5220/0005351900870096},
}

@InProceedings{Mori:2015:FDP:2879538.2879587,
  author    = {Mori, Jones Y. and Llanos, Carlos H. and Huebner, Michael},
  title     = {A Framework to the Design and Programming of Many-Core Focal-Plane Vision Processors},
  booktitle = {Proceedings of the 2015 IEEE 13th International Conference on Embedded and Ubiquitous Computing (EUC)},
  year      = {2015},
  series    = {EUC '15},
  pages     = {193--198},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2879587},
  doi       = {10.1109/EUC.2015.24},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, excluidos},
  isbn      = {978-1-4673-8299-1},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/EUC.2015.24},
}

@InProceedings{SanchezCuadrado:2014:TSC:2734913.2734927,
  author    = {S\'{a}nchez Cuadrado, Jes\'{u}s and Guerra, Esther and Lara, Juan},
  title     = {Towards the Systematic Construction of Domain-Specific Transformation Languages},
  booktitle = {Proceedings of the 10th European Conference on Modelling Foundations and Applications - Volume 8569},
  year      = {2014},
  pages     = {196--212},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2734927},
  doi       = {10.1007/978-3-319-09195-2_13},
  groups    = {SpringerLink, Scopus, excluidos},
  isbn      = {978-3-319-09194-5},
  numpages  = {17},
  url       = {http://dx.doi.org/10.1007/978-3-319-09195-2_13},
}

@Book{Sierra:2012:CUR:2480839,
  title     = {ClojureScript: Up and Running},
  publisher = {O'Reilly Media, Inc.},
  year      = {2012},
  author    = {Sierra, Stuart and VanderHart, Luke},
  groups    = {ACM, excluidos},
  isbn      = {1449327435, 9781449327439},
}

@Article{Nadas:2014:MAE:2748146.2748460,
  author     = {Nadas, Andras and Levendovszky, Tihamer and Jackson, Ethan K. and Madari, Istvan and Sztipanovits, Janos},
  title      = {A Model-integrated Authoring Environment for Privacy Policies},
  journal    = {Sci. Comput. Program.},
  year       = {2014},
  volume     = {89},
  number     = {PB},
  pages      = {105--125},
  month      = sep,
  acmid      = {2748460},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2013.05.004},
  groups     = {ScienceDirect, excluidos},
  issn       = {0167-6423},
  issue_date = {September 2014},
  keywords   = {Constraint logic programming, Model-integrated computing, Privacy policies},
  numpages   = {21},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2013.05.004},
}

@InProceedings{Li:2015:AOC:2881039.2881138,
  author    = {Li, Pei and Brunet, Elisabeth and Trahay, Francois and Parrot, Christian and Thomas, Gael and Namyst, Raymond},
  title     = {Automatic OpenCL Code Generation for Multi-device Heterogeneous Architectures},
  booktitle = {Proceedings of the 2015 44th International Conference on Parallel Processing (ICPP)},
  year      = {2015},
  series    = {ICPP '15},
  pages     = {959--968},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2881138},
  doi       = {10.1109/ICPP.2015.105},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, excluidos},
  isbn      = {978-1-4673-7587-0},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/ICPP.2015.105},
}

@Article{Arora:2012:RLA:2088416.2088442,
  author     = {Arora, Ritu and Bangalore, Purushotham and Mernik, Marjan},
  title      = {Raising the Level of Abstraction for Developing Message Passing Applications},
  journal    = {J. Supercomput.},
  year       = {2012},
  volume     = {59},
  number     = {2},
  pages      = {1079--1100},
  month      = feb,
  acmid      = {2088442},
  address    = {Hingham, MA, USA},
  doi        = {10.1007/s11227-010-0490-3},
  groups     = {Scopus, excluidos},
  issn       = {0920-8542},
  issue_date = {February 2012},
  keywords   = {Abstraction, Domain-specific language, Explicit parallelization, Generative programming, MPI, Parallel programming},
  numpages   = {22},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s11227-010-0490-3},
}

@InProceedings{Kolovos:2013:RRT:2487766.2487768,
  author    = {Kolovos, Dimitrios S. and Rose, Louis M. and Matragkas, Nicholas and Paige, Richard F. and Guerra, Esther and Cuadrado, Jes\'{u}s S\'{a}nchez and De Lara, Juan and R\'{a}th, Istv\'{a}n and Varr\'{o}, D\'{a}niel and Tisi, Massimo and Cabot, Jordi},
  title     = {A Research Roadmap Towards Achieving Scalability in Model Driven Engineering},
  booktitle = {Proceedings of the Workshop on Scalability in Model Driven Engineering},
  year      = {2013},
  series    = {BigMDE '13},
  pages     = {2:1--2:10},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2487768},
  articleno = {2},
  doi       = {10.1145/2487766.2487768},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-2165-5},
  location  = {Budapest, Hungary},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2487766.2487768},
}

@InProceedings{Foster:2015:CDP:2676726.2677011,
  author        = {Foster, Nate and Kozen, Dexter and Milano, Matthew and Silva, Alexandra and Thompson, Laure},
  title         = {A Coalgebraic Decision Procedure for NetKAT},
  booktitle     = {Proceedings of the 42Nd Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  year          = {2015},
  series        = {POPL '15},
  pages         = {343--355},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2677011},
  doi           = {10.1145/2676726.2677011},
  groups        = {Compendex, Scopus, Duplicados},
  isbn          = {978-1-4503-3300-9},
  keywords      = {automata, brzozowski derivatives, coalgebra, kleene algebra with tests, netkat, network verification, rank3},
  location      = {Mumbai, India},
  numpages      = {13},
  url           = {http://doi.acm.org/10.1145/2676726.2677011},
}

@Article{Foster:2015:CDP:2775051.2677011,
  author        = {Foster, Nate and Kozen, Dexter and Milano, Matthew and Silva, Alexandra and Thompson, Laure},
  title         = {A Coalgebraic Decision Procedure for NetKAT},
  journal       = {SIGPLAN Not.},
  year          = {2015},
  volume        = {50},
  number        = {1},
  pages         = {343--355},
  month         = jan,
  __markedentry = {[Neto:5]},
  acmid         = {2677011},
  address       = {New York, NY, USA},
  doi           = {10.1145/2775051.2677011},
  groups        = {Scopus, Duplicados},
  issn          = {0362-1340},
  issue_date    = {January 2015},
  keywords      = {automata, brzozowski derivatives, coalgebra, kleene algebra with tests, netkat, network verification, rank3},
  numpages      = {13},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2775051.2677011},
}

@InProceedings{Poncelet:2015:MBT:2695664.2695804,
  author    = {Poncelet, Cl{\'e}ment and Jacquemard, Florent},
  title     = {Model Based Testing of an Interactive Music System},
  booktitle = {Proceedings of the 30th Annual ACM Symposium on Applied Computing},
  year      = {2015},
  series    = {SAC '15},
  pages     = {1759--1764},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2695804},
  doi       = {10.1145/2695664.2695804},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-3196-8},
  keywords  = {computer music domain specific languages, interactive music systems, model based testing, realtime systems, timed automata},
  location  = {Salamanca, Spain},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2695664.2695804},
}

@InProceedings{Drey:2013:RLE:2769663.2769677,
  author    = {Drey, Zo{\'e} and Morales, Jos{\'e} F. and Hermenegildo, Manuel V. and Carro, Manuel},
  title     = {Reversible Language Extensions and Their Application in Debugging},
  booktitle = {Proceedings of the 15th International Symposium on Practical Aspects of Declarative Languages - Volume 7752},
  year      = {2013},
  series    = {PADL 2013},
  pages     = {206--221},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2769677},
  doi       = {10.1007/978-3-642-45284-0_14},
  groups    = {Scopus, excluidos},
  isbn      = {978-3-642-45283-3},
  keywords  = {constraint programming, debuggers, language extensions, logic programming},
  location  = {Rome, Italy},
  numpages  = {16},
  url       = {http://dx.doi.org/10.1007/978-3-642-45284-0_14},
}

@Article{Kozynchenko:2016:DOD:2984796.2985984,
  author        = {Kozynchenko, Alexander I. and Kozynchenko, Sergey A.},
  title         = {Development of the Object-Oriented Dynamic Simulation Models Using Visual C++ Freeware},
  journal       = {Model. Simul. Eng.},
  year          = {2016},
  volume        = {2016},
  pages         = {3--},
  month         = mar,
  __markedentry = {[Neto:5]},
  acmid         = {2985984},
  address       = {New York, NY, United States},
  doi           = {10.1155/2016/1756124},
  groups        = {Scopus, Duplicados},
  issn          = {1687-5591},
  issue_date    = {March 2016},
  keywords      = {rank3},
  publisher     = {Hindawi Publishing Corp.},
  url           = {http://dx.doi.org/10.1155/2016/1756124},
}

@InProceedings{Raychev:2016:PMC:2983990.2984041,
  author    = {Raychev, Veselin and Bielik, Pavol and Vechev, Martin},
  title     = {Probabilistic Model for Code with Decision Trees},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Object-Oriented Programming, Systems, Languages, and Applications},
  year      = {2016},
  series    = {OOPSLA 2016},
  pages     = {731--747},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2984041},
  doi       = {10.1145/2983990.2984041},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4444-9},
  keywords  = {Code Completion, Decision Trees, Probabilistic Models of Code},
  location  = {Amsterdam, Netherlands},
  numpages  = {17},
  url       = {http://doi.acm.org/10.1145/2983990.2984041},
}

@InProceedings{Diaz:2012:WTI:2364120.2364167,
  author    = {D\'{\i}az, Oscar and De Sosa, Josune and Arellano, Crist\'{o}bal and Trujillo, Salvador},
  title     = {Web-Based Tool Integration: A Web Augmentation Approach},
  booktitle = {Proceedings of the 12th International Conference on Web Engineering},
  year      = {2012},
  series    = {ICWE'12},
  pages     = {431--434},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2364167},
  doi       = {10.1007/978-3-642-31753-8_37},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-642-31752-1},
  location  = {Berlin, Germany},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1007/978-3-642-31753-8_37},
}

@InProceedings{Zhang:2013:TIM:2623202.2623312,
  author    = {Zhang, Weiqing and M{\o}ller-Pedersen, Birger},
  title     = {Tool Integration Models},
  booktitle = {Proceedings of the 2013 20th Asia-Pacific Software Engineering Conference (APSEC) - Volume 01},
  year      = {2013},
  series    = {APSEC '13},
  pages     = {485--494},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2623312},
  doi       = {10.1109/APSEC.2013.70},
  groups    = {IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-1-4799-2144-7},
  keywords  = {tool integration, integration model, Artifact, Role},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/APSEC.2013.70},
}

@InProceedings{Wasserman:2013:SER:2541348.2541355,
  author    = {Wasserman, Louis},
  title     = {Scalable, Example-based Refactorings with Refaster},
  booktitle = {Proceedings of the 2013 ACM Workshop on Workshop on Refactoring Tools},
  year      = {2013},
  series    = {WRT '13},
  pages     = {25--28},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2541355},
  doi       = {10.1145/2541348.2541355},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-2604-9},
  keywords  = {java, large-scale, library, refactoring, refaster, syntax tree},
  location  = {Indianapolis, Indiana, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2541348.2541355},
}

@Book{Horstmann:2012:SI:2207819,
  title     = {Scala for the Impatient},
  publisher = {Addison-Wesley Professional},
  year      = {2012},
  author    = {Horstmann, Cay S.},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {0321774094, 9780321774095},
}

@Article{Cabanillas:2015:SAD:2798746.2798979,
  author     = {Cabanillas, Cristina and Resinas, Manuel and del-R\'{\i}o-Ortega, Adela and Ruiz-Cort{\'e}s, Antonio},
  title      = {Specification and Automated Design-time Analysis of the Business Process Human Resource Perspective},
  journal    = {Inf. Syst.},
  year       = {2015},
  volume     = {52},
  number     = {C},
  pages      = {55--82},
  month      = aug,
  acmid      = {2798979},
  address    = {Oxford, UK, UK},
  doi        = {10.1016/j.is.2015.03.002},
  groups     = {ScienceDirect, excluidos},
  issn       = {0306-4379},
  issue_date = {August 2015},
  keywords   = {Analysis operation, Automated analysis, Business process management, Human resource perspective, RAL, Resource assignment},
  numpages   = {28},
  publisher  = {Elsevier Science Ltd.},
  url        = {http://dx.doi.org/10.1016/j.is.2015.03.002},
}

@InProceedings{Uluagac:2012:MCF:2496018.2496106,
  author    = {Uluagac, Selcuk and Ramalingam, K. C. and Valero, Marco and Beyah, Raheem and Venkatachalam, S.},
  title     = {The Monitoring Core: A Framework for Sensor Security Application Development},
  booktitle = {Proceedings of the 2012 IEEE 9th International Conference on Mobile Ad-Hoc and Sensor Systems (MASS)},
  year      = {2012},
  series    = {MASS '12},
  pages     = {263--271},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2496106},
  doi       = {10.1109/MASS.2012.6502525},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-1-4673-2433-5},
  keywords  = {Sensor Security Application Development,Wireless Sensor Network Applications,Monitoring Core (M-Core),M-Core Control Language (MCL)},
  numpages  = {9},
  url       = {http://dx.doi.org/10.1109/MASS.2012.6502525},
}

@InProceedings{McKeever:2015:ERC:2846696.2846706,
  author    = {McKeever, Kennon and Zeleke, Yegeta and Bunting, Matt and Sprinkle, Jonathan},
  title     = {Experience Report: Constraint-based Modeling of Autonomous Vehicle Trajectories},
  booktitle = {Proceedings of the Workshop on Domain-Specific Modeling},
  year      = {2015},
  series    = {DSM 2015},
  pages     = {17--22},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2846706},
  doi       = {10.1145/2846696.2846706},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-3903-2},
  keywords  = {Autonomous Systems, Cyber-Physical Systems, Metamodeling},
  location  = {Pittsburgh, PA, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2846696.2846706},
}

@Article{David:2013:SEP:2400753.2401146,
  author        = {David, O. and Ascough,II, J. C. and Lloyd, W. and Green, T. R. and Rojas, K. W. and Leavesley, G. H. and Ahuja, L. R.},
  title         = {A Software Engineering Perspective on Environmental Modeling Framework Design: The Object Modeling System},
  journal       = {Environ. Model. Softw.},
  year          = {2013},
  volume        = {39},
  pages         = {201--213},
  month         = jan,
  __markedentry = {[Neto:5]},
  acmid         = {2401146},
  address       = {Amsterdam, The Netherlands, The Netherlands},
  doi           = {10.1016/j.envsoft.2012.03.006},
  groups        = {ScienceDirect, Compendex, Scopus, Duplicados},
  issn          = {1364-8152},
  issue_date    = {January, 2013},
  keywords      = {Environmental modeling frameworks, Modeling and simulation, Object Modeling System, Software design, Software engineering, rank3},
  numpages      = {13},
  publisher     = {Elsevier Science Publishers B. V.},
  url           = {http://dx.doi.org/10.1016/j.envsoft.2012.03.006},
}

@Article{Lopez-Fernandez:2016:CUS:3004982.3005027,
  author     = {L\'{o}pez-Fern\'{a}ndez, Jes\'{u}s J. and Guerra, Esther and de Lara, Juan},
  title      = {Combining Unit and Specification-based Testing for Meta-model Validation and Verification},
  journal    = {Inf. Syst.},
  year       = {2016},
  volume     = {62},
  number     = {C},
  pages      = {104--135},
  month      = dec,
  acmid      = {3005027},
  address    = {Oxford, UK, UK},
  doi        = {10.1016/j.is.2016.06.008},
  groups     = {ScienceDirect, excluidos},
  issn       = {0306-4379},
  issue_date = {December 2016},
  keywords   = {Domain-specific modelling languages, Meta-model quality, Meta-modelling, Model-driven engineering, Validation \& verification},
  numpages   = {32},
  publisher  = {Elsevier Science Ltd.},
  url        = {https://doi.org/10.1016/j.is.2016.06.008},
}

@PhdThesis{Keep:2013:NFC:2520988,
  author    = {Keep, Andrew W.},
  title     = {A Nanopass Framework for Commercial Compiler Development},
  year      = {2013},
  address   = {Indianapolis, IN, USA},
  note      = {AAI3560746},
  advisor   = {Dybvig, R. Kent},
  groups    = {ACM, excluidos},
  isbn      = {978-1-303-07214-7},
  publisher = {Indiana University},
}

@InProceedings{Bernecky:2015:AEP:2774959.2774962,
  author    = {Bernecky, Robert and Scholz, Sven-Bodo},
  title     = {Abstract Expressionism for Parallel Performance},
  booktitle = {Proceedings of the 2Nd ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming},
  year      = {2015},
  series    = {ARRAY 2015},
  pages     = {54--59},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2774962},
  doi       = {10.1145/2774959.2774962},
  groups    = {Scopus, excluidos},
  isbn      = {978-1-4503-3584-3},
  keywords  = {APL, HPC, SAC, algorithms, expressiveness, functional array languages, parallelism, readability},
  location  = {Portland, OR, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2774959.2774962},
}

@Article{Nebeling:2012:XPC:2198076.2198101,
  author     = {Nebeling, Michael and Grossniklaus, Michael and Leone, Stefania and Norrie, Moira C.},
  title      = {XCML: Providing Context-aware Language Extensions for the Specification of Multi-device Web Applications},
  journal    = {World Wide Web},
  year       = {2012},
  volume     = {15},
  number     = {4},
  pages      = {447--481},
  month      = jul,
  acmid      = {2198101},
  address    = {Hingham, MA, USA},
  doi        = {10.1007/s11280-011-0152-2},
  groups     = {Scopus, excluidos},
  issn       = {1386-145X},
  issue_date = {July 2012},
  keywords   = {domain-specific language approach, integration with modern web platforms and technologies, multi-channel support in web applications},
  numpages   = {35},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s11280-011-0152-2},
}

@Article{Nguyen:2015:ESR:2831506.2831600,
  author     = {Nguyen, Phu H. and Kramer, Max and Klein, Jacques and Traon, Yves Le},
  title      = {An Extensive Systematic Review on the Model-Driven Development of Secure Systems},
  journal    = {Inf. Softw. Technol.},
  year       = {2015},
  volume     = {68},
  number     = {C},
  pages      = {62--81},
  month      = dec,
  acmid      = {2831600},
  address    = {Newton, MA, USA},
  doi        = {10.1016/j.infsof.2015.08.006},
  groups     = {Scopus, ScienceDirect, excluidos},
  issn       = {0950-5849},
  issue_date = {December 2015},
  keywords   = {MDE, MDS, Model-Driven Engineering, Model-Driven Security, Software security engineering, Systematic review},
  numpages   = {20},
  publisher  = {Butterworth-Heinemann},
  url        = {http://dx.doi.org/10.1016/j.infsof.2015.08.006},
}

@Article{Cordoba-Sanchez:2016:ANN:2956216.2956330,
  author     = {C\'{o}rdoba-S\'{a}nchez, Irene and de Lara, Juan},
  title      = {Ann: A domain-specific language for the effective design and validation of Java annotations},
  journal    = {Comput. Lang. Syst. Struct.},
  year       = {2016},
  volume     = {45},
  number     = {C},
  pages      = {164--190},
  month      = apr,
  acmid      = {2956330},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.cl.2016.02.002},
  groups     = {Scopus, Compendex, ScienceDirect, Inclusos},
  issn       = {1477-8424},
  issue_date = {April 2016},
  keywords   = {Code generation, Domain-specific languages, Java annotations, Model driven engineering, Model finders},
  numpages   = {27},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.cl.2016.02.002},
}

@PhdThesis{Dyer:2013:BUS:2604172,
  author    = {Dyer, Robert},
  title     = {Bringing Ultra-large-scale Software Repository Mining to the Masses with Boa},
  year      = {2013},
  address   = {Ames, IA, USA},
  note      = {AAI3610634},
  advisor   = {Rajan, Hridesh},
  groups    = {ACM, excluidos},
  isbn      = {978-1-303-70523-6},
  publisher = {Iowa State University},
}

@Article{David:2013:SEP:2773794.2773821,
  author        = {David, O. and Ascough, J.C. and Lloyd, W. and Green, T.R. and Rojas, K.W. and Leavesley, G.H. and Ahuja, L.R.},
  title         = {A Software Engineering Perspective on Environmental Modeling Framework Design},
  journal       = {Environ. Model. Softw.},
  year          = {2013},
  volume        = {39},
  number        = {C},
  pages         = {201--213},
  month         = jan,
  __markedentry = {[Neto:5]},
  acmid         = {2773821},
  address       = {Amsterdam, The Netherlands, The Netherlands},
  doi           = {10.1016/j.envsoft.2012.03.006},
  groups        = {Duplicados},
  issn          = {1364-8152},
  issue_date    = {January 2013},
  keywords      = {Environmental modeling frameworks, Modeling and simulation, Object Modeling System, Software design, Software engineering, rank3},
  numpages      = {13},
  publisher     = {Elsevier Science Publishers B. V.},
  url           = {http://dx.doi.org/10.1016/j.envsoft.2012.03.006},
}

@Article{Sun:2016:ROA:2929115.2929254,
  author        = {Sun, Yu and White, Jules and Eade, Sean and Schmidt, Douglas C.},
  title         = {ROAR},
  journal       = {J. Syst. Softw.},
  year          = {2016},
  volume        = {116},
  number        = {C},
  pages         = {146--161},
  month         = jun,
  __markedentry = {[Neto:5]},
  acmid         = {2929254},
  address       = {New York, NY, USA},
  doi           = {10.1016/j.jss.2015.08.006},
  groups        = {Scopus, Duplicados},
  issn          = {0164-1212},
  issue_date    = {June 2016},
  keywords      = {Cloud computing, Load testing and benchmarking, Resource optimization, rank3},
  numpages      = {16},
  publisher     = {Elsevier Science Inc.},
  url           = {http://dx.doi.org/10.1016/j.jss.2015.08.006},
}

@Article{Helfer:2015:IOM:2822921.2823107,
  author     = {Helfer, Thomas and Michel, Bruno and Proix, Jean-Michel and Salvo, Maxime and Sercombe, J{\'e}r\^{o}me and Casella, Michel},
  title      = {Introducing the Open-source Mfront Code Generator},
  journal    = {Comput. Math. Appl.},
  year       = {2015},
  volume     = {70},
  number     = {5},
  pages      = {994--1023},
  month      = sep,
  acmid      = {2823107},
  address    = {Tarrytown, NY, USA},
  doi        = {10.1016/j.camwa.2015.06.027},
  groups     = {Scopus, excluidos},
  issn       = {0898-1221},
  issue_date = {September 2015},
  keywords   = {Domain specific languages, Implicit integration schemes, Material knowledge management, Mechanical behaviour integration, Single crystal plasticity},
  numpages   = {30},
  publisher  = {Pergamon Press, Inc.},
  url        = {http://dx.doi.org/10.1016/j.camwa.2015.06.027},
}

@InProceedings{Chis:2016:TOD:2984043.2998546,
  author    = {Chi\c{s}, Andrei},
  title     = {Towards Object-aware Development Tools},
  booktitle = {Companion Proceedings of the 2016 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity},
  year      = {2016},
  series    = {SPLASH Companion 2016},
  pages     = {65--66},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2998546},
  doi       = {10.1145/2984043.2998546},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4437-1},
  keywords  = {Customization, Object-oriented Programming},
  location  = {Amsterdam, Netherlands},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2984043.2998546},
}

@InProceedings{Moreira:2014:PTI:2642937.2648618,
  author    = {Moreira, Rodrigo M.L.M. and Paiva, Ana C.R.},
  title     = {PBGT Tool: An Integrated Modeling and Testing Environment for Pattern-based GUI Testing},
  booktitle = {Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  year      = {2014},
  series    = {ASE '14},
  pages     = {863--866},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2648618},
  doi       = {10.1145/2642937.2648618},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-3013-8},
  keywords  = {gui modeling, gui testing, model-based gui testing, pattern-based gui testing},
  location  = {Vasteras, Sweden},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2642937.2648618},
}

@InProceedings{Regnell:2013:RTS:2468184.2468195,
  author        = {Regnell, Bj\"{o}rn},
  title         = {reqT.Org: Towards a Semi-formal, Open and Scalable Requirements Modeling Tool},
  booktitle     = {Proceedings of the 19th International Conference on Requirements Engineering: Foundation for Software Quality},
  year          = {2013},
  series        = {REFSQ'13},
  pages         = {112--118},
  address       = {Berlin, Heidelberg},
  publisher     = {Springer-Verlag},
  __markedentry = {[Neto:5]},
  acmid         = {2468195},
  doi           = {10.1007/978-3-642-37422-7_8},
  groups        = {Compendex, Duplicados},
  isbn          = {978-3-642-37421-0},
  keywords      = {CASE tool, Scala programming language, embedded DSL, internal DSL, requirements engineering, requirements engineering education, requirements metamodel, requirements modeling, software engineering, rank3},
  location      = {Essen, Germany},
  numpages      = {7},
  url           = {http://dx.doi.org/10.1007/978-3-642-37422-7_8},
}

@InProceedings{Diaz:2012:SEC:2364120.2364176,
  author    = {D\'{\i}az, Oscar and Arellano, Crist\'{o}bal},
  title     = {Sticklet: An End-user Client-side Augmentation-based Mashup Tool},
  booktitle = {Proceedings of the 12th International Conference on Web Engineering},
  year      = {2012},
  series    = {ICWE'12},
  pages     = {465--468},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2364176},
  doi       = {10.1007/978-3-642-31753-8_45},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-642-31752-1},
  location  = {Berlin, Germany},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1007/978-3-642-31753-8_45},
}

@Book{Mena:2014:BHP:2584542,
  title     = {Beginning Haskell: A Project-Based Approach},
  publisher = {Apress},
  year      = {2014},
  author    = {Mena, Alejandro Serrano},
  address   = {Berkely, CA, USA},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1430262508, 9781430262503},
}

@Book{Yates:2013:ISS:2556178,
  title     = {Instant Sinatra Starter},
  publisher = {Packt Publishing},
  year      = {2013},
  author    = {Yates, Joe},
  groups    = {ACM, excluidos},
  isbn      = {1782168214, 9781782168218},
}

@Proceedings{Jamali:2013:2541329,
  title         = {AGERE! 2013: Proceedings of the 2013 Workshop on Programming Based on Actors, Agents, and Decentralized Control},
  year          = {2013},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[joao_:5]},
  isbn          = {978-1-4503-2602-5},
  keywords      = {rank5},
  location      = {Indianapolis, Indiana, USA},
}

@PhdThesis{Wang:2013:DSL:2604728,
  author    = {Wang, Man},
  title     = {Dependence-based Source Level Tracing and Replay for Networked Embedded Systems},
  year      = {2013},
  address   = {West Lafayette, IN, USA},
  note      = {AAI3613501},
  advisor   = {Li, Zhiyuan},
  groups    = {ACM, excluidos},
  isbn      = {978-1-303-76459-2},
  publisher = {Purdue University},
}

@InProceedings{Jindal:2013:STM:2510661.2511423,
  author    = {Jindal, Nakul and Lotrich, Victor and Deumens, Erik and Sanders, Beverly A.},
  title     = {SIPMaP: A Tool for Modeling Irregular Parallel Computations in the Super Instruction Architecture},
  booktitle = {Proceedings of the 2013 IEEE 27th International Symposium on Parallel and Distributed Processing},
  year      = {2013},
  series    = {IPDPS '13},
  pages     = {874--884},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2511423},
  doi       = {10.1109/IPDPS.2013.35},
  groups    = {IEEEDSML, IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-0-7695-4971-2},
  keywords  = {Performance Modeling, Domain Specific Language, High Performance Computing},
  numpages  = {11},
  url       = {http://dx.doi.org/10.1109/IPDPS.2013.35},
}

@InProceedings{Hadas:2015:DFE:2735386.2735388,
  author    = {Hadas, Arik and Lorenz, David H.},
  title     = {Demanding First-class Equality for Domain Specific Aspect Languages},
  booktitle = {Companion Proceedings of the 14th International Conference on Modularity},
  year      = {2015},
  series    = {MODULARITY Companion 2015},
  pages     = {35--38},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2735388},
  doi       = {10.1145/2735386.2735388},
  groups    = {Scopus, Compendex, Inclusos},
  isbn      = {978-1-4503-3283-5},
  keywords  = {Aspect oriented programming (AOP), Awesome, Domain specific aspect language (DSAL), Domain specific language (DSL), Language workbench, Spoofax},
  location  = {Fort Collins, CO, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2735386.2735388},
}

@PhdThesis{Pajic:2012:CLA:2518490,
  author    = {Pajic, Miroslav},
  title     = {Closing the Loop: Architectures and Algorithms for Real-time Control over Wireless Networks},
  year      = {2012},
  address   = {Philadelphia, PA, USA},
  note      = {AAI3551538},
  advisor   = {Mangharam, Rahul},
  groups    = {ACM, excluidos},
  isbn      = {978-1-267-89385-7},
  publisher = {University of Pennsylvania},
}

@Article{Freudenthal:2015:SDT:2853240.2853604,
  author     = {Freudenthal, Margus},
  title      = {Simpl DSL Toolkit},
  journal    = {Sci. Comput. Program.},
  year       = {2015},
  volume     = {114},
  number     = {C},
  pages      = {85--91},
  month      = dec,
  acmid      = {2853604},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2014.11.018},
  groups     = {ScienceDirect, Compendex, Scopus, Inclusos},
  issn       = {0167-6423},
  issue_date = {December 2015},
  keywords   = {Simpl DSL toolkit, Tool challenge},
  numpages   = {7},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2014.11.018},
}

@InProceedings{Moreno-Delgado:2014:MDF:2734913.2734923,
  author    = {Moreno-Delgado, Antonio and Dur\'{a}n, Francisco and Zschaler, Steffen and Troya, Javier},
  title     = {Modular DSLs for Flexible Analysis: An e-Motions Reimplementation of Palladio},
  booktitle = {Proceedings of the 10th European Conference on Modelling Foundations and Applications - Volume 8569},
  year      = {2014},
  pages     = {132--147},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2734923},
  doi       = {10.1007/978-3-319-09195-2_9},
  groups    = {Scopus, Inclusos},
  isbn      = {978-3-319-09194-5},
  numpages  = {16},
  url       = {http://dx.doi.org/10.1007/978-3-319-09195-2_9},
}

@Article{Havelund:2015:RRV:2744465.2744510,
  author     = {Havelund, Klaus},
  title      = {Rule-based Runtime Verification Revisited},
  journal    = {Int. J. Softw. Tools Technol. Transf.},
  year       = {2015},
  volume     = {17},
  number     = {2},
  pages      = {143--170},
  month      = apr,
  acmid      = {2744510},
  address    = {Berlin, Heidelberg},
  doi        = {10.1007/s10009-014-0309-2},
  groups     = {ACM, excluidos},
  issn       = {1433-2779},
  issue_date = {April 2015},
  keywords   = {Internal DSL, Rete algorithm, Rule-based systems, Runtime verification, Scala},
  numpages   = {28},
  publisher  = {Springer-Verlag},
  url        = {http://dx.doi.org/10.1007/s10009-014-0309-2},
}

@Article{Marnerides:2015:FDD:2778926.2779613,
  author     = {Marnerides, A.K. and Malinowski, S. and Morla, R. and Kim, H.S.},
  title      = {Fault Diagnosis in DSL Networks Using Support Vector Machines},
  journal    = {Comput. Commun.},
  year       = {2015},
  volume     = {62},
  number     = {C},
  pages      = {72--84},
  month      = may,
  acmid      = {2779613},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.comcom.2015.01.006},
  groups     = {ScienceDirect, Scopus, Inclusos},
  issn       = {0140-3664},
  issue_date = {May 2015},
  keywords   = {DSL anomalies, Network management, One-class classifiers, Supervised learning, Support vector machines},
  numpages   = {13},
  publisher  = {Elsevier Science Publishers B. V.},
  url        = {http://dx.doi.org/10.1016/j.comcom.2015.01.006},
}

@InProceedings{Zaytsev:2012:NGR:2427048.2427057,
  author    = {Zaytsev, Vadim},
  title     = {Notation-parametric Grammar Recovery},
  booktitle = {Proceedings of the Twelfth Workshop on Language Descriptions, Tools, and Applications},
  year      = {2012},
  series    = {LDTA '12},
  pages     = {9:1--9:8},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2427057},
  articleno = {9},
  doi       = {10.1145/2427048.2427057},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-1536-4},
  keywords  = {extended Backus-Naur Form, grammar recovery, language documentation, metasyntax, syntactic definitions},
  location  = {Tallinn, Estonia},
  numpages  = {8},
  url       = {http://doi.acm.org/10.1145/2427048.2427057},
}

@InProceedings{Selgrad:2016:HIP:3005729.3005734,
  author    = {Selgrad, Kai and Lier, Alexander and D\"{o}rntlein, Jan and Reiche, Oliver and Marc Stamminger, Marc},
  title     = {A High-Performance Image Processing DSL for Heterogeneous Architectures},
  booktitle = {Proceedings of the 9th European Lisp Symposium on European Lisp Symposium},
  year      = {2016},
  series    = {ELS2016},
  pages     = {5:38--5:37},
  publisher = {European Lisp Scientific Activities Association},
  acmid     = {3005734},
  articleno = {5},
  groups    = {ACM, Inclusos},
  isbn      = {978-2-9557474-0-7},
  keywords  = {Common Lisp, Domain Specific Language, Generative Programming, Meta Programming},
  location  = {Krak\&\#243;w, Poland},
  numpages  = {0},
  url       = {http://dl.acm.org/citation.cfm?id=3005729.3005734},
}

@InProceedings{Krikava:2012:UID:2428516.2428521,
  author    = {K\v{r}ikava, Filip and Collet, Philippe},
  title     = {On the Use of an Internal DSL for Enriching EMF Models},
  booktitle = {Proceedings of the 12th Workshop on OCL and Textual Modelling},
  year      = {2012},
  series    = {OCL '12},
  pages     = {25--30},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2428521},
  doi       = {10.1145/2428516.2428521},
  groups    = {Compendex, Scopus, Inclusos, excluidos},
  isbn      = {978-1-4503-1799-3},
  location  = {Innsbruck, Austria},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2428516.2428521},
}

@InProceedings{Vara:2013:ETR:2491279.2491283,
  author    = {Vara, Juan Manuel and Verde, Jenifer and Andrikopoulos, Vasilios and Bollati, Ver\'{o}nica and Marcos, Esperanza},
  title     = {An EMF-based Toolkit for Reasoning on Web Services Evolution},
  booktitle = {Proceedings of the Workshop on ACadeMics Tooling with Eclipse},
  year      = {2013},
  series    = {ACME '13},
  pages     = {4:1--4:9},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2491283},
  articleno = {4},
  doi       = {10.1145/2491279.2491283},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-2036-8},
  keywords  = {model transformations, model-driven engineering, service compatibility, service evolution},
  location  = {Montpellier, France},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2491279.2491283},
}

@InProceedings{GjOsaeter:2015:LME:2951826.2951837,
  author    = {Gj\Os{\ae}ter, Terje and Prinz, Andreas},
  title     = {LanguageLab - A Meta-modelling Environment},
  booktitle = {Proceedings of the 17th International SDL Forum on SDL 2015: Model-Driven Engineering for Smart Cities - Volume 9369},
  year      = {2015},
  pages     = {91--105},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2951837},
  doi       = {10.1007/978-3-319-24912-4_8},
  groups    = {SpringerLink, Compendex, Scopus, excluidos},
  isbn      = {978-3-319-24911-7},
  keywords  = {DSL Development Environments, Language workbenches, Meta-modelling},
  numpages  = {15},
  url       = {http://dx.doi.org/10.1007/978-3-319-24912-4_8},
}

@InProceedings{Fossum:2014:PPL:2538862.2538922,
  author    = {Fossum, Timothy},
  title     = {PLCC: A Programming Language Compiler Compiler},
  booktitle = {Proceedings of the 45th ACM Technical Symposium on Computer Science Education},
  year      = {2014},
  series    = {SIGCSE '14},
  pages     = {561--566},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2538922},
  doi       = {10.1145/2538862.2538922},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-2605-6},
  keywords  = {compiler-compiler, interpreter, semantics, syntax},
  location  = {Atlanta, Georgia, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2538862.2538922},
}

@InProceedings{Schmid:2015:EPL:2791060.2791112,
  author    = {Schmid, Klaus and Eichelberger, Holger},
  title     = {EASy-Producer: From Product Lines to Variability-rich Software Ecosystems},
  booktitle = {Proceedings of the 19th International Conference on Software Product Line},
  year      = {2015},
  series    = {SPLC '15},
  pages     = {390--391},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2791112},
  doi       = {10.1145/2791060.2791112},
  groups    = {Compendex, excluidos},
  isbn      = {978-1-4503-3613-0},
  keywords  = {EASy-producer, ecosystems, software product lines},
  location  = {Nashville, Tennessee},
  numpages  = {2},
  url       = {http://doi.acm.org/10.1145/2791060.2791112},
}

@InProceedings{Alhosban:2012:AIV:2470026.2470087,
  author    = {Alhosban, Fuad and Burd, Liz},
  title     = {Aural Instruction with Visualization in E-Learning},
  booktitle = {Proceedings of the 2012 IEEE Frontiers in Education Conference (FIE)},
  year      = {2012},
  series    = {FIE '12},
  pages     = {1--6},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2470087},
  doi       = {10.1109/FIE.2012.6462290},
  groups    = {Scopus, IEEEDSL, Compendex, excluidos},
  isbn      = {978-1-4673-1353-7},
  keywords  = {DSL,Data visualization,Data structures,Interviews,Visualization,Electronic learning,Data Structure Learning Tool,Aural Instructions,Visualization,Cognitive Load,Computer Science Learning},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/FIE.2012.6462290},
}

@Article{Smeltzer:2014:TAD:2775053.2658769,
  author     = {Smeltzer, Karl and Erwig, Martin and Metoyer, Ronald},
  title      = {A Transformational Approach to Data Visualization},
  journal    = {SIGPLAN Not.},
  year       = {2014},
  volume     = {50},
  number     = {3},
  pages      = {53--62},
  month      = sep,
  acmid      = {2658769},
  address    = {New York, NY, USA},
  doi        = {10.1145/2775053.2658769},
  groups     = {Scopus, excluidos},
  issn       = {0362-1340},
  issue_date = {March 2015},
  keywords   = {Embedded DSL, Information Visualization, Visualization Transformations},
  numpages   = {10},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2775053.2658769},
}

@InProceedings{Smeltzer:2014:TAD:2658761.2658769,
  author        = {Smeltzer, Karl and Erwig, Martin and Metoyer, Ronald},
  title         = {A Transformational Approach to Data Visualization},
  booktitle     = {Proceedings of the 2014 International Conference on Generative Programming: Concepts and Experiences},
  year          = {2014},
  series        = {GPCE 2014},
  pages         = {53--62},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2658769},
  doi           = {10.1145/2658761.2658769},
  groups        = {Duplicados},
  isbn          = {978-1-4503-3161-6},
  keywords      = {Embedded DSL, Information Visualization, Visualization Transformations, rank3},
  location      = {V\&\#228;ster\&\#229;s, Sweden},
  numpages      = {10},
  url           = {http://doi.acm.org/10.1145/2658761.2658769},
}

@InProceedings{Niazi:2012:TRD:2408860.2410028,
  author    = {Niazi, Moazzam Fareed and Seceleanu, Tiberiu and Tenhunen, Hannu},
  title     = {Towards Reuse-Based Development for the On-chip Distributed SoC Architecture},
  booktitle = {Proceedings of the 2012 IEEE 36th Annual Computer Software and Applications Conference Workshops},
  year      = {2012},
  series    = {COMPSACW '12},
  pages     = {278--283},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2410028},
  doi       = {10.1109/COMPSACW.2012.58},
  groups    = {IEEEDSL, Compendex, Scopus, excluidos},
  isbn      = {978-0-7695-4758-9},
  keywords  = {System-on-Chip, modeling, UML, embedded systems, reusability},
  numpages  = {6},
  url       = {http://dx.doi.org/10.1109/COMPSACW.2012.58},
}

@InProceedings{Bergmann:2015:VRM:2993000.2993011,
  author    = {Bergmann, G\'{a}bor and D\'{a}vid, Istv\'{a}n and Heged\"{u}s, \'{A}bel and Horv\'{a}th, \'{A}kos and R\'{a}th, Istv\'{a}n and Ujhelyi, Zolt\'{a}n and Varr\'{o}, D\'{a}niel},
  title     = {Viatra 3: A Reactive Model Transformation Platform},
  booktitle = {Proceedings of the 8th International Conference on Theory and Practice of Model Transformations - Volume 9152},
  year      = {2015},
  pages     = {101--110},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2993011},
  doi       = {10.1007/978-3-319-21155-8_8},
  groups    = {ACM, excluidos},
  isbn      = {978-3-319-21154-1},
  keywords  = {Event-driven transformation, Reactive programming, Source incremental transformations, Virtual machine},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1007/978-3-319-21155-8_8},
}

@InProceedings{Caracciolo:2015:UAA:2867551.2868162,
  author    = {Caracciolo, Andrea and Lungu, Mircea Filip and Nierstrasz, Oscar},
  title     = {A Unified Approach to Architecture Conformance Checking},
  booktitle = {Proceedings of the 2015 12th Working IEEE/IFIP Conference on Software Architecture},
  year      = {2015},
  series    = {WICSA '15},
  pages     = {41--50},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2868162},
  doi       = {10.1109/WICSA.2015.11},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Compendex, excluidos},
  isbn      = {978-1-4799-1922-2},
  keywords  = {architecture, erosion, conformance checking},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/WICSA.2015.11},
}

@InProceedings{Cartaxo:2012:EES:2420918.2420933,
  author    = {Cartaxo, Bruno and Costa, Italo and Abrantes, Dhiego and Santos, Andre and Soares, Sergio and Garcia, Vinicius},
  title     = {ESEML: Empirical Software Engineering Modeling Language},
  booktitle = {Proceedings of the 2012 Workshop on Domain-specific Modeling},
  year      = {2012},
  series    = {DSM '12},
  pages     = {55--60},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2420933},
  doi       = {10.1145/2420918.2420933},
  groups    = {ACM, Duvida},
  isbn      = {978-1-4503-1634-7},
  keywords  = {domain-specific languages (dsls), empirical software engineering},
  location  = {Tucson, Arizona, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2420918.2420933},
}

@InProceedings{Puente:2012:WRM:2363463.2363520,
  author    = {Puente, Gorka and D\'{\i}az, Oscar},
  title     = {Wiki Refactoring As Mind Map Reshaping},
  booktitle = {Proceedings of the 24th International Conference on Advanced Information Systems Engineering},
  year      = {2012},
  series    = {CAiSE'12},
  pages     = {646--661},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2363520},
  doi       = {10.1007/978-3-642-31095-9_42},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-642-31094-2},
  keywords  = {DSL, end-user, mind maps, refactoring, wiki},
  location  = {Gda\&\#324;sk, Poland},
  numpages  = {16},
  url       = {http://dx.doi.org/10.1007/978-3-642-31095-9_42},
}

@InProceedings{Caracciolo:2015:UAA:2819009.2819202,
  author    = {Caracciolo, Andrea},
  title     = {A Unified Approach to Automatic Testing of Architectural Constraints},
  booktitle = {Proceedings of the 37th International Conference on Software Engineering - Volume 2},
  year      = {2015},
  series    = {ICSE '15},
  pages     = {871--874},
  address   = {Piscataway, NJ, USA},
  publisher = {IEEE Press},
  acmid     = {2819202},
  groups    = {Scopus, IEEEDSL, Compendex, excluidos},
  location  = {Florence, Italy},
  numpages  = {4},
  url       = {http://dl.acm.org/citation.cfm?id=2819009.2819202},
}

@InProceedings{Uhnak:2016:OMP:2991041.2991055,
  author    = {Uhn\'{a}k, Peter and Pergl, Robert},
  title     = {The OpenPonk Modeling Platform},
  booktitle = {Proceedings of the 11th Edition of the International Workshop on Smalltalk Technologies},
  year      = {2016},
  series    = {IWST'16},
  pages     = {14:1--14:11},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2991055},
  articleno = {14},
  doi       = {10.1145/2991041.2991055},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4524-8},
  keywords  = {BORM, DynaCASE, OpenPonk, Pharo, Roassal, UML, modeling, visualizations},
  location  = {Prague, Czech Republic},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/2991041.2991055},
}

@InProceedings{Azadmanesh:2015:SDD:2823363.2823365,
  author    = {Azadmanesh, Mohammad R. and Hauswirth, Matthias},
  title     = {SQL for Deep Dynamic Analysis?},
  booktitle = {Proceedings of the 13th International Workshop on Dynamic Analysis},
  year      = {2015},
  series    = {WODA 2015},
  pages     = {2--7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2823365},
  doi       = {10.1145/2823363.2823365},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-3909-4},
  keywords  = {Dynamic analysis, SQL, program trace, query-based analysis},
  location  = {Pittsburgh, PA, USA},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2823363.2823365},
}

@InProceedings{Malevannyy:2015:AMS:2855667.2855671,
  author    = {Malevannyy, Mikhail and Mikhalkovich, Stanislav},
  title     = {Aspect Markup of a Source Code for Quick Navigating a Project},
  booktitle = {Proceedings of the 11th Central \& Eastern European Software Engineering Conference in Russia},
  year      = {2015},
  series    = {CEE-SECR '15},
  pages     = {4:1--4:9},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2855671},
  articleno = {4},
  doi       = {10.1145/2855667.2855671},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4130-1},
  keywords  = {aspect markup of code, aspect-oriented programming, crosscutting concerns, integrated development environments, lightweight parsing},
  location  = {Moscow, Russia},
  numpages  = {9},
  url       = {http://doi.acm.org/10.1145/2855667.2855671},
}

@InProceedings{Fouquet:2012:EMF:2404962.2404972,
  author    = {Fouquet, Fran\c{c}ois and Nain, Gr{\'e}gory and Morin, Brice and Daubert, Erwan and Barais, Olivier and Plouzeau, No\"{e}l and J{\'e}z{\'e}quel, Jean-Marc},
  title     = {An Eclipse Modelling Framework Alternative to Meet the Models@Runtime Requirements},
  booktitle = {Proceedings of the 15th International Conference on Model Driven Engineering Languages and Systems},
  year      = {2012},
  series    = {MODELS'12},
  pages     = {87--101},
  address   = {Berlin, Heidelberg},
  publisher = {Springer-Verlag},
  acmid     = {2404972},
  doi       = {10.1007/978-3-642-33666-9_7},
  groups    = {ACM, excluidos},
  isbn      = {978-3-642-33665-2},
  keywords  = {EMF, Model@Runtime, adaptation},
  location  = {Innsbruck, Austria},
  numpages  = {15},
  url       = {http://dx.doi.org/10.1007/978-3-642-33666-9_7},
}

@Article{Blouin:2015:KMG:2733585.2733594,
  author     = {Blouin, Arnaud and Combemale, Beno\^{\i}t and Baudry, Benoit and Beaudoux, Olivier},
  title      = {Kompren: Modeling and Generating Model Slicers},
  journal    = {Softw. Syst. Model.},
  year       = {2015},
  volume     = {14},
  number     = {1},
  pages      = {321--337},
  month      = feb,
  acmid      = {2733594},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-012-0300-x},
  groups     = {Scopus, excluidos},
  issn       = {1619-1366},
  issue_date = {February 2015},
  keywords   = {Domain specific language, Model slicing},
  numpages   = {17},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-012-0300-x},
}

@InProceedings{Rizun:2015:CTD:2811237.2811297,
  author    = {Rizun, M. and Bach, J.-C. and Ducasse, S.},
  title     = {Code Transformation by Direct Transformation of ASTs},
  booktitle = {Proceedings of the International Workshop on Smalltalk Technologies},
  year      = {2015},
  series    = {IWST '15},
  pages     = {7:1--7:7},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2811297},
  articleno = {7},
  doi       = {10.1145/2811237.2811297},
  groups    = {Scopus, Compendex, excluidos},
  isbn      = {978-1-4503-3857-8},
  keywords  = {AST, code transformation, refactoring, rewriting},
  location  = {Brescia, Italy},
  numpages  = {7},
  url       = {http://doi.acm.org/10.1145/2811237.2811297},
}

@Book{Davis:2016:LG:3001603,
  title     = {Learning Groovy},
  publisher = {Apress},
  year      = {2016},
  author    = {Davis, Adam L.},
  address   = {Berkely, CA, USA},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1484221168, 9781484221167},
}

@Article{Bourgoin:2014:EAG:2630180.2630187,
  author     = {Bourgoin, Mathias and Chailloux, Emmanuel and Lamotte, Jean-Luc},
  title      = {Efficient Abstractions for GPGPU Programming},
  journal    = {Int. J. Parallel Program.},
  year       = {2014},
  volume     = {42},
  number     = {4},
  pages      = {583--600},
  month      = aug,
  acmid      = {2630187},
  address    = {Norwell, MA, USA},
  doi        = {10.1007/s10766-013-0261-x},
  groups     = {SpringerLink, Scopus, excluidos},
  issn       = {0885-7458},
  issue_date = {August 2014},
  keywords   = {DSL, GPGPU, OCaml, Parallel abstractions, Parallel skeletons},
  numpages   = {18},
  publisher  = {Kluwer Academic Publishers},
  url        = {http://dx.doi.org/10.1007/s10766-013-0261-x},
}

@Article{Stevenson:2014:SGI:2842036.2842120,
  author     = {Stevenson, Andrew and Cordy, James R.},
  title      = {A Survey of Grammatical Inference in Software Engineering},
  journal    = {Sci. Comput. Program.},
  year       = {2014},
  volume     = {96},
  number     = {P4},
  pages      = {444--459},
  month      = dec,
  acmid      = {2842120},
  address    = {Amsterdam, The Netherlands, The Netherlands},
  doi        = {10.1016/j.scico.2014.05.008},
  groups     = {ScienceDirect, excluidos},
  issn       = {0167-6423},
  issue_date = {December 2014},
  keywords   = {Grammar induction, Grammatical inference, Software engineering},
  numpages   = {16},
  publisher  = {Elsevier North-Holland, Inc.},
  url        = {http://dx.doi.org/10.1016/j.scico.2014.05.008},
}

@InProceedings{Bos:2013:TIM:2550526.2550529,
  author    = {Bos, Jeroen van den and Storm, Tijs van der},
  title     = {TRINITY: An IDE for the Matrix},
  booktitle = {Proceedings of the 2013 IEEE International Conference on Software Maintenance},
  year      = {2013},
  series    = {ICSM '13},
  pages     = {520--523},
  address   = {Washington, DC, USA},
  publisher = {IEEE Computer Society},
  acmid     = {2550529},
  doi       = {10.1109/ICSM.2013.86},
  groups    = {IEEEDSML, IEEEDSL, Scopus, excluidos},
  isbn      = {978-0-7695-4981-1},
  keywords  = {software maintenance, reverse engineering, integrated development environment, model-driven engineering, domain-specific language},
  numpages  = {4},
  url       = {http://dx.doi.org/10.1109/ICSM.2013.86},
}

@InProceedings{Daniel:2016:PFP:2976767.2976775,
  author    = {Daniel, Gwendal and Suny{\'e}, Gerson and Cabot, Jordi},
  title     = {PrefetchML: A Framework for Prefetching and Caching Models},
  booktitle = {Proceedings of the ACM/IEEE 19th International Conference on Model Driven Engineering Languages and Systems},
  year      = {2016},
  series    = {MODELS '16},
  pages     = {318--328},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2976775},
  doi       = {10.1145/2976767.2976775},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4321-3},
  keywords  = {DSL, MDE, NoSQL, persistence framework, prefetching, scalability},
  location  = {Saint-malo, France},
  numpages  = {11},
  url       = {http://doi.acm.org/10.1145/2976767.2976775},
}

@InProceedings{Schug:2014:DCC:2973377.2973466,
  author        = {Schug, Pascal and Kotlov, Alexandr},
  title         = {Designing CAx-process Chains},
  booktitle     = {Proceedings of the 11th International Conference on Informatics in Control, Automation and Robotics - Volume 2},
  year          = {2014},
  series        = {ICINCO 2014},
  pages         = {724--733},
  address       = {Portugal},
  publisher     = {SCITEPRESS - Science and Technology Publications, Lda},
  __markedentry = {[Neto:5]},
  acmid         = {2973466},
  doi           = {10.5220/0005054507240733},
  groups        = {Scopus, IEEEDSL, Duplicados},
  isbn          = {978-989-758-040-6},
  keywords      = {CAx, Chain, DSL., Model, Process, rank3},
  location      = {Vienna, Austria},
  numpages      = {10},
  url           = {http://dx.doi.org/10.5220/0005054507240733},
}

@InProceedings{Cherrueau:2013:FAS:2451617.2451621,
  author    = {Cherrueau, Ronan-Alexandre and Chebaro, Omar and S\"{u}dholt, Mario},
  title     = {Flexible Aspect-based Service Adaptation for Accountability Properties in the Cloud},
  booktitle = {Proceedings of the 4th International Workshop on Variability \&\#38; Composition},
  year      = {2013},
  series    = {VariComp '13},
  pages     = {13--18},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2451621},
  doi       = {10.1145/2451617.2451621},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-1867-9},
  keywords  = {AOP, accountability, gray-box composition, service composition},
  location  = {Fukuoka, Japan},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2451617.2451621},
}

@Book{Dabir:2015:GE:2987793,
  title     = {Gradle Essentials},
  publisher = {Packt Publishing},
  year      = {2015},
  author    = {Dabir, Kunal and Abhinandan},
  groups    = {ACM, excluidos},
  isbn      = {1783982365, 9781783982363},
}

@InProceedings{Regnell:2016:EPS:2951780.2951803,
  author    = {Regnell, Bj\"{o}rn},
  title     = {What Is Essential? --- A Pilot Survey on Views About the Requirements Metamodel of reqT.Org},
  booktitle = {Proceedings of the 22Nd International Working Conference on Requirements Engineering: Foundation for Software Quality - Volume 9619},
  year      = {2016},
  series    = {REFSQ 2016},
  pages     = {232--239},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2951803},
  doi       = {10.1007/978-3-319-30282-9_16},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-3-319-30281-2},
  keywords  = {CASE tool, Embedded domain-specific language, Empirical software engineering, Engineering education, Metamodel, Requirements engineering},
  location  = {Gothenburg, Sweden},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1007/978-3-319-30282-9_16},
}

@InProceedings{Bui:2016:SCE:2892664.2892699,
  author    = {Bui, Thi Mai Anh and Ziane, Mikal and Stinckwich, Serge and Ho, Tuong Vinh and Roche, Benjamin and Papoulias, Nick},
  title     = {Separation of Concerns in Epidemiological Modelling},
  booktitle = {Companion Proceedings of the 15th International Conference on Modularity},
  year      = {2016},
  series    = {MODULARITY Companion 2016},
  pages     = {196--200},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2892699},
  doi       = {10.1145/2892664.2892699},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-4033-5},
  keywords  = {Separation of concerns, compartmental models, domain specific languages, epidemiological modeling},
  location  = {M\&\#225;laga, Spain},
  numpages  = {5},
  url       = {http://doi.acm.org/10.1145/2892664.2892699},
}

@InProceedings{Goncharenko:2016:LDI:2997364.2997386,
  author    = {Goncharenko, Boryana and Zaytsev, Vadim},
  title     = {Language Design and Implementation for the Domain of Coding Conventions},
  booktitle = {Proceedings of the 2016 ACM SIGPLAN International Conference on Software Language Engineering},
  year      = {2016},
  series    = {SLE 2016},
  pages     = {90--104},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2997386},
  doi       = {10.1145/2997364.2997386},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4447-0},
  keywords  = {conventions, software language design},
  location  = {Amsterdam, Netherlands},
  numpages  = {15},
  url       = {http://doi.acm.org/10.1145/2997364.2997386},
}

@InProceedings{Trask:2012:LMD:2364412.2364466,
  author        = {Trask, Bruce and Roman, Angel},
  title         = {Leveraging Model Driven Engineering in Software Product Line Architectures},
  booktitle     = {Proceedings of the 16th International Software Product Line Conference - Volume 2},
  year          = {2012},
  series        = {SPLC '12},
  pages         = {271--273},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2364466},
  doi           = {10.1145/2364412.2364466},
  groups        = {Duplicados},
  isbn          = {978-1-4503-1095-6},
  keywords      = {architectures, model driven engineering, software product line, rank3},
  location      = {Salvador, Brazil},
  numpages      = {3},
  url           = {http://doi.acm.org/10.1145/2364412.2364466},
}

@Article{Jung:2015:SDA:2802768.2802837,
  author     = {Jung, Bernhard and Lenk, Matthias and Vitzthum, Arnd},
  title      = {Structured Development of 3D Applications: Round-trip Engineering in Interdisciplinary Teams},
  journal    = {Comput. Sci.},
  year       = {2015},
  volume     = {30},
  number     = {3-4},
  pages      = {285--301},
  month      = aug,
  acmid      = {2802837},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s00450-014-0258-8},
  groups     = {Scopus, excluidos},
  issn       = {1865-2034},
  issue_date = {August 2015},
  keywords   = {3D applications, Augmented reality, Model differences, Model driven development, Model merging, Model transformation, Round-trip engineering, Virtual reality},
  numpages   = {17},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s00450-014-0258-8},
}

@InProceedings{Selgrad:2015:LGV:2814204.2814220,
  author    = {Selgrad, Kai and Lier, Alexander and K\"{o}ferl, Franz and Stamminger, Marc and Lohmann, Daniel},
  title     = {Lightweight, Generative Variant Exploration for High-performance Graphics Applications},
  booktitle = {Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  year      = {2015},
  series    = {GPCE 2015},
  pages     = {141--150},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2814220},
  doi       = {10.1145/2814204.2814220},
  groups    = {Compendex, Scopus, excluidos},
  isbn      = {978-1-4503-3687-1},
  keywords  = {exploratory programming, general purpose code generation, prototyping, ray tracing},
  location  = {Pittsburgh, PA, USA},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2814204.2814220},
}

@Article{Selgrad:2015:LGV:2936314.2814220,
  author        = {Selgrad, Kai and Lier, Alexander and K\"{o}ferl, Franz and Stamminger, Marc and Lohmann, Daniel},
  title         = {Lightweight, Generative Variant Exploration for High-performance Graphics Applications},
  journal       = {SIGPLAN Not.},
  year          = {2015},
  volume        = {51},
  number        = {3},
  pages         = {141--150},
  month         = oct,
  __markedentry = {[Neto:5]},
  acmid         = {2814220},
  address       = {New York, NY, USA},
  doi           = {10.1145/2936314.2814220},
  groups        = {Duplicados},
  issn          = {0362-1340},
  issue_date    = {March 2016},
  keywords      = {exploratory programming, general purpose code generation, prototyping, ray tracing, rank3},
  numpages      = {10},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/2936314.2814220},
}

@InProceedings{Reggio:2014:UAD:2971130.2971138,
  author    = {Reggio, Gianna and Leotta, Maurizio and Ricca, Filippo and Clerissi, Diego},
  title     = {What Are the Used Activity Diagram Constructs?},
  booktitle = {Proceedings of the 2Nd International Conference on Model-Driven Engineering and Software Development},
  year      = {2014},
  series    = {MODELSWARD 2014},
  pages     = {87--98},
  address   = {Portugal},
  publisher = {SCITEPRESS - Science and Technology Publications, Lda},
  acmid     = {2971138},
  doi       = {10.5220/0004712000870098},
  groups    = {ACM, excluidos},
  isbn      = {978-989-758-007-9},
  keywords  = {Empirical Study, Survey, UML Usage},
  location  = {Lisbon, Portugal},
  numpages  = {12},
  url       = {http://dx.doi.org/10.5220/0004712000870098},
}

@Book{Almiray:2012:GA:2385810,
  title     = {Griffon in Action},
  publisher = {Manning Publications Co.},
  year      = {2012},
  author    = {Almiray, Andres and Ferrin, Danno and Shingler, James},
  address   = {Greenwich, CT, USA},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1935182234, 9781935182238},
}

@Article{Leitner:2014:EDA:2581033.2581040,
  author     = {Leitner, Andrea and Preschern, Christopher and Kreiner, Christian},
  title      = {Effective Development of Automation Systems Through Domain-specific Modeling in a Small Enterprise Context},
  journal    = {Softw. Syst. Model.},
  year       = {2014},
  volume     = {13},
  number     = {1},
  pages      = {35--54},
  month      = feb,
  acmid      = {2581040},
  address    = {Secaucus, NJ, USA},
  doi        = {10.1007/s10270-012-0289-1},
  groups     = {SpringerLink, Compendex, Scopus, excluidos},
  issn       = {1619-1366},
  issue_date = {February 2014},
  keywords   = {Automation system, Domain-specific modeling, Small enterprise cost model, Software product line, System development process},
  numpages   = {20},
  publisher  = {Springer-Verlag New York, Inc.},
  url        = {http://dx.doi.org/10.1007/s10270-012-0289-1},
}

@InProceedings{Nierstrasz:2016:DOP:2964602.2964604,
  author    = {Nierstrasz, Oscar},
  title     = {The Death of Object-Oriented Programming},
  booktitle = {Proceedings of the 19th International Conference on Fundamental Approaches to Software Engineering - Volume 9633},
  year      = {2016},
  pages     = {3--10},
  address   = {New York, NY, USA},
  publisher = {Springer-Verlag New York, Inc.},
  acmid     = {2964604},
  doi       = {10.1007/978-3-662-49665-7_1},
  groups    = {ACM, excluidos},
  isbn      = {978-3-662-49664-0},
  numpages  = {8},
  url       = {http://dx.doi.org/10.1007/978-3-662-49665-7_1},
}

@InProceedings{Fatollahi-Fard:2014:OFO:2685342.2685351,
  author    = {Fatollahi-Fard, Farzad and Donofrio, David and Michelogiannakis, George and Shalf, John},
  title     = {OpenSoC Fabric: On-Chip Network Generator: Using Chisel to Generate a Parameterizable On-Chip Interconnect Fabric},
  booktitle = {Proceedings of the 2014 International Workshop on Network on Chip Architectures},
  year      = {2014},
  series    = {NoCArc '14},
  pages     = {45--50},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2685351},
  doi       = {10.1145/2685342.2685351},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-3064-0},
  keywords  = {Chisel, Emulation, FPGA, Modeling, Network-on-Chip, Simulation},
  location  = {Cambridge, United Kingdom},
  numpages  = {6},
  url       = {http://doi.acm.org/10.1145/2685342.2685351},
}

@Article{Sergey:2015:MVF:2813885.2737964,
  author     = {Sergey, Ilya and Nanevski, Aleksandar and Banerjee, Anindya},
  title      = {Mechanized Verification of Fine-grained Concurrent Programs},
  journal    = {SIGPLAN Not.},
  year       = {2015},
  volume     = {50},
  number     = {6},
  pages      = {77--87},
  month      = jun,
  acmid      = {2737964},
  address    = {New York, NY, USA},
  doi        = {10.1145/2813885.2737964},
  groups     = {Scopus, excluidos},
  issn       = {0362-1340},
  issue_date = {June 2015},
  keywords   = {Compositional program verification, concurrency, dependent types, mechanized proofs, separation logic},
  numpages   = {11},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2813885.2737964},
}

@InProceedings{Sergey:2015:MVF:2737924.2737964,
  author        = {Sergey, Ilya and Nanevski, Aleksandar and Banerjee, Anindya},
  title         = {Mechanized Verification of Fine-grained Concurrent Programs},
  booktitle     = {Proceedings of the 36th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year          = {2015},
  series        = {PLDI '15},
  pages         = {77--87},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2737964},
  doi           = {10.1145/2737924.2737964},
  groups        = {Compendex, Duplicados},
  isbn          = {978-1-4503-3468-6},
  keywords      = {Compositional program verification, concurrency, dependent types, mechanized proofs, separation logic, rank3},
  location      = {Portland, OR, USA},
  numpages      = {11},
  url           = {http://doi.acm.org/10.1145/2737924.2737964},
}

@InProceedings{Chagas:2016:KUM:2973839.2973851,
  author    = {Chagas, Fernando and Durelli, Rafael and Terra, Ricardo and Camargo, Valter},
  title     = {KDM As the Underlying Metamodel in Architecture-Conformance Checking},
  booktitle = {Proceedings of the 30th Brazilian Symposium on Software Engineering},
  year      = {2016},
  series    = {SBES '16},
  pages     = {103--112},
  address   = {New York, NY, USA},
  publisher = {ACM},
  acmid     = {2973851},
  doi       = {10.1145/2973839.2973851},
  groups    = {ACM, excluidos},
  isbn      = {978-1-4503-4201-8},
  keywords  = {Architectural Conformance Checking, Architectural Reconciliation, Architecture-Description Language, Architecture-Driven Modernization, Knowledge-Discovery Metamodel},
  location  = {Maring\&aacute;, Brazil},
  numpages  = {10},
  url       = {http://doi.acm.org/10.1145/2973839.2973851},
}

@InProceedings{Trask:2013:LMD:2491627.2493901,
  author        = {Trask, Bruce and Roman, Angel},
  title         = {Leveraging Model Driven Engineering in Software Product Line Architectures},
  booktitle     = {Proceedings of the 17th International Software Product Line Conference},
  year          = {2013},
  series        = {SPLC '13},
  pages         = {279--279},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2493901},
  doi           = {10.1145/2491627.2493901},
  groups        = {Duplicados},
  isbn          = {978-1-4503-1968-3},
  keywords      = {rank3},
  location      = {Tokyo, Japan},
  numpages      = {1},
  url           = {http://doi.acm.org/10.1145/2491627.2493901},
}

@Book{Fehre:2015:JDD:2846376,
  title     = {JavaScript Domain-Driven Design},
  publisher = {Packt Publishing},
  year      = {2015},
  author    = {Fehre, Philipp},
  groups    = {ACM, excluidos},
  isbn      = {1784394327, 9781784394325},
}

@Book{Wynne:2012:CBB:2331446,
  title     = {The Cucumber Book: Behaviour-Driven Development for Testers and Developers},
  publisher = {Pragmatic Bookshelf},
  year      = {2012},
  author    = {Wynne, Matt and Hellesoy, Aslak},
  groups    = {ACM, excluidos},
  isbn      = {1934356808, 9781934356807},
}

@Article{Rompf:2014:SPJ:2666356.2594316,
  author     = {Rompf, Tiark and Sujeeth, Arvind K. and Brown, Kevin J. and Lee, HyoukJoong and Chafi, Hassan and Olukotun, Kunle},
  title      = {Surgical Precision JIT Compilers},
  journal    = {SIGPLAN Not.},
  year       = {2014},
  volume     = {49},
  number     = {6},
  pages      = {41--52},
  month      = jun,
  acmid      = {2594316},
  address    = {New York, NY, USA},
  doi        = {10.1145/2666356.2594316},
  groups     = {Scopus, Compendex, excluidos},
  issn       = {0362-1340},
  issue_date = {June 2014},
  keywords   = {JIT compilation, program generation, staging},
  numpages   = {12},
  publisher  = {ACM},
  url        = {http://doi.acm.org/10.1145/2666356.2594316},
}

@InProceedings{Rompf:2014:SPJ:2594291.2594316,
  author        = {Rompf, Tiark and Sujeeth, Arvind K. and Brown, Kevin J. and Lee, HyoukJoong and Chafi, Hassan and Olukotun, Kunle},
  title         = {Surgical Precision JIT Compilers},
  booktitle     = {Proceedings of the 35th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  year          = {2014},
  series        = {PLDI '14},
  pages         = {41--52},
  address       = {New York, NY, USA},
  publisher     = {ACM},
  __markedentry = {[Neto:5]},
  acmid         = {2594316},
  doi           = {10.1145/2594291.2594316},
  groups        = {Duplicados},
  isbn          = {978-1-4503-2784-8},
  keywords      = {JIT compilation, program generation, staging, rank3},
  location      = {Edinburgh, United Kingdom},
  numpages      = {12},
  url           = {http://doi.acm.org/10.1145/2594291.2594316},
}

@Book{Muschko:2014:GA:2631368,
  title     = {Gradle in Action},
  publisher = {Manning Publications Co.},
  year      = {2014},
  author    = {Muschko, Benjamin},
  address   = {Greenwich, CT, USA},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1617291307, 9781617291302},
}

@Book{Raychaudhuri:2013:SA:2530439,
  title     = {Scala in Action},
  publisher = {Manning Publications Co.},
  year      = {2013},
  author    = {Raychaudhuri, Nilanjan},
  address   = {Greenwich, CT, USA},
  groups    = {ACM, excluidos},
  isbn      = {1935182757, 9781935182757},
}

@Book{Thomas:2016:PEF:3006363,
  title     = {Programming Elixir 1.2: Functional , Concurrent , Pragmatic , Fun},
  publisher = {Pragmatic Bookshelf},
  year      = {2016},
  author    = {Thomas, Dave},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1680501666, 9781680501667},
}

@Book{Pepelnjak:2014:MVA:2685926,
  title     = {MPLS and VPN Architectures, Volume II},
  publisher = {WebEx Communications},
  year      = {2014},
  author    = {Pepelnjak, Ivan and Guichard, Jim and Apcar, Jeff},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1587144328, 9781587144325},
}

@Book{Washington:2016:CF:3002669,
  title     = {Clojure for Finance},
  publisher = {Packt Publishing},
  year      = {2016},
  author    = {Washington, Timothy},
  groups    = {ACM, excluidos},
  isbn      = {1785289284, 9781785289286},
}

@Book{Thomas:2014:PEF:2723830,
  title     = {Programming Elixir: Functional , Concurrent , Pragmatic , Fun},
  publisher = {Pragmatic Bookshelf},
  year      = {2014},
  author    = {Thomas, Dave},
  edition   = {1st},
  groups    = {ACM, excluidos},
  isbn      = {1937785580, 9781937785581},
}

@InProceedings{20142317789510,
  author        = {Rompf, Tiark and Sujeeth, Arvind K. and Brown, Kevin J. and Lee, Hyouk Joong and Chafi, Hassan and Olukotun, Kunle},
  title         = {Surgical precision JIT compilers},
  year          = {2014},
  pages         = {41 - 52},
  address       = {Edinburgh, United kingdom},
  note          = {Abstract interpretations;Compiler construction;Compiler optimizations;Just-in-time compilation;Natural interfaces;Optimizing compilers;Partial evaluation;Translation strategies;},
  __markedentry = {[Neto:5]},
  abstract      = {Just-in-time (JIT) compilation of running programs provides more optimization opportunities than offline compilation. Modern JIT compilers, such as those in virtual machines like Oracle's HotSpot for Java or Google's V8 for JavaScript, rely on dynamic profiling as their key mechanism to guide optimizations. While these JIT compilers offer good average performance, their behavior is a black box and the achieved performance is highly unpredictable. In this paper, we propose to turn JIT compilation into a precision tool by adding two essential and generic metaprogramming facilities: First, allow programs to invoke JIT compilation explicitly. This enables controlled specialization of arbitrary code at runtime, in the style of partial evaluation. It also enables the JIT compiler to report warnings and errors to the program when it is unable to compile a code path in the demanded way. Second, allow the JIT compiler to call back into the program to perform compiletime computation. This lets the program itself define the translation strategy for certain constructs on the fly and gives rise to a powerful JIT macro facility that enables "smart" libraries to supply domainspecific compiler optimizations or safety checks. We present Lancet, a JIT compiler framework for Java bytecode that enables such a tight, two-way integration with the running program. Lancet itself was derived from a high-level Java bytecode interpreter: staging the interpreter using LMS (Lightweight Modular Staging) produced a simple bytecode compiler. Adding abstract interpretation turned the simple compiler into an optimizing compiler. This fact provides compelling evidence for the scalability of the staged-interpreter approach to compiler construction. In the case of Lancet, JIT macros also provide a natural interface to existing LMS-based toolchains such as the Delite parallelism and DSL framework, which can now serve as accelerator macros for arbitrary JVM bytecode. Copyright &copy; 2014 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  key           = {Program compilers},
  keywords      = {Java programming language;Just in time production;Macros;Program translators;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2594291.2594316},
}

@InProceedings{20144500172258,
  author    = {Melingui, A. and Merzouki, R. and Mbede, J.B. and Escande, C. and Daachi, B. and Benoudjit, N.},
  title     = {Qualitative approach for inverse kinematic modeling of a Compact Bionic Handling Assistant trunk},
  year      = {2014},
  pages     = {754 - 761},
  address   = {Beijing, China},
  note      = {Biological behavior;Distal supervised learning;High performance control;Inverse kinematic models;Nonlinear behavior;Objective functions;Qualitative approach;Real-time implementations;},
  abstract  = {Compact Bionic Handling Assistant (CBHA) is a continuum manipulator, with pneumatic-based actuation and compliant gripper. This bionic arm is attached to a mobile robot named Robotino. Inspired by the elephant's trunk, it can reproduce biological behaviors of trunks, tentacles, or snakes. Unlike rigid link robot manipulators, the development of high performance control algorithm of continuum robot manipulators remains a challenge, particularly due to their complex mechanical design, hyper-redundancy and presence of uncertainties. Numerous studies have been investigated for modeling of such complex systems. Such continuum robots, like the CBHA present a set of nonlinearities and uncertainties, making difficult to build an accurate analytical model, which can be used for control strategies development. Hence, learning approach becomes a suitable tool in such scenarios in order to capture un-modeled nonlinear behaviors of the continuous robots. In this paper, we present a qualitative modeling approach, based on neuronal model of the inverse kinematic of CBHA. A penalty term constraint is added to the inverse objective function into Distal Supervised Learning (DSL) scheme to select one particular inverse model from the redundancy manifold. The inverse kinematic neuronal model is validated by conducting a real-time implementation on a CBHA trunk. &copy; 2014 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {Proceedings of the International Joint Conference on Neural Networks},
  key       = {Manipulators},
  keywords  = {Algorithms;Bionics;Complex networks;Control nonlinearities;Flexible manipulators;Industrial robots;Inverse kinematics;Inverse problems;Kinematics;Machine design;Modular robots;Real time control;Redundancy;Robot applications;Robots;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/IJCNN.2014.6889947},
}

@InProceedings{20132816489871,
  author    = {Golabczak, Marcin and Jacquet, Philippe and Nouveau, Corinne and Fliti, Romain},
  title     = {Tribological investigations of TiC+a-C:H coatings manufactured on X38CrMoV5-1 steel using PVD technology},
  year      = {2013},
  volume    = {334-335},
  pages     = {97 - 104},
  address   = {Istanbul, Turkey},
  note      = {Cathodic arc evaporation;High temperature condition;High temperature tribometer;Low friction coefficients;Pin-on-disc-tests;Pvd methods;Temperature conditions;Tribological investigations;},
  abstract  = {X38CrMoV5-1 steel is a typical tool steel commonly used in forging and plastic moulding industry for production of ejectors, slides, dies, etc. In plastics moulding a lot of these parts sustain relative movement. Because of this, some seizing or micro-welding may appear, especially when lubrication is not used. For many years, the different types of protective coatings were developed to avoid such problems. Most of the obtained solutions relate to the manufacturing of low friction coatings obtained by different nitriding processes and by CVD or PVD methods. In this article, the friction coefficients and the wear resistances of TiC+a-C:H protective coatings manufactured on X38CrMoV5-1 steel samples by using PVD technology are studied. The investigations are based on tribometer tests in different temperature conditions. The process of deposition of PVD coatings was realized by using multisource, hybrid factory-scale equipment of type URM 079. This equipment allows for deposition of coatings by a physical method. The tribological tests were performed using a precision high temperature tribometer under ambient and high temperature conditions with a steel and corundum balls as a counter-samples. In this paper, the results of these tribological tests are presented. It is shown that the measured friction coefficient of steel samples with PVD coatings is significantly lower than the friction coefficient of uncoated steel. It is also shown that X38CrMoV5-1 steel samples with manufactured TiC+a-C:H coatings are characterized by a very low friction coefficient and high wear resistance. &copy; (2013) Trans Tech Publications, Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Titanium carbide},
  keywords  = {Deposition;Diffusion in solids;Friction;High temperature operations;Plastics molding;Protective coatings;Tool steel;Tribology;Wear resistance;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.334-335.97},
}

@InProceedings{20155101683446,
  author    = {Ignaszak, Z. and Popielarski, P.},
  title     = {Effective modeling of phenomena in over-moisture zone existing in porous sand mould using the simplified simulation systems applied in foundry},
  year      = {2015},
  volume    = {365},
  pages     = {200 - 206},
  address   = {Paris, France},
  note      = {Sand moulds;Simulation systems;Technological properties;Technological tools;Thermal coefficients;Thermo-physical property;Validation;Virtualizations;},
  abstract  = {The problem concerns the thermo-physical properties of the mould material to which the liquid metal is poured (foundry industry). In the foundry processes the sand mould fulfils an auxiliary role only as technological tool, but its physical and technological properties determine the quality of the casting. The study includes the iron plate casting experiments poured in multi-component porous sand mould. The temperature fields of casting and in different zones of the mould were recorded. The determining of the thermo-physical properties of mould sand in over-moisture zone using simulation tests in Procast system was the goal of our study. An originality of the related research is an attempt to take into account the effects of the global thermal phenomena occurring in the quartz sand bonded by bentonite-water binder, using the apparent thermal coefficients. The majority of foundry simulation systems are not capable to modeling the phase transformation of water into vapor, vapor transport and its condensation in porous media (mould). In these cases the application of apparent coefficients is an effective way. &copy; (2015) Trans Tech Publications, Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Foundry sand},
  keywords  = {Casting;Diffusion in solids;Foundries;Heat transfer;Liquids;Mass transfer;Moisture;Molds;Physical properties;Porous materials;Sand;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.365.200},
}

@InProceedings{20155101683449,
  author    = {Campos, Daniel Baracuy Da Cunha and Conrado, Libia De Sousa and Morais, Crislene Rodrigues Silva},
  title     = {Physical - Chemistry characterization of Sweet Sorghum bagasse in nature and delignificate with NaOH to produce bioethanol},
  year      = {2015},
  volume    = {365},
  pages     = {219 - 225},
  address   = {Paris, France},
  note      = {Independent variables;Lignocellulosic;Lignocellulosic wastes;Physico-chemical characterization;Sodium hydroxides;Sweet sorghum;Sweet sorghum bagasse;Time-dependent variables;},
  abstract  = {Lignocellulosic wastes are the most abundant in the world and there is currently a global concern to harness them as biomass to produce cellulosic ethanol, being possible due to the materials being rich in cellulose. The main goal of this work is to produce the delignification from Sweet Sorghum waste free from extractives as well as the physico-chemical characterization in the natural state after being delignificated aiming to remove the lignin that acts as a barrier preventing access of the enzyme to the cellulose in the enzymatic hydrolysis processes. The following tests were performed: moisture, ash, cellulose, lignin, hemicelluloses, AR, extractives, XRD and SEM. Aftter the procedure of delignification, it was characterized as cellulose, lignin, XRD and SEM to check if there was removal of the lignin and if there was no change in crystallinity. The characterization showed that the Sweet Sorghum waste is a viable alternative for the production of bioethanol and proved to be an important source of cellulose presenting a content of glucose of 45.99 &plusmn; 0.63% and a lignin content of 14.63 &plusmn; 0.23%. The Sweet Sorghum waste was deslignificated by pulping with sodium hydroxide (NaOH) process, using as an experimental tool design type 2<sup>3</sup>with 3 replications at the center point, to evaluate the effect of independent variables temperature, such as concentration of the NaOH solution and the time dependent variable in the delignification. The planning showed through the Pareto's diagram that the most influential variable in the process was the concentration which showed a response of 75.1258 and a greater interaction occurred on the variables temperature and concentration with a response of 1.653117. The regression model as well as being a statistically significant predictor, also presents a reason F calculated and F tabulated of 10.10 and achieving a maximum yield of 57.85% delignification. After delignification processes the waste showed a rate of 5.81 &plusmn; 0.18% lignin and 43.13 &plusmn; 0.53% cellulose, as well as an increase in crystallinity, verified by analysis of SEM and XRD. &copy; (2015) Trans Tech Publications, Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Characterization},
  keywords  = {Bioethanol;Cellulose;Cellulosic ethanol;Delignification;Diffusion in solids;Enzymatic hydrolysis;Ethanol;Heat transfer;Lignin;Mass transfer;Physical chemistry;Regression analysis;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.365.219},
}

@InProceedings{20142617869398,
  author    = {Notario, B. and Pinto, J. and Solorzano, E. and Escudero, J. and Martin-De Leon, J. and Velasco, D. and Rodriguez-Perez, M.A.},
  title     = {In-Situ optical analysis of structural changes in polylactic acid (PLA) during the gas dissolution process},
  year      = {2014},
  volume    = {353},
  pages     = {131 - 136},
  address   = {Madrid, Spain},
  note      = {Crystallization process;Glass windows;In-situ characterization;Nondestructive tools;Optical measurement;Optical parameter;Poly lactic acid;Temporal evolution;},
  abstract  = {An own-designed pressure vessel with glass windows has been employed to perform an in-situ characterization of the temporal evolution of the crystallization process of an amorphous polylactic acid (PLA) under different controlled CO2 pressures and temperatures. It has been proven that crystallinity can be related to optical parameters such as transmissivity, obtaining information about the whole process by optical measurements. The method has the advantage of measuring insitu over bulk samples with a non-destructive tool. The obtained results have shown some unexpected trends that have been explained taking into account the complex phenomena occurring during the crystallization process of PLA in the presence of CO2 at high pressure &copy;(2014) Trans Tech Publications, Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Polyesters},
  keywords  = {Carbon dioxide;Diffusion;Diffusion in solids;Glass;Optical data processing;Polymers;Pressure vessels;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.353.131},
}

@InProceedings{20142617869382,
  author    = {De Oliveira, Iran Rodrigues and Amico, Sandro Campos and Souza, Jeferson Avila and De Lima, Antonio Gilson Barbosa},
  title     = {Resin transfer molding process: A numerical analysis},
  year      = {2014},
  volume    = {353},
  pages     = {44 - 49},
  address   = {Madrid, Spain},
  note      = {Computational fluid flow;Fibrous media;Granulometries;Injection pressures;Numerical results;Rectilinear flow;Resin flows;Room temperature;},
  abstract  = {This work aims to investigate the infiltration of a CaCO3 filled resin using experiments and the PAM-RTM software. A preform of glass fiber mat, with dimensions 320 x 150 x 3.6 mm, has been used for experiments conducted at room temperature, with injection pressure of 0.25bar. The resin contained 10 and 40% CaCO3 content with particle size 38i&grave;m. The numerical results were evaluated by direct comparison with experimental data. The flat flow-front profile of the rectilinear flow was reached approximately halfway the length of the mold. It was observed, that the speed of the filling decreases with increasing CaCO3 content and,the higher the amount of CaCO3 in the resin, the lower the permeability of the reinforcement that is found. The reduction in permeability is due to the presence of calcium carbonate particles between the fibers, hindering the resin flow in the fibrous media. The computational fluid flow analysis with the PAM-RTM proved to be an accurate tool study for the processing of composite materials. &copy; (2014) Trans Tech Publications, Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Resins},
  keywords  = {Diffusion in solids;Experiments;Flow simulation;Pressure;Resin transfer molding;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.353.44},
}

@InProceedings{20122015025518,
  author    = {Valicek, Jan and Harnicarova, Marta and Cep, Robert and Rokosz, Krzysztof and Lukianowicz, Czeslaw and Kozak, Drazan and Zelenak, Michal and Kotial, Pavol},
  title     = {Surface quality control of materials being cut by laser with respect to corrosion resistance},
  year      = {2012},
  volume    = {326-328},
  pages     = {324 - 329},
  address   = {Algarve, Portugal},
  note      = {Analytical approximation;Basic equations;Deformation properties;Direct impact;Input variables;Laser cutting;Laser performance;Laser power;Material property;Mechanical balance;Prediction equations;Stress-strain;Traverse speed;},
  abstract  = {In the field of laser cutting, the research area is oriented mainly to understanding of the mechanism of removal, as well as to the combination of factors entering the process. This process of disintegration of materials presents a problem of analytical approximation, elaboration, and description [1 - 5]. Compared with previous approach to a solution, we have chosen our own way and we focus on mechanical respectively stress-strain parameters of the material being cut and the mechanical balance system: material properties - tool properties - deformation properties. We shall present here the basic forms of prediction equations for calculating the roughness of cutting walls, as well as other equations which were derived by modifying the basic equations for different application purposes, especially to calculate the optimum traverse speed v<inf>popt</inf>, optimal laser performance W<inf>lasopt</inf> and technologically important ratio IND<inf>vpwopt</inf> = v<inf>popt</inf>/W <inf>lasopt</inf>. These contain easily available input variables for substitution. The basic forms, including the modified forms are aimed at predicting the quality of cut with its depth limits. The paper presents the method of optimization of the ratio between the traverse speed v<inf>p</inf> and laser power W<inf>las</inf> which minimizes the final surface roughness after cutting with a direct impact on corrosion resistance of materials. &copy; (2012) Trans Tech Publications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Corrosion resistance},
  keywords  = {Control;Diffusion in solids;Heat transfer;Liquids;Mass transfer;Mechanical properties;Microstructure;Nanostructured materials;Optimization;Surface properties;Surface roughness;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.326-328.324},
}

@InProceedings{20122015025580,
  author    = {Junior, Jose Roberto Severino Martins and Nogueira, Renata Abdallah and De Araujo, Raul Oliveira and Grandini, Carlos Roberto},
  title     = {Diffusion of oxygen and nitrogen in the Ti-15Mo alloy used for biomedical applications},
  year      = {2012},
  volume    = {326-328},
  pages     = {696 - 701},
  address   = {Algarve, Portugal},
  note      = {Anelastic properties;Biomedical applications;Cubic crystalline;Excellent corrosion resistances;Interstitial atoms;Interstitial elements;Matrix metal;Mechanical spectroscopy;Preexponential factor;},
  abstract  = {The Ti-15Mo alloy is a promising material for use as a biomaterial because of its excellent corrosion resistance and its good combination of mechanical properties, such as fatigue, hardness, and wears resistance. This alloy has a body-centered predominantly cubic crystalline structure and the addition of interstitial atoms, such as oxygen and nitrogen, strongly alters its mechanical properties. Mechanical spectroscopy is a powerful tool to study the interaction of interstitial elements with the matrix metal or substitutional solutes, providing information such as the distribution and the concentration of interstitial elements. The objective of this paper is to study of the effects of heavy interstitial elements, such as oxygen and nitrogen, on the anelastic properties of the Ti-15Mo alloy by using mechanical spectroscopy measurements. In this study, the diffusion coefficients, pre-exponential factors, and activation energies were calculated for the oxygen in the Ti-15Mo alloy. &copy; (2012) Trans Tech Publications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Molybdenum},
  keywords  = {Activation energy;Biological materials;Biomaterials;Corrosion resistance;Diffusion;Diffusion in solids;Heat transfer;Liquids;Mass transfer;Mechanical properties;Medical applications;Microstructure;Molybdenum alloys;Nanostructured materials;Nitrogen;Oxygen;Titanium alloys;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.326-328.696},
}

@InProceedings{20122015025550,
  author    = {Sugahara, T. and Martinolli, K. and Reis, D.A.P. and Moura Neto, C. and Couto, A.A. and Piorino Neto, F. and Barboza, M.J.R.},
  title     = {Creep behavior of the inconel 718 superalloy},
  year      = {2012},
  volume    = {326-328},
  pages     = {509 - 514},
  address   = {Algarve, Portugal},
  note      = {Aero-engine turbines;Constant load creep tests;Creep behaviors;Elevated temperature;Experimental parameters;High temperature deformation;Inconel-718;Mechanical stressing;Micro-structural characterization;Ni-base superalloys;Nickel base alloys;Primary creep;Secondary creep;Steady state creep rate;Surface stability;},
  abstract  = {A superalloy is an alloy developed for elevated temperature service, where relatively severe mechanical stressing is encountered, and where high surface stability is frequently required. High temperature deformation of Ni-base superalloys is very important since the blades and discs of aero engine turbine, because need to work at elevated temperature for an expected long period. The nickel-base alloy Inconel 718 has being investigated because it is one of the most widely used superalloys. The objective of this work was to evaluate the creep behavior of the Inconel 718 focusing on the determination of the experimental parameters related to the primary and secondary creep states. Constant load creep tests were conducted with at 650, 675 and 700&deg;C and the range of stress was from 625 to 814 MPa to according to ASTM E139 standard. The relation between primary creep time and steady-state creep rate, obeyed the equation for both atmospherics conditions at 650, 675 and 700&deg;C. The microstructural characterization employing the technique of scanning electron microscopy has been a valuable tool for understanding the mechanisms of creep. &copy; (2012) Trans Tech Publications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {10120386},
  journal   = {Defect and Diffusion Forum},
  key       = {Creep},
  keywords  = {Atmospheric electricity;Diffusion in solids;Heat transfer;High temperature operations;Liquids;Mass transfer;Microstructure;Nanostructured materials;Scanning electron microscopy;Superalloys;Turbomachine blades;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/DDF.326-328.509},
}

@InProceedings{20164302937237,
  author        = {Trask, Bruce and Roman, Angel},
  title         = {Leveraging model driven engineering in software product line architectures},
  year          = {2016},
  volume        = {16-23-September-2016},
  pages         = {310 -},
  address       = {Beijing, China},
  note          = {Domain specific languages;Eclipse modeling framework;Graphical editors;Language workbenches;Leveraging model;Model-driven Engineering;Software product line architecture;Visual artifacts;},
  __markedentry = {[Neto:5]},
  abstract      = {The process of Developing Software Product Line Architectures can be a complex task. However, the use of Model Driven Engineering (MDE) techniques can facilitate the development of SPLAs by introducing Domain Specific Languages, Graphical Editors, and Generators. Together these are considered the sacred triad of MDE. Key to understanding MDE and how it fits into SPLAs is to know exactly what each part of the trinity means, how it relates to the other parts, and what the various implementations are for each. This tutorial will demonstrate the use of the Eclipse Modeling Framework (EMF) and the Sirius Graphical Framework to create an actual MDE solution as applied to a sample SPLA. These tools collectively form what is called a Language Workbench. During this tutorial we will also illustrate how to model the visual artifacts of our Domain Model and generate a Domain Specific Graphical Editor from a Domain Specific Language. &copy; 2016 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Software design},
  keywords      = {Computer programming languages;Computer software;Embedded systems;Graphical user interfaces;Problem oriented languages;Visual languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2934466.2956654},
}

@InProceedings{20164302937248,
  author        = {Lillack, Max and Berger, Thorsten and Hebig, Regina},
  title         = {Experiences from reengineering and modularizing a legacy software generator with a projectional language workbench},
  year          = {2016},
  volume        = {16-23-September-2016},
  pages         = {346 - 353},
  address       = {Beijing, China},
  note          = {Critical software;Generation process;Individual customers;Language extensibilities;Language workbenches;Legacy software;Meta Programming;Model to text transformations;},
  __markedentry = {[Neto:5]},
  abstract      = {We present a case study of migrating a legacy language infrastructure and its codebase to a projectional language workbench. Our subject is the generator tool ADS used for generating COBOL code for critical software systems. We decompose the ADS language into smaller sub-languages, which we implement as individual DSLs in the projectional language workbench JetBrains Meta Programming System (MPS). Our focus is on ADS' preprocessor sub-language, used to realize static variability by conditionally including or parameterizing target code. The modularization of ADS supports future extensions and tailoring the language infrastructure to the needs of individual customers. We re-implement the generation process of target code as chained model-to-model and model-to-text transformations. For migrating existing ADS code, we implement an importer relying on a parser in order to create a model in MPS. We validate the approach using an ADS codebase for handling car registrations in the Netherlands. Our case study shows the feasibility and benefits (e.g., language extensibility and modern editors) of the migration, but also smaller caveats (e.g., small syntax adaptations, the necessity of import tools, and providing training to developers). Our experiences are useful for practitioners attempting a similar migration of legacy generators to a projectional language workbench. &copy; 2016 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Deceleration},
  keywords      = {Codes (symbols);Computer software;Modular construction;Syntactics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2934466.2962733},
}

@InProceedings{20163502742316,
  author    = {Bernardino, Maicon and Zorzo, Avelino F. and Rodrigues, Elder M.},
  title     = {Canopus: A Domain-Specific Language for Modeling Performance Testing},
  year      = {2016},
  pages     = {157 - 167},
  address   = {Chicago, IL, United states},
  note      = {Domain specific languages;Domain specific modeling;Industrial case study;Language workbenches;Model based testing;Model performance;Performance testing;Technology development;},
  abstract  = {Despite all the efforts to reduce the cost of the testing phase in software development, it is still one of the most expensive phases. In order to continue to minimize those costs, in this paper, we propose a Domain-Specific Language (DSL), built on top of MetaEdit+ language workbench, to model performance testing for web applications. Our DSL, called Canopus, was developed in the context of a collaboration between our university and a Technology Development Laboratory (TDL) from an Information Technology (IT) company. We present, in this paper, the Canopus metamodels, its domain analysis, a process that integrates Canopus to Model-Based Performance Testing, and applied it to an industrial case study. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Inclusos},
  journal   = {Proceedings - 2016 IEEE International Conference on Software Testing, Verification and Validation, ICST 2016},
  key       = {Software testing},
  keywords  = {Computational linguistics;Computer programming languages;Model checking;Modeling languages;Problem oriented languages;Software design;Verification;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICST.2016.13},
}

@InProceedings{20162602546943,
  author        = {Voelter, Markus and Molotnikov, Zaur and Kolb, Bernd},
  title         = {Towards improving software security using language engineering and mbeddr C},
  year          = {2015},
  pages         = {55 - 62},
  address       = {Pittsburgh, PA, United states},
  note          = {Domain specific languages;Empirical evaluations;IDEs;Language engineering;Language extensions;Language workbenches;Modular extension;Software security;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper explores the use of domain-specific languages for improving software security, which deals with developing software in a way that is not maliciously exploitable. Specifically we demonstrate how modular extension of the C programming language can help with technical and process-related aspects of software security. Some of these examples are already implemented, some are analytical extrapolations from related work we have done in the past; a detailed empirical evaluation has not yet been done. We rely on mbeddr, an extensible version of C developed with the JetBrains MPS language workbench. We conclude the paper with a discussion of the potential drawbacks of the approach and how these can be addressed in the future. Copyright Is Held By The Owner/author(s).},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {DSM 2015 - Proceedings of the Workshop on Domain-Specific Modeling},
  key           = {C (programming language)},
  keywords      = {Computational linguistics;Computer programming languages;Modeling languages;Models;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2846696.2846698},
}

@InProceedings{20160801977282,
  author    = {Voelter, Markus and Van Deursen, Arie and Kolb, Bernd and Eberle, Stephan},
  title     = {Using C language extensions for developing embedded software: A case study},
  year      = {2015},
  volume    = {25-30-Oct-2015},
  pages     = {655 - 674},
  address   = {Pittsburgh, PA, United states},
  note      = {Domain specific languages;Hardware independent;Industrial case study;Language engineering;Language extensions;Language workbenches;Memory consumption;Modular extension;},
  abstract  = {We report on an industrial case study on developing the embedded software for a smart meter using the C programming language and domain-specific extensions of C such as components, physical units, state machines, registers and interrupts. We find that the extensions help significantly with managing the complexity of the software. They improve testability mainly by supporting hardware-independent testing, as illustrated by low integration efforts. The extensions also do not incur significant overhead regarding memory consumption and performance. Our case study relies on mbeddr, an extensible version of C. mbeddr, in turn, builds on the MPS language workbench which supports modular extension of languages and IDEs. &copy; 2015 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
  key       = {C (programming language)},
  keywords  = {Computational linguistics;Computer programming languages;Computer systems programming;Embedded software;Integration testing;Object oriented programming;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2814270.2814276},
}

@InProceedings{20154501495155,
  author        = {Deantoni, Julien and Diallo, Issa Papa and Teodorov, Ciprian and Champeau, Joel and Combemale, Benoit},
  title         = {Towards a meta-language for the concurrency concern in DSLs},
  year          = {2015},
  volume        = {2015-April},
  pages         = {313 - 316},
  address       = {Grenoble, France},
  note          = {Analysis techniques;Complex software;Concurrency constraints;Domain specific languages;Industrial processs;Language workbenches;Meta language;Synchronous data flow;},
  __markedentry = {[Neto:5]},
  abstract      = {Concurrency is of primary interest in the development of complex software-intensive systems, as well as the deployment on modern platforms. Furthermore, Domain-Specific Languages (DSLs) are increasingly used in industrial processes to separate and abstract the various concerns of complex systems. However, reifying the definition of the DSL concurrency remains a challenge. This not only prevents leveraging the concurrency concern of a particular domain or platform, but it also hinders: a) the development of a complete understanding of the DSL semantics; b) the effectiveness of concurrency-aware analysis techniques; c) the analysis of the deployment on parallel architectures. In this paper, we introduce the key ideas leading toward MoCCML, a dedicated meta-language for formally specifying the concurrency concern within the definition of a DSL. The concurrency constraints can reflect the knowledge in a particular domain, but also the constraints of a particular platform. MoCCML comes with a complete language workbench to help a DSL designer in the definition of the concurrency directly within the concepts of the DSL itself, and a generic workbench to simulate and analyze any model conforming to this DSL. MoCCML is illustrated on the definition of an lightweight extension of SDF (Synchronous Data Flow [1]). &copy; 2015 EDAA.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSL, Duplicados},
  issn          = {15301591},
  journal       = {Proceedings -Design, Automation and Test in Europe, DATE},
  key           = {Computational linguistics},
  keywords      = {Computer programming languages;Parallel architectures;Problem oriented languages;Response time (computer systems);Semantics;, rank3},
  language      = {English},
}

@InProceedings{20155201722487,
  author        = {Gjosaeter, Terje and Prinz, Andreas},
  title         = {Languagelab - a meta-modelling environment},
  year          = {2015},
  volume        = {9369},
  pages         = {91 - 105},
  address       = {Berlin, Germany},
  note          = {Component based approach;Development environment;Language;Language specification;Language workbenches;Meta-modelling;User friendliness;Workbenches;},
  __markedentry = {[Neto:5]},
  abstract      = {In the Language Lab language workbench, we build on a component-based approach to language specification that facilitates the specification of all aspects of a computer language in a consistent manner, taking into account best practices in meta-modelling and language design. The workbench allows operation on a suitable abstraction level, and also focuses on user-friendliness and a low threshold to getting started, in order to make it useful for teaching of meta-modelling and language design and specification. The platform is open for third party language modules and facilitates rapid prototyping of DSLs, re-use of language modules, and experiments with multiple concrete syntaxes. The platform also allows interested parties to develop Language Lab modules that can further add to the features and capabilities of the Language Lab platform. &copy; Springer International Publishing Switzerland 2015.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Modeling languages},
  keywords      = {Computational linguistics;DSL;Specifications;Systems analysis;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-24912-4_8},
}

@InProceedings{20153701272054,
  author    = {Erdweg, Sebastian and Van Der Storm, Tijs and Volter, Markus and Tratt, Laurence and Bosman, Remi and Cook, William R. and Gerritsen, Albert and Hulshout, Angelo and Kelly, Steven and Loh, Alex and Konat, Gabriel and Molina, Pedro J. and Palatnik, Martin and Pohjonen, Risto and Schindler, Eugen and Schindler, Klemens and Solmi, Riccardo and Vergu, Vlad and Visser, Eelco and Van Der Vlist, Kevin and Wachsmuth, Guido and Van Der Woning, Jimi},
  title     = {Evaluating and comparing language workbenches: Existing results and benchmarks for the future},
  year      = {2015},
  volume    = {44},
  pages     = {24 - 47},
  note      = {Bench-mark problems;Domain specific languages;Empirical data;Generic features;Language workbenches;Questionnaire language;},
  abstract  = {Language workbenches are environments for simplifying the creation and use of computer languages. The annual Language Workbench Challenge (LWC) was launched in 2011 to allow the many academic and industrial researchers in this area an opportunity to quantitatively and qualitatively compare their approaches. We first describe all four LWCs to date, before focussing on the approaches used, and results generated, during the third LWC. We give various empirical data for ten approaches from the third LWC. We present a generic feature model within which the approaches can be understood and contrasted. Finally, based on our experiences of the existing LWCs, we propose a number of benchmark problems for future LWCs. &copy; 2015 Elsevier Ltd. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, excluidos},
  issn      = {14778424},
  journal   = {Computer Languages, Systems and Structures},
  key       = {Computational linguistics},
  keywords  = {Benchmarking;Computer programming languages;Problem oriented languages;Surveying;Surveys;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.cl.2015.08.007},
}

@Article{20153501222624,
  author    = {Voelter, Markus and Warmer, Jos and Kolb, Bernd},
  title     = {Projecting a Modular Future},
  journal   = {IEEE Software},
  year      = {2015},
  volume    = {32},
  number    = {5},
  pages     = {46 - 52},
  note      = {Domain specific languages;Language engineering;Language workbenches;mbeddr;Meta Programming;MPS;projectional editing;},
  abstract  = {Two innovations are enhancing programming languages' capabilities. First, modularity lets you combine independently developed languages without changing their respective definitions. A language is no longer a fixed quantity; you can extend it with domain-specific constructs as needed. Second, projectional editing lets you build editors and IDEs that don't require parsers. Such editors and IDEs support a range of tightly integrated notations, including textual, symbolic, tabular, and graphical notations. In addition, by avoiding parsers, they avoid grammar composition's well-known limitations. Three examples illustrate how these two innovations affect programming-language design. A set of modular extensions of C for embedded programming enables efficient code generation and formal analysis. A language for requirements engineering flexibly combines structured and unstructured (prose) data. Finally, a language for defining insurance rules uses mathematical notation. These examples all rely on the open source JetBrains MPS (Meta Programming System) language workbench. This article is part of a special issue on Software Architecture. &copy; 1984-2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {07407459},
  key       = {C (programming language)},
  keywords  = {Computational linguistics;Computer programming languages;Formal methods;Object oriented programming;Open source software;Open systems;Problem oriented languages;Software design;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/MS.2014.103},
}

@InProceedings{20153601229013,
  title         = {ACM International Conference Proceeding Series},
  year          = {2015},
  volume        = {2015-March},
  pages         = {AOSA -},
  address       = {Fort Collins, CO, United states},
  __markedentry = {[joao_:5]},
  abstract      = {The proceedings contain 17 papers. The topics discussed include: a theory of modularity for automated software development; feature modeling and traceability for concern-driven software development with TouchCORE; subjective, multidimensional modularity with Korz Harold Ossher David Ungar Doug Kimelman; a language workbench for implementing your favorite extension to AspectJ&lowast;; towards the use of slicing techniques for an efficient invariant checking; composition challenges for sensor data visualization; first-class domain specific aspect languages&lowast;; on liberating programs from the von Neumann architecture via event-based modularization; demanding first-class equality for domain specific aspect languages&lowast;; and visualization algorithms for feature models in concern-driven software development.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank5},
  language      = {English},
}

@InProceedings{20153601228999,
  author    = {Hadas, Arik and Lorenz, David H.},
  title     = {A language workbench for implementing your favorite extension to AspectJ},
  year      = {2015},
  volume    = {2015-March},
  pages     = {19 - 20},
  address   = {Fort Collins, CO, United states},
  note      = {Aspect-J;Aspect-Oriented Programming (AOP);Domain specific;Domain specific languages;Join point;Language workbenches;Spoofax;},
  abstract  = {Many extensions to AspectJ are proposed and prototyped. However, without a supportive language workbench the proper evaluation and production of these extensions is often prohibitively costly. We demonstrate a novel language workbench for creating such extensions, comprising AWESOME and Spoofax. The implementation of two advanced extensions to AspectJ are illustrated: explicit join points (EJPs) and closure join points (CJPs). Not only were these extensions fully implemented from scratch with reasonable effort, but also our implementations support advanced features that were omitted in the original prototypes. The demonstration will provide a hands-on overview of the process of implementing EJPs and CJPs in our workbench and how one can implement other extensions with relative ease.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {Computational linguistics},
  keywords  = {Aspect oriented programming;Computer programming languages;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2735386.2735924},
}

@InProceedings{20153601229006,
  author        = {Hadas, Arik and Lorenz, David H.},
  title         = {Demanding first-class equality for domain specific aspect languages},
  year          = {2015},
  volume        = {2015-March},
  pages         = {35 - 38},
  address       = {Fort Collins, CO, United states},
  note          = {Aspect-Oriented Programming (AOP);AWESOME;Domain specific;Domain specific languages;Language workbenches;Spoofax;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain specific aspect languages (DSALs) are programming languages that are both domain specific and aspect-oriented. However, DSALs seem to be second-class. On the one hand, language workbenches handle only DSLs that are not aspect-oriented, making it difficult to develop new DSALs. On the other hand, development tools for general purpose aspect-oriented languages do not work with DSALs, making it difficult to use them. In this work we present an approach for building a modular DSAL workbench that produces first-class DSALs. A DSAL is said to be first-class if development tools treat it as a general purpose AOP language. Specifically, this means that first-class DSALs for Java can be used with tools that work with AspectJ. For concreteness, we illustrate the approach by describing our implementation of a DSAL workbench, comprising the Spoofax language workbench and the AWESOME composition framework, for programming with first-class DSALs in Java.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Aspect oriented programming},
  keywords      = {Computational linguistics;Computer programming languages;High level languages;Java programming language;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2735386.2735388},
}

@InProceedings{20153401194473,
  author    = {Haber, Arne and Look, Markus and Perez, Antonio Navarro and Nazari, Pedram Mir Seyed and Rumpe, Bernhard and Volkel, Steven and Wortmann, Andreas},
  title     = {Integration of heterogeneous modeling languages via extensible and composable language components},
  year      = {2015},
  pages     = {19 - 31},
  address   = {Angers, Loire Valley, France},
  note      = {Heterogeneous modeling;Language engineering;Language inheritances;Language integration;Language workbenches;MDE;Model-driven Engineering;Traditional models;},
  abstract  = {Effective model-driven engineering of complex systems requires to appropriately describe different specific system aspects. To this end, efficient integration of different heterogeneous modeling languages is essential. Modeling language integaration is onerous and requires in-depth conceptual and technical knowledge and effort. Traditional modeling lanugage integration approches require language engineers to compose monolithic language aggregates for a specific task or project. Adapting these aggregates to different contexts requires vast effort and makes these hardly reusable. This contribution presents a method for the engineering of grammarbased language components that can be independently developed, are syntactically composable, and ultimately reusable. To this end, it introduces the concepts of language aggregation, language embedding, and language inheritance, as well as their realization in the language workbench MontiCore. The result is a generalizable, systematic, and efficient syntax-oriented composition of languages that allows the agile employment of modeling languages efficiently tailored for individual software projects. Copyright &copy; 2015 SCITEPRESS - Science and Technology Publications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  journal   = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  key       = {Modeling languages},
  keywords  = {Aggregates;Computational linguistics;Integration;Software design;},
  language  = {English},
}

@InProceedings{20153401194495,
  author        = {Huang, Changyun and Osaka, Ataru and Kamei, Yasutaka and Ubayashi, Naoyasu},
  title         = {Automated DSL construction based on software product lines},
  year          = {2015},
  pages         = {247 - 254},
  address       = {Angers, Loire Valley, France},
  note          = {Domain knowledge;Domain specific languages;Execution platforms;Language workbenches;Mining software repositories;Research fields;Software abstractions;Software Product Line;},
  __markedentry = {[Neto:5]},
  abstract      = {DSL (Domain-Specific Language) is one of the important approaches for software abstraction. In the past decades, DSLs have been provided by expert engineers familiar with domain knowledge and programming language processors. It is not easy for ordinary programmers to construct DSLs for their own purposes. To deal with this problem, we propose a language workbench called Argyle that can automatically generate a DSL by only specifying a set of functions needed to the DSL and an execution platform supported by the DSL. Argyle is based on software product lines and consists of the following two steps: 1) development of the core assets for constructing a family of DSLs and 2) DSL configuration using these core assets. To demonstrate the effectiveness of our approach, we developed a prototype DSL for supporting MSR (Mining Software Repositories), the most active research field in software engineering. Copyright &copy; 2015 SCITEPRESS - Science and Technology Publications.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  key           = {Software design},
  keywords      = {Computational linguistics;Computer programming languages;Computer software;DSL;Problem oriented languages;Software engineering;Software prototyping;, rank3},
  language      = {English},
}

@InProceedings{20152801029956,
  author    = {Korenkov, Yuriy and Loginov, Ivan and Lazdin, Arthur},
  title     = {PEG-based language workbench},
  year      = {2015},
  volume    = {2015-June},
  number    = {June},
  pages     = {75 - 81},
  address   = {Yaroslavl, Russia},
  note      = {Domain specific languages;Integrated development environment;Language workbenches;Parsing expression grammars;},
  abstract  = {In this article we present a new tool for language-oriented programming which provides to user convenient means to describe the domain specific languages in the form of language based on parsing expression grammars and helpful tools for grammar debugging. Also we consider the sample of using this toolkit as a part of an integrated development environment. &copy; 2015 FRUCT Oy.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, Inclusos},
  issn      = {23057254},
  journal   = {Conference of Open Innovation Association, FRUCT},
  key       = {Computational linguistics},
  keywords  = {Computer programming languages;Formal languages;Innovation;Problem oriented languages;Web services;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/FRUCT.2015.7117975},
}

@InProceedings{20162602546941,
  author        = {Degueule, Thomas and Combemale, Benoit and Blouin, Arnaud and Barais, Olivier},
  title         = {Reusing legacy DSLs with melange},
  year          = {2015},
  pages         = {45 - 46},
  address       = {Pittsburgh, PA, United states},
  note          = {Domain specific languages;Language reuse;Language workbenches;Melange;Model typing;},
  __markedentry = {[Neto:5]},
  abstract      = {The proliferation of independently-developed and constantly-evolving domain-specific languages (DSLs) in many domains raises new challenges for the software language engineering community. Instead of starting the definition of new DSLs from scratch, language designers would benefit from the reuse of previously defined DSLs. While the support for engineering isolated DSLs is getting more and more mature, there is still little support in language workbenches for importing, assembling, and customizing legacy languages to form new ones. Melange is a new language workbench where new DSLs are built by assembling pieces of syntax and semantics. These pieces can be imported and subsequently extended, restricted, or customized to fit specific requirements. The demonstration will introduce the audience to the main features of Melange through the definition of an executable DSL for the design and execution of Internet of Things systems. Specifically, we will show how such a language can be obtained from the assembly of other popular languages while maintaining the compatibility with their tools and transformations. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {DSM 2015 - Proceedings of the Workshop on Domain-Specific Modeling},
  key           = {Computational linguistics},
  keywords      = {Computer programming languages;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2846696.2846697},
}

@Article{20143600051435,
  author        = {Jezequel, Jean-Marc and Combemale, Benoit and Barais, Olivier and Monperrus, Martin and Fouquet, Francois},
  title         = {Mashup of metalanguages and its implementation in the Kermeta language workbench},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {905 - 920},
  note          = {Behavioral semantics;Design and implementations;Domain specific languages;Language implementations;Language workbenches;Model-driven Engineering;Run-time performance;Software languages;},
  __markedentry = {[Neto:5]},
  abstract      = {With the growing use of domain-specific languages (DSL) in industry, DSL design and implementation goes far beyond an activity for a few experts only and becomes a challenging task for thousands of software engineers. DSL implementation indeed requires engineers to care for various concerns, from abstract syntax, static semantics, behavioral semantics, to extra-functional issues such as runtime performance. This paper presents an approach that uses one metalanguage per language implementation concern. We show that the usage and combination of those metalanguages is simple and intuitive enough to deserve the term mashup. We evaluate the approach by completely implementing the non-trivial fUML modeling language, a semantically sound and executable subset of the Unified Modeling Language (UML). &copy; 2013, Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, SpringerLink, Duplicados},
  issn          = {16191366},
  key           = {Unified Modeling Language},
  keywords      = {Computational linguistics;Computer programming languages;Modeling languages;Problem oriented languages;Semantics;Visual languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/s10270-013-0354-4},
}

@InProceedings{20153601229004,
  author        = {Hadas, Arik and Lorenz, David H.},
  title         = {First-class domain specific aspect languages},
  year          = {2015},
  volume        = {2015-March},
  pages         = {29 - 30},
  address       = {Fort Collins, CO, United states},
  note          = {Aspect-Oriented Programming (AOP);Composition frameworks;Domain specific;Domain specific languages;Language workbenches;Program source codes;Second class;Spoofax;},
  __markedentry = {[Neto:5]},
  abstract      = {Programming in a domain specific aspect language (DSAL) typically involves some language workbench for transforming the DSAL code and some AOP composition framework for weaving the transformed code. However, DSAL development remains second-class in two respects. Unlike programming in a general purpose aspect language, compiling DSAL code requires preprocessing that makes the program source code incompatible with existing AOP tools. Unlike defining a domain specific language, defining a DSAL requires weaving semantics whose specification is not supported in the language workbench. In this work we present a DSAL workbench solution in which DSALs are first-class DSLs as well as first-class AOP languages. We illustrate the approach by integrating the Spoofax language workbench and the AWESOME composition framework into such a DSAL workbench.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Aspect oriented programming},
  keywords      = {Codes (symbols);Computational linguistics;Computer programming languages;Problem oriented languages;Semantics;Weaving;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2735386.2735929},
}

@Article{20130916070127,
  author    = {Lamo, Yngve and Wang, Xiaoliang and Mantz, Florian and Bech, Oyvind and Sandven, Anders and Rutle, Adrian},
  title     = {DPF workbench: A multi-level language workbench for MDE},
  journal   = {Proceedings of the Estonian Academy of Sciences},
  year      = {2013},
  volume    = {62},
  number    = {1},
  pages     = {3 - 15},
  note      = {Arbitrary number;Business process modelling;Code Generation;Code generators;Diagram predicate framework;Diagrammatic constraints;Diagrammatic specifications;Domain specific;Domain-Specific Modelling Languages;Graph-based;Language workbenches;Meta levels;Meta model;Meta-modelling;Metamodeling;Model transformation;Model-driven Engineering;Morphisms;Multi-level languages;},
  abstract  = {This paper presents the DPF Workbench, a language workbench for (meta)modelling and code generation. The DPF Workbench includes a graphical specification editor for the Diagram Predicate Framework (DPF), which provides a graph-based formalization of (meta)modelling and model transformation. The tool offers functionality for fully diagrammatic specifications of domain-specific modelling languages. Moreover, the DPF Workbench supports the development of metamodelling hierarchies with an arbitrary number of metalevels; i.e. each model at a metalevel can be used as a metamodel for the metalevel below. The DPF Workbench facilitates the generation of domain-specific diagrammatic editors out of these metamodels. The conformance relations between adjacent metalevels are checked using typing morphisms and validation of diagrammatic constraints. In addition, the DPF Workbench provides a signature editor for the definition of software constraints and their corresponding validators. The code generator is a newly added component that facilitates the generation of software from models defined in the DPF Workbench. The features of the DPF Workbench are illustrated by a running example presenting a metamodelling hierarchy for business process modelling and sketching how these models can be transformed to programs by the code generation facility.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Duvida},
  issn      = {17366046},
  key       = {Network components},
  keywords  = {Automatic programming;Computer simulation languages;Program compilers;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.3176/proc.2013.1.02},
}

@InProceedings{20150800554585,
  author        = {Ebrahimi, Amir Hossein and Johansson, Pierre E. C. and Bengtsson, Kristofer and Akesson, Knut},
  title         = {Managing product and production variety - A language workbench approach},
  year          = {2014},
  volume        = {17},
  number        = {C},
  pages         = {338 - 344},
  address       = {Windsor, ON N9B 1K3, Canada},
  note          = {Managment;Mass customization;Process platforms;Product life cycle management;Product platforms;Variability;},
  __markedentry = {[Neto:5]},
  abstract      = {Product platforms are commonly used in industries with complex products and high competition like the car and truck industry to allow a customer to order a product that satisfy its unique needs. A consequence of product variety is that manufacturing and assembly processes need to deal with this variety as well. If the variety is low and changes of the product occur infrequently then the variety may be handled by designing the production system for a small set of typical products. But as the variety increases and changes become frequent the necessity for integrated product and production information model is high, to partially solve this problem Product Life Cycle Management (PLM) systems aim at providing an integrated model to all categories of users, e.g. product designers, product preparation engineers, line builders and shop-floor workers. All users need to access the information in the platform and refine and modify the information to reflect new knowledge that has been acquired. Today, most often multiple systems are used where some systems may store information in a structured way but often unstructured text documents are also used. This easily results in redundant information models and automated analysis is not feasible or not event possible because of issues regarding cohesion and traceability of information. The contribution in this paper is to discuss how a new type of tool for building domain specific languages and editors using language workbench approach can be used to support the different user categories in their tasks working with variability of a product and production system while at the same time provide cohesion and traceability of information. &copy; 2014 Elsevier B.V.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, ScienceDirect, Duplicados},
  issn          = {22128271},
  journal       = {Procedia CIRP},
  key           = {Life cycle},
  keywords      = {Adhesion;Competition;Computational linguistics;Computer programming languages;Customer satisfaction;Human resource management;Industrial management;Information management;Information theory;Manufacture;Problem oriented languages;Product design;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.procir.2014.01.100},
}

@InProceedings{20144700224299,
  author    = {Szabo, Tamas and Voelter, Markus and Kolb, Bernd and Ratiu, Daniel and Schaetz, Bernhard},
  title     = {Mbeddr - Extensible languages for embedded software development},
  year      = {2014},
  pages     = {13 - 15},
  address   = {Portland, OR, United states},
  note      = {Development process;Domain specific languages;Extensible languages;Extensible set;Extension module;Language constructs;Language workbenches;Mathematical notations;},
  abstract  = {In this industrial presentation we will demonstrate mbeddr, an extensible set of integrated languages for embedded software development. After discussing the context of the talk, we will give details about the mbeddr architecture, which relies on the MPS language workbench. Then we will elaborate on the extension modules and show how they fit with safety-critical development processes. Finally we will point out how the existing languages can be extended by the user by giving some real-world examples, including a language construct that could have prevented the Apple "goto fail" bug as well as mathematical notations. Copyright is held by the owner/author(s).},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {HILT 2014 - Proceedings of the ACM Conference on High Integrity Language Technology},
  key       = {Software design},
  keywords  = {Computational linguistics;Computer programming languages;Embedded software;Embedded systems;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2663171.2663186},
}

@Article{20144300123237,
  author        = {Wachsmuth, Guido H. and Konat, Gabriel D. P. and Visser, Eelco},
  title         = {Language design with the spoofax language workbench},
  journal       = {IEEE Software},
  year          = {2014},
  volume        = {31},
  number        = {5},
  pages         = {35 - 43},
  note          = {Design languages;Design Methodology;IDE;Integrated development environment;Integrated environment;Programming environment;Spoofax;},
  __markedentry = {[Neto:5]},
  abstract      = {IDEs are essential for programming language developers, and state-of-the-art IDE support is mandatory for programming languages to be successful. Although IDE features for mainstream programming languages are typically implemented manually, this often isn't feasible for programming languages that must be developed with significantly fewer resources. The Spoofax language workbench is a platform for developing textual programming languages with state-of-the-art IDE support. Spoofax is a comprehensive environment that integrates syntax definition, name binding, type analysis, program transformation, code generation, and declarative specification of IDE components. It also provides high-level languages for each of these aspects. These languages are highly declarative, abstracting over the implementation of IDE features and letting engineers focus on language design. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSL, Duplicados},
  issn          = {07407459},
  key           = {High level languages},
  keywords      = {Computer programming languages;DSL;Integrodifferential equations;Mathematical programming;Object oriented programming;Production;Software engineering;Syntactics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/MS.2014.100},
}

@InProceedings{20134616975558,
  author    = {Thomas, Ulrike and Hirzinger, Gerd and Rumpe, Bernhard and Schulze, Christoph and Wortmann, Andreas},
  title     = {A new skill based robot programming language using UML/P Statecharts},
  year      = {2013},
  pages     = {461 - 466},
  address   = {Karlsruhe, Germany},
  note      = {Abstract levels;Domain specific languages;Eclipse plugin;Generic graphical editors;Language workbenches;Level of abstraction;Levels of detail;Light weight robots;},
  abstract  = {This paper introduces the new robot programming language LightRocks(Light Weight Robot Coding for Skills), a domain specific language (DSL) for robot programming. The language offers three different level of abstraction for robot programming. On lowest level skills are coded by domain experts. On a more abstract level these skills are supposed to be combined by shop floor workers or technicians to define tasks. The language is designed to allow as much flexibility as necessary on the lowest level of abstraction and is kept as simple as possible with the more abstract layers. A Statechart like model is used to describe the different levels of detail. For this we apply the UML/P and the language workbench MontiCore. To this end we are able to generate code while hiding controller specific implementation details. In addition the development in LightRocks is supported by a generic graphical editor implemented as an Eclipse plugin. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {10504729},
  journal   = {Proceedings - IEEE International Conference on Robotics and Automation},
  key       = {Robotics},
  keywords  = {Abstracting;Computer programming languages;Robot programming;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICRA.2013.6630615},
}

@InProceedings{20144800258215,
  author    = {Voelter, Markus and Lisson, Sascha},
  title     = {Supporting diverse notations in MPS' projectional editor},
  year      = {2014},
  volume    = {1236},
  pages     = {7 - 16},
  address   = {Valencia, Spain},
  note      = {Language workbenches;Real-world system;Underlying language;},
  abstract  = {To be able to build effective DSLs, these DSLs must not just use language concepts that are aligned with their respective domain, but also use notations that correspond closely to established domain notations - and those are often not purely textual or graphical. The underlying language workbench must support these notations, and combining different notations in a single editor must be supported as well in order to support the coherent definitions of systems that use several DSLs. In this paper we provide an overview over the notations supported by JetBrains MPS. MPS is a language workbench that uses a projectional editor, which, by its very nature, can deal with many different notational styles, including text, prose, math tables and graphics. The various supported notations are illustrated with examples from real-world systems.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  language  = {English},
}

@InProceedings{20140117164406,
  author    = {Erdweg, Sebastian and Van Der Storm, Tijs and Volter, Markus and Boersma, Meinte and Bosman, Remi and Cook, William R. and Gerritsen, Albert and Hulshout, Angelo and Kelly, Steven and Loh, Alex and Konat, Gabriel D. P. and Molina, Pedro J. and Palatnik, Martin and Pohjonen, Risto and Schindler, Eugen and Schindler, Klemens and Solmi, Riccardo and Vergu, Vlad A. and Visser, Eelco and Van Der Vlist, Kevin and Wachsmuth, Guido H. and Van Der Woning, Jimi},
  title     = {The state of the art in language workbenches: Conclusions from the language workbench challenge},
  year      = {2013},
  volume    = {8225 LNCS},
  pages     = {197 - 217},
  address   = {Indianapolis, IN, United states},
  note      = {Active area;Design spaces;Domain specific;Domain specific languages;Feature modeling;High-level mechanism;Language workbenches;State of the art;},
  abstract  = {Language workbenches are tools that provide high-level mechanisms for the implementation of (domain-specific) languages. Language workbenches are an active area of research that also receives many contributions from industry. To compare and discuss existing language workbenches, the annual Language Workbench Challenge was launched in 2011. Each year, participants are challenged to realize a given domain-specific language with their workbenches as a basis for discussion and comparison. In this paper, we describe the state of the art of language workbenches as observed in the previous editions of the Language Workbench Challenge. In particular, we capture the design space of language workbenches in a feature model and show where in this design space the participants of the 2013 Language Workbench Challenge reside. We compare these workbenches based on a DSL for questionnaires that was realized in all workbenches. &copy; 2013 Springer International Publishing.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Computer programming languages},
  keywords  = {Problem oriented languages;Surveys;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_11},
}

@InProceedings{20140117164416,
  author        = {Combemale, Benoit and De Antoni, Julien and Larsen, Matias Vara and Mallet, Frederic and Barais, Olivier and Baudry, Benoit and France, Robert B.},
  title         = {Reifying concurrency for executable metamodeling},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {365 - 384},
  address       = {Indianapolis, IN, United states},
  note          = {Behavioral semantics;Concurrency modeling;Concurrency semantics;Domain specific modeling languages;Execution environments;Language workbenches;Meta-modeling technique;Models of computation;},
  __markedentry = {[Neto:5]},
  abstract      = {Current metamodeling techniques can be used to specify the syntax and semantics of domain specific modeling languages (DSMLs). Still, there is little support for explicitly specifying concurrency semantics of DSMLs. Often, such semantics are provided by the implicit concurrency model of the execution environment supported by the language workbench used to implement the DSMLs. The lack of an explicit concurrency model has several drawbacks: it prevents from developing a complete understanding of the DSML's behavioral semantics, as well as effective concurrency-aware analysis techniques, and explicit models of semantic variants. This work reifies concurrency as a metamodeling facility, leveraging formalization work from the concurrency theory and models of computation (MoC) community. The essential contribution of this paper is a language workbench for binding domain-specific concepts and models of computation through an explicit event structure at the metamodel level. We present a case study that serves to demonstrate the utility of the novel metamodeling facilities and clarify the scope of the approach. &copy; 2013 Springer International Publishing.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Semantics},
  keywords      = {Computer programming languages;Formal logic;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-02654-1_20},
}

@Article{20132616444306,
  author    = {Voelter, Markus and Ratiu, Daniel and Kolb, Bernd and Schaetz, Bernhard},
  title     = {Mbeddr: Instantiating a language workbench in the embedded software domain},
  journal   = {Automated Software Engineering},
  year      = {2013},
  volume    = {20},
  number    = {3},
  pages     = {339 - 390},
  note      = {Commercial projects;Domain specific languages;Extensible languages;Language workbenches;Multistage transformation;Program Verification;Requirements tracings;Small organizations;},
  abstract  = {Tools can boost software developer productivity, but building custom tools is prohibitively expensive, especially for small organizations. For example, embedded programmers often have to use low-level C with limited IDE support, and integrated into an off-the-shelf tool chain in an ad-hoc way. To address these challenges, we have built mbeddr, an extensible language and IDE for embedded software development based on C. mbeddr is a large-scale instantiation of the Jetbrains MPS language workbench. Exploiting its capabilities for language modularization and composition, projectional editing and multi-stage transformation, mbeddr is an open and modular framework that lets third parties add extensions to C with minimal effort and without invasive changes. End users can combine extensions in programs as needed. To illustrate the approach, in this paper we discuss mbeddr's support for state machines, components, decision tables, requirements tracing, product line variability and program verification and outline their implementation. We also present our experience with building mbeddr, which shows that relying on language workbenches dramatically reduces the effort of building customized, modular and extensible languages and IDEs to the point where this is affordable by small organizations. Finally, we report on the experience of using mbeddr in a commercial project, which illustrates the benefits to end users. &copy; 2013 Springer Science+Business Media New York.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, SpringerLink, Inclusos},
  issn      = {09288910},
  key       = {C (programming language)},
  keywords  = {Decision tables;Embedded software;Embedded systems;Integrodifferential equations;Modular construction;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10515-013-0120-4},
}

@InProceedings{20144200107490,
  author        = {Trask, Bruce and Roman, Angel},
  title         = {Leveraging Model Driven Engineering in Software Product Line Architectures},
  year          = {2014},
  volume        = {1},
  pages         = {360 - 361},
  address       = {Florence, Italy},
  note          = {Abstraction;Constraint;Domain specific;Domain-specific testing;Graphical;Language workbenches;MDE;Meta model;Refinement;Textual;Traceability;Transformation;},
  __markedentry = {[Neto:5]},
  abstract      = {The process of Developing Software Product Line Architectures can be a complex task. However, the use of Model Driven Engineering (MDE) techniques can facilitate the development of SPLAs by introducing Domain Specific Languages, Graphical Editors, and Generators. Together these are considered the sacred triad of MDE. Key to understanding MDE and how it fits into SPLAs is to know exactly what each part of the trinity means, how it relates to the other parts, and what the various implementations are for each. This tutorial will demonstrate the use of the Eclipse Modeling Framework (EMF) and Eclipse's Graphical Modeling Framework (GMF) to create an actual MDE solution as applied to a sample SPLA. These tools collectively form what is called a Language Workbench. During this tutorial we will also illustrate how to model the visual artifacts of our Domain Model and generate a Domain Specific Graphical Editor using GMF. Copyright is held by the owner/author(s).},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Software design},
  keywords      = {Computer programming languages;Computer software;DSL;Embedded systems;Models;Problem oriented languages;Requirements engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2648511.2648558},
}

@InProceedings{20130515948841,
  author    = {Konat, Gabriel and Kats, Lennart and Wachsmuth, Guido and Visser, Eelco},
  title     = {Declarative name binding and scope rules},
  year      = {2013},
  volume    = {7745 LNCS},
  pages     = {311 - 331},
  address   = {Dresden, Germany},
  note      = {Compile time;Language workbenches;Name resolution;Name-binding;Namespaces;Reference resolution;Textual software;},
  abstract  = {In textual software languages, names are used to reference elements like variables, methods, classes, etc. Name resolution analyses these names in order to establish references between definition and use sites of elements. In this paper, we identify recurring patterns for name bindings in programming languages and introduce a declarative metalanguage for the specification of name bindings in terms of namespaces, definition sites, use sites, and scopes. Based on such declarative name binding specifications, we provide a language-parametric algorithm for static name resolution during compile-time. We discuss the integration of the algorithm into the Spoofax Language Workbench and show how its results can be employed in semantic editor services like reference resolution, constraint checking, and content completion. &copy; 2013 Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Object oriented programming},
  keywords  = {Semantics;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_18},
}

@InProceedings{20133916778178,
  author    = {Van Rest, Oskar and Wachsmuth, Guido and Steel, Jim R. H. and Suc, Jorn Guy and Visser, Eelco},
  title     = {Robust Real-Time Synchronization between Textual and Graphical Editors},
  year      = {2013},
  volume    = {7909 LNCS},
  pages     = {92 - 107},
  address   = {Budapest, Hungary},
  note      = {Graphical editors;Graphical modeling frameworks;Integrated development environment;Language workbenches;Robust synchronization;Spoofax;},
  abstract  = {In modern Integrated Development Environments (IDEs), textual editors are interactive and can handle intermediate, incomplete, or otherwise erroneous texts while still providing editor services such as syntax highlighting, error marking, outline views, and hover help. In this paper, we present an approach for the robust synchronization of interactive textual and graphical editors. The approach recovers from errors during parsing and text-to-model synchronization, preserves textual and graphical layout in the presence of erroneous texts and models, and provides synchronized editor services such as selection sharing and navigation between editors. It was implemented for synchronizing textual editors generated by the Spoofax language workbench and graphical editors generated by the Graphical Modeling Framework. &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Synchronization},
  keywords  = {Mathematical models;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-38883-5_11},
}

@InProceedings{20143017985102,
  author        = {Ebrahimi, Amir Hossein and Johansson, Pierre E.C. and Bengtsson, Kristofer and Akesson, Knut},
  title         = {Managing product and production variety -A language workbench approach},
  year          = {2014},
  volume        = {17},
  pages         = {338 - 344},
  address       = {Windsor, ON, Canada},
  note          = {Managment;Mass customization;Process platforms;Product life cycle management;Product platforms;Variability;},
  __markedentry = {[Neto:5]},
  abstract      = {Product platforms are commonly used in industries with complex products and high competition like the car and truck industry to allow a customer to order a product that satisfy its unique needs. A consequence of product variety is that manufacturing and assembly processes need to deal with this variety as well. If the variety is low and changes of the product occur infrequently then the variety may be handled by designing the production system for a small set of typical products. But as the variety increases and changes become frequent the necessity for integrated product and production information model is high, to partially solve this problem Product Life Cycle Management (PLM) systems aim at providing an integrated model to all categories of users, e.g. product designers, product preparation engineers, line builders and shop-floor workers. All users need to access the information in the platform and refine and modify the information to reflect new knowledge that has been acquired. Today, most often multiple systems are used where some systems may store information in a structured way but often unstructured text documents are also used. This easily results in redundant information models and automated analysis is not feasible or not event possible because of issues regarding cohesion and traceability of information. The contribution in this paper is to discuss how a new type of tool for building domain specific languages and editors using language workbench approach can be used to support the different user categories in their tasks working with variability of a product and production system while at the same time provide cohesion and traceability of information. &copy; 2014 Published by Elsevier B.V.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Duplicados},
  issn          = {22128271},
  journal       = {Procedia CIRP},
  key           = {Product design},
  keywords      = {Adhesion;Competition;Computer programming languages;Customer satisfaction;Human resource management;Industrial management;Information theory;Manufacture;Production engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.procir.2014.01.100},
}

@InProceedings{20133716723857,
  author        = {Ratiu, Daniel and Voelter, Markus and Kolb, Bernd and Schaetz, Bernhard},
  title         = {Using language engineering to lift languages and analyses at the domain level},
  year          = {2013},
  volume        = {7871 LNCS},
  pages         = {465 - 471},
  address       = {Moffett Field, CA, United states},
  note          = {Abstraction gap;Application level;Domain levels;Domain specific;Higher-level languages;Language engineering;Language workbenches;Verification condition;},
  __markedentry = {[Neto:5]},
  abstract      = {Developers who use C model checkers have to overcome three usability challenges: First, it is difficult to express application level properties as C-level verification conditions, due to the abstraction gap. Second, without advanced IDE support, it is difficult to interpret the counterexamples produced by the model checker and understand what went wrong in terms of application level properties. Third, most C model checkers support only a subset of C and it is easy for developers to inadvertently use C constructs outside this subset. In this paper we report on our preliminary experience with using the MPS language workbench to integrate the CBMC model checker with a set of domain-specific extensions of C for developing embedded software. Higher level language constructs such as components and decision tables makes it easier for end users to bridge the abstraction gap, to write verification conditions and to interpret the analysis results. Furthermore, the use of language workbenches allows the definition of analyzable language subsets, making the implementation of analyses simpler and their use more predictable. &copy; 2013 Springer-Verlag.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {C (programming language)},
  keywords      = {Abstracting;Decision tables;Model checking;NASA;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-38088-4_35},
}

@InProceedings{20140117164410,
  author    = {Wachsmuth, Guido H. and Konat, Gabriel D. P. and Vergu, Vlad A. and Groenewegen, Danny M. and Visser, Eelco},
  title     = {A language independent task engine for incremental name and type analysis},
  year      = {2013},
  volume    = {8225 LNCS},
  pages     = {260 - 280},
  address   = {Indianapolis, IN, United states},
  note      = {Language independents;Language workbenches;Large project;Name resolution;Second phase;Spoofax;Task levels;Type analysis;},
  abstract  = {IDEs depend on incremental name and type analysis for responsive feedback for large projects. In this paper, we present a language-independent approach for incremental name and type analysis. Analysis consists of two phases. The first phase analyzes lexical scopes and binding instances and creates deferred analysis tasks. A task captures a single name resolution or type analysis step. Tasks might depend on other tasks and are evaluated in the second phase. Incrementality is supported on file and task level. When a file changes, only this file is recollected and only those tasks are reevaluated, which are affected by the changes in the collected data. The analysis does neither re-parse nor re-traverse unchanged files, even if they are affected by changes in other files. We implemented the approach as part of the Spoofax Language Workbench and evaluated it for the WebDSL web programming language. &copy; 2013 Springer International Publishing.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Compendex, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Computer programming languages},
  keywords  = {Artificial intelligence;Computer science;Computers;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_15},
}

@InProceedings{20140517250453,
  author        = {Kelly, Steven},
  title         = {Empirical comparison of language workbenches},
  year          = {2013},
  pages         = {33 - 38},
  address       = {Indianapolis, IN, United states},
  note          = {Comparison;Experiment design;Language workbenches;Qualitative;Quantitative;},
  __markedentry = {[Neto:5]},
  abstract      = {Production use of Domain-Specific Modeling languages has consistently shown productivity increase by a factor of 5-10. However, the spread of DSM has been slowed by projects stalling even before the language was built, often citing problems with the chosen tool. With a wide variety of language workbench tools for DSM, there is a need for objective empirical tool comparison - particularly as the little research so far shows a range of 50 times more effort between the most and least efficient tools. This article looks at existing empirical research and an experimental design for a future comparison. We aim at increasing objectivity and repeatability while keeping overall effort practical, and providing worthwhile returns for the participants. Copyright is held by the owner/author(s).},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  journal       = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  key           = {Tools},
  keywords      = {Design of experiments;Specification languages;Surveying;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2541928.2541935},
}

@InProceedings{20143718153630,
  author        = {Zhu, Xi and Phung, Congchi and Pareto, Lars and Ehnebom, Staffan and Krekola, Mikael and Christerson, Magnus and Helander, Mats},
  title         = {An industrial case study on using language workbench technology for realizing model-driven engineering},
  year          = {2014},
  pages         = {17 - 29},
  address       = {Lisbon, Portugal},
  note          = {Domain specific languages;Language workbenches;Model-driven Engineering;Projectional editor;Software interfaces;},
  __markedentry = {[Neto:5]},
  abstract      = {Model Driven Engineering (MDE) is a proven approach to improve software development processes by automation. However, traditional development of MDE tooling requires a high upfront cost. Recent developments in language workbench technologies promise to significantly reduce these investment costs. By providing domain experts with targeted projections, the speed and quality of delivering customer value is improved. This paper provides results from an industrial case study in the telecommunications domain and compares the value of using a language workbench to traditional MDE technologies. Evaluation of the approach was based on qualitative research strategy which involved a proof of concept implementation and effort estimations by tooling experts. Our results, using the Intentional Domain Workbench, indicate that applying a language workbench promises significant improvements in several aspects of MDE based software development. Most notably in this paper: (1) improved speed in development of domain specific tooling and (2) improved speed in software development process re-engineering. Copyright &copy; 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, IEEEDSL, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  key           = {Software design},
  keywords      = {Problem oriented languages;, rank3},
  language      = {English},
}

@InProceedings{20150400440185,
  author    = {Herrera, Adolfo Sanchez-Barbudo},
  title     = {Enhancing xtext for general purpose languages},
  year      = {2014},
  volume    = {1321},
  address   = {Valencia, Spain},
  note      = {Automatically generated;Domain specific languages;General purpose languages;Language workbenches;Operational languages;Source code generation;Source codes;Textual language;},
  abstract  = {Xtext is a popular language workbench conceived to support development of tooling (e.g. parsers and editors) for textual languages. Although Xtext offers strong support for source code generation when building tooling for Domain Specific Languages (DSL), the amount of hand-written source code required to give support to complex General Purpose Languages (GPL) is still significant. This research investigates techniques for reducing the amount of hand-written source code for supporting GPLs, via the development of new DSLs from which source code can be automatically generated. In particular, these techniques will be researched in the context of the OCL and QVT Operational languages. Copyright &copy; 2014 for the individual papers by the papers' authors.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Computational linguistics},
  keywords  = {Codes (symbols);Computer programming languages;Problem oriented languages;},
  language  = {English},
}

@InProceedings{20124315587620,
  author    = {Erdweg, Sebastian and Katsy, Lennart C.L. and Rendel, Tillmann and Kastner, Christian and Ostermann, Klaus and Vissery, Eelco},
  title     = {Growing a language environment with editor libraries},
  year      = {2012},
  volume    = {47},
  number    = {3},
  pages     = {167 - 176},
  note      = {Domain specific;Extension languages;Integrated development environment;Language environment;Language extensibility;Language workbenches;XML-editors;},
  abstract  = {different (possibly domain-specific) languages, which are often deeply interspersed even in single files. While many proposals exist on how to integrate languages semantically and syntactically, the question of how to support this scenario in integrated development environments (IDEs) remains open: How can standard IDE services, such as syntax highlighting, outlining, or reference resolving, be provided in an extensible and compositional way, such that an open mix of languages is supported in a single file? Based on our library-based syntactic extension language for Java, SugarJ, we propose to make IDEs extensible by organizing editor services in editor libraries. Editor libraries are libraries written in the object language, SugarJ, and hence activated and composed through regular import statements on a file-by-file basis. We have implemented an IDE for editor libraries on top of SugarJ and the Eclipse-based Spoofax language workbench. We have validated editor libraries by evolving this IDE into a fully-fledged and schema-aware XML editor as well as an extensible LATEX editor, which we used for writing this paper &copy; 2011 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {15232867},
  journal   = {ACM SIGPLAN Notices},
  key       = {Java programming language},
  keywords  = {Integrodifferential equations;Libraries;Syntactics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2189751.2047891},
}

@InProceedings{20123115288004,
  author    = {Voelter, Markus and Pech, Vaclav},
  title     = {Language modularity with the MPS language workbench},
  year      = {2012},
  pages     = {1449 - 1450},
  address   = {Zurich, Switzerland},
  note      = {Language engineering;Language extensions;Language workbenches;Modular extension;},
  abstract  = {JetBrains MPS is a comprehensive environment for language engineering. New languages can be defined as standalone languages or as modular extensions of existing languages. Since MPS is a projectional editor, syntactic forms other than text are possible, including tables or mathematical symbols. This demo will show MPS based on mbeddr C, a novel approach for embedded software development that makes use of incremental language extension on the basis of C. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  issn      = {02705257},
  journal   = {Proceedings - International Conference on Software Engineering},
  key       = {C (programming language)},
  keywords  = {Embedded software;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICSE.2012.6227070},
}

@InProceedings{20124815720879,
  author    = {Bockisch, Christoph and Sewe, Andreas},
  title     = {The ALIA4J approach to efficient language implementation},
  year      = {2012},
  pages     = {19 - 20},
  address   = {Tucson, AZ, United states},
  note      = {Advanced dispatching;Adventure games;Compiler implementation;Domain specific;Java virtual machines;Language implementations;Machine codes;Meta model;Modern languages;Modular implementation;},
  abstract  = {New programming languages are frequently designed to improve upon other languages or to simplify programs through domain-specific abstracts. They are often implemented as transformations to an established (intermediate) language (IL). But while many new languages overlap in the semantics of their core concepts, re-using the corresponding transformations is limited by existing compiler implementation frameworks. In the ALIA4J approach, we have identified dispatching as fundamental to most abstract mechanisms and provide a metamodel of dispatching as a rich, extensible IL. Based on this meta-model, the semantics of new atomic language concepts can be implemented in a modular and portable fashion. For the execution of the IL, we provide both platform-independent and platform-dependent Java Virtual Machine extensions, the latter of which allows the modular implementation of machine code optimizations. In this demo, participants get an overview of advanced dispatching and the ALIA4J approach. By the example of a language for text-based adventure games, they will see the usage of ALIA4J as back-end for a language developed in a modern Language Workbench. Finally, the implementation of new atomic language concepts and their optimization is demonstrated.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  journal   = {SPLASH'12 - Proceedings of the 2012 ACM Conference on Systems, Programming, and Applications: Software for Humanity},
  key       = {Computer systems programming},
  keywords  = {Abstracting;Optimization;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2384716.2384726},
}

@InProceedings{20124815720915,
  author    = {Voelter, Markus and Ratiu, Daniel and Schaetz, Bernhard and Kolb, Bernd},
  title     = {Mbeddr: An extensible c-based programming language and IDE for embedded systems},
  year      = {2012},
  pages     = {121 - 140},
  address   = {Tucson, AZ, United states},
  note      = {Development environment;DSLs;In-buildings;Language extensions;Language workbenches;Low-level programs;Modular language;Open Source Software;Type systems;},
  abstract  = {While the C programming language provides good sup-port for writing efficient, low-level code, it is not ad-equate for deffining higher-level abstracts relevant to embedded software. In this paper we present the mbeddr technology stack that supports extension of C with constructs adequate for embedded systems. In mbeddr, efficient low-level programs can be written using the well-known concepts from C. Higher-level domain-speciffic abstracts can be seamlessly inte-grated into C by means of modular language exten-sion regarding syntax, type system, semantics and IDE. In the paper we show how language extension can ad-dress the challenges of embedded software development and report on our experience in building these exten-sions. We show that language workbenches deliver on the promise of signifficantly reducing the effort of lan-guage engineering and the construction of correspond-ing IDEs. mbeddr is built on top of the JetBrains MPS language workbench. Both MPS and mbeddr are open source software.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  journal   = {SPLASH'12 - Proceedings of the 2012 ACM Conference on Systems, Programming, and Applications: Software for Humanity},
  key       = {C (programming language)},
  keywords  = {Abstracting;Computer systems programming;Embedded software;Embedded systems;Formal methods;Integrodifferential equations;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2384716.2384767},
}

@InProceedings{20134316896253,
  author    = {Annenkov, D.V. and Cherkashin, E.A.},
  title     = {Generation technique for Django MVC web framework using the stratego transformation language},
  year      = {2013},
  pages     = {1084 - 1087},
  address   = {Opatija, Croatia},
  note      = {Abstract Syntax Trees;Development productivity;Domain specific languages;Generation techniques;Interpolation techniques;Model driven architectures;Model driven development;Transformation languages;},
  abstract  = {Domain Specific Languages (DSL) allows one to raise level of abstraction, improve development productivity, and establish an equitable communication between domain experts and developers. Language-oriented programming (LOP) is a new paradigm based on DSL construction, allowing separating domain-specific and technology-specific aspects of a system under development. LOP shares some ideas with model-driven architecture and model-driven development. Spoofax language workbench is used as a primary tool for DSL design, and based on Stratego, a transformation language with programmable rewriting strategies, and Syntax Definition Formalism as language for grammar definition. As an example of DSL a simple textual language for domain modeling is considered. Rewriting rules and strategies are used as an uniform approach to generate, validate DSL code, and make arbitrary abstract syntax tree transformations. Rules for code generation implemented using so called string interpolation technique. Source DSL code translated to python code that can be deployed within Django web framework resulting to a web-application with create/update/delete functionality on a corresponding database. Developed DSL is an example of definition by transformation approach. To get real benefits from DSL we need to add more domain specific features in DSL. &copy; 2013 MIPRO.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {2013 36th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2013 - Proceedings},
  key       = {Aspect oriented programming},
  keywords  = {Communication systems;Information technology;Microelectronics;XML;},
  language  = {English},
}

@InProceedings{20161302173488,
  author    = {Pescador, Ana and Garmendia, Antonio and Guerra, Esther and Sanchez Cuadrado, Jesus Sanchez and De Lara, Juan},
  title     = {Pattern-based development of Domain-Specific Modelling Languages},
  year      = {2015},
  pages     = {166 - 175},
  address   = {Ottawa, ON, Canada},
  note      = {Design alternatives;Design and implementations;Domain-Specific Modelling Languages;Dynamic semantic;Graphical modelling;Meta-modelling;Model-driven Engineering;Modelling environment;},
  abstract  = {Model-Driven Engineering (MDE) promotes the use of models to conduct all phases of software development in an automated way. Models are frequently defined using Domain- Specific Modelling Languages (DSMLs), which many times need to be developed for the domain at hand. However, while constructing DSMLs is a recurring activity in MDE, there is scarce support for gathering, reusing and enacting knowledge for their design and implementation. This forces the development of every new DSML to start from scratch. To alleviate this problem, we propose the construction of DSMLs and their modelling environments aided by patterns which gather knowledge of specific domains, design alternatives, concrete syntax, dynamic semantics and functionality for the modelling environment. They may have associated services, realized via components. Our approach is supported by a tool that enables the construction of DSMLs through the application of patterns, and synthesizes a graphical modelling environment according to them. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, Inclusos},
  journal   = {2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems, MODELS 2015 - Proceedings},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Semantics;Software design;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/MODELS.2015.7338247},
}

@InProceedings{20154001332105,
  author    = {Lopes, Felipe A. and Santos, Marcelo and Fidalgo, Robson and Fernandes, Stenio},
  title     = {Model-driven networking: A novel approach for SDN applications development},
  year      = {2015},
  pages     = {770 - 773},
  address   = {Ottawa, ON, Canada},
  note      = {Application development;Applications development;Domain specific modeling languages;Domain-Specific Modelling Languages;Level of abstraction;Model-driven Engineering;Software defined networking (SDN);Software-defined networkings;},
  abstract  = {Software-Defined Networking (SDN) has been receiving a great deal of attention from both academic and industry communities. One reason to this interest is that SDN enables the network programmability, through an external controller, which supports applications and policies built from SDN programming languages, thus breaking the traditional bind between control and data plane. Nevertheless, the application development in this context is still complex for such recent technology. Moreover, there is a strong need for methodologies and tools that explore the abstraction levels potentials supported by SDN. This paper presents a new approach based on the Model-Driven Engineering (MDE) paradigm, called Model-Driven Networking (MDN). MDN relies on a Domain-Specific Modelling Language (DSML) to create SDN applications. We argue that MDN raises the level of abstraction on development, thus reducing the complexity to implement SDN applications and avoiding inconsistent policies. In order to show the relevance and the technological viability of our proposal, we have specified a DSML and have built a tool for creating SDN applications using the MDN approach. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {Proceedings of the 2015 IFIP/IEEE International Symposium on Integrated Network Management, IM 2015},
  key       = {Computer systems programming},
  keywords  = {Abstracting;Complex networks;Computational linguistics;Embedded systems;Modeling languages;Network management;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/INM.2015.7140372},
}

@InProceedings{20124415616560,
  author    = {De Lara, Juan and Guerra, Esther and Sanchez-Cuadrado, Jesus},
  title     = {Abstracting modelling languages: A reutilization approach},
  year      = {2012},
  volume    = {7328 LNCS},
  pages     = {127 - 143},
  address   = {Gdansk, Poland},
  note      = {Abstraction;Abstraction techniques;Domain-specific modelling;Genericity;Meta-modelling;Model-driven Engineering;Modelling language;Proof of concept;Re-utilization;Target systems;},
  abstract  = {Model-Driven Engineering automates the development of information systems. This approach is based on the use of Domain-Specific Modelling Languages (DSMLs) for the description of the relevant aspects of the systems to be built. The increasing complexity of the target systems has raised the need for abstraction techniques able to produce simpler versions of the models, but retaining certain properties of interest. However, developing such abstractions for each DSML from scratch is a time and resource consuming activity. Our solution to this situation is a number of techniques to build reusable abstractions that are defined once and can be reused over families of modelling languages sharing certain requirements. As a proof of concept, we present a catalogue of reusable abstractions, together with an implementation in the MetaDepth multi-level meta-modelling tool. &copy; 2012 Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Abstracting},
  keywords  = {Computer programming languages;Information systems;Systems engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-31095-9_9},
}

@InProceedings{20160801980917,
  author    = {Malavolta, Ivano and Muccini, Henry and Sebastiani, Marco},
  title     = {Automatically Bridging UML Profiles to MOF Metamodels},
  year      = {2015},
  pages     = {259 - 266},
  address   = {Madeira, Portugal},
  note      = {Automatically generated;Domain specific modeling languages;Domain-specific application;ITS applications;Metamodeling;Model transformation;Model transformation technique;Model-driven Engineering;},
  abstract  = {In Model-Driven Engineering, UML profiles and MOF-based Domain Specific Modeling Languages (DSMLs) are the most used approaches for describing domain specific applications. The choice of the right approach depends on several aspects, such as tool support, expressivity, complexity of models, company policies. In general, profiled UML models are very much used since they are intuitive for designers and model editors already exist, however they are intrinsically complex for model manipulation (e.g., Transformation, analysis), conversely, domain specific models are more concise and easy to be manipulated, but they require an initial effort in terms of designers training and model editors development. In this paper we propose an approach that allows getting the best of the two worlds: on one side designers can use UML profiles familiar to them, on the other side DSML models (automatically generated from profiled UML models) enable a better model manipulation. Our approach is based on an automatic bridge between UML profiles and MOF metamodels (which are the main artifacts of MOF-based DSMLs). The bridge is transparent to the user since it autonomously operates both on UML profiles and all the involved models. The bridge is realized through model transformation techniques in the Eclipse platform. In this paper we show its application on a case study based on SysML. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSML, excluidos},
  journal   = {Proceedings - 41st Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2015},
  key       = {Unified Modeling Language},
  keywords  = {Application programs;Embedded systems;Java programming language;Modeling languages;Software engineering;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SEAA.2015.64},
}

@InProceedings{20150600491078,
  author    = {Cosentino, Valerio and Tisi, Massimo and Izquierdo, Javier Luis Canovas},
  title     = {A model-driven approach to generate external DSLs from object-oriented APIs},
  year      = {2015},
  volume    = {8939},
  pages     = {423 - 435},
  address   = {Pec pod Sn????kou, Czech republic},
  note      = {Applications programming interfaces;Code abstraction;Development environment;Domain specific languages;General-purpose programming language;Model driven approach;Model-driven Engineering;User customizations;},
  abstract  = {Developers in modern general-purpose programming languages create reusable code libraries by encapsulating them in Applications Programming Interfaces (APIs). Domain-specific languages (DSLs) can be developed as an alternative method for code abstraction and distribution, sometimes preferable to APIs because of their expressivity and tailored development environment. However the cost of implementing a fully functional development environment for a DSL is generally higher. In this paper we propose DSLit, a prototype-tool that, given an existing API, reduces the cost of developing a corresponding DSL by analyzing the API, automatically generating a semantically equivalent DSL with its complete development environment, and allowing for user customization. To build this bridge between the API and DSL technical spaces we make use of existing Model-Driven Engineering (MDE) techniques, further promoting the vision of MDE as a unifying technical space. &copy; Springer-Verlag Berlin Heidelberg 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Application programming interfaces (API)},
  keywords  = {Bridges;Computational linguistics;Computer programming languages;Computer systems programming;Object oriented programming;Problem oriented languages;},
  language  = {English},
}

@InProceedings{20133116563140,
  author        = {Brettschneider, Matthias and Haberlein, Tobias},
  title         = {From arrows to netlists describing hardware},
  year          = {2013},
  volume        = {7973 LNCS},
  number        = {PART 3},
  pages         = {128 - 143},
  address       = {Ho Chi Minh City, Viet nam},
  note          = {Algebraic structures;Cyclic redundancy check;Fixed numbers;Functional domains;Higher-order;Novel concept;Structure forms;Vector arrows;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes how to transform a functional domain specific langauge (DSL) into hardware represented by a netlist. In earlier papers we proposed the usage of an algebraic structure called "arrows" (basically an abstraction of Haskell's higher-order type (&rarr) for describing DSLs. This structure forms the basis of a novel concept that gives the developer a tool at hand to describe hardware functionally in a natural way. Aside of that an arrow provides not only a tool to synthesize, but to verify and reason about the input DSL. We have taken this concept to the next stage, from a static size length arrow into a fixed size length vector arrows fitting much better to logic gates with a fixed number of in- and output pins. There are many sound possibilities to use the algebraic arrow data structure to model hardware. This paper presents some of them which showed to be most useful. A simple example, the implementation of a cyclic redundancy check (CRC) algorithm, is used to illustrate the presented techniques. &copy; 2013 Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Hardware},
  keywords      = {Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-39646-5_10},
}

@InProceedings{20131516185170,
  author        = {Dinkelaker, Tom and Eichberg, Michael and Mezini, Mira},
  title         = {Incremental concrete syntax for embedded languages with support for separate compilation},
  year          = {2013},
  volume        = {78},
  number        = {6},
  pages         = {615 - 632},
  note          = {Domain specific languages;Embedded domain-specific languages;Embedded Languages;Embeddings;General-purpose programming language;Language design;Program transformations;Separate compilation;},
  __markedentry = {[Neto:5]},
  abstract      = {Embedded domain-specific languages (EDSLs) are known to improve the productivity of developers. However, for many domains no DSL implementation is available and two important reasons for this are: First, the effort to implement EDSLs that provide the domain's established syntax (called concrete syntax) is very high. Second, the EDSL and its underlying general-purpose programming language (GPL) are typically tightly integrated. This hampers reusability across different GPLs. Besides these implementation issues, the productivity gains of using EDSLs are also limited by the lack of explicit tool support for EDSL users - such as syntax highlighting or code analyses. In this paper, we present an approach that significantly reduces the necessary effort to implement embedded DSLs with concrete syntax. The idea is to use island grammars to specify the EDSL's concrete syntax. This enables the developer to implement the embedded DSL as a library and to incrementally specify the concrete syntax using meta-data. Only those parts of the EDSL's grammar need to be specified that deviate from the grammar of the GPL. By analyzing an EDSL's implementation using reflection, it is possible to provide tool support for EDSLs without having the developer implement it explicitly, such as syntax highlighting. An evaluation demonstrates the feasibility of our approach by embedding a real-world DSL into a GPL. &copy; 2012 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {01676423},
  journal       = {Science of Computer Programming},
  key           = {Syntactics},
  keywords      = {Problem oriented languages;Productivity;Program processors;Reusability;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.scico.2012.12.002},
}

@InProceedings{20141317521684,
  author    = {Ostermayer, Ludwig and Sun, Geng and Seipel, Dietmar},
  title     = {Simplifying the development of rules using domain specific languages in DROOLS},
  year      = {2013},
  number    = {1306 REPORT NO.},
  pages     = {198 - 212},
  address   = {Kiel, Germany},
  note      = {Business rules;Development process;Domain specific;Domain specific languages;DROOLS;PROLOG;Resolution mechanisms;Rule-based approach;},
  abstract  = {The open-source business logic integration platform DROOLS supports a declarative, rule-based approach for problem solving. However, rules are implemented in a JAVA-based way in DROOLS, which is difficult to understand for non-programmers. The rules for a given scenario are usually provided in natural language by non-programmers, for instance business analysts; for controlling the correctness of the implemented rules, it is crucial to integrate these business analysts into the coding phase. To bridge the gap between programmers and non-programmers, Domain Specific Languages (DSLs) allow for implementing rules in a language that is closer to natural language. In a DSL, rules can be written, read, and modified much easier, even by non-programmers. DROOLS offers a DSL editor, but both developing a DSL and implementing rules within the DSL is still difficult. Thus, in this paper, we present a tool, DSLR Generator, which simplifies the creation of DSLs and the implementation of rules within the DSL. A graphical user interface supports the user step by step in the development process. Reusable and generic DSL templates can be used to write rules in a more readable format. The maintenance of the meta-data for the rules in DROOLS is supported, too. With DSLs, it becomes easier to write rules in DROOLS that can also be parsed in PROLOG. Although the evaluation mechanism of DROOLS is much different from the resolution mechanism of PROLOG, we can support the rule development process by PROLOG technology: the rules could be analyzed, verified, or transformed by PROLOG software. &copy; Springer-Verlag Berlin Heidelberg 2011.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {21926247},
  journal   = {Technische Berichte des Instituts fur Informatik der Christian-Albrechts-Universitat zu Kiel},
  key       = {Logic programming},
  keywords  = {Computer programming languages;Graphical user interfaces;Knowledge management;Management science;},
  language  = {English},
}

@InProceedings{20131116108950,
  author        = {Alhosban, Fuad and Burd, Liz},
  title         = {Aural instruction with visualization in E-Learning},
  year          = {2012},
  pages         = {IEEE Education Society; ASEE Educational Research and Methods Division; IEEE Computer Society -},
  address       = {Seattle, WA, United states},
  note          = {Aural Instructions;Cognitive loads;Computer science students;Prototype learning;Qualitative data;Quantitative data;Sensory channels;Structure-learning;Student response;Visualisations;Written feedback;},
  __markedentry = {[Neto:5]},
  abstract      = {This research investigates the effectiveness of using aural instructions together with visualisation in teaching some concepts of data structures to novice computer science students. A prototype learning system, known as the Data Structure Learning (DSL) tool, was developed and used first in a short mini study that showed that, used together with visualisations of algorithms, aural instructions produced faster student response times than did textual instructions. This result suggested that the additional use of the auditory sensory channel did indeed reduce the cognitive load. The tool was then used in a second, longitudinal, study over two academic terms in which students studying the Data Structures module were offered the opportunity to use the DSL approach with either aural or textual instructions. Both the quantitative data provided by the automatic recording of DSL use and an end-of-study questionnaire showed appreciation by students of the help the tool had provided and enthusiasm for its future use and development. These findings were supported by qualitative data provided by student written feedback at the end of each task, by interviews at the end of the experiment and by interest from the lecturer in integrating use of the tool with the teaching of the module. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, Duplicados},
  issn          = {15394565},
  journal       = {Proceedings - Frontiers in Education Conference, FIE},
  key           = {Data structures},
  keywords      = {Computer science;Data integration;E-learning;Flow visualization;Students;Visualization;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/FIE.2012.6462290},
}

@InProceedings{20164402960527,
  author    = {Vaquero-Melchor, Diego and Garmendia, Antonio and Guerra, Esther and De Lara, Juan},
  title     = {Towards enabling mobile domain-specific modelling},
  year      = {2016},
  pages     = {117 - 122},
  address   = {Lisbon, Portugal},
  note      = {Application area;Domain specific languages;Domain-specific modelling;Graphical modelling;Mobile applications;Model-driven Engineering;Position papers;Prototype tools;},
  abstract  = {Model-Driven Engineering (MDE) promotes an active use of models in all phases of software development. In this paradigm, the design and usage of Domain-Specific Languages (DSL) for modelling in a certain application area is frequent. While in MDE, modelling has been traditionally supported by desktop computers, in this position paper we analyse useful scenarios for modelling using mobile devices, like smartphones or tablets. Moreover, we present a working architecture and a prototype tool, called DSL-comet, which enable collaborative mobile modelling and integrate seamlessly desktop and mobile graphical modelling environments. Copyright &copy; 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {ICSOFT 2016 - Proceedings of the 11th International Joint Conference on Software Technologies},
  key       = {Modeling languages},
  keywords  = {Computer programming languages;Digital subscriber lines;Mobile devices;Mobile telecommunication systems;Personal computers;Problem oriented languages;Software design;},
  language  = {English},
}

@InProceedings{20162302462744,
  author    = {Caracciolo, Andrea and Lungu, Mircea and Truffer, Oskar and Levitin, Kirill and Nierstrasz, Oscar},
  title     = {Evaluating an Architecture Conformance Monitoring Solution},
  year      = {2016},
  pages     = {41 - 44},
  address   = {Osaka, Japan},
  note      = {Architectural rules;Conformance checking;Conformance monitoring;empirical;evaluation;Executable specifications;Industrial projects;Technical specifications;},
  abstract  = {Architectural rules are often defined but rarely tested. Current tools offer limited functionality and often require significant effort to be configured, automated and integrated within existing platforms. We propose a platform that is aimed at reducing the overall cost of setting up and maintaining an architectural conformance monitoring environment by decoupling the conceptual representation of a user-defined rule from its technical specification prescribed by the underlying analysis tools. The user is no longer expected to encode her constraints according to the syntax of the chosen tool, but can use a simple high-level DSL that is automatically compiled to an executable specification through custom adapters developed to support the interaction with existing off-the-shelf tools. In this paper we analyze three case studies to show how this approach can be successfully adopted to support truly diverse industrial projects. By discussing qualitative aspects of the approach, we investigate limitations and opportunities for improving general quality assessment solutions in general and DSL-based conformance tools in particular. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {Proceedings - 7th International Workshop on Empirical Software Engineering in Practice, IWESEP 2016},
  key       = {Software engineering},
  keywords  = {Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/IWESEP.2016.12},
}

@InProceedings{20142117747100,
  author    = {Barbosa, Manuel and Castro, David and Silva, Paulo F.},
  title     = {Compiling CAO: From cryptographic specifications to C implementations},
  year      = {2014},
  volume    = {8414 LNCS},
  pages     = {240 - 244},
  address   = {Grenoble, France},
  note      = {Computing power;Cryptographic algorithms;Memory requirements;Security-aware;},
  abstract  = {We present a compiler for CAO, an imperative DSL for the cryptographic domain. The tool takes high-level cryptographic algorithm specifications and translates them into C implementations through a series of security-aware transformations and optimizations. The compiler back-end is highly configurable, allowing the targeting of very disparate platforms in terms of memory requirements and computing power. &copy; 2014 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Program compilers},
  keywords  = {Cryptography;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-54792-8_13},
}

@InProceedings{20133716723852,
  author    = {James, Phillip and Trumble, Matthew and Treharne, Helen and Roggenbach, Markus and Schneider, Steve},
  title     = {OnTrack: An open tooling environment for railway verification},
  year      = {2013},
  volume    = {7871 LNCS},
  pages     = {435 - 440},
  address   = {Moffett Field, CA, United states},
  note      = {Automatically generated;Formal model;Formal specification language;Work-flows;},
  abstract  = {OnTrack automates workflows for railway verification, starting with graphical scheme plans and finishing with automatically generated formal models set up for verification. OnTrack is grounded on an established domain specification language (DSL) and is generic in the formal specification language used. Using a DSL allows the formulation of abstractions that work for verification in several formal specification languages. Here, we demonstrate the workflow using CSP||B and suggest how to extend the tool with further formal specification languages. &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Specification languages},
  keywords  = {Formal methods;NASA;Railroads;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-38088-4_30},
}

@InProceedings{20130515948842,
  author    = {Duran, Francisco and Zschaler, Steffen and Troya, Javier},
  title     = {On the reusable specification of non-functional properties in DSLs},
  year      = {2013},
  volume    = {7745 LNCS},
  pages     = {332 - 351},
  address   = {Dresden, Germany},
  note      = {Building blockes;Domain specific languages;Non functional properties;Problem domain;Reliability properties;Reusable specifications;System development;Transformation rules;},
  abstract  = {Domain-specific languages (DSLs) are an important tool for effective system development. They provide concepts that are close to the problem domain and allow analysis as well as generation of full solution implementations. However, this comes at the cost of having to develop a new language for every new domain. To make their development efficient, we must be able to construct DSLs as much as possible from reusable building blocks. In this paper, we discuss how such building blocks can be constructed for the specification and analysis of a range of non-functional properties, such as, for example, throughput, response time, or reliability properties. We assume DSL semantics to be provided through a set of transformation rules, which enables a range of analyses based on model checking. We demonstrate new concepts for defining language modules for the specification of non-functional properties, show how these can be integrated with base DSL specifications, and provide a number of syntactic conditions that we prove maintain the semantics of the base DSL even in the presence of non-functional-property specifications. &copy; 2013 Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Specifications},
  keywords  = {Model checking;Problem oriented languages;Reliability analysis;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_19},
}

@InProceedings{20143318062563,
  title     = {3rd Symposium on Languages, Applications and Technologies, SLATE 2014},
  year      = {2014},
  volume    = {38},
  pages     = {Computer Science and Technology Center (CCTC); Efacec; Polytechnic Institute of Braganca (IPB); Portuguese Foundation for Sci. and Technol. (FCT) -},
  address   = {Braganca, Portugal},
  abstract  = {The proceedings contain 24 papers. The topics discussed include: leveraging program comprehension with concern-oriented source code projections; comment-based concept location over system dependency graphs; ReCooPLa: a DSL for coordination-based reconfiguration of software architectures; a workflow description language to orchestrate multi-lingual resources; unfuzzying fuzzy parsing; contract-Java: design by contract in Java with safe error handling; plagiarism detection: a tool survey and comparison; target code selection by tilling AST with the use of tree pattern pushdown automation; assigning polarity automatically to the synsets of a Wordnet-like resource; detecting a tweet's topic within a large number of Portuguese Twitter trends; Rocchio's model based on vector space basis change for pseudo relevance feedback; language identification: a neural network approach; and LemPORT: a high-accuracy cross-platform Lemmatizer for Portuguese.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {21906807},
  journal   = {OpenAccess Series in Informatics},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20160601888481,
  author        = {Azadmanesh, Mohammad R. and Hauswirth, Matthias},
  title         = {SQL for deep dynamic analysis?},
  year          = {2015},
  pages         = {2 - 7},
  address       = {Pittsburgh, PA, United states},
  note          = {Dynamic analysis tools;Information flows;Interactive user interfaces;Program execution;Program trace;Query-based analysis;Relational Database;Trace information;},
  __markedentry = {[Neto:5]},
  abstract      = {If we develop a new dynamic analysis tool, how should we expose its functionalities? Through an interactive user interface, a DSL, a specific API, or in some other way? In this paper, we discuss how to use an already existing language familiar to most software engineers, SQL, to perform deep dynamic analyses. The goal is to explore the trade-off between expressiveness and ease-of-use. We use BLAST as the dynamic analysis tool and map its trace information to a relational database. We find that, even though SQL is expressive enough for deep analysis of program executions and information flow, it is not quite straight forward to express some of the queries software engineers might be interested in. However, it removes the burden of learning a new language from scratch, which could make it worthwhile as an option in some cases. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {WODA 2015 - Proceedings of the 13th International Workshop on Dynamic Analysis},
  key           = {Trace analysis},
  keywords      = {Application programming interfaces (API);Computational linguistics;Dynamic analysis;Economic and social effects;Query processing;User interfaces;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2823363.2823365},
}

@InProceedings{20161802314908,
  author        = {Rizun, M. and Bach, J.-C. and Ducasse, S.},
  title         = {Code transformation by direct transformation of ASTs},
  year          = {2015},
  pages         = {ACM Special Interest Group on Programming Languages; ESUG -},
  address       = {Brescia, Italy},
  note          = {Code transformation;Maintenance operations;Refactoring tools;Refactorings;Rewriting;Transform methods;Transformation rules;User friendly interface;},
  __markedentry = {[Neto:5]},
  abstract      = {Software evolves to be adapted to the environment, due to bugs, new features and design changes. Code transformations can be done manually, but that is a tedious and errorprone task. Therefore automated tools are used to assist developers in this maintenance operation. The Pharo environment includes its own refactoring tool -the Rewrite Engine-that allows one to transform methods by directly specifying parts of the AST to be rewritten. In addition, it proposes a parse tree transformation engine. However this tool and the used DSL to express the patterns for matching and transforming trees are complex to understand and master. In this context, writing a transformation rule is not a trivial task. We present a graphical tool built on the top of the Rewrite Engine - the Rewrite Tool - that abstracts the creation of transformation rules and proposes high-level AST operations that are simpler to understand than syntactic descriptions. It helps to automate the process of code transformation with a user-friendly interface. Copyright &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {IWST 2015 - Proceedings of the 10th International Workshop on Smalltalk Technologies, in conjunction with the 23rd International Smalltalk Joint Conference},
  key           = {Codes (symbols)},
  keywords      = {Cosine transforms;Engines;Forestry;Program debugging;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2811237.2811297},
}

@InProceedings{20144600206314,
  title     = {2014 IEEE 4th International Model-Driven Requirements Engineering Workshop, MoDRE 2014 - Proceedings},
  year      = {2014},
  address   = {Karlskrona, Sweden},
  abstract  = {The proceedings contain 10 papers. The topics discussed include: model driven requirements engineering: mapping the field and beyond; goal modeling for sustainability: the case of time; context transformations for goal models; a DSL for importing models in a requirements management system; SnapMind: a framework to support consistency and validation of model-based requirements in agile development; experimental evaluation of a tool for change impact prediction in requirements models: design, results, and lessons learned; a requirements engineering methodology combining models and controlled natural language; understanding and closing the gap between requirements on system and subsystem level; and requirement traceability: a model-based approach.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  journal   = {2014 IEEE 4th International Model-Driven Requirements Engineering Workshop, MoDRE 2014 - Proceedings},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20164002874844,
  author    = {Szabo, Tamas and Alperovich, Simon and Voelter, Markus and Erdweg, Sebastian},
  title     = {An extensible framework for variable-precision data-flow analyses in MPS},
  year      = {2016},
  pages     = {870 - 875},
  address   = {Singapore, Singapore},
  note      = {Data-ow Analysis;Domain specific languages;Extensible framework;General purpose languages;Inter-procedural analysis;Language compositions;Language workbenches;Program understanding;},
  abstract  = {Data-ow analyses are used as part of many software engineering tasks: they are the foundations of program understanding, refactorings and optimized code generation. Similar to general-purpose languages (GPLs), state-of-the-art domain-specific languages (DSLs) also require sophisticated data-ow analyses. However, as a consequence of the different economies of DSL development and their typically relatively fast evolution, the effort for developing and evolving such analyses must be lowered compared to GPLs. This tension can be resolved with dedicated support for data-ow analyses in language workbenches. In this tool paper we present MPS-DF, which is the component in the MPS language workbench that supports the definition of data-ow analyses for DSLs. Language developers can define data-ow graph builders declaratively as part of a language definition and compute analysis results efficiently based on these data-ow graphs. MPS-DF is extensible such that it does not compromise the support for language composition in MPS. Additionally, clients of MPSDF analyses can run the analyses with variable precision thus trading off precision for performance. This allows clients to tailor an analysis to a particular use case. Demo video of MPS-DF: https://youtu.be/laNDAZCe2jM. &copy; 2016 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, , Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  key       = {Data flow analysis},
  keywords  = {Computer programming languages;Graphical user interfaces;Problem oriented languages;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2970276.2970296},
}

@InProceedings{20140617289821,
  title     = {Proceedings - 17th IEEE International Enterprise Distributed Object Computing Conference Workshops, EDOCW 2013},
  year      = {2013},
  pages     = {IEEE Communications Society; IEEE Computer Society -},
  address   = {Vancouver, BC, Canada},
  abstract  = {The proceedings contain 44 papers. The topics discussed include: business building blocks as coordination mechanism for enterprise transformations; improving process robustness through domain-specific model transformations; determining the necessity of human intervention when migrating models of an evolved DSL; model-based integrated planning for logistics service contracts; eScienceSWaT - towards an eScience software engineering methodology; analyzing task and technology characteristics for enterprise architecture management tool support; handling concurrent changes in collaborative process model development: a change-pattern based approach; designing of virtual factory information system by enterprise portal; the relational database engine: an efficient validator of temporal properties on event traces; methodical development of modeling tools (MeDMoT'13); and dilemmas in enterprise architecture research and practice from a perspective of feral information systems.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {15417719},
  journal   = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20161202136340,
  title         = {28th International Workshop on Languages and Compilers for Parallel Computing, LCPC 2015},
  year          = {2016},
  volume        = {9519},
  pages         = {1 - 319},
  address       = {Raleigh, NC, United states},
  __markedentry = {[Neto:5]},
  abstract      = {The proceedings contain 19 papers. The special focus in this conference is on Programming Models and Optimizing Framework. The topics include: Low-overhead fault-tolerance support using disc programming model; efficient support for range queries and range updates using contention adapting search trees; polyhedral optimizations for a data-flow graph language; interactive composition of compiler optimizations; asynchronous nested parallelism for dynamic applications in distributed memory; multigrain parallelization for model-based design applications using the OSCAR compiler; extending shared address programming for accelerator clusters; petal tool for analyzing and transforming legacy MPI applications; automatic and efficient data host-device communication for many-core coprocessors; topology-aware parallelism for NUMA copying collectors; an embedded DSL for high performance declarative communication with correctness guarantees in C++; parallel nearest-neighbor units for learned dictionaries; conc-trees for functional and parallel programming; practical floating-point divergence detection; SMT solving for the theory of ordering constraints and an efficient, portable and generic library for successive cancellation decoding of polar codes.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  keywords      = {rank3},
  language      = {English},
}

@InProceedings{20140517250442,
  author        = {Wasserman, Louis},
  title         = {Scalable, example-based refactorings with Refaster},
  year          = {2013},
  pages         = {25 - 28},
  address       = {Indianapolis, IN, United states},
  note          = {Error prones;Global;Guava;Java;Large-scale;OpenJDK;Refactorings;Refaster;Syntax tree;},
  __markedentry = {[Neto:5]},
  abstract      = {We discuss Refaster, a tool that uses normal, compilable before-and-after examples of Java code to specify a Java refactoring. Refaster has been used successfully by the Java Core Libraries Team at Google to perform a wide variety of refactorings across Google's massive Java codebase. Our main contribution is that a large class of useful refactorings can be expressed in pure Java, without a specialized DSL, while keeping the tool easily accessible to average Java developers. Copyright is held by the owner/author(s).},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {WRT 2013 - Proceedings of the 2013 ACM Workshop on Refactoring Tools},
  key           = {Tools},
  keywords      = {Libraries;Trees (mathematics);, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2541348.2541355},
}

@InProceedings{20130716009036,
  title     = {Proceedings of the 12th Workshop on OCL and Textual Modelling, OCL 2012 - Being Part of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  year      = {2012},
  pages     = {IEEE CS; ACM Special Interest Group on Software Engineering (SIGSOFT) -},
  address   = {Innsbruck, Austria},
  abstract  = {The proceedings contain 13 papers. The topics discussed include: tool supported OCL refactoring catalogue; an extensible OCL virtual machine and code generator; featherweight OCL: a study for the consistent semantics of OCL 2.3 in HOL; on the use of an internal DSL for enriching EMF models; library for model querying - lQuery; ontology driven design of EMF metamodels and well-formedness constraints; modeling and executing ConcurTaskTrees using a UML-and SOIL-based metamodel; automatic generation of test models and properties from UML models with OCL constraints; transformation rules from UML4MBT meta-model to SMT meta-model for model animation; model-based formal specification of a DSL library for a qualified code generator; the secret life of OCL constraints; and experiences using OCL for business rules on financial messaging.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  journal   = {Proceedings of the 12th Workshop on OCL and Textual Modelling, OCL 2012 - Being Part of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  keywords  = {rank5},
  language  = {English},
}

@Article{20142017717982,
  author    = {Hamlaoui, Mahmoud El and Ebersold, Sophie and Anwar, Adil and Coulette, Bernard and Nassar, Mahmoud},
  title     = {Towards a framework for heterogeneous models matching},
  journal   = {Journal of Software Engineering},
  year      = {2014},
  volume    = {8},
  number    = {3},
  pages     = {132 - 151},
  note      = {Consistency;Correspondences;Domain specific languages;Heterogeneity;Point of view;},
  abstract  = {The overall goal of our approach is to relate models of a given domain that are created by different actors and thus are generally heterogeneous that is, described in different DSL (Domain Specific Languages). Instead of building a single global model, we propose to organize the different source models as a network of models which provides a global view of the system through a virtual global model. The matching of these models is done in a shared model of correspondences. We focus in this study on the elaboration of the model of correspondences, through a transformation called "refine" . The approach is illustrated by a representative use case (a Bug Tracking System) and supported by a modeling tool called HMS (Heterogeneous Matching Suite). &copy; 2014 Academic Journals Inc.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {18194311},
  key       = {Computer programming languages},
  keywords  = {Computer software;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.3923/jse.2014.132.151},
}

@InProceedings{20154101357446,
  author        = {Caracciolo, Andrea and Lungu, Mircea Filip and Nierstrasz, Oscar},
  title         = {A Unified Approach to Architecture Conformance Checking},
  year          = {2015},
  pages         = {41 - 50},
  address       = {Montreal, QC, Canada},
  note          = {Conformance checking;Declarative Languages;High costs;Test specifications;Unified approach;},
  __markedentry = {[Neto:5]},
  abstract      = {Software erosion can be controlled by periodically checking for consistency between the de facto architecture and its theoretical counterpart. Studies show that this process is often not automated and that developers still rely heavily on manual reviews, despite the availability of a large number of tools. This is partially due to the high cost involved in setting up and maintaining tool-specific and incompatible test specifications that replicate otherwise documented invariants. To reduce this cost, our approach consists in unifying the functionality provided by existing tools under the umbrella of a common business-readable DSL. By using a declarative language, we are able to write tool-agnostic rules that are simple enough to be understood by untrained stakeholders and, at the same time, can be interpreted as a rigorous specification for checking architecture conformance. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, IEEEDSML, Duplicados},
  journal       = {Proceedings - 12th Working IEEE/IFIP Conference on Software Architecture, WICSA 2015},
  key           = {Specifications},
  keywords      = {Architecture;Erosion;Software architecture;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/WICSA.2015.11},
}

@InProceedings{20160101760918,
  title     = {4th International Symposium on Languages, Applications and Technologies, SLATE 2015},
  year      = {2015},
  volume    = {563},
  pages     = {1 - 270},
  address   = {Madrid, Spain},
  abstract  = {The proceedings contain 26 papers. The special focus in this conference is on Human-Human Languages and Human-Computer Languages. The topics include: Speech features for discriminating stress using branch and bound wrapper search; oriya morphological analyzer using lttoolbox; exploiting twitter for the semantic enrichment of telecommunication alarms; meaning inference of abbreviations appearing in clinical studies; experiments on enlarging a lexical ontology; using unstructured profile information for gender classification of portuguese and english twitter users; yet another suite of multilingual NLP tools; towards a DSL for educational data mining; a metric to measure the understanding degree of WSDL descriptions; combining processing with racket; batched evaluation of full-sharing multithreaded tabling; browsing the parse space; a syntax-directed model transformation framework based on attribute grammars; an ast-based tool, spector, for plagiarism detection; towards the generation of graphical modelling environments aided by patterns; tree string path subsequences automaton and its use for indexing xml documents; a structural approach to assess graph-based exercises; a service for gamification of learning activities; engaging researchers in data management with labtablet, an electronic laboratory notebook; an efficient representation of RDF datasets; reducing large semantic graphs to improve semantic relatedness; a mixed approach for the representation of nutritional information through XML-to-OWL mappings; automatic generation of CVs from online social networks and knowledge identification from requirements specification.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  keywords  = {rank5},
  language  = {English},
}

@Article{20150500476458,
  author        = {Kikava, Filip and Collet, Philippe and France, Robert B.},
  title         = {SIGMA: Scala internal domain-specific languages for model manipulations},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8767},
  pages         = {569 - 585},
  note          = {Domain specific languages;Eclipse modeling framework;General purpose languages;General purpose programming;Levels of abstraction;Model consistency checking;Model to text transformations;Model transformation;},
  __markedentry = {[Neto:5]},
  abstract      = {Model manipulation environments automate model operations such as model consistency checking and model transformation. A number of external model manipulation Domain-Specific Languages (DSL) have been proposed, in particular for the Eclipse Modeling Framework (EMF). While their higher levels of abstraction result in gains in expressiveness over general-purpose languages, their limitations in versatility, performance, and tool support together with the need to learn new languages may significantly contribute to accidental complexities. &copy; Springer International Publishing Switzerland 2014.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  key           = {Model checking},
  keywords      = {Computational linguistics;Computer programming languages;Modeling languages;Problem oriented languages;, rank3},
  language      = {English},
}

@Article{20160601894198,
  author        = {El Hamlaoui, Mahmoud and Ebersold, Sophie and Anwar, Adil and Coulette, Bernard and Nassar, Mahmoud},
  title         = {Towards a framework for heterogeneous models matching},
  journal       = {Journal of Software Engineering},
  year          = {2014},
  volume        = {8},
  number        = {3},
  pages         = {132 - 151},
  note          = {Consistency;Correspondences;Domain specific languages;Heterogeneity;Point of view;},
  __markedentry = {[Neto:5]},
  abstract      = {The overall goal of our approach is to relate models of a given domain that are created by different actors and thus are generally heterogeneous that is, described in different DSL (Domain Specific Languages). Instead of building a single global model, we propose to organize the different source models as a network of models which provides a global view of the system through a virtual global model. The matching of these models is done in a shared model of correspondences. We focus in this study on the elaboration of the model of correspondences, through a transformation called "refine". The approach is illustrated by a representative use case (a Bug Tracking System) and supported by a modeling tool called HMS (Heterogeneous Matching Suite). &copy; 2014 Academic Journals Inc.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Duplicados},
  issn          = {18194311},
  key           = {Graphical user interfaces},
  keywords      = {Computational linguistics;Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.3923/jse.2014.132.151},
}

@InProceedings{20161202119698,
  author        = {Regnell, Bjorn},
  title         = {What is essential? a pilot survey on views about the requirements metamodel of reqT.org},
  year          = {2016},
  volume        = {9619},
  pages         = {232 - 239},
  address       = {Gothenburg, Sweden},
  note          = {Computer science students;Educational context;Embedded domain specific languages;Empirical Software Engineering;Empirical validation;Meta model;Requirements MetaModel;Research questions;},
  __markedentry = {[Neto:5]},
  abstract      = {[Context &amp; motivation] This research preview paper presents ongoing work on the metamodel of a free software requirements modeling tool called reqT that is developed in an educational context. The work aims to make an initial validation of a survey instrument that elicits views on the metamodel of the reqT tool, which aims to engage computer science students in Requirements Engineering (RE) through an open source DSL embedded in the Scala programming language. [Question] The research question is: Which RE concepts are essential to include in the metamodel for a requirements engineering tool in an educational context? [Principal ideas] A survey instrument is developed, with a list of 92 concepts (49 entities, 15 relations and 28 attributes) and a set of questions for each concept, to elicit the respondents&rsquo; views on the usage and interpretation of each concept. [Contribution] The survey is initially validated in a pilot study involving 14 Swedish RE scholars as subjects. The survey results indicate that the survey is feasible. The analysis of the responses suggest that many of the concepts in the metamodel are used frequently by the respondents and there is a large degree of agreement among the respondents about the meaning of the concepts. The results are encouraging for future work on empirical validation of the relevance of the reqT metamodel. &copy; Springer International Publishing Switzerland 2016.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Surveys},
  keywords      = {Computational linguistics;Computer aided software engineering;Computer programming;Computer programming languages;Computer software selection and evaluation;Education;Engineering education;Engineering research;Open source software;Problem oriented languages;Requirements engineering;Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-30282-9_16},
}

@InProceedings{20155201733103,
  author        = {Caracciolo, Andrea},
  title         = {A Unified Approach to Automatic Testing of Architectural Constraints},
  year          = {2015},
  volume        = {2},
  pages         = {871 - 874},
  address       = {Florence, Italy},
  note          = {Architectural constraints;Architectural decision;Conformance checking;Coordination frameworks;Error-prone process;Human-readable;Non-functional requirements;Unified approach;},
  __markedentry = {[Neto:5]},
  abstract      = {Architectural decisions are often encoded in the form of constraints and guidelines. Non-functional requirements can be ensured by checking the conformance of the implementation against this kind of invariant. Conformance checking is often a costly and error-prone process that involves the use of multiple tools, differing in effectiveness, complexity and scope of applicability. To reduce the overall effort entailed by this activity, we propose a novel approach that supports verification of human-readable declarative rules through the use of adapted off-the-shelf tools. Our approach consists of a rule specification DSL, called Dicto, and a tool coordination framework, called Probo. The approach has been implemented in a soon to be evaluated prototype. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, Duplicados},
  issn          = {02705257},
  journal       = {Proceedings - International Conference on Software Engineering},
  key           = {Software engineering},
  keywords      = {Automatic testing;Software architecture;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICSE.2015.281},
}

@InProceedings{20140417229523,
  author    = {Liu, Xiao and Kubiatowicz, John},
  title     = {Chisel-Q: Designing quantum circuits with a scala embedded language},
  year      = {2013},
  pages     = {427 - 434},
  address   = {Asheville, NC, United states},
  note      = {Assembly language;Embedded Languages;Functional languages;Hardware cost;Modern languages;Performance estimation;Quantum circuit;Quantum Computing;},
  abstract  = {We introduce Chisel-Q, a high-level functional language for generating quantum circuits. Chisel-Q permits quantum computing algorithms to be constructed using the meta-language features of Scala and its embedded DSL Chisel. With Chisel-Q, designers of quantum computing algorithms gain access to high-level, modern language features and abstractions. We describe a synthesis flow that transforms Chisel-Q into an explicit quantum circuit in the Quantum Assembly Language (QASM) format. We also discuss several optimizations to reduce the generated hardware cost. The Chisel-Q tool includes resource and performance estimation which can be used to compare different implementations of the same functionality. We compare the output of the generic Chisel-Q synthesis flow with hand-tuned versions of well-known quantum circuits. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {2013 IEEE 31st International Conference on Computer Design, ICCD 2013},
  key       = {Tools},
  keywords  = {Algorithms;Computer aided design;High level languages;Logic circuits;Quantum computers;Quantum optics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICCD.2013.6657075},
}

@InProceedings{20153401194484,
  author        = {Kovesdan, Gabor and Asztalos, Mark and Lengyel, Laszlo},
  title         = {Aggregate Callback: A design pattern for flexible and robust runtime model building},
  year          = {2015},
  pages         = {149 - 156},
  address       = {Angers, Loire Valley, France},
  note          = {Agility;Code Generation;Design Patterns;Domain specific modeling;Model transformation;},
  __markedentry = {[Neto:5]},
  abstract      = {In modern software engineering environments, tools that use Domain-Specific Languages (DSLs) are often applied. The usual workflow of such tools is that the textual input written in the DSL is parsed and a semantic model is instantiated. This model is later passed to another software component that processes it, e.g. a model transformation, a code generator or a simulator. Building the semantic model inside the parser is often a complex task. The model must be built in such a way that the constraints of the problem domain are enforced so that the consistency of the output is guaranteed. This paper presents a design pattern, referred as Aggregate Callback that supports enforcing constraints in the model and thus helps creating correct models. We have found that the Aggregate Callback pattern is useful for tool developers that build models in their applications. Copyright &copy; 2015 SCITEPRESS - Science and Technology Publications.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, Duplicados},
  journal       = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  key           = {Software design},
  keywords      = {Aggregates;Automatic programming;Computer programming languages;Computer software;Models;Network components;Problem oriented languages;Program compilers;Semantics;Software engineering;, rank3},
  language      = {English},
}

@InProceedings{20154701570912,
  title     = {8th International Conference on Graph Transformation, ICGT 2015},
  year      = {2015},
  volume    = {9151},
  pages     = {1 - 282},
  address   = {LAquila, Italy},
  abstract  = {The proceedings contain 21 papers. The special focus in this conference is on Foundations and Applications. The topics include: Polymorphic sesqui-pushout graph rewriting; predictive top-down parsing for hyperedge replacement grammars; algebraic graph rewriting with controlled embedding; proving termination of graph transformation systems using weighted type graphs over semirings; towards local confluence analysis for amalgamated graph transformation; multi-amalgamated triple graph grammars; reconfigurable petri nets with transition priorities and inhibitor arcs; reachability in graph transformation systems and slice languages; equational reasoning with context-free families of string diagrams; translating essential OCL invariants to nested graph constraints focusing on set operations; characterizing conflicts between rule application and rule evolution in graph transformation systems; graph pattern matching as an embedded clojure DSL; using graph transformations for formalizing prescriptions and monitoring adherence; towards compliance verification between global and local process models; inductive invariant checking with partial negative application conditions; tool support for multi-amalgamated triple graph grammars; using coverability analysis for verifying graph transformation systems and local search-based pattern matching features in EMF-INCQUERY.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20161902365252,
  author        = {Bui, Thi Mai Anh and Ziane, Mikal and Stinckwich, Serge and Ho, Tuong Vinh and Roche, Benjamin and Papoulias, Nick},
  title         = {Separation of concerns in epidemiological modelling},
  year          = {2016},
  pages         = {196 - 200},
  address       = {Malaga, Spain},
  note          = {Compartmental model;Computer implementations;Domain specific languages;Infectious disease;Modelling and simulations;Separation of concerns;Spatial regions;Stochastic Automata;},
  __markedentry = {[Neto:5]},
  abstract      = {Modelling and simulation have been heavily used in epidemiology, for instance to study the transmission of infectious diseases, their pathogenicity and their propagation. A major hindrance to modelling in epidemiology is the mixing of concerns that ought to be separated. The most obvious one is the computer implementation that should not be mixed with domain aspects. But several domain concerns should also be separated from the core epidemiological ones. These include the distribution of the studied populations into spatial regions, age intervals, sexes, species, viral strains...We propose an approach that relies on a mathematical model of the dynamics of a compartment-based population. The separation of domain concerns is provided by expressing each one as a stochastic automaton and combining them with a tensor sum. A DSL, Kendrick, and a tool, support this approach that has been validated on several case studies. &copy; 2016 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {MODULARITY Companion 2016 - Companion Proceedings of the 15th International Conference on Modularity},
  key           = {Modeling languages},
  keywords      = {Computer programming languages;Problem oriented languages;Stochastic systems;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2892664.2892699},
}

@InProceedings{20131616208336,
  author        = {Cherrueau, Ronan-Alexandre and Chebaro, Omar and Sudholt, Mario},
  title         = {Flexible aspect-based service adaptation for accountability properties in the cloud},
  year          = {2013},
  pages         = {13 - 17},
  address       = {Fukuoka, Japan},
  note          = {Accountability;AOP;Security and privacy;Service adaptation;Service compositions;Service infrastructure;Service orchestration;Service-based applications;},
  __markedentry = {[Neto:5]},
  abstract      = {Accountability properties, i.e., security and privacy properties for trustworthy data stewardship, are becoming increasingly important for Cloud applications. Frequently, they have to be enforced on large-scale service-based applications. In this paper we argue that real-world service infrastructures are best modeled in terms of three abstraction levels and that (partially invasive) adaptations involving all levels are needed to handle accountability properties. We motivate these issues for the case of secure logging, a basic accountability property of Cloud applications. We propose an initial version of a DSL for flexible and expressive control over the execution of service compositions on the three abstraction levels: service orchestrations, interceptors and service implementations. We also present a corresponding prototype tool and infrastructure for the manipulation of service compositions at all three levels that we have implemented over Apache CXF. Finally, we show how our method can be applied to enable secure logging in previously logging-agnostic applications. Copyright &copy; 2013 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {VariComp 2013 - Proceedings of the 4th International Workshop on Variability and Composition},
  key           = {Abstracting},
  keywords      = {rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2451617.2451621},
}

@InProceedings{20140417225659,
  author    = {Lavrischeva, Ekaterina and Ostrovski, Alexei and Radetskiy, Igor},
  title     = {Approach to e-learning fundamental aspects of software engineering},
  year      = {2012},
  volume    = {848},
  pages     = {176 - 187},
  address   = {Kherson, Ukraine},
  note      = {Computer science students;Developing projects;Eclipse environment;Product-lines;Programming methodology;Reusable components;Software industry;Software resources;},
  abstract  = {New theoretical and applied aspects of software engineering are introduced, viz.: technologies of developing programs and reusable components with MS.NET, CORBA, Java, Eclipse environments; assembling them into applied systems and their families; embedding components into the modern environments for shared usage; modeling applied domains in ontological DSLlike languages with tools like MS DSL Tools, Workflow, Eclipse-DSL, and Prote&acute;ge&acute;. These aspects are implemented in the instrumental and technological complex (ITC). They are oriented towards improving software industry based on the readymade software resources (reuses, assets, services, artifacts). The ITC is represented by a web site with modern design, the contents of which has no known counterparts. The site is introduced as a tool for developing various kinds of programs and systems in the corresponding product lines, as well as for teaching computer science students the subject of software engineering.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Software engineering},
  keywords  = {Computer programming;Computer software reusability;E-learning;Industrial applications;Industrial research;Information technology;Interoperability;Java programming language;Knowledge management;Tools;},
  language  = {English},
}

@InProceedings{20121915007187,
  author    = {Raji, Amine and Dhaussy, Philippe},
  title     = {Use cases for context aware model-checking},
  year      = {2012},
  volume    = {7167 LNCS},
  pages     = {202 - 216},
  address   = {Wellington, New zealand},
  note      = {Context-Aware;Design defects;Environmental conditions;Error prone tasks;Formal model;Industrial case study;Requirements specification language;Software verification;Technical improvement;Verification tools;},
  abstract  = {Despite technical improvements in current verification tools, the increasing size of developed systems makes the detection of design defects more difficult. Context-aware Model-Checking is an effective technique for automating software verifications considering specific environmental conditions. Unfortunately, few existing approaches provide support for this crucial task and mainly rely on significant effort and expertise of the engineer. We previously proposed a DSL (called CDL) to facilitate the formalization of requirements and contexts. Experiences has shown that manually writing CDL models is difficult and error prone task. In this paper, we propose a tool-supported framework to automatically generate CDL models using eXtended Use Cases (XUC). XUC models consistently link use cases with scenarios with respect to the domain specification vocabulary of the model to be checked. We also propose a requirements specification language to fill the gap between textual requirements and CDL properties. An industrial case study is presented to illustrate the effectiveness of XUCs to generate correct and complete CDL models for formal model analysis. &copy; 2012 Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Model checking},
  keywords  = {Industrial applications;Software engineering;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-29645-1_21},
}

@InProceedings{20153201116773,
  author    = {Scheidgen, Markus},
  title     = {Generation of large random models for benchmarking},
  year      = {2015},
  volume    = {1406},
  pages     = {1 - 10},
  address   = {L'Aquila, Italy},
  note      = {Jit compilations;Model processing;Model-driven Engineering;Parametrizations;Random Model;Repetitive pattern;Synthetic models;Use case scenario;},
  abstract  = {Since model driven engineering (MDE) is applied to larger and more complex system, the memory and execution time performance of model processing tools and frameworks has become important. Benchmarks are a valuable tool to evaluate performance and hence assess scalability. But, benchmarks rely on reasonably large models that are unbiased, can be shaped to distinct use-case scenarios, and are "real" enough (e.g. non-uniform) to cause real-world behavior (especially when mechanisms that exploit repetitive patterns like caching, compression, JIT-compilation, etc. are involved). Creating large models is expensive and erroneous, and neither existing models nor uniform synthetic models cover all three of the wanted properties. In this paper, we use randomness to generate unbiased, non-uniform models. Furthermore, we use distributions and parametrization to shape these models to simulate different use-case scenarios. We present a meta-model-based framework that allows us to describe and create randomly generated models based on a meta-model and a description written in a specifically developed generator DSL. We use a random code generator for an object-oriented programming language as case study and compare our result to non-randomly and synthetically created code, as well as to existing Java-code.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Object oriented programming},
  keywords  = {Benchmarking;Codes (symbols);Java programming language;},
  language  = {English},
}

@InProceedings{20144700235617,
  author    = {George, Nithin and Lee, Hyoukjoong and Novo, David and Rompf, Tiark and Brown, Kevin J. and Sujeeth, Arvind K. and Odersky, Martin and Olukotun, Kunle and Ienne, Paolo},
  title     = {Hardware system synthesis from Domain-Specific Languages},
  year      = {2014},
  pages     = {Altera; BEEcube; Cadence; et al.; Sigasi; Xilinx -},
  address   = {Munich, Germany},
  note      = {Application developers;Better performance;Domain specific languages;High productivity;High-level program;High-level synthesis;Implementation platforms;Programming models;},
  abstract  = {Field Programmable Gate Arrays (FPGAs) are very versatile devices, but their complicated programming model has stymied their widespread usage. While modern High-Level Synthesis (HLS) tools provide better programming models, the interface they offer is still too low-level. In order to produce good quality hardware designs with these tools, the users are forced to manually perform optimizations that demand detailed knowledge of both the application and the implementation platform. Additionally, many HLS tools only generate isolated hardware modules that the user still needs to integrate into a system design before generating the FPGA bitstream. These problems make HLS tools difficult to use for application developers who have little hardware design knowledge. To address these problems, we propose an automated methodology to generate FPGA bitstreams from high-level programs written in Domain-Specific Languages (DSLs). We leverage the domain-knowledge conveyed by the DSL and its domain-specific semantics to extract application parallelism, perform optimizations and also identify a suitable system-architecture for the implementation, thereby, relieving the user from most of the hardware-level details. We demonstrate the high productivity and high design quality this approach offers by automatically generating hardware systems from applications written in OptiML, a machine-learning DSL. To evaluate our methodology, we use four OptiML applications and show that we can easily generate different solutions which achieve different trade-offs between performance and area. More importantly, the results reveal that our generated hardware achieves much better performance compared to the one obtained from using the HLS tool without platform-specific optimizations.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, Inclusos},
  journal   = {Conference Digest - 24th International Conference on Field Programmable Logic and Applications, FPL 2014},
  key       = {High level languages},
  keywords  = {Design;Field programmable gate arrays (FPGA);Hardware;Knowledge management;Problem oriented languages;Product design;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/FPL.2014.6927454},
}

@InProceedings{20161602265345,
  author        = {Selgrad, Kai and Lier, Alexander and Koferl, Franz and Stamminger, Marc and Lohmann, Daniel},
  title         = {Lightweight, generative variant exploration for high-performance graphics applications},
  year          = {2015},
  pages         = {141 - 150},
  address       = {Pittsburgh, PA, United states},
  note          = {Algorithmic variants;Code Generation;Computer graphics technology;Efficient implementation;Graphics applications;Hardware architecture;Incremental approach;Rendering performance;},
  __markedentry = {[Neto:5]},
  abstract      = {Rendering performance is an everlasting goal of computer graphics and significant driver for advances in both, hardware architecture and algorithms. Thereby, it has become possible to apply advanced computer graphics technology even in low-cost embedded appliances, such as car instruments. Yet, to come up with an efficient implementation, developers have to put enormous efforts into hardware/problem-specific tailoring, fine-tuning, and domain exploration, which requires profound expert knowledge. If a good solution has been found, there is a high probability that it does not work as well with other architectures or even the next hardware generation. Generative DSL-based approaches could mitigate these efforts and provide for an efficient exploration of algorithmic variants and hardware-specific tuning ideas. However, in vertically organized industries, such as automotive, suppliers are reluctant to introduce these techniques as they fear loss of control, high introduction costs, and additional constraints imposed by the OEM with respect to software and tool-chain certification. Moreover, suppliers do not want to share their generic solutions with the OEM, but only concrete instances. To this end, we propose a light-weight and incremental approach for meta programming of graphics applications. Our approach relies on an existing formulation of C-like languages that is amenable to meta programming, which we extend to become a lightweight language to combine algorithmic features. Our method provides a concise notation for meta programs and generates easily sharable output in the appropriate C-style target language.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {GPCE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  key           = {C (programming language)},
  keywords      = {Algorithmic languages;Algorithms;Automatic programming;Computational linguistics;Computer graphics;Computer hardware;Hardware;Ray tracing;Reconfigurable hardware;Software prototyping;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2814204.2814220},
}

@InProceedings{20155001675860,
  author    = {Aouini, Zied and Kortebi, Abdesselem and Ghamri-Doudane, Yacine},
  title     = {Traffic monitoring in home networks: Enhancing diagnosis and performance tracking},
  year      = {2015},
  pages     = {545 - 550},
  address   = {Dubrovnik, Croatia},
  note      = {Architectural approach;Band-width utilization;Experimental evaluation;Experimental testbed;Network Monitoring;Network traffic monitoring;Passive measurements;Resource consumption;},
  abstract  = {Home network complexity is dramatically growing in terms of topology (devices and connectivity technologies) and services leading to increasingly challenging management issues. In this context, enabling a better visibility of home network traffic usage and performance is a crucial step to provide efficient self-care and customer care. In this paper, we study home network traffic monitoring architectural approaches. In particular, we study the feasibility of a Home Gateway based flow monitoring approach, which will allow enhancing home network diagnostic and performance tracking. Our experimental evaluation aims at providing a better understanding of deployment possibilities and limits. The obtained experimental results, based on an open source tool, are promising in terms of resource consumption (an average load of 6,6% and 18MB for CPU and memory respectively ) as well as bandwidth utilization (average 156 Kbps) for typical DSL access speed scenario. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {IWCMC 2015 - 11th International Wireless Communications and Mobile Computing Conference},
  key       = {Home networks},
  keywords  = {Carrier communication;Complex networks;Computer networks;Gateways (computer networks);Mobile computing;Personal communication systems;Wireless telecommunication systems;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/IWCMC.2015.7289142},
}

@Article{20140817345281,
  author        = {Leitner, Andrea and Preschern, Christopher and Kreiner, Christian},
  title         = {Effective development of automation systems through domain-specific modeling in a small enterprise context},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {35 - 54},
  note          = {Automation systems;Cost modeling;Domain specific modeling;Software Product Line;System development process;},
  __markedentry = {[Neto:5]},
  abstract      = {High development and maintenance costs and a high error rate are the major problems in the development of automation systems, which are mainly caused by bad communication and inefficient reuse methods. To overcome these problems, we propose a more systematic reuse approach. Though systematic reuse approaches such as software product lines are appealing, they tend to involve rather burdensome development and management processes. This paper focuses on small enterprises. Since such companies are often unable to perform a "big bang" adoption of the software product line, we suggest an incremental, more lightweight process to transition from single-system development to software product line development. Besides the components of the transition process, this paper discusses tool selection, DSL technology, stakeholder communication support, and business considerations. Although based on problems from the automation system domain, we believe the approach may be general enough to be applicable in other domains as well. The approach has proven successful in two case studies. First, we applied it to a research project for the automation of a logistics lab model, and in the second case (a real-life industry case), we investigated the approaches suitability for fish farm automation systems. Several metrics were collected throughout the evolution of each case, and this paper presents the data for single system development, clone&amp;own and software product line development. The results and observable effects are compared, discussed, and finally summarized in a list of lessons learned. &copy; 2012 Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, SpringerLink, Duplicados},
  issn          = {16191366},
  key           = {Automation},
  keywords      = {Communication;Computer software;Enterprise resource planning;Industry;Research;Software design;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/s10270-012-0289-1},
}

@InProceedings{20161302149609,
  author        = {Lopez-Fernandez, Jesus J. and Guerra, Esther and De Lara, Juan},
  title         = {Example-based validation of domain-specific visual languages},
  year          = {2015},
  pages         = {101 - 112},
  address       = {Pittsburgh, PA, United states},
  note          = {Computer science students;Domain specific;Domain specific languages;Domain-specific visual language;Meta model;Meta-modelling;Model-driven Engineering;Validation and verification;},
  __markedentry = {[Neto:5]},
  abstract      = {The definition of Domain-Specific Languages (DSLs) is a recurrent activity in Model-Driven Engineering. However, their construction is many times an ad-hoc proceb, partly due to the lack of tools enabling a proper engineering of DSLs and promoting domain experts to play an active role. The focus of this paper is on the validation of meta-models for visual DSLs. For this purpose, we propose a language and tool support for describing properties that in-stances of meta-models should (or should not) meet. Then, our system uses a model finder to produce example models, enriched with a graphical concrete syntax, that confirm or refute the abumptions of the meta-model developer. Our language complements metaBest, a framework for the validation and verification of meta-models that includes two other languages for unit testing and specification-based test-ing of meta-models. A salient feature of our approach is that it fosters interaction with domain experts by the use, proceb-ing and creation of informal drawings constructed in editors liked yED or Dia. We abeb the usefulneb of the approach in the validation of a DSL for house blueprints, with the par-Ticipation of 26 4th year computer science students. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {SLE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  key           = {Visual languages},
  keywords      = {Computational linguistics;Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2814251.2814256},
}

@Article{20123515385010,
  author        = {Hrncic, Dejan and Mernik, Marjan and Bryant, Barrett R.},
  title         = {Improving grammar inference by a memetic algorithm},
  journal       = {IEEE Transactions on Systems, Man and Cybernetics Part C: Applications and Reviews},
  year          = {2012},
  volume        = {42},
  number        = {5},
  pages         = {692 - 703},
  note          = {Domain experts;Domain specific languages;Grammar inference;Grammatical inferences;Inference process;Memetic algorithms;Semantics of programming languages;Software languages;},
  __markedentry = {[Neto:5]},
  abstract      = {A memetic algorithm, a novel approach for solving NP-hard problems, has been applied in this paper for grammatical inference in the field of domain-specific languages (DSLs). DSLs are often designed by domain experts who have no knowledge about the syntax and semantics of programming languages. However, they are able to write sample programs to accomplish their goals and illustrate the features of their language. Grammatical inference is a technique to infer a context-free grammar from a set of positive (and negative) samples. This paper shows that grammatical inference may assist domain experts and software language engineers in developing DSLs by automatically producing a grammar, which describes a set of sample DSL programs. A memetic-algorithm-based tool is developed, which greatly improves results and robustness of the inference process. &copy; 1998-2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSL, Duplicados},
  issn          = {10946977},
  key           = {Evolutionary algorithms},
  keywords      = {Computational complexity;Computational grammars;Inference engines;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/TSMCC.2012.2186802},
}

@InProceedings{20122215073872,
  author    = {Barateiro, Jose and Borbinha, Jose},
  title     = {Managing risk data: From spreadsheets to information systems},
  year      = {2012},
  pages     = {673 - 676},
  address   = {Yasmine Hammamet, Tunisia},
  note      = {Control mechanism;Domain specific languages;Integrated solutions;Management efforts;Risk information;Risk management framework;Specific activity;},
  abstract  = {The goal of Risk Management is to define prevention and control mechanisms to address the risks attached to specific activities and valuable assets. Many Risk Management efforts operate in silos with narrowly focused, functionally driven, and disjointed activities. That fact leads to a fragmented view of risks, where each activity uses its own language, customs and metrics. That limits an organization-wide perception of risks, where interdependent risks are not anticipated, controlled or managed. The lack of integrated solutions to manage risk information, lead the experts to use spreadsheets as their main tool, impeding collaboration, communication and reuse of risk information. In order to address these issues, this paper presents a solution that integrates a Risk Management framework, including a XML-based Domain Specific Language for Risk Management. The proposed framework is supported by an information system to manage the definition or risks. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {Proceedings of the Mediterranean Electrotechnical Conference - MELECON},
  key       = {Risk perception},
  keywords  = {Information systems;Risk management;Spreadsheets;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/MELCON.2012.6196521},
}

@InProceedings{20162702563910,
  author        = {Li, Pei and Brunet, Elisabeth and Trahay, Francois and Parrot, Christian and Thomas, Gael and Namyst, Raymond},
  title         = {Automatic OpenCL code generation for multi-device heterogeneous architectures},
  year          = {2015},
  volume        = {2015-December},
  pages         = {959 - 968},
  address       = {Beijing, China},
  note          = {Accelerator data;Code Generation;Domain specific languages;Heterogeneous architectures;Lines of code;Multiple devices;OpenCL;Programming tools;},
  __markedentry = {[Neto:5]},
  abstract      = {Using multiple accelerators, such as GPUs or Xeon Phis, is attractive to improve the performance of large data parallel applications and to increase the size of their workloads. However, writing an application for multiple accelerators remains today challenging because going from a single accelerator to multiple ones indeed requires to deal with potentially non-uniform domain decomposition, inter-accelerator data movements, and dynamic load balancing. Writing such code manually is time consuming and error-prone. In this paper, we propose a new programming tool called STEPOCL along with a new domain specific language designed to simplify the development of an application for multiple accelerators. We evaluate both the performance and the usefulness of STEPOCL with three applications and show that: (i) the performance of an application written with STEPOCL scales linearly with the number of accelerators, (ii) the performance of an application written using STEPOCL competes with a handwritten version, (iii) larger workloads run on multiple devices that do not fit in the memory of a single device, (iv) thanks to STEPOCL, the number of lines of code required to write an application for multiple accelerators is roughly divided by ten. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, IEEEDSML, Duplicados},
  issn          = {01903918},
  journal       = {Proceedings of the International Conference on Parallel Processing},
  key           = {Automatic programming},
  keywords      = {Acceleration;Codes (symbols);Computer aided software engineering;Computer programming languages;Domain decomposition methods;Memory architecture;Network components;Network management;Particle accelerators;Problem oriented languages;Program processors;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICPP.2015.105},
}

@InProceedings{20122815232152,
  author        = {Gunter, Manuel},
  title         = {Introducing MapLan to map banking survey data into a time series database},
  year          = {2012},
  pages         = {528 - 533},
  address       = {Berlin, Germany},
  note          = {Business needs;Data lineage;Data mappings;Data transformation;Domain specific languages;Heterogeneous schemas;Monetary policies;Statistical database;Statistical datas;Survey data;Time Series Database;},
  __markedentry = {[Neto:5]},
  abstract      = {In order to fulfill its monetary policy function, the Swiss National Bank (SNB) collects statistical data on the economy. The SNB stores results of the regularly held surveys in a specialized database (primary), ordered by surveys and survey forms. After validation the data has to be transferred in another specialized database (secondary) where it can be accessed by economists. The secondary database keeps the data in time series that are hierarchically arranged by statistical taxonomies. The data transfer from the primary to the secondary database feeds 1.5 million time series. Mapping and transformation logic was hard-coded in legacy programs. They were cumbersome to manage and intransparent to the economists in charge. In this paper we describe a novel approach called MapLan, a Java-based data mapping system featuring a domain specific language. The MapLan system not only performs the data transformation and mapping, it also produces complete data lineage information. This paper shows in practice that domain specific languages are an efficient tool to solve two pressing data mapping and transformation problems of statistical databases. One problem is that of mapping the large and heterogeneous schemas of statistical databases in an efficient and manageable way. The other problem is the business need for complete data lineage of the target time series. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Metadata},
  keywords      = {Data transfer;Economics;Java programming language;Mapping;Surveys;Time series;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2247596.2247658},
}

@InProceedings{20160401839486,
  author    = {Vinogradov, Sergey and Ozhigin, Artem and Ratiu, Daniel},
  title     = {Modern model-based development approach for embedded systems practical experience},
  year      = {2015},
  pages     = {56 - 59},
  address   = {Rome, Italy},
  note      = {Application requirements;Control functionality;Development environment;Domain specific languages;Language engineering;Model based development;Multi paradigm modeling;Practical experience;},
  abstract  = {Control functionality of modern rail vehicles is getting more and more complex. It contains several modules such as the traction control unit or the central control unit, as well as input and output stations, such as driver's cab terminals and process I/Os. A plethora of devices are connected to the vehicle and train bus and are able to communicate. The functions of the vehicle control and traction systems are configured by using function blocks from which loadable programs are generated. The languages used to program the control units are well established in the field. However, one-size-fits-all approach cannot adequately address the increased complexity of the software in modern trains. In this paper we describe our preliminary experience with using the multi-paradigm modeling tool 'mbeddr' in the railway domain. The following aspects have been in focus during the work: a) matching the application requirements and domain specific language used for implementation; b) integration of model-based approach into traditional product lifecycle; c) reengineering existing functionality using modeling and code generation capabilities of mbeddr. The system example we chose was the application logic of automated train driving system implemented in development environment of Siemens process automation framework. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {1st IEEE International Symposium on Systems Engineering, ISSE 2015 - Proceedings},
  key       = {C (programming language)},
  keywords  = {Computational linguistics;Computer programming languages;Control system synthesis;Embedded systems;Life cycle;Modeling languages;Problem oriented languages;Systems engineering;Traction control;Vehicles;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SysEng.2015.7302512},
}

@InProceedings{20154001325461,
  author        = {Sharma, Vibhu Saujanya and Ramnani, Roshni R. and Sengupta, Shubhashis},
  title         = {A framework for identifying and analyzing non-functional requirements from text},
  year          = {2014},
  pages         = {1 - 8},
  address       = {Hyderabad, India},
  note          = {Domain specific languages;Multiple features;NAtural language processing;Natural language requirements;NFRs;Non-functional requirements;Requirement analysis;Technical architecture;},
  __markedentry = {[Neto:5]},
  abstract      = {Early identification of Non-Functional Requirements (NFRs) is important as this has direct bearing on the design and architecture of the system. NFRs form the basis for architects to create the technical architecture of the system which acts as the scaffolding in which the functionality of the same is delivered. Failure to identify and analyze NFRs early-on can result in unclassified, incomplete or conicting NFRs, and this typically results in costly rework in later stages of the software development. In practice, this activity is primarily done manually. In this paper, we present a framework to automatically detect and classify non-functional requirements from textual natural language requirements. Our approach to identify NFRs is based on extracting multiple features by parsing the natural language requirement whereby the presence of a certain combination of and relationship among the features uniquely identifies the requirement as an NFR of a particular category. These features are specified as pattern based rules which can be specified in a human readable language through the use of a domain specific language that we have defined. This enables great ease and exibility in creating and extending rules. Our approach has been implemented as a prototype tool and here we also present the results of applying our approach on a publicly available requirement corpus. Copyright &copy; 2014 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {4th International Workshop on the Twin Peaks of Requirements and Architecture, TwinPeaks 2014 - Proceedings},
  key           = {Natural language processing systems},
  keywords      = {Computational linguistics;Computer architecture;Computer programming languages;Problem oriented languages;Scaffolds;Software design;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2593861.2593862},
}

@InProceedings{20143318062546,
  author    = {Fonseca, Joao M. Sousa and Pereira, Maria Joao Varanda and Henriques, Pedro Rangel},
  title     = {Converting ontologies into DSLs},
  year      = {2014},
  volume    = {38},
  pages     = {85 - 92},
  address   = {Braganca, Portugal},
  note      = {Attribute grammars;Concrete domains;Domain specific languages;Grammar;Grammar engineering;OWL;RDF;Syntactic sugars;},
  abstract  = {This paper presents a project whose main objective is to explore the Ontological-based development of Domain Specific Languages (DSL), more precisely, of their underlying Grammar. After reviewing the basic concepts characterizing Ontologies and Domain-Specific Languages, we introduce a tool, Onto2Gra, that takes profit of the knowledge described by the ontology and automatically generates a grammar for a DSL that allows to discourse about the domain described by that ontology. This approach represents a rigorous method to create, in a secure and effective way, a grammar for a new specialized language restricted to a concrete domain. The usual process of creating a grammar from the scratch is, as every creative action, difficult, slow and error prone; so this proposal is, from a Grammar Engineering point of view, of uttermost importance. After the grammar generation phase, the Grammar Engineer can manipulate it to add syntactic sugar to improve the final language quality or even to add semantic actions. The Onto2Gra project is composed of three engines. The main one is OWL2DSL, the component that converts an OWL ontology into an attribute grammar. The two additional modules are Onto2OWL, converts ontologies written in OntoDL (a light-weight DSL to describe ontologies) into standard OWL, and DDesc2OWL, converts domain instances written in the DSL generated by OWL2DSL into the initial OWL ontology. &copy; Joa&tilde;o Manuel Sousa Fonseca, Maria Joa&tilde;o Varanda Pereira, and Pedro Rangel Henriques.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {21906807},
  journal   = {OpenAccess Series in Informatics},
  key       = {Birds},
  keywords  = {Computer programming languages;DSL;Ontology;Problem oriented languages;Query languages;Semantic Web;Semantics;Slate;},
  language  = {English},
  url       = {http://dx.doi.org/10.4230/OASIcs.SLATE.2014.85},
}

@Article{20143600051361,
  author        = {Tairas, Robert and Cabot, Jordi},
  title         = {Corpus-based analysis of domain-specific languages},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {889 - 904},
  note          = {Analysis;ATL;Corpus;Domain specific languages;Puppet;},
  __markedentry = {[Neto:5]},
  abstract      = {As more domain-specific languages (DSLs) are designed and developed, the need to evaluate these languages becomes an essential part of the overall DSL life cycle. Corpus-based analysis can serve as an evaluation mechanism to identify characteristics of the language after it has been deployed by looking at how end-users employ it in practice. This analysis that is based on actual usage of the language brings a new perspective which can be considered by a language engineer when working toward improving the language. In this paper, we describe our utilization of corpus-based analysis techniques and exemplify them on the evaluation of the Puppet and ATL DSLs. We also outline an Eclipse plug-in, which is a generic corpus-based DSL analysis tool that can accommodate the evaluation of different DSLs. &copy; 2013, Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, SpringerLink, Duplicados},
  issn          = {16191366},
  key           = {Computational linguistics},
  keywords      = {Computer programming languages;DSL;Life cycle;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/s10270-013-0352-6},
}

@InProceedings{20163202693899,
  author        = {Schmid, Klaus and Eichelberger, Holger},
  title         = {EASy-Producer - from product lines to variability-rich software ecosystems},
  year          = {2015},
  volume        = {20-24-July-2015},
  pages         = {390 - 391},
  address       = {Nashville, TN, United states},
  note          = {Easy-producer;Industrial case study;Light-weight engineering;Open source tools;Product derivation;Software ecosystems;Software Product Line;Variability model;},
  __markedentry = {[Neto:5]},
  abstract      = {The EASy-Producer product line environment is a novel opensource tool that supports the lightweight engineering of software product lines and variability-rich software ecosystems. It has been applied in several industrial case studies, showing its practical applicability both from a stability and a capability point of view. The tool set integrates both, interactive configuration capabilities and a DSL-based approach to variability modeling, configuration definition and product derivation. The goal of the tutorial is to provide the participants with an overview of the tool. However, the main focus will be on a brief introduction of the DSLs. After participating in the tutorial, the participants will understand the capabilities of the toolset and will have a basic practical understanding of how to use it to define software ecosystems and derive products from them. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Ecosystems},
  keywords      = {Computer software;DSL;Ecology;Software design;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2791060.2791112},
}

@InProceedings{20152801026292,
  author        = {Zhang, Weiqing and Moller-Pedersen, Birger},
  title         = {Tool integration models},
  year          = {2013},
  volume        = {1},
  pages         = {485 - 494},
  address       = {Bangkok, Thailand},
  note          = {Artifact;Code Generation;Integration models;Role;Tool integration;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an extension of a previously presented tool integration approach: tool integration for different scenarios may be specified as integration models, and these integration models can be executed or form the basis of code generation for implementing integration on different platforms. Integration models cover both the data and behavior parts of tool integration. The benefits of separating the details of integration models from the models being integrated through tool integration are illustrated and it is indicated what a DSL for making integration models would be. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSL, Duplicados},
  issn          = {15301362},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  key           = {Integration},
  keywords      = {Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/APSEC.2013.70},
}

@Article{20160201793936,
  author        = {Dejanovi, I. and Milosavljevi, G. and Vaderna, R.},
  title         = {Arpeggio: A flexible PEG parser for Python},
  journal       = {Knowledge-Based Systems},
  year          = {2016},
  volume        = {95},
  pages         = {71 - 74},
  note          = {Domain specific languages;Free and open source softwares;Packrat;Parser;Parsing expression grammars;Python;Python programming language;TextX;},
  __markedentry = {[Neto:5]},
  abstract      = {Arpeggio is a recursive descent parser with full backtracking and memoization based on PEG (Parsing Expression Grammar) grammars. This category of parsers is known as packrat parsers. It is implemented in the Python programming language and works as a grammar interpreter. Arpeggio has a very good support for error reporting, debugging, and grammar and parse tree visualization. It is used in industrial environments and teaching Domain-Specific Languages course at the Faculty of Technical Sciences in Novi Sad. Arpeggio is a foundation of a high-level DSL meta-language and tool - textX. It is a free and open-source software available at GitHub under MIT license. &copy; 2015 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, ScienceDirect, Duplicados},
  issn          = {09507051},
  key           = {Computational linguistics},
  keywords      = {Computer programming;Computer programming languages;DSL;Formal languages;High level languages;Open source software;Open systems;Polyethylene glycols;Problem oriented languages;Software engineering;Teaching;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.knosys.2015.12.004},
}

@InProceedings{20124415616595,
  author        = {Puente, Gorka and Diaz, Oscar},
  title         = {Wiki refactoring as mind map reshaping},
  year          = {2012},
  volume        = {7328 LNCS},
  pages         = {646 - 661},
  address       = {Gdansk, Poland},
  note          = {End users;Error prones;Graphical representations;Mind maps;Mind-mapping;Organic growth;Refactorings;Wiki;Wikipedia;},
  __markedentry = {[Neto:5]},
  abstract      = {Wikis' organic growth inevitably leads to wiki degradation and the need for regular wiki refactoring. So far, wiki refactoring is a manual, time-consuming and error-prone activity. We strive to ease wiki refactoring by using mind maps as a graphical representation of the wiki structure, and mind map manipulations as a way to express refactoring. This paper (i) defines the semantics of common refactoring operations based on Wikipedia best practices, (ii) advocates for the use of mind maps as a visualization of wikis for refactoring, and (iii) introduces a DSL for wiki refactoring built on top of FreeMind, a mind mapping tool. Thus, wikis are depicted as FreeMind maps, and map manipulations are interpreted as refactoring operations over the wiki. The rationales for the use of a DSL are based not only on reliability grounds but also on facilitating end-user participation. &copy; 2012 Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Schematic diagrams},
  keywords      = {DSL;Information systems;Semantics;Systems engineering;Websites;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-31095-9_42},
}

@InProceedings{20123415364585,
  author        = {Diaz, Oscar and De Sosa, Josune and Arellano, Cristobal and Trujillo, Salvador},
  title         = {Web-based tool integration: A web augmentation approach},
  year          = {2012},
  volume        = {7387 LNCS},
  pages         = {431 - 434},
  address       = {Berlin, Germany},
  note          = {Javascript;Tool integration;WEB application;Web augmentation;Web-based tools;},
  __markedentry = {[Neto:5]},
  abstract      = {Desktop tools are steadily being turned into web applications. Tool integration then becomes a question of website integration. This work uses Web Augmentation techniques for this purpose. An integration layer is deployed on top of the existing Web-based tools that augments the rendering of those tools for the integration experience. Layers are specified through a statechart-like DSL and transformed into JavaScript. &copy; 2012 Springer-Verlag.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Integration},
  keywords      = {Websites;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-31753-8_37},
}

@InProceedings{20144600205095,
  author    = {Bettini, Lorenzo},
  title     = {Developing user interfaces with EMF parsley},
  year      = {2014},
  pages     = {58 - 66},
  address   = {Vienna, Austria},
  note      = {Eclipse;Eclipse modeling framework;Injection mechanisms;Rapid customization;User interface components;},
  abstract  = {In this paper we describe the main features of EMF Parsley, a new Eclipse project for implementing applications based on the Eclipse Modeling Framework (EMF). EMF Parsley aims at complementing the EMF reflective mechanisms with respect to rapidly creating user interfaces based on models, without having to deal with internal details and setup code. In particular, EMF Parsley uses injection mechanisms to easily customize all the aspects of such applications. Moreover, it provides a set of reusable user interface components like trees, tables and detail forms that manage the model with the introspective EMF capabilities, together with reusable views, editors and dialogs. Besides project wizards, to easily create projects based on EMF Parsley, the main developing tool is a DSL, implemented with Xtext/Xbase, that provides a rapid customization mechanism. Copyright &copy; 2014 SCITEPRESS - Science and Technology Publications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends},
  key       = {User interfaces},
  keywords  = {DSL;Electric potential;Models;},
  language  = {English},
}

@InProceedings{20153001064750,
  author    = {Figay, Nicolas and Ghodous, Parisa and Shariat, Bezhad and Exposito, Ernesto and Tchoffa, David and Kermad, Lyes and Dafaoui, El Mouloudi and Vosgien, Thomas},
  title     = {Model based enterprise modeling for testing plm interoperability in dynamic manufacturing network},
  year      = {2015},
  volume    = {213},
  pages     = {141 - 153},
  address   = {Nimes, France},
  note      = {Digital business ecosystems;Dynamic manufacturing networks;Enterprise modeling;Interoperability framework;MDA;Model to model transformation;PLM;Simulation;},
  abstract  = {When willing to prepare and to build operational Product Life cycle Management interoperability within a Dynamic Manufacturing Network (DMN) in a mature digital business ecosystem such as Aeronautic, Space and Defense, the approaches proposed by the Enterprise Application Interoperability are insufficient when willing to address the existing interoperability brakes Some of these brakes have been addressed in project such as IMAGINE and SIP@ SystemX, allowing to experiment innovative way of using standards based enterprise modeling and also to identify some additional gaps for applying model base enterprise modeling to PLM interoperability within a DMN. After defining the business and the scientific contexts, the paper describes this new approach which consists in federating the usage of several PLM, Business, Information and ICT standard through the usage of an enterprise modeling standardized language, ArchiMate, and associated modeling tool Archi created using ArchiMate as an EMF DSL. The defined methodology is based on producing a set of DMN blueprints and associated templates. Then, through model to model transformation, other more detailed models using more specialized languages are created and used for software component generation and deployment enterprise hub platform based on standards. Using the methodology, the associated framework and the developed resulting from our research activity, we are now able to prepare and build interoperability within a DMN. Ability of preserving investment performed with the legacy and reducing risks associated to future evolution was demonstrated through IMAGINE Aeronautic Lab experimentation within SIP. Such experimentation also highlighted some issues related to model based engineering in such a context, and allowed identifying needs for new extensions of the federative PLM interoperability framework for Collaborative Networked Product Development initiated during the ATHENA project. It will be addressed in future work. &copy; IFIP International Federation for Information Processing 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  key       = {Interoperability},
  keywords  = {Clouds;Computational linguistics;DSL;Enterprise resource planning;Life cycle;Manufacture;Modeling languages;Modems;Product development;Project management;Standards;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-662-47157-9_13},
}

@InProceedings{20134616964632,
  author    = {Kuzenkova, Anastasiia and Deripaska, Anna and Bryksin, Timofey and Litvinov, Yurii and Polyakov, Vladimir},
  title     = {QReal DSM platform: An environment for creation of specific visual IDEs},
  year      = {2013},
  pages     = {205 - 211},
  address   = {Angers, France},
  note      = {Concrete syntax;Development methodology;Development productivity;Domain specific;Domain specific languages;Domain specific modeling;DSM platforms;Metamodeling;},
  abstract  = {This article describes a QReal technology designed for rapid creation of domain-specific languages ("DSL"). Domain-specific modeling ("DSM") is a promising paradigm which provides enhanced development productivity (3 to 10 times in selected cases compared to common development methodologies). This fact contributes to the interest in the DSM support tools. QReal is a research project having an objective of creating a prototype of such a tool. Overview of QReal basic metamodeling capabilities such as abstract and concrete syntax definition is provided in the article, as well as the description of some advanced capabilities such as defining semantics of visual language, constraints and refactoring support. Two cases of successful application of this technology to creating domain-specific solutions are presented and future work directions are addressed. Copyright &copy; 2013 SCITEPRESS.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering},
  key       = {Software engineering},
  keywords  = {Abstracting;DSL;Problem oriented languages;Semantics;Tools;Visual languages;},
  language  = {English},
}

@InProceedings{20143718149646,
  author    = {Nisar, Kashif and Osman, Wan Rozaini Sheik and Altrad, Abdallah M.M.},
  title     = {Modeling of Broadband over In-Door Power Line Network in Malaysia},
  year      = {2014},
  volume    = {265 AISC},
  pages     = {213 - 222},
  address   = {Phuket, Thailand},
  note      = {Channel transfer functions;Data communication networks;Digital Subscriber Line (DSL);High-speed digital transmission;Information and Communication Technologies;Infrastructure deployments;Low voltages;Power lines communication;},
  abstract  = {Malaysia is considered the eighth Asian country out of the top 15 countries in household broadband penetration at 34.5%. Users in rural areas who cannot receive Digital Subscriber Line (DSL) or cable modem services. In addition, owing to the high cost of Information and Communication Technology (ICT) infrastructure deployment in the rural areas, delay in broadband services is being experienced. Therefore, the Power Lines Communication (PLC) technology could have the potential to provide a broadband access through the entire electricity grid. Broadband PLC uses power lines as a high-speed digital transmission channel. This paper investigates low voltage Channel Transfer Function (CTF) of PLC technology for the purpose of data transmission regarding Malaysia electrical cable specification by using Matlab-Simulink simulation tool. Since that could help Malaysia licensable activities to provide Broadband PLC service out of harm's way of other data communication networks. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {21945357},
  journal   = {Advances in Intelligent Systems and Computing},
  key       = {Telecommunication lines},
  keywords  = {Broadband networks;Cables;Electric lines;Modems;Rural areas;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-06538-0_21},
}

@InProceedings{20134316872069,
  author        = {Kulkarni, Abhishek and Newton, Ryan R.},
  title         = {Embrace, defend, extend: A methodology for embedding preexisting DSLs : Case in point, streamHs: Streamit in haskell},
  year          = {2013},
  pages         = {27 - 34},
  address       = {Boston, MA, United states},
  note          = {Auto-parallelizing;Domain specific languages;DSL-technologies;Embedded Languages;Haskell;Higher efficiency;Parallel;Programming abstractions;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific languages offer programming abstractions that enable higher efficiency, productivity and portability specific to a given application domain. Domain-specific languages such as StreamIt have valuable auto-parallelizing code-generators, but they require learning a new language and tool-chain and may not integrate easily with a larger application. One solution is to transform such standalone DSLs into embedded languages within a generalpurpose host language. This prospect comes with its own challenges, namely the compile-time and runtime integration of the two languages. In this paper, we address these challenges, presenting our solutions in the context of a prototype embedding of StreamIt in Haskell. By demonstrating this methodology, we hope to encourage more reuse of DSL technology, and fewer short-lived reimplementations of existing techniques. &copy; 2013 by the Association for Computing Machinery, Inc. (ACM).},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN International Conference on Functional Programming, ICFP},
  key           = {Functional programming},
  keywords      = {Acoustic streaming;Computer programming languages;Parallel architectures;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2505351.2505355},
}

@InProceedings{20131316145284,
  author    = {Goldschmidt, Thomas and Becker, Steffen and Burger, Erik},
  title     = {Towards a tool-oriented taxonomy of view-based modelling},
  year      = {2012},
  volume    = {P-201},
  pages     = {59 - 74},
  address   = {Bamberg, Germany},
  note      = {Comprehensive analysis;Domain-specific modelling;Domain-Specific Modelling Languages;Feature-based classification;Model-driven Engineering;Specific problems;View-based;},
  abstract  = {The separation of view and model is one of the key concepts of Model-Driven Engineering (MDE). Having different views on a central model helps modellers to focus on specific aspects. Approaches for the creation of Domain-Specific Modelling Languages (DSML) allow language engineers to define languages tailored for specific problems. To be able to build DSMLs that also benefit from view-based modelling a common understanding of the properties of both paradigms is required. However, research has not yet considered the combination of both paradigms, namely view-based domain specific modelling to a larger extent. Especially, a comprehensive analysis of a view's properties (e.g., partial, overlapping, editable, persistent, etc.) has not been conducted. Thus, it is also still unclear to which extent view-based modelling is understood by current DSML approaches and what a common understanding if this paradigm is. In this paper, we explore view-based modelling in a tool-oriented way. Furthermore, we analyse the properties of the view-based domain-specific modelling concept and provide a feature-based classification of these properties.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16175468},
  journal   = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  language  = {English},
}

@InProceedings{20145100336818,
  author    = {Moreno-Delgado, Antonio and Duran, Francisco},
  title     = {The movie database case: Solutions using maude and the maude-based e-motions tool},
  year      = {2014},
  volume    = {1305},
  pages     = {116 - 124},
  address   = {York, United kingdom},
  note      = {General purpose languages;Maude specifications;Real-time languages;Rewriting logic;Simulation and analysis;},
  abstract  = {The paper presents solutions for the TTC 2014 Movie Database Case, both in the e-Motions DSML and in the rewriting-logic formal language Maude. The DSMLs defined in e-Motions are automatically transformed into Maude specifications, which are then used for simulation and analysis purposes. e-Motions is a general purpose language, in which real-time languages may be modeled, with full support for OCL and other advanced features. The fact that the solutions given directly in Maude lack the overhead included by e-Motions to deal with all those extra features not needed in the current case study, makes these solutions much more efficient, and able to deal with bigger problems. Copyright &copy; 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Application programs},
  keywords  = {Formal languages;},
  language  = {English},
}

@InProceedings{20161202130232,
  author    = {Dieumegard, Arnaud and Pantel, Marc and Babin, Guillaume and Carton, Martin},
  title     = {Tool paper: A lightweight formal encoding of a constraint language for DSMLs},
  year      = {2015},
  volume    = {1512},
  pages     = {89 - 104},
  address   = {Ottawa, ON, Canada},
  note      = {Automated verification;Constraint language;Data flow language;Domain specific modeling languages;Formal verification tools;Model-driven Engineering;Safety critical systems;Standardized models;},
  abstract  = {Domain Specific Modeling Languages (DSMLS) plays a key role in the development of Safety Critical Systems to model system requirements and implementation. They often need to integrate property and query sub-languages. As a standardized modeling language, OCL can play a key role in their definition as they can rely both on its concepts and textual syntax which are well known in the Model Driven Engineering community. For example, most DSMLS are defined using MOF for their abstract syntax and OCL for their static semantics as a metamodeling DSML. OCLinEcore in the Eclipse platform is an example of such a metamodeling DSML integrating OCL as a language component in order to benefit from its property and query facilities. DSMLS for Safety Critical Systems usually provide formal model verification activities for checking models completeness or consistency, and implementation correctness with respect to requirements. This contribution describes a framework to ease the definition of such formal verification tools by relying on a common translation from a subset of OCL to the Why3 verification toolset. This subset was selected to ease efficient automated verification. This framework is illustrated using a block specification language for data flow languages where a subset of OCL is used as a component language.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Embedded systems;Formal methods;Formal verification;Safety engineering;Security systems;Semantics;Specification languages;Syntactics;Systems analysis;Visual languages;},
  language  = {English},
}

@InProceedings{20133816749570,
  author        = {Alvarez, Camilo and Casallas, Rubby},
  title         = {MTC Flow: A tool to design, develop and deploy model transformation chains},
  year          = {2013},
  pages         = {ACM Special Interest Group on Software Engineering (SIGSOFT); Centre National De La Recherche Scientifique (CNRS); ACM Special Interest Group on Programming Languages (SIGPLAN); University Montpellier 2 (UM2); Association Internationale pour les Technologies Objects (AITO) -},
  address       = {Montpellier, France},
  note          = {Abstraction layer;Development environment;Development process;Eclipse modeling framework;Graphical modeling frameworks;Model transformation;Model transformation chains;Technology support;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents a tool called MTC Flow, which allows model-driven developers to design, develop, test and deploy Model Transformation Chains (MTCs). The tool offers a graphical DSL for defining MTC workflow models independently of the technologies that support the transformations. Using basic concepts such as metamodels, models and transformations (M2M, M2T and T2M) the user defines, executes and tests his MTC easily in the same development environment. MTC Flow has an abstraction layer to implement technology support. It facilitates the interoperability of model transformation and validation using the existing technologies without changes. Additionally, once the MTC is finished, MTC Flow offers an option to deploy it in any environment that support JAVA technology. The tool supports modularity and alternative execution paths of the MTCs. It was built on top of the Eclipse Modeling Framework (EMF) and the Graphical Modeling Framework (GMF). The tool offers a development environment using the extending capabilities of the Eclipse platform. We illustrate how MTC Flow supports MTCs development process using an example. &copy; 2013 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACadeMics Tooling with Eclipse, ACME 2013 - A Joint ECMFA/ECSA/ECOOP Workshop},
  key           = {Tools},
  keywords      = {Chains;Interoperability;Mathematical models;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2491279.2491286},
}

@InProceedings{20144600189214,
  author        = {Moreira, Rodrigo M.L.M. and Paiva, Ana C.R.},
  title         = {PBGT tool: An integrated modeling and testing environment for pattern-based GUI testing},
  year          = {2014},
  pages         = {863 - 866},
  address       = {Vasteras, Sweden},
  note          = {Eclipse modeling framework;Eclipse plugin;GUI testing;Integrated modeling;Test models;Test Pattern;Testing environment;},
  __markedentry = {[Neto:5]},
  abstract      = {Pattern Based GUI Testing (PBGT) is a new methodology that aims at systematizing and automating the GUI testing process. It is supported by a Tool (PBGT Tool) which provides an integrated modeling and testing environment that supports the crafting of test models based on UI Test Patterns, using a GUI modeling DSL called PARADIGM. The tool is freely available as an Eclipse plugin, developed on top of the Eclipse Modeling Framework. This paper presents PBGT Tool, which has been successfully used in several projects, and more recently at industry level. &copy; 2014 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  key           = {Graphical user interfaces},
  keywords      = {Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2642937.2648618},
}

@Article{20142017724647,
  author        = {Teruel, Miguel A. and Navarro, Elena and Lopez-Jaquero, Victor and Montero, Francisco and Gonzalez, Pascual},
  title         = {A CSCW Requirements Engineering CASE Tool: Development and usability evaluation},
  journal       = {Information and Software Technology},
  year          = {2014},
  volume        = {56},
  number        = {8},
  pages         = {922 - 949},
  note          = {Collaborative systems;Common industry formats;Computer science students;CSCW;CSRML;ISO/IEC;Requirements specifications;Usability evaluation;},
  __markedentry = {[Neto:5]},
  abstract      = {Context CSRML Tool 2012 is a Requirements Engineering CASE Tool for the Goal-Oriented Collaborative Systems Requirements Modeling Language (CSRML). Objective This work aims at evaluating the usability of CSRML Tool 2012, thus identifying any possible usability flaw to be solved in the next releases of the application, as well as giving a general overview on how to develop a DSL tool similar to the one evaluated in this work by means of Visual Studio Modelling SDK. Method In this evaluation, which was reported by following the ISO/IEC 25062:2006 Common Industry Format for usability tests, 28 fourth-course Computer Science students took part. They were asked to carry out a series of modifications to an incomplete CSRML requirements specification. Usability was assessed by measuring the task's completion rate, the elapsed time, number of accesses to the help system of the tool and the instructor's verbal assistance. The participants' arousal and pleasantness were assessed by analyzing both facial expressions and a USE questionnaire. Results In spite of obtaining high usability levels, the test outcome revealed some usability flaws that should be addressed. Conclusion The important lessons learnt from this evaluation are also applicable to the success of other usability tests as well as to the development of new CASE tools. &copy; 2014 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  issn          = {09505849},
  key           = {Usability engineering},
  keywords      = {Computer aided software engineering;Requirements engineering;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.infsof.2014.02.009},
}

@Article{20150500472061,
  author    = {Hartel, Johannes and Hartel, Lukas and Lammel, Ralf},
  title     = {Test-data generation for xtext: Tool paper},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year      = {2014},
  volume    = {8706},
  pages     = {342 - 351},
  note      = {Context sensitivity;Grammar customization;Grammar transformation;Grammars;Test data;Test data generation;Xtend;Xtext;Xtextgen;},
  abstract  = {We describe a method and a corresponding tool for grammar-based test-data generation (GBTG). The basic generation principle is to enumerate test data based on grammatical choices. However, generation is broken down into two phases to deal with context-sensitive properties in an efficient and convenient manner. The first phase enumerates test data (i.e., parse trees) with placeholders. The second phase instantiates the placeholders through post-processors. A DSL for grammar transformation is used to customize a given grammar, meant for parsing, to be more suitable for test-data generation. Post-processors are derived from a corresponding object-oriented framework. The actual tool, XTEXTGEN, extends the XTEXT technology for language development. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  key       = {Metadata},
  keywords  = {Data communication systems;Formal languages;Testing;Trees (mathematics);},
  language  = {English},
}

@InProceedings{20141717601264,
  author    = {Milosavljevic, Gordana and Filipovic, Milorad and Marsenic, Vladan and Pejakovic, Darko and Dejanovic, Igor},
  title     = {Kroki: A mockup-based tool for participatory development of business applications},
  year      = {2013},
  pages     = {235 - 242},
  address   = {Budapest, Hungary},
  note      = {Business applications;End users;Graphical editors;Interface specification;},
  abstract  = {This paper presents Kroki (fr. croquis - sketch), a tool for participatory development of business applications based on mockups. Kroki provides a graphical editor for visual creation of mockups and two engines (web and desktop) for mockup execution. Kroki is developed in order to foster development agility, communication and better understanding of end-user needs. The mockup editor and engines are based on our EUIS (Enterprise User Interface Specification) DSL for specifying user interfaces of business applications. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  journal   = {SoMeT 2013 - 12th IEEE International Conference on Intelligent Software Methodologies, Tools and Techniques, Proceedings},
  key       = {Mockups},
  keywords  = {Engines;Tools;User interfaces;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SoMeT.2013.6645668},
}

@InProceedings{20131516195114,
  author    = {Regnell, Bjorn},
  title     = {reqT.org - Towards a semi-formal, open and scalable requirements modeling tool},
  year      = {2013},
  volume    = {7830 LNCS},
  pages     = {112 - 118},
  address   = {Essen, Germany},
  note      = {Computer science students;Educational context;Executable codes;Free software;Natural languages;Requirements MetaModel;Requirements modeling;Student project;},
  abstract  = {[Context and motivation] This research preview presents ongoing work on a free software requirements modeling tool called reqT that is developed in an educational context. [Question/problem] The work aims to engage computer science students in Requirements Engineering (RE) through a tool that captures essential RE concepts in executable code. [Principal ideas] Requirements are modeled using an internal DSL in the Scala programming language that blends natural language strings with a graph-oriented formalism. [Contribution] The metamodel of reqT and its main features are presented and modeling examples are provided together with a discussion on initial experiences from student projects, limitations and directions of further research. &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {ACM, Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Requirements engineering},
  keywords  = {Computer aided software engineering;Computer programming languages;Computer software selection and evaluation;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-37422-7_8},
}

@InProceedings{20134116820056,
  author        = {Jindal, Nakul and Lotrich, Victor and Deumens, Erik and Sanders, Beverly A.},
  title         = {SIPMaP: A tool for modeling irregular parallel computations in the super instruction architecture},
  year          = {2013},
  pages         = {874 - 884},
  address       = {Boston, MA, United states},
  note          = {Assembly language;Domain specific languages;High performance computing;Instruction processors;Multidimensional arrays;Parallel application;Parallel Computation;Performance Model;},
  __markedentry = {[Neto:5]},
  abstract      = {Performance modeling is becoming an increasingly important part of the parallel application development process, particulary for expensive computations that will be run on very high-end systems where resources are scarce. We describe a performance modeling tool SIP Map (Super Instruction Processor Modeling and Prediction) developed for the Super-Instruction Architecture(SIA). The SIA is designed for applications where the dominant data structures are large multi-dimensional arrays and it comprises a DSL, the Super-Instruction Assembly Language(SIAL) that supports expressing algorithms in terms of blocks(tiles), and its runtime system Super Instruction Processor (SIP)that manages distribution and disk storage of the arrays. SIPMaP generates performance models from the SIAL source code. In comparison with many applications where useful performance models have been developed and reported, these programs are irregular and have other difficult to model characteristics such as extensive overlapping of communication and computation. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - IEEE 27th International Parallel and Distributed Processing Symposium, IPDPS 2013},
  key           = {Parallel processing systems},
  keywords      = {Application programs;Computer architecture;Distributed parameter networks;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/IPDPS.2013.35},
}

@InProceedings{20141217470916,
  author    = {Zhang, Maodi and Wang, Zili and Xu, Ping and Li, Yi},
  title     = {Research and implementation of a peripheral environment simulation tool with domain-specific languages},
  year      = {2014},
  volume    = {277 LNEE},
  pages     = {1217 - 1224},
  address   = {Shanghai, China},
  note      = {Domain specific languages;Environment simulation tools;Interface control;Program language;Simulation environment;Simulation model;Software requirement specification;System under test;},
  abstract  = {The importance to build relevant peripheral environment in the testing process for complex embedded software is becoming higher. This paper discussed the current design method of simulation test environment for the embedded software and then presented a modelling method which is used to build peripheral simulation environment for the SUT (system under test) through ICD (interface control data) documents and the software requirement specification. Using this method, the peripheral environment simulation tool which consisted of relevant database and simulation model was set up with Ruby program language. This tool could provide necessary control commands and data support just like in a real running environment for the SUT. Furthermore, a DSL (domain-specific languages) design method for this domain was researched on the basis of the model. The experiment result has demonstrated that it's feasible to set up a peripheral environment for embedded system with our simulation tool. &copy; 2014 Springer International Publishing Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {18761100},
  journal   = {Lecture Notes in Electrical Engineering},
  key       = {Tools},
  keywords  = {Complex networks;Computer simulation;Design;Embedded software;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-01766-2_138},
}

@InProceedings{20123415364594,
  author        = {Diaz, Oscar and Arellano, Cristobal},
  title         = {Sticklet: An end-user client-side augmentation-based mashup tool},
  year          = {2012},
  volume        = {7387 LNCS},
  pages         = {465 - 468},
  address       = {Berlin, Germany},
  note          = {End users;Javascript;Sticky notes;},
  __markedentry = {[Neto:5]},
  abstract      = {A critical aspect of mashup tools for end users is to come up with an intuitive metaphor. Sticklet is an augmentation-based mashup tool that conceives websites as walls where you can fix HTML fragments (sticky notes) from other websites. Notes are contextualized to the hosting website, i.e. location, parameter passing and layout should be harmonized to those of the website. A set of declarative constructs are available to declaratively specify complex sticky notes. Sticklet is realized as an internal DSL in JavaScript that capitalizes on browser weavers (e.g. Greasemonkey (GM)). Being full-fledged GM scripts, Sticklet benefits from the sharing repositories (e.g. www.userscripts.org) or management utilities (e.g. activation, installation, edition) available for GM. &copy; 2012 Springer-Verlag.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Websites},
  keywords      = {Artificial intelligence;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-31753-8_45},
}

@Article{20144900276692,
  author        = {Silva, Robson and Mota, Alexandre and Starr, Rodrigo Rizzi},
  title         = {Formal MDE-based tool development},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2014},
  volume        = {263},
  pages         = {105 - 125},
  note          = {Domain specific languages;DSLs;Formal tools;GUI (graphical user interface);Human machine interaction;Mathematical representations;MDE;Model-driven Engineering;},
  __markedentry = {[Neto:5]},
  abstract      = {Model-driven engineering (MDE) focuses on creating and exploiting (specific) domain models. It is common to use domain-specific languages (DSL) to describe the concrete elements of such models. MDE tools can easily build DSLs, although it is not clear how to capture dynamic semantics as well as formally verify properties. Formal methods are a well-known solution for providing correct software, but human-machine interaction is usually not addressed. Several industries, particularly the safety-critical industries, use mathematical representations to deal with their problem domains. Such DSLs are difficult to capture, using just MDE tools for instance, because they have specific semantics to provide the desired (core) expected behavior. Thus, we propose a rigorous methodology to create GUI (Graphical User Interface) based DSLs formal tools. We aim at providing a productive and trustworthy development methodology to safety critical industries. &copy; Springer International Publishing Switzerland 2014.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {21945357},
  key           = {Formal methods},
  keywords      = {Accident prevention;Computer programming languages;Graphical user interfaces;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-04717-1_5},
}

@InProceedings{20161902365231,
  author    = {Kruck, Bastian and Lehmann, Stefan and Kecler, Christoph and Reschke, Jakob and Felgentreff, Tim and Lincke, Jens and Hirschfeld, Robert},
  title     = {Multi-level debugging for interpreter developers},
  year      = {2016},
  pages     = {91 - 93},
  address   = {Malaga, Spain},
  note      = {Context switch;Debugging tools;Language levels;Language workbenches;Levels of abstraction;Multiple levels;Squeak;System knowledge;},
  abstract  = {Conventional debuggers require programmers to work on multiple levels of abstraction at once when inspecting call stacks or data. This demands considerable cognitive overhead and deep system knowledge of all implementation technologies involved. When developing an interpreter, programmers often create a dedicated debugger to have a higher-level perspective on the client-language; the resulting use of multiple debuggers at once leads to mental context switches and needs an elaborated method. We present an integrated debugging tool in which interpreter developers define and select the levels of abstraction on which they focus. Our debugger provides them with an abstraction-specialized view. We consider both host-language and guest-language levels, since either may be levels of interest in a debugging session. We show how this separation into host-language levels can ease the debugging of applications through filtering call stacks and specializing call stack representation on levels. &copy; 2016 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {MODULARITY Companion 2016 - Companion Proceedings of the 15th International Conference on Modularity},
  key       = {Computational linguistics},
  keywords  = {Abstracting;DSL;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2892664.2892679},
}

@InProceedings{20160501861277,
  author    = {De Sousa Duarte, Paulo Artur and Barreto, Felipe Mota and De Almada Gomes, Francisco Anderson and De Carvalho, Windson Viana and Trinta, Fernando Antonio Mota},
  title     = {Towards context-aware behaviour generation},
  year      = {2015},
  volume    = {13-17-April-2015},
  pages     = {596 - 598},
  address   = {Salamanca, Spain},
  note      = {Adaptation mechanism;Android;Context-Aware;Contextual information;MDE;Middleware platforms;Model-driven Engineering;Self adaptation;},
  abstract  = {Development of Context-Aware and Mobile (CAM) applications requires software engineers to write complex code (e.g., adaptation mechanisms, context management) and deal with heterogeneity issues regarding devices and sensors. A promise to deal with this issue approach is the combination of MDE (ModelDriven Engineering) design principles and CAM middleware platforms. Following this approach, we present in this paper CRITiCAL, a ConfiguRation Tool for Context Aware and mobiLe applications. This tool enables visual modelling of contextual information and adaptive behaviour of a CAM application. From visual models, a code generation is performed and its result contains all methods required for communication between the application and a context management middleware. We aim at offering a simplified and visual way to define context acquisition mechanisms (e.g., get user location) and context rules in order to accelerate the development of CAM applications. Copyright 2015 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {Proceedings of the ACM Symposium on Applied Computing},
  key       = {Application programs},
  keywords  = {Cams;DSL;Middleware;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2695664.2696057},
}

@InProceedings{20140617289813,
  author        = {Farwick, Matthias and Trojer, Thomas and Breu, Michael and Ginther, Stefan and Kleinlercher, Johannes and Doblander, Andreas},
  title         = {A case study on textual enterprise architecture modeling},
  year          = {2013},
  pages         = {305 - 309},
  address       = {Vancouver, BC, Canada},
  note          = {Domain specific languages;Enterprise Architecture;Textual;Viewpoint;Xtext;},
  __markedentry = {[Neto:5]},
  abstract      = {Today's Enterprise Architecture Management (EAM) tools are based on forms and graphical modeling capabilities via web-based applications or desktop clients. However, recent developments in textual modeling tools have not yet been considered for EA modeling in research and practice. In this paper we present a novel EAM-tool approach, called Txture, that consists of a textual modeling environment and a web-application to provide enterprise-wide architecture visualizations for different stakeholder groups. The tool is in production use at a major Austrian data center, where it proofed to be intuitive and provide efficient modeling capabilities compared to traditional approaches. In this paper we present lessons learned from the development of the tool as well as usage it and report on its benefits and drawbacks. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, IEEEDSL, Duplicados},
  issn          = {15417719},
  journal       = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC},
  key           = {Tools},
  keywords      = {DSL;Industry;Problem oriented languages;Research;System program documentation;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/EDOCW.2013.40},
}

@InProceedings{20154501507284,
  author    = {Schutzel, Johannes and Stieber, Sebastian and Haubelt, Christian and Uhrmacher, Adelinde M.},
  title     = {Targeted on-line data extraction with SystemXtract},
  year      = {2015},
  address   = {Athens, Greece},
  note      = {Computation time;Data extraction;Filter graph;Hybrid prototype;Large amounts of data;Processing architectures;Real time execution;System level simulation;},
  abstract  = {Complex system-level simulation can produce large amounts of data, of which only portions may be of interest. When experimenting with hybrid prototypes, consisting of physical and simulated components, data logs are generated and inspected in real-time. Storing full data logs would not only require much disk space, it would also require much effort to find special events and related system actions afterwards. Targeted on-line data extraction helps to instantly provide the data of interest. We present SystemXtract, a powerful specification language and tool for on-line data extraction, supporting origin-, value- and dynamic phase-based constrains on the data. The main contribution of this paper is to show how the language can be mapped to a graph-based processing architecture for executing data extraction as specified. Experiments show that the tool-induced overhead in computation time is insignificant and that the realtime execution of the hybrid prototype is not compromised, while the output is reduced to the interesting data. Copyright &copy; 2015 ICST.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {SIMUTOOLS 2015 - 8th EAI International Conference on Simulation Tools and Techniques},
  key       = {Data mining},
  keywords  = {Computational linguistics;Computer architecture;DSL;Extraction;Graphic methods;Information retrieval;Specification languages;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.4108/eai.24-8-2015.2260916},
}

@InProceedings{20151400701855,
  author    = {Yue, Jianan},
  title     = {Transition from EBNF to Xtext},
  year      = {2014},
  volume    = {1258},
  pages     = {75 - 80},
  address   = {Valencia, Spain},
  note      = {Domain specific languages;EBNF;Enabling tools;Fully automated;Meta model;Transformation;Transformation rules;Xtext;},
  abstract  = {Xtext is a framework for developing programming languages and domain specific languages (DSLs). Xtext contains a language in- frastructure including parsers, compiler and interpreter. In recent years, it has been applied to develop various DSLs. To benefit from Xtext, in certain cases, it is needed to transform an Extend Backus Naur Form (EBNF) based language to the Xtext grammar. For example, the well- known UML profile MARTE has a BNF-based Value Specification Lan- guage (VSL). It is needed to transform MARTE VSL in EBNF to a MARTE VSL Xtext grammar for the purpose of enabling tool integra- tion. In this paper, as the first step towards a fully automated trans- formation from EBNF to Xtext, a number of transformation rules are defined. The ultimate objective of the project is to provide developers a fully featured and customizable Eclipse-based IDE for developing DSLs using EBNF grammar or enabling tool integration by providing trans- formation from EBNF to Xtext.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Computational linguistics},
  keywords  = {Computer programming languages;DSL;Problem oriented languages;},
  language  = {English},
}

@InProceedings{20162102413517,
  author    = {Cardoso, Bruno and Romao, Teresa},
  title     = {Avoiding "-too late! "-Expressing and Detecting Opportunity with EveWorks and EveXL},
  year      = {2015},
  pages     = {293 - 302},
  address   = {Brussels, Belgium},
  note      = {Context- awareness;Event detection;EveWorks;EveXL;Mobile application development;Time interval;},
  abstract  = {Adaptability is a desirable feature for context-aware applications to support the deployment of meaningful interactions on mobile devices. As such, flexible enough architectures are necessary to provide direct answers to applications requiring changes in their reactive behavior at runtime. To address this challenge, we present EveWorks, an Android application running on mobile devices, offering context-aware reactive services to other applications. Contrary to the norm found on the literature, EveWorks relies on definition of events of interest through expressions written in EveXL (EveWorks Expression Language), an original scripting language interpreted at runtime, thereby granting the desired adaptability to client context-aware applications. We evaluated the viability of EveWorks and EveXL and obtained evidence that EveXL is legible and straightforward, and is an adequate tool to express events. On the other hand, the results support EveWorks as a valid approach to facilitate development of reactive applications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  journal   = {13th International Conference on Advances in Mobile Computing and Multimedia, MoMM 2015 - Proceedings},
  key       = {Mobile devices},
  keywords  = {Computational linguistics;DSL;Mobile computing;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2837126.2837139},
}

@Article{20141617598357,
  author        = {Jacob, Ferosh and Wynne, Adam and Liu, Yan and Gray, Jeff},
  title         = {Domain-specific languages for developing and deploying signature discovery workflows},
  journal       = {Computing in Science and Engineering},
  year          = {2014},
  volume        = {16},
  number        = {1},
  pages         = {52 - 64},
  note          = {Automate process;Domain agnostics;Domain specific languages;High-performance computing;Scientific investigation;Signature discovery;Taverna;workflow;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-agnostic signature discovery supports scientific investigation across domains through algorithm reuse. A new software tool defines two simple domain-specific languages that automate processes that support the reuse of existing algorithms in different workflow scenarios. The tool is demonstrated with a signature discovery workflow composed of services that wrap original scripts running high-performance computing tasks. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSL, Duplicados},
  issn          = {15219615},
  key           = {Problem oriented languages},
  keywords      = {Algorithms;Automation;DSL;Natural sciences computing;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/MCSE.2013.97},
}

@InProceedings{20144900295964,
  author    = {Louadah, Hassna and Champagne, Roger and Labiche, Yvan},
  title     = {Towards automating Interface Control Documents elaboration and management},
  year      = {2014},
  volume    = {1250},
  pages     = {26 - 33},
  address   = {Valencia, Spain},
  note      = {Avionic domains;Avionic systems;Federated architecture;Hardware and software;Integrated modular architectures;Integration process;Interface control documents;Production and consumption;},
  abstract  = {Avionic systems have been migrating from the legacy federated architecture towards an integrated modular architecture (IMA). The IMA architecture replaces the equipment principle by a set of interoperable components (hardware and software). The interoperability between the integrated components requires a detailed specification and description of their interfaces, which, in the avionic domain, is usually written in Interface Control Documents (ICD). However, ICD creation and usage during the integration process is challenging. In fact, the two main problems with the usage of ICDs are the lack of a commonly accepted language to define and use them on the one hand, and the lack of tool support in their production and consumption. In this paper, we present our approach and methodology to overcome these limitations.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Embedded systems},
  keywords  = {Avionics;DSL;Interfaces (materials);Legacy systems;Models;},
  language  = {English},
}

@InProceedings{20132016334210,
  author    = {Puente, Gorka and Diaz, Oscar},
  title     = {WikiWhirl: Wiki refactoring made easy},
  year      = {2012},
  pages     = {Wikimedia Foundation; National Science Foundation; Google; Ars Electronic Center -},
  address   = {Linz, Austria},
  note      = {End users;Error prones;MediaWiki;Mind maps;Organic growth;Refactorings;wiki;},
  abstract  = {Wikis' organic growth inevitably leads to wiki degradation and the need for regular wiki refactoring. So far, wiki refactoring is a manual, time-consuming and error-prone activity since refactoring is conducted at the same level that editing: the article. This results in no performant wikis and the frequent abandon of wiki projects. We argue that refactoring requires a broader view of the wiki structure, where the impact of splitting, moving or merging extends beyond a single article. This demo shows WikiWhirl, a tool that visualizes and manipulates wikis via mind maps. Built on top of FreeMind, WikiWhirl (i) imports a wiki from MediaWiki, (ii) displays its structure as a mind map, (iii) supports refactoring operators as mind map node manipulation, and finally, (iv) saves those changes back to the wiki ensuring authorship and readership. &copy; 2012 Authors.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {WikiSym 2012 Conference Proceedings - 8th Annual International Symposium on Wikis and Open Collaboration},
  key       = {Websites},
  keywords  = {DSL;Schematic diagrams;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2462932.2462981},
}

@InProceedings{20160101760933,
  author    = {Vieira, Nuno and Simoes, Alberto and Carvalho, Nuno Ramos},
  title     = {SplineAPI: A REST API for NLP services},
  year      = {2015},
  volume    = {563},
  pages     = {205 - 215},
  address   = {Madrid, Spain},
  note      = {Architectural solutions;Common operations;Dependency tracking;Modern applications;NAtural language processing;Programming interface;REST API;Third party application (Apps);},
  abstract  = {Modern applications often use Natural Language Processing (NLP) techniques and algorithms to provide sets of rich features. Researchers, who come up with these algorithms, often implement them for case studies, evaluation or as proof of concepts. These implementations are, in most cases, freely available for download and use. Nevertheless, these implementations do not comprise final software packages, with extensive installation instructions and detailed usage guides. Most lack a proper installation mechanism and library dependency tracking. The programming interfaces are, usually, limited to their usage through command line, or with just a few programming languages support. To overcome these shortcomings, this work aims to develop a new web platform to make available a set of common operations to third party applications that can be used to quickly access NLP based processes. Of course this platform still relies on the same tools mentioned before, as a base support to specific requests. Nevertheless, the end user will not need to install and learn their specific Application Programming Interfaces (API). For this to be possible, the architectural solution is to implement a RESTful API that hides all the tool details in a simple API that is common or, at least, coherent, across the different tools. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Application programming interfaces (API)},
  keywords  = {Algorithms;Computational linguistics;Computer systems programming;DSL;Natural language processing systems;Slate;Web services;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-27653-3_20},
}

@InProceedings{20163302712423,
  author    = {Portugal, Ivens and Alencar, Paulo and Cowan, Donald},
  title     = {A Preliminary Survey on Domain-Specific Languages for Machine Learning in Big Data},
  year      = {2016},
  pages     = {108 - 110},
  address   = {Beer Sheva, Israel},
  note      = {Domain specific languages;Literature survey;Traditional approaches;},
  abstract  = {The proliferation of data often called Big Data has created problems with traditional approaches to data capture, storage, analysis and visualization, thus opening up new areas of research. Machine Learning algorithms are one area that has been used in Big Data for analysis. However, because of the challenges Big Data imposes, these algorithms need to be adapted and optimized to specific applications. One important decision made by software engineers is the choice of the language that is used in the implementation of these algorithms. This literature survey identifies and describes domain-specific languages and frameworks used for Machine Learning in Big Data with the intention of assisting software engineers in making more informed choices and providing beginners with an overview of the main languages used in this domain. This is the first survey that aims at better understanding how domain-specific languages for Machine Learning are used as a tool for research in Big Data. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSL, Inclusos},
  journal   = {Proceedings - 2016 IEEE International Conference on Software Science, Technology and Engineering, SwSTE 2016},
  key       = {Big data},
  keywords  = {Artificial intelligence;Computational linguistics;Computer programming languages;Data visualization;Digital storage;DSL;Learning algorithms;Learning systems;Problem oriented languages;Surveys;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SWSTE.2016.23},
}

@Article{20144300123833,
  author        = {Erdweg, Sebastian and Fehrenbach, Stefan and Ostermann, Klaus},
  title         = {Evolution of software systems with extensible languages and DSLs},
  journal       = {IEEE Software},
  year          = {2014},
  volume        = {31},
  number        = {5},
  pages         = {68 - 75},
  note          = {Domain specific languages;Java;Language embedding;Legacy applications;Software Evolution;Software systems;SugarJ;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific languages (DSLs) provide various advantages regarding the maintainability of software systems. Unfortunately, existing software systems don't exploit DSLs and their maintenance benefits. Based on the extensible programming language SugarJ, the authors present a process for gradually integrating DSLs into existing software systems, report on their experience in integrating three DSLs into two existing software systems, and outline a roadmap for the development of tool support for the integration of DSLs. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSL, Duplicados},
  issn          = {07407459},
  key           = {Computer software maintenance},
  keywords      = {Application programs;Computer systems programming;DSL;Embedded systems;Java programming language;Legacy systems;Maintainability;Mathematical programming;Problem oriented languages;Software engineering;Syntactics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/MS.2014.99},
}

@InProceedings{20123315335654,
  author        = {Diaz, Oscar and Puente, Gorka},
  title         = {Wiki Scaffolding: Aligning wikis with the corporate strategy},
  year          = {2012},
  volume        = {37},
  number        = {8},
  pages         = {737 - 752},
  note          = {Collaborative development;Corporate strategies;FreeMind;Information ecosystems;Mind maps;Mind-mapping;Plug-ins;User communities;Wiki;Wikipedia;Work practices;},
  __markedentry = {[Neto:5]},
  abstract      = {Wikis are main exponents of collaborative development by user communities. This community may be created around the wiki itself (e.g., community of contributors in Wikipedia) or already exist (e.g., company employees in corporate wikis). In the latter case, the wiki is not created in a vacuum but as part of the information ecosystem of the hosting organization. As any other Information System resource, wiki success highly depends on the interplay of technology, work practice and the organization. Thus, wiki contributions should be framed along the concerns already in use in the hosting organization in terms of glossaries, schedules, policies, organigrams and the like. The question is then, how can corporate strategies permeate wiki construction while preserving wiki openness and accessibility? We advocate for the use of "Wiki Scaffoldings", i.e., a wiki installation that is provided at the onset to mimic these corporate concerns: categories, users, templates, articles initialized with boilerplate text, are all introduced in the wiki before any contribution is made. To retain wikis' friendliness and engage layman participation, we propose scaffoldings to be described as mind maps. Mind maps are next "exported" as wiki installations. We show the feasibility of the approach introducing a Wiki Scaffolding Language (WSL). WSL is realized as a plugin for FreeMind, a popular tool for mind mapping. Finally, we validate the expressiveness of WSL in four case studies. WSL is available for download. &copy; 2012 Elsevier Ltd. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, ScienceDirect, Duplicados},
  issn          = {03064379},
  journal       = {Information Systems},
  key           = {Websites},
  keywords      = {DSL;Scaffolds;Schematic diagrams;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.is.2012.05.002},
}

@InProceedings{20122715207937,
  author    = {Zimmermann, Olaf and Miksovic, Christoph and Kuster, Jochen M.},
  title     = {Reference architecture, metamodel, and modeling principles for architectural knowledge management in information technology services},
  year      = {2012},
  volume    = {85},
  number    = {9},
  pages     = {2014 - 2033},
  note      = {Architectural decision;Architectural principles;Model-driven Engineering;SOA;Workflow;},
  abstract  = {Capturing and sharing design knowledge such as architectural decisions is becoming increasingly important in firms providing professional Information Technology (IT) services such as enterprise application development and strategic outsourcing. Methods, models, and tools supporting explicit knowledge management strategies have been proposed in recent years; however, several challenges remain unaddressed. In this paper, we extend our previous work to overcome these challenges and to satisfy the requirements of an additional user group, presales architects that are responsible for IT service solution proposals. In strategic outsourcing, such solution proposals require complex, contractually relevant design decisions concerning many different resources such as IT infrastructures, people, and real estate. To support both presales and project architects, we define a common reference architecture and a decision process-oriented metamodel. We also present a tool implementation of these concepts and discuss their application to outsourcing proposals and application development projects. Finally, we establish twelve decision modeling principles and practices that capture the practical experience gained and lessons learned during the application of our decision modeling concepts to both proposal development and architecture design work on projects. &copy; 2012 Elsevier Inc. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {ScienceDirect, Scopus, excluidos},
  issn      = {01641212},
  journal   = {Journal of Systems and Software},
  key       = {Information technology},
  keywords  = {Architecture;DSL;Knowledge management;Outsourcing;Software architecture;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.jss.2012.05.003},
}

@InProceedings{20140117164420,
  author        = {Fehrenbach, Stefan and Erdweg, Sebastian and Ostermann, Klaus},
  title         = {Software evolution to domain-specific languages},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {96 - 116},
  address       = {Indianapolis, IN, United states},
  note          = {Domain specific;Domain specific languages;High-level abstraction;Software Evolution;Software maintainability;Syntactic sugars;Tool support;Two-dimension;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific languages (DSLs) can improve software maintainability due to less verbose syntax, avoidance of boilerplate code, more accurate static analysis, and domain-specific tool support. However, most existing applications cannot capitalise on these benefits because they were not designed to use DSLs, and rewriting large existing applications from scratch is infeasible. We propose a process for evolving existing software to use embedded DSLs based on modular definitions and applications of syntactic sugar as provided by the extensible programming language SugarJ. Our process is incremental along two dimensions: A developer can add support for another DSL as library, and a developer can refactor more code to use the syntax, static analysis, and tooling of a DSL. Importantly, the application remains executable at all times and no complete rewrite is necessary. We evaluate our process by incrementally evolving the Java Pet Store and a deliberately small part of the Eclipse IDE to use language support for field-accessors, JPQL, XML, and XML Schema. To help maintainers to locate Java code that would benefit from using DSLs, we developed a tool that analyses the definition of a DSL to derive patterns of Java code that could be represented with a high-level abstraction of the DSL instead. &copy; 2013 Springer International Publishing.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Static analysis},
  keywords      = {Application programs;Computer programming languages;Natural language processing systems;Problem oriented languages;Syntactics;Tools;XML;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-02654-1_6},
}

@InProceedings{20143318061918,
  author        = {Krikava, Filip and Collet, Philippe and France, Robert B.},
  title         = {Manipulating models using internal domain-specific languages},
  year          = {2014},
  pages         = {1612 - 1614},
  address       = {Gyeongju, Korea, Republic of},
  note          = {Domain specific languages;Eclipse modeling framework;Execution performance;Model consistency checking;Model transformation;Model-driven Engineering;Scala;Tool support;},
  __markedentry = {[Neto:5]},
  abstract      = {In Model-Driven Engineering, a number of external Domain-Specific Languages (DSL) for model manipulation have been proposed. However, they require users to learn new languages that, together with their execution performance, usability and tool support limitations, can significantly contribute to accidental complexities. In this paper, we present an alternative approach based on internal DSLs in Scala for model consistency checking and model transformations for the Eclipse Modeling Framework. Copyright 2014 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  key           = {Model checking},
  keywords      = {Mathematical models;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2554850.2555127},
}

@InProceedings{20125015800776,
  author        = {Niazi, Moazzam Fareed and Seceleanu, Tiberiu and Tenhunen, Hannu},
  title         = {Towards reuse-based development for the on-chip distributed SoC architecture},
  year          = {2012},
  pages         = {278 - 283},
  address       = {Izmir, Turkey},
  note          = {Design Methodology;In-buildings;Modeling tool;Multi core;On chips;Plug-ins;Reusable library;Segmented bus platform;SoC architecture;},
  __markedentry = {[Neto:5]},
  abstract      = {The development of a reusable library of components for a multi-core segmented bus platform, the SegBus, is presented. The library is based on a plug-in that we develop and deploy within a modeling tool which eventually used by the SegBus DSL while developing applications targeting the SegBus platform. The steps required in building the library and embed it into a plug-in are discussed together with the certain use of it in our design methodology. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSL, Duplicados},
  issn          = {07303157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  key           = {Microprocessor chips},
  keywords      = {Computer software;Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/COMPSACW.2012.58},
}

@InProceedings{20162202445786,
  author    = {Ribeiro, Andre and De Sousa, Luis and Da Silva, Alberto Rodrigues},
  title     = {Comparative analysis of workbenches to support DSMLs: Discussion with non-trivial model-driven development needs},
  year      = {2016},
  pages     = {323 - 330},
  address   = {Rome, Italy},
  note      = {Domain specific languages;Domain specific modeling languages;Enterprise architects;Model driven development;Model transformation;Modeling tool;Platform independent;Separation of concerns;},
  abstract  = {The development and use of Domain Specific Languages emerged as a way to cope with complex problems using concepts closer to the problem domain. By leveraging the principles proposed by Model-Driven Development (MDD), like the separation of concerns and the use of model transformations, this approach became popular and caused the emergence of a variety of languages, known as Domain Specific Modeling Languages (DSMLs). Moreover, the use of DSMLs with graphical notations abstracts even more the problem domain, either by using extensions of UML or directly using metamodeling languages. The definition and use of DSMLs is only possible through specific tools, known as languages workbenches. This paper discusses the analysis and comparison of three of these tools (namely Papyrus, Enterprise Architect and Sirius) that were used to create the XIS-Mobile language, a non-trivial DSML defined as a UML profile for modeling mobile applications in a platform-independent way. These tools were evaluated considering a set of key criteria (namely learnability, usability, graphical completeness, validation support, transformation support, evolvability and interoperability) which show their suitability to develop non-trivial languages. &copy; Copyright 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  key       = {Software design},
  keywords  = {Computational linguistics;Computer programming languages;Embedded systems;Graphical user interfaces;Markup languages;Modeling languages;Problem oriented languages;Specification languages;},
  language  = {English},
}

@Article{20155101693056,
  author    = {Kos, Toma and Mernik, Marjan and Kosar, Toma},
  title     = {Test automation of a measurement system using a domain-specific modelling language},
  journal   = {Journal of Systems and Software},
  year      = {2016},
  volume    = {111},
  pages     = {74 - 88},
  note      = {Acquisition process;Data acquisition system;Domain-Specific Modelling Languages;High level specification;High-level abstraction;Test Automation;Testing infrastructure;Usage experience;},
  abstract  = {The construction of domain-specific modelling languages (DSMLs) is only the first step within the needed toolchain. Models need to be maintained, modified or functional errors searched for. Therefore, tool support is vital for the DSML end-user's efficiency. This paper presents SeTT, a simple but very useful tool for DSML end-users, a testing framework integrated within a DSML Sequencer. This Sequencer, part of the DEWESoft data acquisition system, supports the development of model-based tests using a high-level abstraction. The tests are used during the whole data acquisition process and able to test different systems' parts. This paper shows how high-level specifications can be extended to describe a testing infrastructure for a specific DSML. In this manner, the Sequencer and SeTT were combined at the metamodel level. The contribution of the paper is to show that one can leverage on the DSML to build a testing framework with relatively little effort, by implementing assertions to it. &copy; 2015 Elsevier Inc. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, Inclusos},
  issn      = {01641212},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Data acquisition;Model checking;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.jss.2015.09.002},
}

@InProceedings{20155101699085,
  author    = {Bruneliere, Hugo and Garcia, Jokin and Desfray, Philippe and Khelladi, Djamel Eddine and Hebig, Regina and Bendraou, Reda and Cabot, Jordi},
  title     = {On lightweight metamodel extension to support modeling tools agility},
  year      = {2015},
  volume    = {9153},
  pages     = {62 - 74},
  address   = {L???Aquila, Italy},
  note      = {Adaptability;Collaborative projects;Extension capabilities;Extension mechanisms;Flexibility;Meta model;Modeling environments;Modeling tool;},
  abstract  = {Modeling in real industrial projects implies dealing with different models, metamodels and supporting tools. They continuously have to be adapted to changing requirements, involving (often costly) problems in terms of traceability, coherence or interoperability. To this intent, solutions ensuring a better adaptability and flexibility of modeling tools are needed. As metamodels are cornerstones in such tools, metamodel extension capabilities are fundamental. However, current modeling frameworks are not flexible or dynamic enough. Thus, following the ongoing OMG MOF Extension Facility (MEF) RFP, this paper proposes a generic lightweight metamodel extension mechanism developed as part of the MoNoGe collaborative project. A base list of metamodel extension operators as well as a DSL for easily using them are introduced. Two different implementations of this extension mechanism (including a model-level support when (un)applying metamodel extensions) are also described, respectively based on Eclipse/EMF and the Modelio modeling environment. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Application programs},
  keywords  = {Artificial intelligence;Computers;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-21151-0_5},
}

@InProceedings{20142517846161,
  author    = {Pfister, Francois and Huchard, Marianne and Nebut, Clementine},
  title     = {A framework for concurrent design of metamodels and diagrams towards an agile method for the synthesis of domain specific graphical modeling languages},
  year      = {2014},
  volume    = {2},
  pages     = {298 - 306},
  address   = {Lisbon, Portugal},
  note      = {Concrete syntax;Domain specific languages;Graphical Syntax;Model driven architectures;Modeling formalisms;},
  abstract  = {DSML (Domain Specific Modeling Languages) are an alternative to general purpose modeling languages (e.g. UML or SysML) for describing models with concepts and relations specific to a domain. DSML design is often based on Ecore metamodels, which follow the class-relation paradigm and also require defining a concrete syntax which can be either graphical or textual. In this paper, we focus on graphical concrete syntax, and we introduce an approach and a tool (Diagraph) to assist the design of a graphical DSML. The main principles are: non-intrusive annotations of the metamodel to identify nodes, edges, nesting structures and other graphical information; immediate validation of metamodels by immediate generation of an EMF-GMF instance editor supporting multi-diagramming. We report a comparison experience between Diagraph and Obeo Designer (a commercial proprietary tool), which was conducted as part of a Model Driven Engineering Course. Copyright &copy; 2014 SCITEPRESS - Science and Technology Publications.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  journal   = {ICEIS 2014 - Proceedings of the 16th International Conference on Enterprise Information Systems},
  key       = {Visual languages},
  keywords  = {Computer programming languages;Design;Embedded systems;Information systems;Syntactics;},
  language  = {English},
}

@InProceedings{20163102662324,
  author    = {ivkovi, Srdan and Karagiannis, Dimitris},
  title     = {Mixins and extenders for modular metamodel customisation},
  year      = {2016},
  volume    = {1},
  pages     = {259 - 270},
  address   = {Rome, Italy},
  note      = {Customisation;Development technique;Domain-Specific Modelling Languages;Enterprise modelling;Language engineering;Meta model;Meta-modelling;Overall efficiency;},
  abstract  = {Metamodelling is a practical yet rigorous formalism for modelling language definition with a metamodel being its pivotal engineering artifact. A multitude of domain-specific modelling languages (DSML) are engineered to cover various modelling domains. Metamodels of such languages evolve over time by introducing changes and extensions and are further customised to suite project-specific needs. While majority of DSML development techniques provide concepts for creating metamodels from scratch, composition concepts for metamodel customisation beyond class inheritance are sought towards more flexibility and reuse. In this paper, we introduce a modular approach for metamodel customisation based on the idea of mixins and extenders. While mixins allow for defining self-contained metamodel modules for reuse, extenders enable non-intrusive composition of such reusable modules on top of existing metamodels. We show how this approach can be applied in a metamodelling tool such as ADOxx and demonstrate its usefulness by customising the BPMN language. The benefit of the modular metamodel customisation is twofold. On the language engineering level, our approach significantly promotes reuse, flexibility and overall efficiency in language definition and customisation. On the modelling level, the approach leverages engineering flexibility to provide custom modelling languages that better suits enterprise modelling needs. ISBN: 978-989-758-187-8 Copyright &copy; 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {ICEIS 2016 - Proceedings of the 18th International Conference on Enterprise Information Systems},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Enterprise resource planning;Information systems;},
  language  = {English},
}

@InProceedings{20134116837217,
  author        = {Izquierdo, Javier Luis Canovas and Cabot, Jordi and Lopez-Fernandez, Jesus J. and Cuadrado, Jesus Sanchez and Guerra, Esther and De Lara, Juan},
  title         = {Engaging end-users in the collaborative development of domain-specific modelling languages},
  year          = {2013},
  volume        = {8091 LNCS},
  pages         = {101 - 110},
  address       = {Alcudia, Mallorca, Spain},
  note          = {Collaborative construction;Collaborative development;Cooperative engineerings;Domain specific languages;Domain-Specific Modelling Languages;Language development;Language engineering;Model-driven Engineering;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-Specific Modelling Languages (DSMLs) are high-level languages specially designed to perform tasks in a particular domain. When developing DSMLs, the participation of end-users is normally limited to providing domain knowledge and testing the resulting language prototypes. Language developers, which are perhaps not domain experts, are therefore in control of the language development and evolution. This may cause misinterpretations which hamper the development process and the quality of the DSML. Thus, it would be beneficial to promote a more active participation of end-users in the development process of DSMLs. While current DSML workbenches are mono-user and designed for technical experts, we present a process and tool support for the example-driven, collaborative construction of DSMLs in order to engage end-users in the creation of their own languages. &copy; 2013 Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Visualization},
  keywords      = {Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-40840-3-16},
}

@InProceedings{20140517250456,
  author    = {Roth, Bastian and Jahn, Matthias and Jablonski, Stefan},
  title     = {On the way of bottom-up designing textual domain-specific modelling languages},
  year      = {2013},
  pages     = {51 - 55},
  address   = {Indianapolis, IN, United states},
  note      = {Basic solutions;Bottom up approach;Bottom up methods;Demonstration-based approach;Domain specific languages;Domain-Specific Modelling Languages;Free texts;New approaches;},
  abstract  = {The development of domain-specific modelling languages (DSMLs) is not a trivial task. During recent years, a new approach has arisen which enables users to sketch example models that are used as basis for deriving an appropriate DSML. Until now, this bottom-up approach is merely applied to graphical DSMLs. However, the field of textual DSMLs is also very large and we believe that it can benefit from the bottom-up method as well. To really support users during this method it is necessary to equip them with an intuitively utilizable tool. In case of textual DSMLs, this needs to be an editor that allows for entering free text. Hence, in this paper we present the requirements for such an editor and how a basic solution may look like. Finally, we state some further challenges that need to be solved to achieve full support for developing textual DSMLs the bottom-up way. Copyright &copy; 2013 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  key       = {Problem oriented languages},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2541928.2541938},
}

@Article{20130616005382,
  author        = {Mtibaa, Sabri and Tagina, Moncef},
  title         = {A combined Petri nets and model-driven engineering for requirements specification approach for Service-Based Applications analysis},
  journal       = {International Review on Computers and Software},
  year          = {2012},
  volume        = {7},
  number        = {5},
  pages         = {2131 - 2138},
  note          = {Automatic verification;Business Process;Domain specific languages;Functional requirement;Model validity;Model-driven Engineering;Modeling phasis;Non-functional;Non-functional requirements;Overall quality;Prototype tools;Requirements specifications;Service-based;SOA;Workflow;},
  __markedentry = {[Neto:5]},
  abstract      = {With the emergence of technologies such as workflow and web services supported by Service Oriented Architecture (SOA), blending of services provided by organizations become more and more instrumental. Organisations exert great efforts to not only fulfill functional requirements of their business processes but also satisfy their non-functional conditions by producing good overall Quality of Service (QoS). The purpose of this paper is to present an approach to accomplish verification in the early modeling phases of a Service-Based Application. This approach will allow verifying some userdefined Non-Functional Requirements (NFRs) easier. This work introduces our proposed prototype tool for NFRs specification using domain specific language. It ensures automatic verification chain for applications models based on Petri nets. Thanks to this chain, designers can check model validity without any prerequisite knowledge on how it actually was accomplished. &copy; 2012 Praise Worthy Prize S.r.l. - All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  issn          = {18286003},
  key           = {Specifications},
  keywords      = {Blending;Information services;Petri nets;Quality of service;Service oriented architecture (SOA);Verification;Web services;, rank3},
  language      = {English},
}

@InProceedings{20153401198809,
  author        = {Akinyele, Joseph A. and Barthe, Gilles and Gregoire, Benjamin and Schmidt, Benedikt and Strub, Pierre-Yves},
  title         = {Certified synthesis of efficient batch verifiers},
  year          = {2014},
  volume        = {2014-January},
  pages         = {153 - 165},
  address       = {Vienna, Austria},
  note          = {Certified proofs;Chosen message attacks;Domain specific languages;Observational equivalences;Security properties;Signature Scheme;Verification algorithms;Zero knowledge proof;},
  __markedentry = {[Neto:5]},
  abstract      = {Many algorithms admit very efficient batch versions that compute simultaneously the output of the algorithms on a set of inputs. Batch algorithms are widely used in cryptography, especially in the setting of pairing-based computations, where they deliver significant speed-ups. Auto Batch is an automated tool that computes highly optimized batch verification algorithms for pairing-based signature schemes. Thanks to finely tuned heuristics, Auto Batch is able to rediscover efficient batch verifiers for several signature schemes of interest, and in some cases to output batch verifiers that outperform the best known verifiers from the literature. However, Auto Batch only provides weak guarantees (in the form of a LaTeX proof) of the correctness of the batch algorithms it outputs. In this paper, we verify the correctness and security of these algorithms using the Easy Crypt framework. To achieve this goal, we define a domain-specific language to describe verification algorithms based on pairings and provide an efficient algorithm for checking (approximate) observational equivalence between expressions of this language. By translating the output of Auto Batch to this language and applying our verification procedure, we obtain machine-checked correctness proofs of the batch verifiers. Moreover, we formalize notions of security for batch verifiers and we provide a generic proof in Easy Crypt that batch verifiers satisfy a security property called screening, provided they are correct and the original signature is unforgeable against chosen-message attacks. We apply our techniques to several well-known pairing-based signature schemes from the literature, and to Groth-Sahai zero-knowledge proofs. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {10636900},
  journal       = {Proceedings of the Computer Security Foundations Workshop},
  key           = {Algorithms},
  keywords      = {Authentication;Computational linguistics;Computer programming languages;Cryptography;Problem oriented languages;Security of data;Security systems;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/CSF.2014.19},
}

@InProceedings{20151800807303,
  author        = {Ciraci, Selim and Fuller, Jason C. and Daily, Jeff and Makhmalbaf, Atefe and Callahan, David},
  title         = {A runtime verification framework for control system simulation},
  year          = {2014},
  pages         = {75 - 84},
  address       = {Vasteras, Sweden},
  note          = {Complex software systems;Control system simulations;Domain specific languages;Run-time verification;simulation;Specification process;System implementation;Timed Automata;},
  __markedentry = {[Neto:5]},
  abstract      = {In a standard workflow for the validation of a control system, the control system is implemented as an extension to a simulator. Such simulators are complex software systems, and engineers may unknowingly violate constraints a simulator places on extensions. As such, errors may be introduced in the implementation of either the control system or the simulator leading to invalid simulation results. This paper presents a novel runtime verification approach for verifying control system implementations within simulators. The major contribution of the approach is the two-tier specification process. In the first tier, engineers model constraints using a domain-specific language tailored to modeling a controller's response to changes in its input. The language is high-level and effectively hides the implementation details of the simulator, allowing engineers to specify design-level constraints independent of low-level simulator interfaces. In the second tier, simulator developers provide mapping rules for mapping design-level constraints to the implementation of the simulator. Using the rules, an automated tool transforms the design-level specifications into simulator-specific runtime verification specifications and generates monitoring code which is injected into the implementation of the simulator. During simulation, these monitors observe the input and output variables of the control system and report changes to the verifier. The verifier checks whether these changes follow the constraints of the control system. We describe application of this approach to the verification of the constraints of an HVAC control system implemented with the power grid simulator Grid LAB-D. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {07303157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  key           = {Electric power system control},
  keywords      = {Application programs;Climate control;Computational linguistics;Computer control;Computer programming languages;Computer software;Control systems;Engineers;High level languages;Mapping;Modeling languages;Problem oriented languages;Simulators;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/COMPSAC.2014.14},
}

@InProceedings{20153001068527,
  author    = {Pramudianto, Ferry and Indra, Indra Rusmita and Jarke, Mathias},
  title     = {Model driven development for internet of things application prototyping},
  year      = {2013},
  volume    = {2013-January},
  number    = {January},
  pages     = {703 - 708},
  address   = {Boston, MA, United states},
  note      = {Architectural views;Code Generation;Component;Domain model;Domain specific languages;European research project;Model driven development;Prototype development;},
  abstract  = {We present an architectural view for the Internet of Things prototype development that emphasizes the separation of domain modeling from technological implementations. Using the provided model driven tool, domain experts are able to construct domain models by composing virtual objects and link them to the specific technologies. Having them linked, a Java prototype code can be generated by the tool. The developers may extend it into full applications simply by interfacing with the virtual objects without dealing with the communication to specific sensors and actuators. Subsequently, participants involved in the European research projects evaluated the architecture and the model driven tool using a software walk-through technique. The result shows that, for rapid prototyping, the participants are in favor of a simple domain specific language than a complex modeling language such as UML. Copyright &copy; 2013 by Knowledge Systems Institute Graduate School.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {23259000},
  journal   = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  key       = {Software prototyping},
  keywords  = {Architecture;Computational linguistics;Computer programming languages;Information services;Internet;Internet of things;Knowledge engineering;Modeling languages;Problem oriented languages;Query languages;Service oriented architecture (SOA);Software engineering;},
  language  = {English},
}

@InProceedings{20150900591185,
  author        = {Ferry, Nicolas and Song, Hui and Rossini, Alessandro and Chauvel, Franck and Solberg, Arnor},
  title         = {Cloud MF: Applying MDE to tame the complexity of managing multi-cloud applications},
  year          = {2014},
  pages         = {269 - 277},
  address       = {London, United kingdom},
  note          = {Cloud infrastructures;Cloud providers;Delivery models;Domain specific languages;Model-driven Engineering;Modelling framework;Multi-clouds;Runtime environments;},
  __markedentry = {[Neto:5]},
  abstract      = {The market of cloud computing encompasses an ever-growing number of cloud providers offering a multitude of infrastructure-as-a-service (IaaS) and platform-as-a-service (PaaS) solutions. The heterogeneity of these solutions hinders the proper exploitation of cloud computing since it prevents interoperability and promotes vendor lock-in, which increases the complexity of executing and managing multi-cloud applications (i.e., Applications that can be deployed across multiple cloud infrastructures and platforms). Providers of multi-cloud applications seek to exploit the peculiarities of each cloud solution and to combine the delivery models of IaaS and PaaS in order to optimise performance, availability, and cost. In this paper, we show how the Cloud Modelling Framework leverages upon model-driven engineering to tame this complexity by providing: (i) a tool-supported domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for enacting the provisioning, deployment, and adaptation of these applications. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - 2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing, UCC 2014},
  key           = {Platform as a Service (PaaS)},
  keywords      = {Cloud computing;Computer programming languages;Embedded systems;Infrastructure as a service (IaaS);Modeling languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/UCC.2014.36},
}

@InProceedings{20164202915729,
  author        = {Oliveira, Bruno and Belo, Orlando},
  title         = {An ontology for describing ETL patterns behavior},
  year          = {2016},
  pages         = {102 - 109},
  address       = {Lisbon, Portugal},
  note          = {Conceptual model;Data warehousing systems;Domain specific languages;ETL patterns;ETL skeletons;PL4ETL;},
  __markedentry = {[Neto:5]},
  abstract      = {The use of software patterns is a common practice in software design, providing reusable solutions for recurring problems. Patterns represent a general skeleton used to solve common problems, providing a way to share regular practices and reduce the resources needed for implementing software systems. Data warehousing populating processes are a very particular type of software used to migrate data from one or more data sources to a specific data schema used to support decision support activities. The quality of such processes should be guarantee. Otherwise, the final system will deal with data inconsistencies and errors, compromising its suitability to support strategic business decisions. To minimize such problems, we propose a pattern-oriented approach to support ETL lifecycle, from conceptual representation to its execution primitives using a specific commercial tool. An ontology-based meta model it was designed and used for describing patterns internal specification and providing the means to support and enable its configuration and instantiation using a domain specific language. Copyright &copy; 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {DATA 2016 - Proceedings of the 5th International Conference on Data Management Technologies and Applications},
  key           = {Problem solving},
  keywords      = {Computer programming languages;Computer software reusability;Data warehouses;Decision support systems;Information management;Modeling languages;Musculoskeletal system;Ontology;Problem oriented languages;Software design;Warehouses;, rank3},
  language      = {English},
}

@InProceedings{20122515123427,
  author    = {Trancon Y Widemann, Baltasar and Lepper, Markus},
  title     = {Paisley: Pattern matching a la Carte},
  year      = {2012},
  volume    = {7307 LNCS},
  pages     = {240 - 247},
  address   = {Prague, Czech republic},
  note      = {Automated data;Complex model;Data abstraction;Domain specific;Domain specific languages;General-purpose programming language;Library codes;Light weight;Non-determinism;Object oriented;Object-oriented features;Professional development;Semantic foundation;Standard practices;Structured model;},
  abstract  = {Professional development of software dealing with structured models requires more systematic approach and semantic foundations than standard practice in general-purpose programming languages affords. One remedy is to move to domain-specific environments. Here, instead, we present a tool for the implementation of pattern matching as fundamental means of automated data extraction from complex models in a general-purpose programming language. The interface is simple but, thanks to elaborate and rigorous design, is also light-weight, portable, non-invasive, type-safe, modular and extensible. It is compatible with object-oriented data abstraction and has full support for nondeterminism by backtracking. The tool comes as a library consisting of two levels: elementary pattern constructs (generic, highly reusable) and pattern bindings for particular data models (specific, fairly reusable, user-definable). Applications use the library code in a small number of idiomatic ways, making pattern-matching code declarative in style (yet retaining richer host-language semantics), easily writable, readable and maintainable. Library and idiom together form a tightly embedded domain-specific language; no extension of the host language is required. The current implementation is in Java, but assumes only standard object-oriented features, and can hence be ported to other mainstream languages. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {ACM, Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Java programming language},
  keywords  = {COBOL (programming language);Object oriented programming;Pattern matching;Problem oriented languages;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-30476-7_16},
}

@InProceedings{20154501519576,
  author        = {Opila, J.},
  title         = {Prototyping of visualization styles of 3D scalar fields using POV-Ray rendering engine},
  year          = {2015},
  pages         = {312 - 317},
  address       = {Opatija, Croatia},
  note          = {Pov rays;Pseudo-particles;Scalar field visualizations;ScPovPlot3D;Visual data analysis;},
  __markedentry = {[Neto:5]},
  abstract      = {There is a persistent quest for novel methods of visualization in order to get insight into complex phenomena in scientific domains as various as physics, biomedicine or economics. Research teams involved achieved excellent results, however some problems with elaboration of novel visualization styles connected with flexibility of the software used and quality of the final images still persist. In the paper results of inspection of four visualization styles of 3D static scalar field employing POVRay ray-tracing engine are discussed, i.e. equipotential surface method using direct implementation of isosurface{} object, cellular trilinear interpolation approach, application of texture and eventually pseudo-particles design. All styles presented have been tested for hybrid visualizations and compared concerning computing time, informativeness and general appearance. It is shown in the work that Scene Description Language (SDL), domain specific language implemented in POV-Ray is flexible enough to use it as a tool for fast prototyping of novel visualization techniques. Visualizations discussed in the paper were computed using selected components of API of ScPovPlot3D, i.e. templates written in the SDL language. &copy; 2015 MIPRO.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {IEEEDSML, IEEEDSL, Scopus, Duplicados},
  journal       = {2015 38th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2015 - Proceedings},
  key           = {Three dimensional computer graphics},
  keywords      = {Computational linguistics;Computer programming languages;Data visualization;Engines;High energy physics;Microelectronics;Problem oriented languages;Ray tracing;Rendering (computer graphics);Visualization;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/MIPRO.2015.7160285},
}

@InProceedings{20153101098934,
  author    = {Nordmann, Arne and Wrede, Sebastian and Steil, Jochen},
  title     = {Modeling of movement control architectures based on motion primitives using domain-specific languages},
  year      = {2015},
  volume    = {2015-June},
  number    = {June},
  pages     = {5032 - 5039},
  address   = {Seattle, WA, United states},
  note      = {Automatically generated;Building blockes;Control architecture;Domain specific languages;Flexible control;Model driven approach;Motion primitives;Movement control;},
  abstract  = {This paper introduces a model-driven approach for engineering complex movement control architectures based on motion primitives, which in recent years have been a central development towards adaptive and flexible control of complex and compliant robots. We consider rich motor skills realized through the composition of motion primitives as our domain. In this domain we analyze the control architectures of representative example systems to identify common abstractions. It turns out that the introduced notion of motion primitives implemented as dynamical systems with machine learning capabilities, provide the computational building block for a large class of such control architectures. Building on the identified concepts, we introduce domain-specific languages that allow the compact specification of movement control architectures based on motion primitives and their coordination respectively. Using a proper tool chain, we show how to employ this model-driven approach in a case study for the real world example of automatic laundry grasping with the KUKA LWR-IV, where executable source-code is automatically generated from the domain-specific language specification. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Inclusos},
  issn      = {10504729},
  journal   = {Proceedings - IEEE International Conference on Robotics and Automation},
  key       = {Robotics},
  keywords  = {Artificial intelligence;Computational linguistics;Computer programming languages;Dynamical systems;Graphical user interfaces;Learning systems;Modeling languages;Problem oriented languages;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICRA.2015.7139899},
}

@InProceedings{20150700530237,
  author    = {Widemann, Baltasar Trancon and Lepper, Markus},
  title     = {Paisley: A pattern matching library for arbitrary object models},
  year      = {2013},
  volume    = {P-215},
  pages     = {171 - 186},
  address   = {Aachen, Germany},
  note      = {Embedded domain specific languages;General-purpose programming language;Object oriented data;Object-oriented features;Professional development;Programming paradigms;Semantic foundation;Standard practices;},
  abstract  = {Professional development of software dealing with structured models requires more systematic approach and semantic foundation than standard practice in general-purpose programming languages affords. One remedy is to integrate techniques from other programming paradigms, as seamless as possible and without forcing programmers to leave their comfort zone. Here we present a tool for the implementation of pattern matching as fundamental means of automated data extraction from models of arbitrary shape and complexity in a general-purpose programming language. The interface is simple but, thanks to elaborate and rigorous design, is also light-weight, portable, non-invasive, type-safe, modular and extensible. It is compatible with object-oriented data abstraction and has full support for nondeterminism by backtracking. The tool comes as a library consisting of two levels: elementary pattern algebra (generic, highly reusable) and pattern bindings for particular data models (specific, fairly reusable, user-definable). Applications use the library code in a small number of idiomatic ways, making pattern-matching code declarative in style, easily writable, readable and maintainable. Library and idiom together form a tightly embedded domain-specific language; no extension of the host language is required. The current implementation is in Java, but assumes only standard object-oriented features, and can hence be ported to other mainstream languages. &copy; Gesellschaft f&uuml;r Informatik, Bonn 2013.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16175468},
  journal   = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  key       = {Object oriented programming},
  keywords  = {COBOL (programming language);Computational linguistics;Computer programming languages;Java programming language;Pattern matching;Problem oriented languages;Semantics;Software engineering;},
  language  = {English},
}

@InProceedings{20161702284244,
  author        = {Mori, Jones Y. and Llanos, Carlos H. and Huebner, Michael},
  title         = {A framework to the design and programming of many-core focal-plane vision processors},
  year          = {2015},
  pages         = {193 - 198},
  address       = {Porto, Portugal},
  note          = {Communication structures;Domain specific languages;Embedded computing;Flexible processing;Focal plane image;Many-core architecture;Micro architectures;Real time;},
  __markedentry = {[Neto:5]},
  abstract      = {The Focal-Plane Image Processing area aims to bring processing elements as near as possible to the pixels and to the camera's focal-plane. Most of the works reported in the literature uses only simple processing elements, in general analog ones, with few flexibility. With the technology advances, a new generation of Vision Processors is emerging. It is expected that multi/many-core systems will be integrated to the pixel sensors, offering several opportunities for parallelism exploration, resulting in high performance and flexible processing systems. The programmability is one of the main problems in this area, since most programmers are not able to create parallel algorithms and applications. In this work, we propose a methodology to the design and programming of many-core focal-plane vision processors. The application is described using a Domain Specific Language, from which the parallelism characteristics are extracted. Afterwards, a new abstract model is derived using techniques such as Program Slicing (PS) and Task-Graph Clustering (TGC). The abstract model is then transformed in a SystemC/TLM2.0 description, in order to allow for different timing accuracy simulations. The results of the simulations are used together with an ASIP design tool in order to determine both the microarchitecture of processing elements and the communication structure of the new system. Finally, from the model derived before, a new source code is generated and programmed into the new platform. In this context, the main concepts and ideas are described in this work, as well as some partial results. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - IEEE/IFIP 13th International Conference on Embedded and Ubiquitous Computing, EUC 2015},
  key           = {Computer architecture},
  keywords      = {Computer programming;Computer programming languages;Computer vision;Embedded systems;Focusing;Image processing;Integrated circuit design;Parallel processing systems;Pixels;Problem oriented languages;Program processors;Ubiquitous computing;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/EUC.2015.24},
}

@InProceedings{20144700219317,
  author        = {Van Gijzel, Bas and Nilsson, Henrik},
  title         = {Towards a framework for the implementation and verification of translations between argumentation models},
  year          = {2013},
  pages         = {93 - 103},
  address       = {Nijmegen, Netherlands},
  note          = {Abstract argumentation;Argumentation;Argumentation frameworks;Argumentation model;Argumentation theory;Domain specific languages;Functional programming technique;Haskell;},
  __markedentry = {[Neto:5]},
  abstract      = {Argumentation theory is concerned with studying the nature of arguments in the most general sense, including for example scientific, legal, or even completely informal arguments. There are two main approaches. Abstract argumentation is completely generic, making no specific assumptions about the structure of arguments. Structured argumentation, on the other hand, does adopt a predetermined structure pertaining to the domain of discourse. Structured argumentation models have seen a recent surge, with new developments in both general frameworks and more domain-specific approaches. Yet, in contrast to the abstract approach, there is a distinct lack of implementations of structured argumentation models. We believe a key reason for this is the lack of suitable implementation frameworks. Building on previous work, this paper attempts to tackle this problem by applying functional programming techniques. We show how to implement one structured argumentation framework (Carneades) and one abstract framework (Dung) in this way, and then proceed to show how to implement a translation from the former into the latter, one of the first such implementations. Ultimately, we hope our work will evolve into a domain-specific language for implementation of argumentation frameworks. But even at this stage, the paper demonstrates the benefits of functional programming as a tool for argumentation theory.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Functional programming},
  keywords      = {Computer programming languages;Problem oriented languages;Problem solving;Translation (languages);, rank3},
  language      = {English},
}

@InProceedings{20161502208015,
  author    = {De Sousa Duarte, Paulo Artur and Barreto, Felipe Mota and De Almada Gomes, Francisco Anderson and Viana De Carvalho, Windson and Trinta, Fernando Antonio Mota},
  title     = {CRITiCAL: A Configuration Tool for Context Aware and mobiLe Applications},
  year      = {2015},
  volume    = {2},
  pages     = {159 - 168},
  address   = {Taichung, Taiwan},
  note      = {Android;Context acquisition;Context aware middleware;Context-Aware;Contextual information;Middleware configurations;Model-driven Engineering;Self adaptation;},
  abstract  = {This paper presents an approach for modelling and generating Context-Aware and Mobile (CAM) applications based on (i) Model-Driven Engineering and (ii) context acquisition middleware concepts. Our approach allows software engineers to build CAM applications by modelling contextual information and rule-based behaviour on a visual notation. These graphical models are transformed into an Android-based code, targeted for a context-aware middleware called LoCCAM, which encapsulates device sensors access. An initial user evaluation conducted with a group of fourteen computer science volunteers was implemented and indicates time reduction gains in the middleware configuration process and that the complexity in the writing of contextual behaviour of applications is also decreased. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, excluidos},
  issn      = {07303157},
  journal   = {Proceedings - International Computer Software and Applications Conference},
  key       = {Application programs},
  keywords  = {Android (operating system);Cams;Computer software;DSL;Middleware;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/COMPSAC.2015.91},
}

@InProceedings{20161402189536,
  author    = {Catmore, James and Cranshaw, Jack and Gillam, Thomas and Gramstad, Eirik and Laycock, Paul and Ozturk, Nurcan and Stewart, Graeme Andrew},
  title     = {A new petabyte-scale data derivation framework for ATLAS},
  year      = {2015},
  volume    = {664},
  number    = {7},
  address   = {Okinawa, Japan},
  note      = {Analysis models;Computing resource;Domain specific languages;Event selection;Logical operations;Physics analysis;Reconstruction software;Tool requirements;},
  abstract  = {During the Long Shutdown of the LHC, the ATLAS collaboration overhauled its analysis model based on experience gained during Run 1. A significant component of the model is a "Derivation Framework" that takes the petabyte-scale AOD output from ATLAS reconstruction and produces samples, typically terabytes in size, targeted at specific analyses. The framework incorporates all of the functionality of the core reconstruction software, while producing outputs that are simply configured. Event selections are specified via a concise domain-specific language, including support for logical operations. The output content can be highly optimised to minimise disk requirements, while maintaining the same C++ interface. The framework includes an interface to the late-stage physics analysis tools, ensuring that the final outputs are consistent with tool requirements. Finally, the framework allows several outputs to be produced for the same input, providing the possibility to optimise configurations to computing resources. &copy; Published under licence by IOP Publishing Ltd.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {17426588},
  journal   = {Journal of Physics: Conference Series},
  key       = {High energy physics},
  keywords  = {C++ (programming language);Computer programming languages;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1088/1742-6596/664/7/072007},
}

@InProceedings{20160501856929,
  title     = {3rd International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2015},
  year      = {2015},
  volume    = {580},
  pages     = {1 - 436},
  address   = {Angers, France},
  abstract  = {The proceedings contain 25 papers. The special focus in this conference is on Modeling Languages, Tools and Architectures. The topics include: Realizing a conceptual framework to integrate model-driven engineering, software product line engineering, and software configuration management; composition of heterogeneous modeling languages; a model-driven approach for the generation of customizable model migrations; parallel application development using architecture view driven model transformations; runtime translation of model-level queries to persistence-level; integration of handwritten and generated object-oriented code; a framework for metamodel composition and adaptation with conformance-preserving model migration; a textual domain-specific language based on the UML testing profile; metamodel and model composition by integration of operational semantics; computability assurance for UML Template Binding; current limitations and proposed improvements; an approach to define and apply collaboration process patterns for software development; an ontology-based process editor for generating model mapping in tool integration; using model driven engineering to support multi-paradigms security analysis; designing safe and secure embedded and cyber-physical systems with sysML-sec; methodologies, processes and platforms architecture optimization with sysML modeling; capturing semantics to bridge the gap between complex data models and object models; the interface-modular method for global system behaviour specification; a textual domain-specific language based on the UML testing profile; metamodel and model composition by integration of operational semantics; an approach to define and apply collaboration process patterns for software development and an ontology-based process editor for generating model mapping in tool integration.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  keywords  = {rank5},
  language  = {English},
}

@Article{20124915756157,
  author        = {David, O. and Ascough, J.C. and Lloyd, W. and Green, T.R. and Rojas, K.W. and Leavesley, G.H. and Ahuja, L.R.},
  title         = {A software engineering perspective on environmental modeling framework design: The Object Modeling System},
  journal       = {Environmental Modelling and Software},
  year          = {2013},
  volume        = {39},
  pages         = {201 - 213},
  note          = {Code development;Code Generation;Component interaction;Component-based models;Computational scalability;Data transformation;Design goal;Domain specific languages;Engineering perspective;Environmental model;Environmental modeling;Environmental phenomena;Framework development;Functional units;High-performance computing;Implicit parallelisms;Model components;Model development;Modeling and simulation;Modeling process;Modeling tool;Multi-threading;Object modeling;Socio-economics;Software developer;Software frameworks;Spatial data;},
  __markedentry = {[Neto:5]},
  abstract      = {The environmental modeling community has historically been concerned with the proliferation of models and the effort associated with collective model development tasks (e.g., code generation, data transformation, etc.). Environmental modeling frameworks (EMFs) have been developed to address this problem, but much work remains before EMFs are adopted as mainstream modeling tools. Environmental model development requires both scientific understanding of environmental phenomena and software developer proficiency. EMFs support the modeling process through streamlining model code development, allowing seamless access to data, and supporting data analysis and visualization. EMFs also support aggregation of model components into functional units, component interaction and communication, temporal-spatial stepping, scaling of spatial data, multi-threading/multi-processor support, and cross-language interoperability. Some EMFs additionally focus on high-performance computing and are tailored for particular modeling domains such as ecosystem, socio-economic, or climate change research. The Object Modeling System Version 3 (OMS3) EMF employs new advances in software framework design to better support the environmental model development process. This paper discusses key EMF design goals/constraints and addresses software engineering aspects that have made OMS3 framework development efficacious and its application practical, as demonstrated by leveraging software engineering efforts outside of the modeling community and lessons learned from over a decade of EMF development. Software engineering approaches employed in OMS3 are highlighted including a non-invasive lightweight framework design supporting component-based model development, use of implicit parallelism in system design, use of domain specific language design patterns, and cloud-based support for computational scalability. The key advancements in EMF design presented herein may be applicable and beneficial for other EMF developers seeking to better support environmental model development through improved framework design. &copy; 2012 Elsevier Ltd.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {13648152},
  key           = {Software engineering},
  keywords      = {Climate change;Computer programming;Computer simulation;Computer software selection and evaluation;Data visualization;Java programming language;Software design;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.envsoft.2012.03.006},
}

@InProceedings{20155201714503,
  author        = {Foster, Nate and Kozen, Dexter and Milano, Matthew and Silva, Alexandra and Thompson, Laure},
  title         = {A coalgebraic decision procedure for NetKAT},
  year          = {2015},
  volume        = {50},
  number        = {1},
  pages         = {343 - 355},
  note          = {Automata;Coalgebras;Domain specific languages;Implementation and optimization;Kleene algebra with tests;NetKAT;Soundness and completeness;Translation validation;},
  __markedentry = {[Neto:5]},
  abstract      = {NetKAT is a domain-specific language and logic for specifying and verifying network packet-processing functions. It consists of Kleene algebra with tests (KAT) augmented with primitives for testing and modifying packet headers and encoding network topologies. Previous work developed the design of the language and its standard semantics, proved the soundness and completeness of the logic, defined a PSPACE algorithm for deciding equivalence, and presented several practical applications. This paper develops the coalgebraic theory of NetKAT, including a specialized version of the Brzozowski derivative, and presents a new efficient algorithm for deciding the equational theory using bisimulation. The coalgebraic structure admits an efficient sparse representation that results in a significant reduction in the size of the state space. We discuss the details of our implementation and optimizations that exploit NetKAT's equational axioms and coalgebraic structure to yield significantly improved performance. We present results from experiments demonstrating that our tool is competitive with state-of-the-art tools on several benchmarks including allpairs connectivity, loop-freedom, and translation validation. Copyright &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {15232867},
  journal       = {ACM SIGPLAN Notices},
  key           = {Optimization},
  keywords      = {Algebra;Algorithms;Computational linguistics;Computer programming languages;Packet networks;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/10.1145/2676726.2677011},
}

@InProceedings{20155201716418,
  author    = {Kyle, David and Hansen, Jeffery and Chaki, Sagar},
  title     = {Statistical model checking of distributed adaptive real-time software},
  year      = {2015},
  volume    = {9333},
  pages     = {269 - 274},
  address   = {Vienna, Austria},
  note      = {Cyber physicals;Domain specific languages;Execution environments;Multirobots;Real-time software;Statistical model checking;Uncertain environments;Virtual machines;},
  abstract  = {The problem of estimating quantitative properties of distributed cyber-physical software that coordinate and adapt to uncertain environments is addressed. A domain-specific language, called dmpl, is developed to both describe such a system and a target property. Statistical model checking (SMC) is used to estimate the probability with which the property holds on the system. A distributed SMC tool is developed and described. Virtual machines are used to implement a realistic execution environment, and to isolate simulations from one another. Experimental results on a coordinated multi-robot example are presented. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Model checking},
  keywords  = {Computer programming languages;Problem oriented languages;Virtual reality;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-23820-3_17},
}

@InProceedings{20121514934007,
  author    = {Ubayashi, Naoyasu and Kamei, Yasutaka},
  title     = {An extensible aspect-oriented modeling environment for constructing domain-specific languages},
  year      = {2012},
  volume    = {E95-D},
  number    = {4},
  pages     = {942 - 958},
  note      = {Access protocols;Aspect oriented modeling;Domain specific languages;Extensible weaver;Meta model;Model weaving;Modeling construct;Structural reflection;Support tool;Tool support;},
  abstract  = {AspectM, an aspect oriented modeling (AOM) language, provides not only basic modeling constructs but also an extension mechanism called metamodel access protocol (MMAP) that allows a modeler to modify the metamodel. MMAP consists of metamodel extension points, extension operations, and primitive predicates for navigating the metamodel. Although the notion of MMAP is useful, it needs tool support. This paper proposes a method for implementing a MMAP based AspectM support tool. It consists of model editor, model weaver, and model verifier. We introduce the notion of edit-time structural reflection and extensible model weaving. Using these mechanisms, a modeler can easily construct domain-specific languages (DSLs). We show a case study using the AspectM support tool and discuss the effectiveness of the extension mechanism provided by MMAP. As a case study, we show a UML based DSL for describing the external contexts of embedded systems. Copyright &copy; 2012 The Institute of Electronics, Information and Communication Engineers.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {09168532},
  journal   = {IEICE Transactions on Information and Systems},
  key       = {Problem oriented languages},
  keywords  = {DSL;Information science;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1587/transinf.E95.D.942},
}

@InProceedings{20142817913737,
  author    = {Barthou, Denis and Brand-Foissac, Olivier and Pene, Olivier and Grosdidier, Gilbert and Dolbeau, Romain and Eisenbeis, Christina and Kruse, Michael and Petrov, Konstantin and Tadonki, Claude},
  title     = {Automated code generation for Lattice Quantum Chromodynamics and beyond},
  year      = {2014},
  volume    = {510},
  number    = {1},
  pages     = {DCOMP/APS; Department of Physical Sciences of Russian Academy of Sciences; EPS; IUPAP; RSC Group Company; Russian Foundation for Basic Research -},
  address   = {Moscow, Russia},
  note      = {Automated code generation;C codes;Domain specific languages;Implementation and optimization;Lattice quantum chromodynamics;Monte-Carlo simulations;Simulation software;},
  abstract  = {We present here our ongoing work on a Domain Specific Language which aims to simplify Monte-Carlo simulations and measurements in the domain of Lattice Quantum Chromodynamics. The tool-chain, called Qiral, is used to produce high-performance OpenMP C code from LaTeX sources. We discuss conceptual issues and details of implementation and optimization. The comparison of the performance of the generated code to the well-established simulation software is also made. &copy; Published under licence by IOP Publishing Ltd.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {17426588},
  journal   = {Journal of Physics: Conference Series},
  key       = {C (programming language)},
  keywords  = {Application programming interfaces (API);Computer programming languages;Computer software;Intelligent systems;Quantum theory;},
  language  = {English},
  url       = {http://dx.doi.org/10.1088/1742-6596/510/1/012005},
}

@InProceedings{20162202445762,
  author    = {Gamboa, Miguel Andres and Syriani, Eugene},
  title     = {Automating activities in MDE tools},
  year      = {2016},
  pages     = {123 - 133},
  address   = {Rome, Italy},
  note      = {Domain specific modeling;Enactment;Fitts Law;Model transformation;Workflow;},
  abstract  = {Model-Driven Engineering (MDE) is a victim of its own success: being able to quickly generate software tools, many modeling tools exist today, but their usability is far from efficient. Complex processes and repetitive tasks are often required to perform a modeling activity, such as creating a domain-specific language or creating a domain-specific model. The goal of this paper is to increase the productivity of modelers in their every day activities by automating the tasks they perform in current MDE tools. We propose an MDE-based solution where the user defines a workflow that can be parametrized at run-time and executed. Our solution works for frameworks that support two level metamodeling as well as deep metamodeling. We implemented our solution in the MDE tool AToMPM.We also performed a preliminary empirical evaluation of our approach and showed that we reduce both mechanical and cognitive efforts of the user. &copy; Copyright 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  journal   = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  key       = {Software design},
  keywords  = {Computer aided software engineering;Computer programming languages;Embedded systems;Modeling languages;Problem oriented languages;},
  language  = {English},
}

@InProceedings{20143718153648,
  author        = {Tyugu, Enn and Harf, Mait and Grigorenko, Pavel},
  title         = {A case study of combining compositional and object-oriented software development},
  year          = {2014},
  pages         = {201 - 208},
  address       = {Lisbon, Portugal},
  note          = {Design of softwares;Domain specific languages;Domain specific modeling;General purpose software;Model-Driven Software Development;Object oriented software development;Software Specification;Structural synthesis;},
  __markedentry = {[Neto:5]},
  abstract      = {We analyze an approach to software development where object-oriented and compositional software specifications are written in separate languages and are only loosely connected. It supports compositional design of software in a domain-specific language and automatic model-driven construction of code from classes written in Java. We justify our approach by giving examples of development of large simulation programs and services on large models. We present also an example of using our method in general purpose software development - this is bootstrapping the essential part of a software tool CoCoViLa, i.e. synthesizing CoCoViLa in CoCoViLa itself. Copyright &copy; 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  key           = {Software design},
  keywords      = {Computer aided software engineering;Computer software;Object oriented programming;Problem oriented languages;, rank3},
  language      = {English},
}

@InProceedings{20163002625913,
  title         = {ACM International Conference Proceeding Series},
  year          = {2016},
  volume        = {01-03-June-2016},
  address       = {Limerick, Ireland},
  __markedentry = {[Neto:5]},
  abstract      = {The proceedings contain 44 papers. The topics discussed include: the impact of agile methods on the development of an agile culture - research proposal: the agile evolution; remedying knowledge loss in FLOSS (free/ libre open source software); integrating evidence from systematic reviews with software engineering practice through evidence briefings; personalised technical support for text-based interactions: a validation study; results from an ethnographically-informed study in the context of test driven development; the jinx on the NASA software defect data sets; benefits and limitations of job rotation in software organizations: a systematic literature review; evidence-based software portfolio management: a tool description and evaluation; a review-based comparative study of bad smell detection tools; do more inspectors guarantee higher accuracy of the capture-recapture estimates? an empirical study; an integrated tool environment for experimentation in domain specific language engineering; beyond the spreadsheet: reflections on tool support for literature studies; improving vulnerability detection measurement: test suites and software security assurance; what we have learnt adopting evidence-based software engineering for industrial practice; and an exploratory study on the effects of perceived value and stakeholder satisfaction on software projects.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  language      = {English},
}

@InProceedings{20124415628135,
  author    = {Benchaib, Yacine and Chaudet, Claude},
  title     = {Using VIRMANEL and SILUMOD to study protocol for mobile multihop networks},
  year      = {2012},
  volume    = {1},
  pages     = {76 - 78},
  address   = {Seoul, Korea, Republic of},
  note      = {Ad hoc routing protocol;Domain specific languages;Linux implementation;Mobile multihop networks;Mobile nodes;Mobility model;Virtual machines;},
  abstract  = {In this demonstration, we show how to use a couple of tools we developed, VIRMANEL and SIMULOD, to study how the true implementation of an ad hoc routing protocol behaves under various mobility scenarios. VIRMANEL is a tool that configure virtual machines connections with respect to mobility. It features a GUI to observe the behavior of mobile nodes. SILUMOD is a domain-specific language that allows to describe mobility models. It defines the positions of the trajectory of moving through the appropriate keywords. These tools, published under the LGPL license, are used here to study the Linux implementation of OLSR. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {21555486},
  journal   = {Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks workshops},
  key       = {MESH networking},
  keywords  = {Computer operating systems;Problem oriented languages;Sensors;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SECON.2012.6275847},
}

@InProceedings{20154501499710,
  author        = {Klarl, Annabelle},
  title         = {From HELENA ensemble specifications to PROMELA verification models},
  year          = {2015},
  volume        = {9232},
  pages         = {39 - 45},
  address       = {Stellenbosch, South africa},
  note          = {Asynchronous communication;Code generators;Distributed systems;Domain specific languages;Goal-directed behavior;Model approach;Promela models;Verification model;},
  __markedentry = {[Neto:5]},
  abstract      = {With Helena, we introduced a modeling approach for distributed systems where components dynamically collaborate in ensembles. Conceptually, components participate in a goal-oriented collaboration by adopting certain roles in the ensemble. To verify the goal-directed behavior of ensembles, we propose to systematically translate Helena specifications to Promela and verify them with the model-checker Spin. In this paper, we report on tool support for an automated transition from Helena to Promela. Relying on the Xtext workbench of Eclipse, we provide a code generator from the domain-specific-language Helena- Text to Promela. The generated Promela model simulates the two layers, components and their adopted roles from Helena, and allows dynamic role creation as well as asynchronous communication of roles. &copy; Springer International Publishing Switzerland 2015.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Model checking},
  keywords      = {Computer programming languages;Graphical user interfaces;Problem oriented languages;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-23404-5_4},
}

@InProceedings{20143418090621,
  author        = {Kuraj, Ivan and Kuncak, Viktor},
  title         = {SciFe: Scala framework for efficient enumeration of data structures with invariants},
  year          = {2014},
  pages         = {45 - 49},
  address       = {Uppsala, Sweden},
  note          = {Embedded Languages;Enumeration;Exhaustive search;Memoisation;Meta Programming;Property-based testing;Scala;Test generations;},
  __markedentry = {[Neto:5]},
  abstract      = {We introduce SciFe, a tool for automated generation of complex structures, suitable for tasks such as automated testing and synthesis. SciFe is capable of exhaustive, memoized enumeration of values from finite or infinite domains. SciFe is based on the concept of an enumerator, defined as an efficiently computable bijection between natural numbers and values from a given set. SciFe introduces higher-order enumerators which define enumerators that depend on additional parameters. SciFe also includes combinators that can construct more complex enumerators from existing ones while preserving exhaustiveness and efficiency. SciFe is a Scala library that implements a domain-specific language. This tool demo presents an overview of SciFe as well as its use to generate complex structures such as search trees and models of class hierarchies. Our experiments demonstrate better performance and shorter specifications when compared to existing approaches.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {SCALA 2014 - Proceedings of the 5th Annual Scala Workshop, Co-located with ECOOP 2014},
  key           = {Problem oriented languages},
  keywords      = {Object oriented programming;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2637647.2637655},
}

@InProceedings{20162202436882,
  author    = {Abrantes, Joilson and Coelho, Roberta},
  title     = {Specifying and dynamically monitoring the exception handling policy},
  year      = {2015},
  volume    = {2015-January},
  pages     = {370 - 374},
  address   = {Pittsburgh, PA, United states},
  note      = {Contract languages;Domain specific languages;Exception handling;Monitoring tools;Runtime Monitoring;Source codes;System architects;Web-based system;},
  abstract  = {The exception handling policy of a system comprises the set of design rules that specify its exception handling behavior (how exceptions should be handled and thrown). Such policy is usually undocumented and implicitly defined by the system architect. For this reason, developers may think that by just including catch-blocks in the code they can deal with exception conditions. This lack of information may turn the exception handling into a generalized "goto" mechanism making the program more complex and less reliable. This work proposes a domain-specific language called ECL (Exception Contract Language) to specify the exception handling policy and a runtime monitoring tool which dynamically checks this policy. The monitoring tool is implemented in the form of an aspect library, which can be added to any Java system without the need to change the application source code. We applied this approach to a large-scale web-based system and to a set of versions of the well-known JUnit framework. The results indicate that this approach can be used to express and to automatically check the exception handling policy of a system, and consequently support the development of more robust Java systems.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {23259000},
  journal   = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  key       = {Java programming language},
  keywords  = {Computational linguistics;Computer programming languages;Dynamic analysis;Knowledge engineering;Monitoring;Problem oriented languages;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.18293/SEKE2015-133},
}

@InProceedings{20162202445725,
  author    = {Zhang, Dan and Bosnacki, Dragan and Van Den Brand, Mark and Huizing, Cornelis and Kuiper, Ruurd and Jacobs, Bart and Wijs, Anton},
  title     = {Verification of atomicity preservation in model-to-code transformations using generic Java code},
  year      = {2016},
  pages     = {578 - 588},
  address   = {Rome, Italy},
  note      = {Atomicity;Code Generation;Concurrency;Model transformation;Separation logic;},
  abstract  = {A challenging aspect of model-to-code transformations is to ensure that the semantic behavior of the input model is preserved in the output code. When constructing concurrent systems, this is mainly difficult due to the non-deterministic potential interaction between threads. In this paper, we consider this issue for a framework that implements a transformation chain from models expressed in the state machine based domain specific language SLCO to Java. In particular, we provide a fine-grained generic solution to preserve atomicity of SLCO statements in the Java implementation. We give its generic specification based on separation logic and verify it using the verification tool VeriFast. The solution can be regarded as a reusable module to safely implement atomic operations in concurrent systems. &copy; Copyright 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  key       = {Software design},
  keywords  = {Codes (symbols);Computer circuits;Computer programming languages;Cosine transforms;Formal logic;Formal verification;Java programming language;Problem oriented languages;Reconfigurable hardware;Semantics;},
  language  = {English},
}

@InProceedings{20162702569598,
  author        = {Lezos, Christakis and Dimitroulakos, Grigoris and Latifis, Ioannis and Masselos, Konstantinos},
  title         = {Automatic generation of code analysis tools: The CastQL approach},
  year          = {2016},
  volume        = {12-March-2016},
  pages         = {Rathlin Project -},
  address       = {Barcelona, Spain},
  note          = {Automatic generation of codes;Benchmark applications;Compiler generators;Domain specific languages;General-purpose programming language;Internal representation;Software development process;Source code analysis;},
  __markedentry = {[Neto:5]},
  abstract      = {Source code analysis and manipulation tools have become an essential part of software development processes. Automating the development of such tools can heavily reduce development time, effort and cost. This paper proposes a framework for the efficient development of code analysis software. A tool for automatically generating the front end of analysis tools for a given language grammar is proposed. The proposed approach can be applied to any language that can be described using the BNF notation. The proposed framework also provides a domain specific language to concisely express queries on the internal representation generated by the front end. This language tackles the problem of writing complex code in a general purpose programming language in order to retrieve information from the internal representation. The approach has been evaluated through two different realistic usage scenarios applied to a number of different benchmark applications. The front end generator has also been tested for twenty input grammars. In all cases the software generated by the proposed framework functions according to the input grammar while the development time has been reduced on average down to 12% compared to equivalent handwritten implementations. The experimental results give evidence that the use of the proposed framework can heavily reduce the relevant design effort and cost.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Automatic programming},
  keywords      = {Benchmarking;Codes (symbols);Computational linguistics;Computer programming languages;Cost reduction;Graphical user interfaces;Problem oriented languages;Query languages;Software design;Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2889420.2889422},
}

@Article{20124915745025,
  author    = {Obrenovic, Nikola and Popovic, Aleksandar and Aleksic, Slavica and Lukovic, Ivan},
  title     = {Transformations of check constraint pim specifications},
  journal   = {Computing and Informatics},
  year      = {2012},
  volume    = {31},
  number    = {5},
  pages     = {1045 - 1079},
  note      = {Check constraint;Model driven architectures;Model to model transformation;Model-to-code transformation;Platform independent model;SQL/DDL generation;},
  abstract  = {Platform independent modeling of information systems and generation of their prototypes play an important role in software development process. However, not all tasks in this process have been covered yet, i.e. not all pieces of an information system can be designed using platform independent artifacts that are later transformable into the executable code. One of the examples is modeling of database check constraints, for which there is a lack of appropriate mechanisms to formally specify them on a platform independent level. In order to provide formal specification of check constraints at platform independent level, we developed a domain specific language and embedded it into a tool for platform independent design and automated prototyping of information systems, named Integrated Information Systems CASE (IIS*Case). In this paper, we present algorithms for transformation of check constraints specified at the platform independent level into the relational data model, and further transformation into the executable SQL/DDL code for several standard and commercial platforms: ANSI SQL-2003, Oracle 9i and 10g, and MS SQL Server 2000 and 2008. We have also implemented these algorithms in IIS*Case as a part of the process of generation of relational database schema.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {13359150},
  key       = {Information systems},
  keywords  = {Algorithms;Cosine transforms;Software engineering;Specifications;},
  language  = {English},
}

@InProceedings{20154001337213,
  author        = {Just, Rene},
  title         = {The major mutation framework: Efficient and scalable mutation analysis for Java},
  year          = {2014},
  pages         = {433 - 436},
  address       = {San Jose, CA, United states},
  note          = {Compiler-integrated mutation;Domain specific languages;Large software systems;Mutation testing;Scalability problems;Strong mutation;Testing technique;Weak mutation;},
  __markedentry = {[Neto:5]},
  abstract      = {Mutation analysis seeds artificial faults (mutants) into a program and evaluates testing techniques by measuring how well they detect those mutants. Mutation analysis is well-established in software engineering research but hardly used in practice due to inherent scalability problems and the lack of proper tool support. In response to those challenges, this paper presents Major, a framework for mutation analysis and fault seeding. Major provides a compiler-integrated mutator and a mutation analyzer for JUnit tests. Major implements a large set of optimizations to enable efficient and scalable mutation analysis of large software systems. It has already been applied to programs with more than 200,000 lines of code and 150,000 mutants. Moreover, Major features its own domain specific language and is designed to be highly configurable to support fundamental re- search in software engineering. Due to its efficiency and exibility, the Major mutation framework is suitable for the application of mutation analysis in research and practice. It is publicly available at http://mutation-testing.org. Copyright 2014 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {2014 International Symposium on Software Testing and Analysis, ISSTA 2014 - Proceedings},
  key           = {Software testing},
  keywords      = {Computer programming languages;Problem oriented languages;Program compilers;Software engineering;, rank3},
  language      = {English},
}

@InProceedings{20150800544746,
  author    = {Hofrichter, Oliver and Gogolla, Martin and Sohr, Karsten},
  title     = {UML/OCL based design and analysis of role-based access control policies},
  year      = {2013},
  volume    = {1102},
  pages     = {33 - 42},
  address   = {Miami, FL, United states},
  note      = {Meta model;OCL;Policy analysis;RBAC;UML;Validation;},
  abstract  = {Access control plays an important part in IT systems these days. Specifically Role-Based Access Control (RBAC) has been widely adopted in practice. One of the major challenges within the introduction of RBAC into an organization is the policy definition. Modeling technologies provide support by allowing to design and to validate a policy. In this work we apply a UML and OCL based domain-specific language (DSL) to design and to analyze the access control of the conference management system EasyChair. For the first time EasyChair is formally described in connection with RBAC. Our activities are located on three levels: (a) the re-engineering of the system's access control policy is located at the policy level, (b) the framework level summarizes activities concerning the RBAC metamodel (e.g. enhancements), and (c) at the configuration level, we configure a concrete policy using the conference management system options. As a result, both a DSL developed in previous work is checked for the need of enhancements, and the re-enginered EasyChair access control policy is analyzed. For validation purposes a frequently used UML/OCL validation tool is utilized. Copyright &copy; 2013 for the individual papers by the papers' authors.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Access control},
  keywords  = {Computational linguistics;Computer programming languages;Design;Modeling languages;Problem oriented languages;},
  language  = {English},
}

@Article{20142217761509,
  author    = {Haitzer, Thomas and Zdun, Uwe},
  title     = {Semi-automated architectural abstraction specifications for supporting software evolution},
  journal   = {Science of Computer Programming},
  year      = {2014},
  volume    = {90},
  number    = {PART B},
  pages     = {135 - 160},
  note      = {Architectural abstraction;Architectural components;Model transformation;Software Evolution;UML;},
  abstract  = {In this paper we present an approach for supporting the semi-automated architectural abstraction of architectural models throughout the software life-cycle. It addresses the problem that the design and implementation of a software system often drift apart as software systems evolve, leading to architectural knowledge evaporation. Our approach provides concepts and tool support for the semi-automatic abstraction of architecture component and connector views from implemented systems and keeping the abstracted architecture models up-to-date during software evolution. In particular, we propose architecture abstraction concepts that are supported through a domain-specific language (DSL). Our main focus is on providing architectural abstraction specifications in the DSL that only need to be changed, if the architecture changes, but can tolerate non-architectural changes in the underlying source code. Once the software architect has defined an architectural abstraction in the DSL, we can automatically generate architectural component views from the source code using model-driven development (MDD) techniques and check whether architectural design constraints are fulfilled by these models. Our approach supports the automatic generation of traceability links between source code elements and architectural abstractions using MDD techniques to enable software architects to easily link between components and the source code elements that realize them. It enables software architects to compare different versions of the generated architectural component view with each other. We evaluate our research results by studying the evolution of architectural abstractions in different consecutive versions of five open source systems and by analyzing the performance of our approach in these cases. &copy; 2013 Elsevier B.V. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, excluidos},
  issn      = {01676423},
  key       = {Open systems},
  keywords  = {Abstracting;Automation;Computer programming languages;Life cycle;Open source software;Problem oriented languages;Software architecture;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.scico.2013.10.004},
}

@InProceedings{20144600193769,
  author    = {Havelund, Klaus and Joshi, Rajeev},
  title     = {Comprehension of spacecraft telemetry using hierarchical specifications of behavior},
  year      = {2014},
  volume    = {8829},
  pages     = {187 - 202},
  address   = {Luxembourg, Luxembourg},
  note      = {Behavior specifications;Domain specific languages;Limited visibility;Partial specifications;Potential problems;Remote spacecraft;Run-time verification;System behaviors;},
  abstract  = {A key challenge in operating remote spacecraft is that ground operators must rely on the limited visibility available through spacecraft telemetry in order to assess spacecraft health and operational status. We describe a tool for processing spacecraft telemetry that allows ground operators to impose structure on received telemetry in order to achieve a better comprehension of system state. A key element of our approach is the design of a domain-specific language that allows operators to express models of expected system behavior using partial specifications. The language allows behavior specifications with data fields, similar to other recent runtime verification systems. What is notable about our approach is the ability to develop hierarchical specifications of behavior. The language is implemented as an internal DSL in the Scala programming language that synthesizes rules from patterns of specification behavior. The rules are automatically applied to received telemetry and the inferred behaviors are available to ground operators using a visualization interface that makes it easier to understand and track spacecraft state. We describe initial results from applying our tool to telemetry received from the Curiosity rover currently roving the surface of Mars, where the visualizations are being used to trend subsystem behaviors, in order to identify potential problems before they happen. However, the technology is completely general and can be applied to any system that generates telemetry such as event logs. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Spacecraft},
  keywords  = {Computer programming languages;Formal methods;Interface states;Problem oriented languages;Specifications;Telemetering equipment;Visualization;},
  language  = {English},
}

@InProceedings{20130616002373,
  author    = {Lu, Qiming and Biery, Kurt A. and Kowalkowski, James B.},
  title     = {Message correlation analysis tool for NONA},
  year      = {2012},
  volume    = {396},
  number    = {PART 1},
  pages     = {New York University; ACEOLE; Data Direct Networks; Dell; European Middleware Initiative; Nexsan -},
  address   = {New York, NY, United states},
  note      = {Correlation analysis;Correlation rule;Data corruption;Domain specific languages;Event identification;Initial design;On-line data acquisition;Plug-ins;Real-time correlations;Recognition patterns;Running systems;Runtimes;System failures;},
  abstract  = {A complex running system, such as the NO&nu;A online data acquisition, consists of a large number of distributed but closely interacting components. This paper describes a generic real-time correlation analysis and event identification engine, named Message Analyzer. Its purpose is to capture run time abnormalities and recognize system failures based on log messages from participating components. The initial design of analysis engine is driven by the data acquisition (DAQ) of the NO&nu;A experiment. The Message Analyzer performs filtering and pattern recognition on the log messages and reacts to system failures identified by associated triggering rules. The tool helps the system maintain a healthy running state and to minimize data corruption. This paper also describes a domain specific language that allows the recognition patterns and correlation rules to be specified in a clear and flexible way. In addition, the engine provides a plugin mechanism for users to implement specialized patterns or rules in generic languages such as C++.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {17426588},
  journal   = {Journal of Physics: Conference Series},
  key       = {Correlation methods},
  keywords  = {Data acquisition;Digital storage;Nuclear physics;Pattern recognition;Systems engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1088/1742-6596/396/1/012030},
}

@InProceedings{20140717317964,
  author    = {Schafer, Jorg and Klein, David},
  title     = {Implementing Situation Awareness for Car-to-X Applications using Domain Specific Languages},
  year      = {2013},
  address   = {Dresden, Germany},
  note      = {Application softwares;Domain specific languages;Model parameters;Radio technologies;Simulation environment;Situation awareness;Technology-based;Wireless communications;},
  abstract  = {Car-to-X i.e. Car-to-Anything communication based on standardized IEEE 802.11p radio technology is comprised with wireless communication between cars (Car-to-Car) and between vehicles and the environment (Car-to-Infrastructure). In order to develop Car-to-X applications based on this standard one needs to model parameters such as the vehicle's position, velocity, acceleration etc. and parameters of the vehicle's environment. Typically, the underlying domain models are designed in an ad-hoc manner and the domain rules become hard-coded into the source-code of the application software. In this paper we describe an alternative and more flexible approach. The model is described in almost plain English using a Domain Specific Language (DSL) and translated into target code via parser technology based on the ANTLR tool-chain. This provides more flexibility not only in creating and maintaining the domain rules, but also with regards to generating code for entirely different target languages and technology environments. For instance, we demonstrate to generate Java code for a simulation environment and C-code for the embedded device from the same rule definitions. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {15502252},
  journal   = {IEEE Vehicular Technology Conference},
  key       = {Vehicle to vehicle communications},
  keywords  = {Computer programming languages;Standards;Technology;Wireless telecommunication systems;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/VTCSpring.2013.6692589},
}

@Article{20154401488568,
  author        = {Dimitrieski, Vladimir and elikovi, Milan and Aleksi, Slavica and Risti, Sonja and Alargt, Abdalla and Lukovi, Ivan},
  title         = {Concepts and evaluation of the extended entity-relationship approach to database design in a multi-paradigm information system modeling tool},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2015},
  volume        = {44},
  pages         = {299 - 318},
  note          = {Conceptual database design;Domain specific languages;Entity-relationship;Evaluation study;Information system model;Model transformation;Relational data models;Structured Query Language;},
  __markedentry = {[Neto:5]},
  abstract      = {Different approaches to information system (IS) development are based on different data models. The selection of a data model for conceptual design, among other things, depends on the problem domain, the knowledge, and the personal preferences of an IS designer. In some situations, a simultaneous usage of different approaches to the conceptual database design and IS development may lead to the most appropriate solutions. In our previous research we have developed a tool that provides an evolutive and incremental approach to IS development, which is based on the form type data model. The approaches based on the Extended Entity-Relationship (EER) and class data models are broadly accepted throughout the community of IS designers. In order to support the simultaneous usage of approaches based on the form type, EER and class data models, we have developed the Multi-Paradigm Information System Modeling Tool (MIST). In this paper, we present a part of our MIST tool that supports EER approach to a database design. MIST components currently provide a formal specification of an EER database schema specification and its transformation into the relational data model, or the class model. Also, MIST allows generation of Structured Query Language code for a database creation and procedural code for implementing database constraints. In addition, Java code that stores and processes data from the database, may be generated from the class model. In this paper, we present the evaluation study of the MIST EER domain-specific language. Users' perceptions of language quality characteristics are used for the evaluation. &copy; 2015 Elsevier Ltd.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {14778424},
  key           = {Quality control},
  keywords      = {Codes (symbols);Computational linguistics;Computer programming languages;Conceptual design;Data mining;Design;Formal specification;Information systems;Metadata;Problem oriented languages;Query languages;Query processing;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.cl.2015.08.011},
}

@InProceedings{20154301444277,
  author    = {Fox, Anthony},
  title     = {Improved tool support for machine-code decompilation in HOL4},
  year      = {2015},
  volume    = {9236},
  pages     = {187 - 202},
  address   = {Nanjing, China},
  note      = {Decompilation;Domain specific languages;Instruction set;Instruction set architecture;Interactive theorem prover;Machine code programs;Machine codes;Orders of magnitude;},
  abstract  = {The HOL4 interactive theorem prover provides a sound logical environment for reasoning about machine-code programs. The rigour of HOL&rsquo;s LCF-style kernel naturally guarantees very high levels of assurance, but it does present challenges when it comes implementing efficient proof tools. This paper presents improvements that have been made to our methodology for soundly decompiling machine-code programs to functions expressed in HOL logic. These advancements have been facilitated by the development of a domain specific language, called L3, for the specification of Instruction Set Architectures (ISAs). As a result of these improvements, decompilation is faster (on average by one to two orders of magnitude), the instruction set specifications are easier to write, and the proof tools are easier to maintain. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Theorem proving},
  keywords  = {Codes (symbols);Computer architecture;Computer programming languages;Problem oriented languages;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-22102-1_12},
}

@InProceedings{20153401193147,
  author        = {Bhat, Manoj and Reschenhofer, Thomas and Matthes, Florian},
  title         = {Tool support for analyzing the evolution of Enterprise Architecture metrics},
  year          = {2015},
  volume        = {3},
  pages         = {154 - 161},
  address       = {Barcelona, Spain},
  note          = {Domain specific languages;Enterprise Architecture;Enterprise architecture managements;Informed decision;Metrics;Model based approach;Retrospective analysis;Temporal aspects;},
  __markedentry = {[Neto:5]},
  abstract      = {Managing the evolution of the Enterprise Architecture (EA) is a key challenge for modern enterprises. The EA metrics are instrumental in quantitatively measuring the progress of an enterprise towards its goals. Retrospective analysis of EA metrics empower business users to take informed decisions while planning and selecting efficient alternatives to achieve envisioned EA goals. Even though the current EA management tools support the definition and calculation of EA metrics, they do not capture the temporal aspects of EA metrics in their meta-model to enable retrospective analysis. In this paper, we first propose a model-based approach to capture the temporal aspects of EA metrics and then extend a domain specific language to compute EA metrics at any point of time in the past. This allows visualizing the evolution of EA metrics and as a consequence the evolution of the EA. Copyright &copy; 2015 SCITEPRESS Science and Technology Publications All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings},
  key           = {Information systems},
  keywords      = {Computational linguistics;Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
}

@InProceedings{20143718153653,
  author        = {Sottet, Jean-Sebastien and Vagner, Alain},
  title         = {Defining domain specific transformations in human-computer interfaces development},
  year          = {2014},
  pages         = {246 - 253},
  address       = {Lisbon, Portugal},
  note          = {Domain specific languages;Human computer interaction (HCI);Human computer interfaces;Model based approach;Model driven development;Model transformation;Proof of concept;Transformation languages;},
  __markedentry = {[Neto:5]},
  abstract      = {Early model-based approaches for Human-Computer Interaction (HCI) clearly depicted models and frameworks for generating User Interfaces (UI) but considered model transformations as black-boxes. In the 2000's, these approaches were criticized due to the poor quality of the produced UI. One of the main reasons of this poor quality can be easily observed in state of the art UI transformations: they are the heart of designers' know-how but are maintained by a minority of specialists. Meanwhile, mainstream UI design methods have shown a growing number of heterogeneous stakeholders that collaborate to produce modern and qualitative UI. We claim that these stakeholders must comprehend and interact with transformations and thus we need to make the transformation language affordable to these stakeholders. Indeed, such a simplification should hide transformations complexity and burden for any stakeholder, finally focusing on a specific part of the design domain: a Domain Specific Language (DSL) for transformations or Domain Specific Transformation Language (DSTL). We provide in this paper a method and a supporting tool for systematizing and finally executing DSTL for model-driven UI development. We depict that framework on a proof of concept implementation for an HCI-specific stakeholder: the usability expert. Copyright &copy; 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  key           = {Software design},
  keywords      = {Computer programming languages;Human computer interaction;Mathematical models;Technology transfer;User interfaces;, rank3},
  language      = {English},
}

@InProceedings{20143118014661,
  author    = {Nabuco, Miguel and Paiva, Ana C. R.},
  title     = {Model-based test case generation for web applications},
  year      = {2014},
  volume    = {8584 LNCS},
  number    = {PART 6},
  pages     = {248 - 262},
  address   = {Guimaraes, Portugal},
  note      = {Capture-replay;Domain specific languages;Model based testing;Model-based test;Modeling tool;Test case generation;Test strategies;WEB application;},
  abstract  = {This paper presents a tool to filter/configure the test cases generated within the Model-Based Testing project PBGT. The models are written in a Domain Specific Language called PARADIGM and are composed by User Interface Test Patterns (UITP) describing the testing goals. To generate test cases, the tester has to provide test input data for each UITP in the model. After that, it is possible to generate test cases. However, without a filter/configuration of the test case generation algorithm, the number of test cases can be so huge that becomes unfeasible. So, this paper presents an approach to define parameters for the test case generation in order to generate a feasible number of test cases. The approach is evaluated by comparing the different test strategies and measuring the performance of the modeling tool against a capture-replay tool used for web testing. &copy; 2014 Springer International Publishing.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {ACM, Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Testing},
  keywords  = {Computer programming languages;User interfaces;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-09153-2_19},
}

@InProceedings{20164202918668,
  author        = {Ramos-Cantor, Oscar D. and Lossow, Moritz and Droste, Heinz and Kadel, Gerhard and Pesavento, Marius},
  title         = {A network simulation tool for user traffic modeling and quality of experience analysis in a hybrid access architecture},
  year          = {2014},
  address       = {Berlin, Germany},
  note          = {Digital Subscriber Line (DSL);Hybrid-access;LTE Networks;Network simulation tools;Network users;Quality of experience (QoE);User experience;User traffics;},
  __markedentry = {[Neto:5]},
  abstract      = {A Hybrid Access Architecture, where network users can be simultaneously served by different technologies, has been envisioned in order to increase the achievable data rates and enhance the user experience. This proposed access is promising to users where the costs of replacing existing technology are unmanageable and the complementary technology is underused. In order to understand the implications of a Hybrid Access between Digital Subscriber Line (DSL) and Long Term Evolution (LTE) in Downlink (DL) operation, a Network Simulation Tool has been developed, where the services demanded by the users are defined and modeled. Additionally, the Traffic and QoE Simulator (TQoES) establishes an algorithm to select the kind of access to be used by specific services, and reliably simulates the behavior of users within an LTE network based on 3GPP recommendations. &copy; VDE VERLAG GMBH &middot; Berlin &middot; Offenbach.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, IEEEDSL, Duplicados},
  journal       = {Proceedings of World Telecommunications Congress 2014, WTC 2014},
  key           = {Wireless telecommunication systems},
  keywords      = {Long Term Evolution (LTE);Mobile telecommunication systems;Modems;Network architecture;Office buildings;Quality of service;Telecommunication lines;Telephone lines;, rank3},
  language      = {English},
}

@InProceedings{20123315333260,
  author    = {Rabbi, Fazle and MacCaull, Wendy},
  title     = {Model driven workflow development with T},
  year      = {2012},
  volume    = {112 LNBIP},
  pages     = {265 - 279},
  address   = {Gdansk, Poland},
  note      = {Abstract process;Adaptive software systems;Domain specific languages;Model-driven;Model-driven Engineering;Tool support;Transformation methods;Workflow management systems;Workflow process;},
  abstract  = {Model Driven Engineering (MDE) refers to the systematic use of models as primary engineering artifacts throughout the engineering lifecycle. MDE has a lot of potential to make adaptive software systems, but it requires maturity and tool support. Here we present a domain specific language, called T <inf>&squ;</inf> (pronounced as T-Square) for writing workflow process specifications which allows us to write procedural statements for tasks and branch conditions, to query an ontology and to declare user interfaces. We apply transformation methods to generate executable software from the abstract process specifications. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, SpringerLink, excluidos},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  key       = {Models},
  keywords  = {Adaptive systems;Information systems;Ontology;Specifications;Technical presentations;User interfaces;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-31069-0_23},
}

@InProceedings{20151300684113,
  author    = {Basso, Fabio P. and Werner, Claudia M.L. and Oliveira, Toacy C.},
  title     = {Towards facilities to introduce solutions for MDE in development environments with reusable assets},
  year      = {2014},
  pages     = {195 - 202},
  address   = {San Francisco, CA, United states},
  note      = {Development environment;Domain specific languages;Model-driven Engineering;Practical experience;Reusable assets;Reuse of tasks;Supporting tool;Technical solutions;},
  abstract  = {Model Driven Engineering (MDE) is a software development paradigm that promotes improvements in productivity through reuse of software model specifications. Although much effort has been dedicated for more than ten years, MDE has not achieved expressive use. In this paper we address the problem of a lack of a knowledge base about MDE-based solutions, a reason that hampers MDE in practice. To surpass it we propose a domain specific language named RAS++ that represents these solutions as reusable assets. Assets are composed by reuse structures and semantics for the execution of technical solutions for Automated Software Engineering, fostering the integration of tasks for MDE in development environments. Facilities are introduced through some supporting tools: one to design reusable assets and other to integrate them in target development environments. Practical experiences have proven to be promising, suggesting that reusable assets promote some benefits not allowed by other approaches, such as the possibility of a distributed base of knowledge for ASE solutions. &copy; 2014 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {Proceedings of the 2014 IEEE 15th International Conference on Information Reuse and Integration, IEEE IRI 2014},
  key       = {Software design},
  keywords  = {Computer programming languages;Computer software reusability;Information use;Knowledge based systems;Problem oriented languages;Semantics;Software engineering;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/IRI.2014.7051890},
}

@Article{20152600982656,
  author        = {Blouin, Arnaud and Moha, Naouel and Baudry, Benoit and Sahraoui, Houari and Jezequel, Jean-Marc},
  title         = {Assessing the use of slicing-based visualizing techniques on the understanding of large metamodels},
  journal       = {Information and Software Technology},
  year          = {2015},
  volume        = {62},
  number        = {1},
  pages         = {124 - 142},
  note          = {Class diagrams;Domain specific languages;Interactive navigations;Interactive visualization tool;Interactive visualizations;Meta model;Model slicing;Model-driven Engineering;},
  __markedentry = {[Neto:5]},
  abstract      = {Context: Metamodels are cornerstones of various metamodeling activities. Such activities consist of, for instance, transforming models into code or comparing metamodels. These activities thus require a good understanding of a metamodel and/or its parts. Current metamodel editing tools are based on standard interactive visualization features, such as physical zooms. Objective: However, as soon as metamodels become large, navigating through large metamodels becomes a tedious task that hinders their understanding. So, a real need to support metamodel comprehension appears. Method: In this work we promote the use of model slicing techniques to build interactive visualization tools for metamodels. Model slicing is a model comprehension technique inspired by program slicing. We show how the use of Kompren, a domain-specific language for defining model slicers, can ease the development of such interactive visualization features. Results: We specifically make four main contributions. First, the proposed interactive visualization techniques permit users to focus on metamodel elements of interest, which aims at improving the understandability. Second, these proposed techniques are developed based on model slicing, a model comprehension technique that involves extracting a subset of model elements of interest. Third, we develop a metamodel visualizer, called Explen, embedding the proposed interactive visualization techniques. Fourth, we conducted experiments. showing that Explen significantly outperforms EcoreTools, in terms of time, correctness, and navigation effort, on metamodeling tasks. Conclusion: The results of the experiments, in favor of Explen, show that improving metamodel understanding can be done using slicing-based interactive navigation features. &copy; 2015 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {09505849},
  key           = {Visualization},
  keywords      = {Computer programming languages;Flow visualization;Human computer interaction;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.infsof.2015.02.007},
}

@InProceedings{20150900591783,
  author    = {Vallejo, Paola and Kerboeuf, Mickael and Babau, Jean-Philippe},
  title     = {Specification of a legacy tool by means of a dependency graph to improve its reusability},
  year      = {2013},
  volume    = {1090},
  pages     = {80 - 87},
  address   = {Miami, FL, United states},
  note      = {Co-evolution;Code Generation;Dependency graphs;DSML;Meta model;Meta-model transformations;Model migrations;Position papers;},
  abstract  = {This position paper, investigates a way to improve the reusability of legacy tools in specific contexts (defined by specific metamodels). The approach is based on a dedicated language for co-evolution, called Modif. Its associated process involves two model migrations. The first one (Migration), allows to put data under the scope of a legacy tool. The second one (Reverse Migration), allows to put the legacy tool's output back into the original specific context. The approach is generalized by introducing the notion of dependency graph. It specifies the relations between the legacy tool's input and the legacy tool's output. The dependency graph is then used to address some complexities of the Reverse Migration. The improvement is illustrated by the reuse of a attener tool defined on a specific metamodel of FSM (finite state machines). &copy; 2013 for the individual papers by the papers' authors.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Reusability},
  keywords  = {Computational linguistics;Logic circuits;},
  language  = {English},
}

@InProceedings{20142317794126,
  author        = {James, Philip and Moller, Faron and Nguyen, Hoang Nga and Roggenbach, Markus and Schneider, Steve and Treharne, Helen and Trumble, Matthew and Williams, David},
  title         = {Verification of scheme plans using CSPB},
  year          = {2014},
  volume        = {8368 LNCS},
  pages         = {189 - 204},
  address       = {Madrid, Spain},
  note          = {Abstraction techniques;Domain specific languages;Formal model;Graphical tools;Modelling language;Safety property;Safety verification;},
  __markedentry = {[Neto:5]},
  abstract      = {The paper presents a tool-supported approach to graphically editing scheme plans and their safety verification. The graphical tool is based on a Domain Specific Language which is used as the basis for transformation to a CSP&par;B formal model of a scheme plan. The models produced utilise a variety of abstraction techniques that make the analysis of large scale plans feasible. The techniques are applicable to other modelling languages besides CSP&par;B. We use the ProB tool to ensure the safety properties of collision, derailment and run-through freedom. &copy; 2014 Springer International Publishing.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Compendex, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Formal methods},
  keywords      = {Computer programming languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-05032-4_15},
}

@InProceedings{20133716736360,
  author    = {Batarseh Dr., Ola and McGinnis Dr., Leon and Lorenz, Jim},
  title     = {MBSE supports manufacturing system design},
  year      = {2012},
  volume    = {2},
  pages     = {920 - 944},
  address   = {Rome, Italy},
  note      = {Analysis tools;Design support tools;Domain specific languages;Electronics assembly;Manufacturing domains;Model-based systems engineering (MBSE);Product-design domain;System designers;},
  abstract  = {To date, Model Based Systems Engineering (MBSE) has been deployed primarily in the product design domain. However, manufacturing system design problems are equally challenging, but there are many fewer design support tools in the hands of system designers. This paper describes how MBSE principles and methods can be used to make a powerful analysis tool readily accessible to manufacturing systems engineers. The MagicDraw<sup>TM</sup> SysML tool was used to create a domain specific language for electronics assembly, and the tool itself was customized to present an interface that was relatively easy for the manufacturing domain experts to use to create descriptions of products, resources, and processes. The domain specific language was mapped to a metamodel of the Arena<sup>TM</sup> discrete event simulation language, and the ATL&copy; model transformation tool was used to automate the generation of the an instance of a simulation model from an instance of the electronics assembly system. The use of this kind of analysis automation can reduce by up to a factor of ten the time required to develop such simulation models. &copy; 2012 by Ola Batarseh, Leon McGinnis, and Jim Lorenz. Published and used by INCOSE with permission.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {22nd Annual International Symposium of the International Council on Systems Engineering, INCOSE 2012 and the 8th Biennial European Systems Engineering Conference 2012, EuSEC 2012},
  key       = {Systems engineering},
  keywords  = {Discrete event simulation;Manufacture;Product design;Systems analysis;Tools;},
  language  = {English},
}

@InProceedings{20140417237561,
  author        = {Unutulmaz, Ahmet and Dundar, Gunhan and Fernandez, Francisco V.},
  title         = {Template coding with LDS and applications of LDS in EDA},
  year          = {2014},
  volume        = {78},
  number        = {1},
  pages         = {137 - 151},
  note          = {Analog layout;Circuit synthesis;Hybrid template language;Layout description script;Layout templates;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents the layout description script (LDS), which is a domain specific language intended to code layout templates to be used for layout-aware circuit synthesis. LDS supports both sequential and constraint programming and is suitable for both manual coding and automatic code generation. LDS is compared with previous approaches related to layout description. Code samples are given for alignment, abutment, symmetry, and similar constraints. Also, implementation of the LDS compiler is discussed and a methodology for handling complex constraints is presented. Due to its support for constraint programming, it is possible to constrain topological representations and even combine them. It is also possible to combine and constrain placement and routing in an LDS template. Finally, a capture tool has been implemented. This tool is designed to extract a template from an expert-drawn layout. Capture converts a data structure extracted through a guided user interface into a template. This tool highlights the compatibility of LDS with electronic design automation. &copy; 2013 Springer Science+Business Media New York.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {09251030},
  journal       = {Analog Integrated Circuits and Signal Processing},
  key           = {Tools},
  keywords      = {Computer programming languages;Constraint theory;User interfaces;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/s10470-013-0213-9},
}

@InProceedings{20160101744565,
  title     = {9th International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2014},
  year      = {2015},
  volume    = {551},
  pages     = {1 - 168},
  address   = {Lisbon, Portugal},
  abstract  = {The proceedings contain 11 papers. The special focus in this conference is on Evaluation of Novel Approaches to Software Engineering. The topics include: Reducing the level of complexity of working with model transformations; learning from the current status of agile adoption; using a domain specific language for lightweight model-driven development; a passive approach for protocols; experiences of use of a multi-domain tool for collaborative software engineering tasks; taking seriously software projects inception through games; natural language generation approach for automated generation of test cases from logical specification of requirements; visualization, simulation and validation for cyber-virtual systems and mobile application estimate the design phase.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  keywords  = {rank5},
  language  = {English},
}

@Article{20121514933149,
  author        = {Edge, Michael E. and Falcone Sampaio, Pedro R.},
  title         = {The design of FFML: A rule-based policy modelling language for proactive fraud management in financial data streams},
  journal       = {Expert Systems with Applications},
  year          = {2012},
  volume        = {39},
  number        = {11},
  pages         = {9966 - 9985},
  note          = {Active monitoring;Ad hoc security;Assistive tool;Bottom lines;Brand image;Conceptual levels;Customer services;Data stream;Domain specific languages;Executable codes;Financial data;Financial information systems;Financial institution;Financial loss;Financial service;Fraud detection;Fraud detection system;Fraudsters;Information models;Management policy;Modelling language;Multi-channel;New high;Policy mappings;Rule based;Rule-based expert system;Transaction execution;},
  __markedentry = {[Neto:5]},
  abstract      = {Developing fraud management policies and fraud detection systems is a vital capability for financial institutions towards minimising the effect of fraud upon customer service delivery, bottom line financial losses and the adverse impact on the organisation's brand image reputation. Rapidly changing attacks in real-time financial service platforms continue to demonstrate fraudster's ability to actively re-engineer their methods in response to ad hoc security protocol deployments, and highlights the distinct gap between the speed of transaction execution within streaming financial data and corresponding fraud technology frameworks that safeguard the platform. This paper presents the design of FFML, a rule-based policy modelling language and encompassing architecture for facilitating the conceptual level expression and implementation of proactive fraud controls within multi-channel financial service platforms. It is demonstrated how a domain specific language can be used to abstract the financial platform into a data stream based information model to reduce policy modelling complexity and deployment latencies through an innovative policy mapping language usable by both expert and non-expert users. FFML is part of a comprehensive suite of assistive tools and knowledge-based systems developed to support fraud analysts' daily work of designing new high level fraud management policies, mapping into executable code of the underpinning application programming interface and deployment of active monitoring and compliance functionality within the financial platform. &copy; 2012 Elsevier Ltd. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {09574174},
  key           = {Information management},
  keywords      = {Application programming interfaces (API);Computer crime;Computer systems programming;Crime;Data communication systems;Expert systems;Finance;Information theory;Losses;Security of data;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.eswa.2012.01.143},
}

@InProceedings{20140717295378,
  author    = {Azevedo, Bruno M. and Almeida, Jose Joao},
  title     = {ABC with a UNIX flavor},
  year      = {2013},
  volume    = {29},
  pages     = {203 - 218},
  address   = {Porto, Portugal},
  note      = {ABC notation;Compiler architectures;Domain specific languages;Musical notation;Processing tools;Rule based;Scripting;Semantic transformation;},
  abstract  = {ABC is a simple, yet powerful, textual musical notation. This paper presents ABC::DT, a rule-based domain-specific language (Perl embedded), designed to simplify the creation of ABC processing tools. Inspired by the Unix philosophy, those tools intend to be simple and compositional in a Unix filters' way. From ABC::DT's rules we obtain an ABC processing tool whose main algorithm follows a traditional compiler architecture, thus consisting of three stages: 1) ABC parser (based on abcm2ps' parser), 2) ABC semantic transformation (associated with ABC attributes), 3) output generation (either a user defined or system provided ABC generator). &copy; Bruno M. Azevedo and Jose&acute; Joa&tilde;o Almeida.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {21906807},
  journal   = {OpenAccess Series in Informatics},
  key       = {UNIX},
  keywords  = {Problem oriented languages;Program compilers;Semantics;Slate;Tools;},
  language  = {English},
  url       = {http://dx.doi.org/10.4230/OASIcs.SLATE.2013.203},
}

@InProceedings{20122315081050,
  author    = {Nilsson, Anders and Hedin, Gorel},
  title     = {Metacompiling OWL ontologies},
  year      = {2012},
  volume    = {6940 LNCS},
  pages     = {354 - 366},
  address   = {Braga, Portugal},
  note      = {Application programs;Attribute grammars;Domain specific languages;Industrial robotics;OWL ontologies;},
  abstract  = {Ontologies, formal knowledge representation, and reasoning are technologies that have begun to gain substantial interest in recent years. We present a high-level declarative approach to writing application programs for specific ontologies, based on viewing the ontology as a domain-specific language. Our approach is based on declarative meta-compilation techniques. We have implemented a tool using this approach that allows typed frontends to be generated for specific ontologies, and to which the desired functionality can be added as separate aspects. Our tool makes use of the JastAdd meta-compilation system which is based on reference attribute grammars. We describe the architecture of our tool and evaluate the approach on applications in industrial robotics. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Knowledge representation},
  keywords  = {Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-28830-2_20},
}

@InProceedings{20153401194762,
  author        = {Foster, Nate and Kozen, Dexter and Milano, Matthew and Silva, Alexandra and Thompson, Laure},
  title         = {A coalgebraic decision procedure for NetKAT},
  year          = {2015},
  volume        = {2015-January},
  pages         = {343 - 355},
  address       = {Mumbai, India},
  note          = {Automata;Coalgebraic structures;Coalgebras;Domain specific languages;Implementation and optimization;Kleene algebra with tests;NetKAT;Soundness and completeness;},
  __markedentry = {[Neto:5]},
  abstract      = {NetKAT is a domain-specific language and logic for specifying and verifying network packet-processing functions. It consists of Kleene algebra with tests (KAT) augmented with primitives for testing and modifying packet headers and encoding network topologies. Previous work developed the design of the language and its standard semantics, proved the soundness and completeness of the logic, defined a PSPACE algorithm for deciding equivalence, and presented several practical applications. This paper develops the coalgebraic theory of NetKAT, including a specialized version of the Brzozowski derivative, and presents a new efficient algorithm for deciding the equational theory using bisimulation. The coalgebraic structure admits an efficient sparse representation that results in a significant reduction in the size of the state space. We discuss the details of our implementation and optimizations that exploit NetKAT's equational axioms and coalgebraic structure to yield significantly improved performance. We present results from experiments demonstrating that our tool is competitive with state-of-the-art tools on several benchmarks including allpairs connectivity, loop-freedom, and translation validation. Copyright &copy; 2015 by the Association for Computing Machinery, Inc. (ACM).},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Duplicados},
  issn          = {07308566},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  key           = {Network coding},
  keywords      = {Algebra;Algorithms;Computational linguistics;Computer programming languages;Electric network topology;Packet networks;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2676726.2677011},
}

@InProceedings{20161702310982,
  author        = {Jongmans, Sung-Shik T. Q. and Arbab, Farhad},
  title         = {PrDK: Protocol programming with automata},
  year          = {2016},
  volume        = {9636},
  pages         = {547 - 552},
  address       = {Eindhoven, Netherlands},
  note          = {Domain specific languages;General purpose languages;NAS parallel benchmarks;Theoretic semantics;},
  __markedentry = {[Neto:5]},
  abstract      = {We present PrDK: a development kit for programming protocols. PrDK is based on syntactic separation of process code, presumably written in an existing general-purpose language, and protocol code, written in a domain-specific language with explicit, high-level elements of syntax for programming protocols. PrDK supports two complementary syntaxes (one graphical, one textual) with a common automata-theoretic semantics. As a tool for construction of systems, PrDK consists of syntax editors, a translator, a parser, an interpreter, and a compiler into Java. Performance in the NAS Parallel Benchmarks is promising. &copy; Springer-Verlag Berlin Heidelberg 2016.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Syntactics},
  keywords      = {Automata theory;Benchmarking;Computational linguistics;Computer programming languages;High level languages;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-662-49674-9_33},
}

@InProceedings{20124715683512,
  author        = {Tesoriero, Ricardo and Gallud, Jose A. and Villanueva, Pedro G. and Sebastian, Gabriel},
  title         = {Interaction modeling on heterogeneous spaces},
  year          = {2012},
  pages         = {King Abdulaziz University (KAU); University of Castilla-La Mancha (UCLM) -},
  address       = {Elche, Alicante, Spain},
  note          = {Abstract syntax;Concrete syntax;Domain specific languages;Interaction modeling;Interactive spaces;Location-aware application;Meta model;Model based development;Model driven architectures;Model spaces;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents a metamodel that defines an abstract syntax to represent the interaction between entities and their environment through heterogeneous interactive spaces. It also presents a concrete syntax that defines a domain specific language supported by a case tool that allows developers to model space specific concerns independently from the rest of the application. Copyright 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Syntactics},
  keywords      = {Human computer interaction;User interfaces;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2379636.2379672},
}

@InProceedings{20124915762776,
  title     = {Business Process Model and Notation - 4th International Workshop, BPMN 2012, Proceedings},
  year      = {2012},
  volume    = {125 LNBIP},
  pages     = {MID; Signavio; Sparx Systems; BPM and O, Akademie Enabling BPM. And People.; City of Vienna -},
  address   = {Vienna, Austria},
  abstract  = {The proceedings contain 10 papers. The topics discussed include: a platform for research on process model collections; aspect oriented business process modeling with precedence; event-based gateways: open questions and inconsistencies; a BPMN extension for including data quality requirements in business process modeling; BPMN4TOSCA: a domain-specific language to model management plans for composite applications; extending BPMN 2.0 for modeling the combination of activities that involve data constraints; comparison of BPMN2 diagrams; a tool for animating BPMN token flow; and towards SecureBPMN - aligning BPMN with the information assurance and security domain.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  keywords  = {rank5},
  language  = {English},
}

@Article{20151300681984,
  author    = {Cunha, Jacome and Fernandes, Joao Paulo and Mendes, Jorge and Saraiva, Joao},
  title     = {Spreadsheet engineering},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year      = {2015},
  volume    = {8606},
  pages     = {246 - 299},
  note      = {Building blockes;Data refinements;Database technique;Domain specific languages;Empirical studies;Laboratory sessions;Spreadsheet development;Spreadsheet engineering;},
  abstract  = {These tutorial notes present a methodology for spreadsheet engineering. First, we present data mining and database techniques to reason about spreadsheet data. These techniques are used to compute relationships between spreadsheet elements (cells/columns/rows), which are later used to infer a model defining the business logic of the spreadsheet. Such a model of a spreadsheet data is a visual domain specific language that we embed in a well-known spreadsheet system. The embedded model is the building block to define techniques for model-driven spreadsheet development, where advanced techniques are used to guarantee the model-instance synchronization. In this modeldriven environment, any user data update has to follow the model-instance conformance relation, thus, guiding spreadsheet users to introduce correct data. Data refinement techniques are used to synchronize models and instances after users update/evolve the model. These notes briefly describe ourmodel-driven spreadsheet environment, the MDSheet environment, that implements the presented methodology. To evaluate both proposed techniques and the MDSheet tool, we have conducted, in laboratory sessions, an empirical study with the summer school participants. The results of this study are presented in these notes. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  key       = {Spreadsheets},
  keywords  = {Computer programming languages;Data mining;Problem oriented languages;Visual languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-15940-9_6},
}

@InProceedings{20162902597316,
  title     = {12th International Baltic Conference on Databases and Information Systems, DB and IS 2016},
  year      = {2016},
  volume    = {615},
  pages     = {1 - 380},
  address   = {Riga, Latvia},
  abstract  = {The proceedings contain 25 papers. The special focus in this conference is on Ontology, Conceptual Modeling, Databases, Tools, Technologies, Decision Support Systems and Data Mining. The topics include: Towards self-explanatory ontology visualization with contextual verbalization; self-service ad-hoc querying using controlled natural language; database to ontology mapping patterns in RDB2OWL lite; models and model transformations within web applications; metamodel specialization for DSL tool building; DSML tool building platform in web; algorithms for extracting mental activity phases from heart beat rate streams; scheduling approach for enhancing quality of service in real-time DBMS; a comparative analysis of algorithms for mining frequent itemsets; a webGIS application for cloud storm monitoring; self-management of information systems; on the smart spaces approach to semantic-driven design of service-oriented information systems; conclusions from the evaluation of virtual machine based high resolution display wall system; the enterprise model frame for supporting security requirement elicitation from business processes; knowledge management performance measurement; a study on immediate automatic usability evaluation of web application user interfaces; model-based testing of real-time distributed systems; detection of multiple implicit features per sentence in consumer review data; web news sentence searching using linguistic graph similarity; heuristic method to improve systematic collection of terminology; the application of optimal topic sequence in adaptive e-learning systems and initial steps towards the development of formal method for evaluation of concept map complexity from the systems viewpoint.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20154501511163,
  author    = {Gunalp, Ozan and Escoffier, Clement and Lalanda, Philippe},
  title     = {Demo abstract: Reproducible deployment of pervasive applications},
  year      = {2015},
  pages     = {211 - 213},
  address   = {St. Louis, MO, United states},
  note      = {Deployment scenarios;Domain specific languages;Dynamic deployment;Pervasive applications;Pervasive systems;Software deployment;Stringent requirement;Traditional approaches;},
  abstract  = {Pervasive systems present stringent requirements that make software deployment especially challenging. The unknown and fluctuating environment in which pervasive applications are executed discards traditional approaches. As a result, there is an increasing need for a reproducible and dynamic deployment process. In last years, we developed several industrial pervasive platforms and applications. Based on these experiences we propose Rondo, a tool suite for deploying pervasive applications. Rondo includes a domain-specific language for declaratively describing applications, a deployment manager that can dynamically apply these descriptions and development tools for helping the description of applications. In this paper we present this tool suite and a set of deployment scenarios in which we validated our approach, including a web framework and a home automation platform. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, IEEEDSML, excluidos},
  journal   = {2015 IEEE International Conference on Pervasive Computing and Communication Workshops, PerCom Workshops 2015},
  key       = {Ubiquitous computing},
  keywords  = {Computer aided software engineering;Computer programming languages;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/PERCOMW.2015.7134025},
}

@InProceedings{20143017990613,
  author    = {Bache, Emily and Bache, Geoffrey},
  title     = {Specification by example with gui tests - how could that work?},
  year      = {2014},
  volume    = {179 LNBIP},
  pages     = {320 - 326},
  address   = {Rome, Italy},
  note      = {ATDD;Capture-replay;Crew management systems;Domain specific languages;Experience report;GUI testing;Record-replay;},
  abstract  = {Specification by Example is a collaborative method for developing software. It involves a workshop where people representing various roles and viewpoints discuss what is to be built, and come up with concrete example scenarios. These scenarios later form the basis for automated (functional) acceptance tests, and are sometimes called "Living Documentation", as they are written in a Domain Specific Language and can be read by non-programmers. GUI testing has traditionally used a record-replay paradigm that requires the user interface exists before the tests can be created, and hence have been considered incompatible with a Specification by Example approach. In this experience report we will discuss how we have overcome this apparent contradiction at Jeppesen, and relate an experience using the tool TextTest for GUI testing of Jeppesen's next-generation Crew Management System. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {ACM, Scopus, excluidos},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  key       = {Acceptance tests},
  keywords  = {Computer programming languages;Software engineering;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-06862-6},
}

@InProceedings{20123715418237,
  author        = {Sohr, Karsten and Kuhlmann, Mirco and Gogolla, Martin and Hu, Hongxin and Ahn, Gail-Joon},
  title         = {Comprehensive two-level analysis of role-based delegation and revocation policies with UML and OCL},
  year          = {2012},
  volume        = {54},
  number        = {12},
  pages         = {1396 - 1417},
  note          = {Delegation;OCL;RBAC;Revocation;UML;},
  __markedentry = {[Neto:5]},
  abstract      = {Context: Role-based access control (RBAC) has become the de facto standard for access management in various large-scale organizations. Often role-based policies must implement organizational rules to satisfy compliance or authorization requirements, e.g., the principle of separation of duty (SoD). To provide business continuity, organizations should also support the delegation of access rights and roles, respectively. This, however, makes access control more complex and error-prone, in particular, when delegation concepts interplay with SoD rules. Objective: A systematic way to specify and validate access control policies consisting of organizational rules such as SoD as well as delegation and revocation rules shall be developed. A domain-specific language for RBAC as well as delegation concepts shall be made available. Method: In this paper, we present an approach to the precise specification and validation of role-based policies based on UML and OCL. We significantly extend our earlier work, which proposed a UML-based domain-specific language for RBAC, by supporting delegation and revocation concepts. Result: We show the appropriateness of our approach by applying it to a banking application. In particular, we give three scenarios for validating the interplay between SoD rules and delegation/revocation. Conclusion: To the best of our knowledge, this is the first attempt to formalize advanced RBAC concepts, such as history-based SoD as well as various delegation and revocation schemes, with UML and OCL. With the rich tool support of UML, we believe our work can be employed to validate and implement real-world role-based policies. &copy; 2012 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {09505849},
  journal       = {Information and Software Technology},
  key           = {Access control},
  keywords      = {Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.infsof.2012.06.008},
}

@InProceedings{20134216854440,
  author        = {Sarimbekov, Aibek and Zheng, Yudi and Ansaloni, Danilo and Bulej, Lubomir and Marek, Luka and Binder, Walter and Tuma, Petr and Qi, Zhengwei},
  title         = {Productive development of dynamic program analysis tools with DiSL},
  year          = {2013},
  pages         = {11 - 19},
  address       = {Melbourne, VIC, Australia},
  note          = {Bytecode instrumentation;Controlled experiment;Development productivity;Domain specific languages;Dynamic program analysis;High-level abstraction;High-level programming;Program instrumentations;},
  __markedentry = {[Neto:5]},
  abstract      = {Dynamic program analysis tools serve many important software engineering tasks such as profiling, debugging, testing, program comprehension, and reverse engineering. Many dynamic analysis tools rely on program instrumentation and are implemented using low-level instrumentation libraries, resulting in tedious and error-prone tool development. The recently released Domain-Specific Language for Instrumentation (DiSL) was designed to boost the productivity of tool developers targeting the Java Virtual Machine, without impairing the performance of the resulting tools. DiSL offers high-level programming abstractions especially designed for development of instrumentation-based dynamic analysis tools. In this paper, we present a controlled experiment aimed at quantifying the impact of the DiSL programming model and high-level abstractions on the development of dynamic program analysis instrumentations. The experiment results show that compared with a prevailing, state-of-the-art instrumentation library, the DiSL users were able to complete instrumentation development tasks faster, and with more correct results. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings of the Australian Software Engineering Conference, ASWEC},
  key           = {Instruments},
  keywords      = {Computer aided software engineering;Computer programming;Experiments;Problem oriented languages;Productivity;Reverse engineering;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ASWEC.2013.12},
}

@InProceedings{20124815732189,
  title     = {Computer Applications for Software Engineering, Disaster Recovery, and Business Continuity - International Conferences, ASEA and DRBC 2012, Held in Conjunction with GST 2012, Proceedings},
  year      = {2012},
  volume    = {340 CCIS},
  address   = {Jeju Island, Korea, Republic of},
  abstract  = {The proceedings contain 62 papers. The topics discussed include: impact on realistic mobility model for aircraft ad hoc networks; technology network model using bipartite social network analysis; mobile application development using component features and inheritance; view, level and fragment: commonalities in 'Architecture 101' and software modelling; highly analysable, reusable, and realisable architectural designs with XCD; ARSL: a domain specific language for aircraft separation minima determination; regression testing of object-oriented software: a technique based on use cases and associated tool; development of an instant meeting Android application using Wi-Fi direct APIs; developer support for understanding preprocessor macro expansions; towards building method level maintainability models based on expert evaluations; and a study on the improved stability of inverter through history management of semiconductor elements for power supply.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20160101766113,
  author    = {Sakellariou, Ilias and Dranidis, Dimitris and Ntika, Marina and Kefalas, Petros},
  title     = {Stream X-machines for agent simulation test case generation},
  year      = {2015},
  volume    = {9494},
  pages     = {37 - 57},
  address   = {Lisbon, Portugal},
  note      = {Agent based simulation;Agent simulation platforms;Automated test case generation;Domain specific languages;Executable specifications;Multi agent simulation;NetLogo;Test case generation;},
  abstract  = {Applying the Stream X-Machine formal method in the development of multi-agent simulations has a number of significant advantages, since it combines the power of executable specifications and test case generation. The present work supports this argument by reporting on the combined use of two tools that involve Stream X-Machines (SXM): the first is a domain specific language for effortlessly encoding agent behaviour using SXMs in a well known agent simulation platform. The second tool, supports among other things, automated test case generation using SXMs. The main benefits of using the specific formal approach in such a practical setting is that it offers a clear intuitive way of specifying agent behaviour and the automated generation of &ldquo;agent simulation test scenarios&rdquo; that can be used for validation. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Formal methods},
  keywords  = {Artificial intelligence;Computer hardware description languages;Computer programming languages;Multi agent systems;Problem oriented languages;Testing;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-27947-3_3},
}

@InProceedings{20140317202765,
  author    = {Artho, Cyrille Valentin and Biere, Armin and Hagiya, Masami and Platon, Eric and Seidl, Martina and Tanabe, Yoshinori and Yamamoto, Mitsuharu},
  title     = {Modbat: A model-based API tester for event-driven systems},
  year      = {2013},
  volume    = {8244 LNCS},
  pages     = {112 - 128},
  address   = {Haifa, Israel},
  note      = {Abstract modeling;Domain specific languages;Event-driven system;Model based testing;Modeling features;Modeling notation;System under test;Test case derivations;},
  abstract  = {Model-based testing derives test executions from an abstract model that describes the system behavior. However, existing approaches are not tailored to event-driven or input/output-driven systems. In particular, there is a need to support non-blocking I/O operations, or operations throwing exceptions when communication is disrupted. Our new tool "Modbat" is specialized for testing systems where these issues are common. Modbat uses extended finite-state machines to model system behavior. Unlike most existing tools, Modbat offers a domain-specific language that supports state machines and exceptions as first-class constructs. Our model notation also handles non-determinism in the system under test, and supports alternative continuations of test cases depending on the outcome of non-deterministic operations. These features allow us to model a number of interesting libraries succinctly. Our experiments show the flexibility of Modbat and how language support for model features benefits their correct use. &copy; 2013 Springer International Publishing Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Software testing},
  keywords  = {Problem oriented languages;Tools;Verification;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-03077-7-8},
}

@InProceedings{20142517844422,
  author        = {Wu, Shaoqun and Fitzgerald, Alannah and Witten, Ian H.},
  title         = {Second language learning in the context of MOOCs},
  year          = {2014},
  volume        = {1},
  pages         = {354 - 359},
  address       = {Barcelona, Spain},
  note          = {English for academic purposes;Language learning;MOOCs;Open educational resources;Second language;},
  __markedentry = {[Neto:5]},
  abstract      = {Massive Open Online Courses are becoming popular educational vehicles through which universities reach out to non-traditional audiences. Many enrolees hail from other countries and cultures, and struggle to cope with the English language in which these courses are invariably offered. Moreover, most such learners have a strong desire and motivation to extend their knowledge of academic English, particularly in the specific area addressed by the course. Online courses provide a compelling opportunity for domain-specific language learning. They supply a large corpus of interesting linguistic material relevant to a particular area, including supplementary images (slides), audio and video. We contend that this corpus can be automatically analysed, enriched, and transformed into a resource that learners can browse and query in order to extend their ability to understand the language used, and help them express themselves more fluently and eloquently in that domain. To illustrate this idea, an existing online corpus-based language learning tool (FLAX) is applied to a Coursera MOOC entitled Virology 1: How Viruses Work, offered by Columbia University.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {CSEDU 2014 - Proceedings of the 6th International Conference on Computer Supported Education},
  key           = {E-learning},
  keywords      = {Education;Flax;Linen;Precipitation (meteorology);Problem oriented languages;Yarn;, rank3},
  language      = {English},
}

@InProceedings{20123215325275,
  author    = {Prahofer, Herbert and Hurnaus, Dominik},
  title     = {Leveraging formal verification techniques for design-time animation of reactive control programs},
  year      = {2012},
  pages     = {293 - 300},
  address   = {Baltimore, MD, United states},
  note      = {Conducting tests;Control program;Design time;Domain specific languages;End user programmers;End user programming;End users;Formal verifications;High demand;Industrial automation;Intuitive understanding;Reactive control;Verification algorithms;Verification techniques;},
  abstract  = {In industrial automation, end users, who usually have no or only limited programming expertise, often need tochange and adapt the control program at hand. This results in high demands on end-user programminenvironments with respect to supporting, guiding, ansupervising end users. In the project MONACO, wdeveloped a domain-specific language and respectivetools for end-user programmers. In particular, wdeveloped a verification technique and semantic assistance tools for preventing end users from introducingsemantic errors that violate specified contracts andconstraints. In this paper, we present a further tool for supporting end users. The knowledge derived in the verification algorithm about states at particular codepositions is leveraged in a design-time animation toolwhich displays the possible states of the machine. Hencean end user can gain an intuitive understanding of thprogram and assess the consequences of program changesalready at design time and without conducting test run.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {Proceedings of the IASTED International Conference on Human-Computer Interaction, HCI 2012},
  key       = {Human computer interaction},
  keywords  = {Animation;Computer programming;Design;Knowledge management;Model checking;Problem oriented languages;Semantics;Software testing;},
  language  = {English},
  url       = {http://dx.doi.org/10.2316/P.2012.772-016},
}

@InProceedings{20155201717727,
  author        = {Sergey, Ilya and Nanevski, Aleksandar and Banerjee, Anindya},
  title         = {Mechanized verification of fine-grained concurrent programs},
  year          = {2015},
  volume        = {50},
  number        = {6},
  pages         = {77 - 87},
  note          = {Concurrency;Dependent types;Mechanized proofs;Program Verification;Separation logic;},
  __markedentry = {[Neto:5]},
  abstract      = {Efficient concurrent programs and data structures rarely employ coarse-grained synchronization mechanisms (i.e., locks); instead, they implement custom synchronization patterns via fine-grained primitives, such as compare-and-swap. Due to sophisticated interference scenarios between threads, reasoning about such programs is challenging and error-prone, and can benefit from mechanization. In this paper, we present the first completely formalized framework for mechanized verification of full functional correctness of fine-grained concurrent programs. Our tool is based on the recently proposed program logic FCSL. It is implemented as an embedded domain-specific language in the dependently-typed language of the Coq proof assistant, and is powerful enough to reason about programming features such as higher-order functions and local thread spawning. By incorporating a uniform concurrency model, based on state-transition systems and partial commutative monoids, FCSL makes it possible to build proofs about concurrent libraries in a thread-local, compositional way, thus facilitating scalability and reuse: libraries are verified just once, and their specifi-cations are used ubiquitously in client-side reasoning. We illustrate the proof layout in FCSL by example, and report on our experience of using FCSL to verify a number of concurrent programs. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {15232867},
  journal       = {ACM SIGPLAN Notices},
  key           = {Concurrency control},
  keywords      = {Computational linguistics;Computer programming languages;Formal logic;Graphical user interfaces;Libraries;Machinery;Problem oriented languages;Theorem proving;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2737924.2737964},
}

@InProceedings{20155201732790,
  author        = {Sergey, Ilya and Nanevski, Aleksandar and Banerjee, Anindya},
  title         = {Mechanized verification of fine-grained concurrent programs},
  year          = {2015},
  volume        = {2015-June},
  pages         = {77 - 87},
  address       = {Portland, OR, United states},
  note          = {Concurrency;Dependent types;Mechanized proofs;Program Verification;Separation logic;},
  __markedentry = {[Neto:5]},
  abstract      = {Efficient concurrent programs and data structures rarely employ coarse-grained synchronization mechanisms (i.e., locks); instead, they implement custom synchronization patterns via fine-grained primitives, such as compare-and-swap. Due to sophisticated interference scenarios between threads, reasoning about such programs is challenging and error-prone, and can benefit from mechanization. In this paper, we present the first completely formalized framework for mechanized verification of full functional correctness of fine-grained concurrent programs. Our tool is based on the recently proposed program logic FCSL. It is implemented as an embedded domain-specific language in the dependently-typed language of the Coq proof assistant, and is powerful enough to reason about programming features such as higher-order functions and local thread spawning. By incorporating a uniform concurrency model, based on state-transition systems and partial commutative monoids, FCSL makes it possible to build proofs about concurrent libraries in a thread-local, compositional way, thus facilitating scalability and reuse: libraries are verified just once, and their specifications are used ubiquitously in client-side reasoning. We illustrate the proof layout in FCSL by example, and report on our experience of using FCSL to verify a number of concurrent programs. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  key           = {Concurrency control},
  keywords      = {Computational linguistics;Computer programming languages;Formal logic;Graphical user interfaces;Libraries;Machinery;Problem oriented languages;Theorem proving;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2737924.2737964},
}

@InProceedings{20130515966438,
  author        = {Schivo, Stefano and Scholma, Jetse and Wanders, Brend and Camacho, Ricardo A. Urquidi and Van Der Vet, Paul E. and Karperien, Marcel and Langerak, Rom and Van De Pol, Jaco and Post, Janine N.},
  title         = {Modelling biological pathway dynamics with Timed Automata},
  year          = {2012},
  pages         = {447 - 453},
  address       = {Larnaca, Cyprus},
  note          = {Biological cells;Biological interactions;Biological networks;Biological pathways;Cell behaviours;Complex interaction;Discretizations;Domain specific languages;Dynamic behaviours;Event model;Executable model;Expressive power;Formal Semantics;Growth factor;Signalling molecules;Signalling network;Signalling pathways;Timed Automata;Uppaal model checkers;User friendly interface;},
  __markedentry = {[Neto:5]},
  abstract      = {When analysing complex interaction networks occurring in biological cells, a biologist needs computational support in order to understand the effects of signalling molecules (e.g. growth factors, drugs). ANIMO (Analysis of Networks with Interactive MOdelling) is a tool that allows the user to create and explore executable models of biological networks, helping to derive hypotheses and to plan wet-lab experiments. The tool is based on the formalism of Timed Automata, which can be analysed via the UPPAAL model checker. Thanks to Timed Automata, we can provide a formal semantics for the domain-specific language used to represent signalling networks. This enforces precision and uniformity in the definition of signalling pathways, contributing to the integration of signalling event models into complex, crosstalk-driven networks. We propose an approach to discretization of reaction kinetics that allows us to efficiently use UPPAAL as the computational engine to explore the dynamic cell behaviour. A user friendly interface makes the use of Timed Automata completely transparent to the biologist, while keeping the expressive power intact. This allows to define relatively simple, yet faithful models of complex biological interactions. The resulting timed behaviour is displayed graphically, allowing for an intuitive and interactive modelling experience. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {IEEE 12th International Conference on BioInformatics and BioEngineering, BIBE 2012},
  key           = {Automata theory},
  keywords      = {Behavioral research;Bioinformatics;Model checking;Models;Problem oriented languages;Reaction kinetics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/BIBE.2012.6399719},
}

@InProceedings{20161402189735,
  author    = {Bautista, Efrain and La Serna, Nora},
  title     = {An MDE-based graphical tool for the validation of MySQL replication models},
  year      = {2015},
  address   = {Arequipa, Peru},
  note      = {Automatic validation;Error prones;Errors correction;GraphicaL model;Graphical tools;MicroSoft;MySQL Replication;Replication models;},
  abstract  = {At modeling level, diagramming tools such as Microsoft Visio are used to design MySQL replication models. However, this type of tools do not allow validating if the MySQL replication model is free of errors, showing errors if exists. Thus, we can have erroneous documentation of the MySQL replication models. Due to the lack of this feature, this is done manually, which becomes a tedious task, time consuming and error prone. This paper proposes a MDE-based graphical modeling tool under the Eclipse platform for the automatic validation of MySQL replication models. In addition, once a model has been validated, the tool is capable of generating the mysqlreplicate commands of configuration. The results of the experiments for the errors correction of MySQL replication models with 25 servers demonstrate that by using the proposed tool the time is reduced in more than 87% compared with the tool Microsoft Visio 2013. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSL, excluidos},
  journal   = {Proceedings - 2015 41st Latin American Computing Conference, CLEI 2015},
  key       = {Errors},
  keywords  = {DSL;Windows operating system;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/CLEI.2015.7360009},
}

@Article{20122115055821,
  author    = {Garcia-Diaz, V. and G-Bustelo, B.C. Pelayo and Sanjuan-Martinez, O. and Valdez, E.R. Nunez and Lovelle, J.M. Cueva},
  title     = {MCTest: Towards an improvement of match algorithms for models},
  journal   = {IET Software},
  year      = {2012},
  volume    = {6},
  number    = {2},
  pages     = {127 - 139},
  note      = {Domain specific languages;Eclipse modelling frameworks;Meta model;Model-driven Engineering;Modeling project;Software systems;},
  abstract  = {Owing to the increasing importance of model-driven engineering (MDE) and the changes experienced by software systems over their life cycle, the calculation, representation and visualisation of matches and differences between two different versions of the same model are becoming more necessary and useful. This study shows the need for improvement in the algorithms for calculating the relationships between models and presents a tool to test different implementations, thus reducing the effort required to measure, compare or create new algorithms. To demonstrate the need for improvement and the framework developed, the authors have created different models that conform to the metamodel of a domain-specific language. Subsequently, the authors compared these models using the algorithms of the eclipse modelling framework (EMF) Compare tool, part of the eclipse modeling project, which is the framework of reference for MDE. Thus, in the case study, the authors tool is used to measure the quality of the comparisons performed by EMF Compare. &copy; 2012 The Institution of Engineering and Technology.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {17518806},
  key       = {Mathematical models},
  keywords  = {Algorithms;Java programming language;Problem oriented languages;Visualization;},
  language  = {English},
  url       = {http://dx.doi.org/10.1049/iet-sen.2011.0040},
}

@InProceedings{20160601908447,
  author        = {Karakoidas, Vassilios and Mitropoulos, Dimitrios and Louridas, Panos and Gousios, Georgios and Spinellis, Diomidis},
  title         = {Generating the blueprints of the Java ecosystem},
  year          = {2015},
  volume        = {2015-August},
  pages         = {510 - 513},
  address       = {Florence, Italy},
  note          = {Chidamber and Kemerer;Domain specific languages;Java;Maven;Object oriented design;Research communities;Software artifacts;Software metrics;},
  __markedentry = {[Neto:5]},
  abstract      = {Examining a large number of software artifacts can provide the research community with data regarding quality and design. We present a dataset obtained by statically analyzing 22730 jar files taken from the Maven central archive, which is the de-facto application library repository for the Java ecosystem. For our analysis we used three popular static analysis tools that calculate metrics regarding object-oriented design, program size, and package design. The dataset contains the metrics results that every tool reports for every selected jar of the ecosystem. Our dataset can be used to produce interesting research results, such as measure the domain-specific language usage. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {21601852},
  journal       = {IEEE International Working Conference on Mining Software Repositories},
  key           = {Object oriented programming},
  keywords      = {Computer programming languages;Computer software;Ecology;Ecosystems;Java programming language;Problem oriented languages;Static analysis;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/MSR.2015.76},
}

@InProceedings{20142817930685,
  author        = {Ecker, Wolfgang and Velten, Michael and Zafari, Leily and Goyal, Ajay},
  title         = {The metamodeling approach to system level synthesis},
  year          = {2014},
  pages         = {ACM-SIGDA; ECSI; EDA Consortium (EDAC); European Design and Automation Association (EDAA); IEEE Council on Electronic Design Automation (CEDA); Russian Academy of Sciences (RAS) -},
  address       = {Dresden, Germany},
  note          = {Code Generation;Design consistency;Document structure;Domain specific languages;Meta-modeling technique;Metamodeling;Specific languages;System level synthesis;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an industry proven Metamodeling based approach to System-Level-Synthesis which is seen as generic design automation strategy above today's implementation levels RTL (for digital) and Schematic Entry (for analog). The approach follows a new synthesis paradigm: The designer develops a simple domain and/or design specific language and a smart tool synthesizing implementation level models according to its needs. The overhead of making both a tool and a model pays off since the tool building is automated by code generation and reuse, both based on Metamodeling techniques. Also the focus on owns demand keeps development costs low. Finally, specification data is utilized. I.e. the domain specific language simplifies to a document structure as a table. This keeps also modeling effort low since specification content is used and no model need to be built. Furthermore, increases design consistency and thus decreases debug time. Using these concepts, single design steps have been speed up to a factor of 20x and implementations of chips (specification-to-tapeout) have been speed up to a factor of 3x. &copy; 2014 EDAA.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {15301591},
  journal       = {Proceedings -Design, Automation and Test in Europe, DATE},
  key           = {Structural design},
  keywords      = {Automation;Computer aided design;Computer programming languages;Multiprocessing systems;Network components;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.7873/DATE2014.324},
}

@Article{20143600042103,
  author        = {Puente, Gorka and Diaz, Oscar and Azanza, Maider},
  title         = {Refactoring affordances in corporate wikis: a case for the use of mind maps},
  journal       = {Enterprise Information Systems},
  year          = {2015},
  volume        = {9},
  number        = {8},
  pages         = {785 - 834},
  note          = {Affordances;Corporate wikis;FreeMind;MediaWiki;Mind maps;Refactorings;},
  __markedentry = {[Neto:5]},
  abstract      = {The organisation of corporate wikis tends to deteriorate as time goes by. Rearranging categories, structuring articles and even moving sections among articles are cumbersome tasks in current wiki engines. This discourages the layman. But, it is the layman who writes the articles, knows the wiki content and detects refactoring opportunities. Our goal is to improve the refactoring affordances of current wiki engines by providing an alternative front-end tuned to refactoring. This is achieved by (1) surfacing the structure of the wiki corpus as a mind map, and (2) conducting refactoring as mind map reshaping. To this end, we introduce WikiWhirl, a domain-specific language for wiki refactoring. WikiWhirl is supported as an extension of FreeMind, a popular mind mapping tool. In this way, refactoring operations are intuitively conducted as actions upon mind map nodes. In a refactoring session a user imports the wiki structure as a FreeMind map; next, conducts the refactoring operations on the map, and finally, the effects are saved in the wiki database. The operational semantics of the WikiWhirl operations follow refactoring good practices (e.g., authorship preservation). Results from a controlled experiment suggest that WikiWhirl outperforms MediaWiki in three main affordance enablers: understandability, productivity and fulfillment of refactoring good practices. &copy; 2013, &copy; 2013 Taylor & Francis.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {17517575},
  key           = {Schematic diagrams},
  keywords      = {Computer aided software engineering;Computer programming languages;Computer software;Engines;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1080/17517575.2013.830343},
}

@Article{20142117749949,
  author        = {Schivo, Stefano and Scholma, Jetse and Wanders, Brend and Camacho, Ricardo A.Urquidi and Van Der Vet, Paul E. and Karperien, Marcel and Langerak, Rom and Van De Pol, Jaco and Post, Janine N.},
  title         = {Modeling biological pathway dynamics with timed automata},
  journal       = {IEEE Journal of Biomedical and Health Informatics},
  year          = {2014},
  volume        = {18},
  number        = {3},
  pages         = {832 - 839},
  note          = {Complex network models;Construction of models;Domain specific languages;Dynamic behaviors;Interconnected network;Signaling pathways;Timed Automata;User friendly interface;},
  __markedentry = {[Neto:5]},
  abstract      = {Living cells are constantly subjected to a plethora of environmental stimuli that require integration into an appropriate cellular response. This integration takes place through signal transduction events that form tightly interconnected networks. The understanding of these networks requires capturing their dynamics through computational support and models. ANIMO (analysis of Networks with Interactive Modeling) is a tool that enables the construction and exploration of executable models of biological networks, helping to derive hypotheses and to plan wet-lab experiments. The tool is based on the formalism of Timed Automata, which can be analyzed via the UPPAAL model checker. Thanks to Timed Automata, we can provide a formal semantics for the domain-specific language used to represent signaling networks. This enforces precision and uniformity in the definition of signaling pathways, contributing to the integration of isolated signaling events into complex network models. We propose an approach to discretization of reaction kinetics that allows us to efficiently use UPPAAL as the computational engine to explore the dynamic behavior of the network of interest. A user-friendly interface hides the use of Timed Automata from the user, while keeping the expressive power intact. Abstraction to single-parameter kinetics speeds up construction of models that remain faithful enough to provide meaningful insight. The resulting dynamic behavior of the network components is displayed graphically, allowing for an intuitive and interactive modeling experience. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {21682194},
  key           = {Automata theory},
  keywords      = {Integration;Model checking;Models;Pigments;Problem oriented languages;Reaction kinetics;Signal transduction;Signaling;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/JBHI.2013.2292880},
}

@InProceedings{20120814792304,
  author        = {Klein, Casey and Clements, John and Dimoulas, Christos and Eastlund, Carl and Felleisen, Matthias and Flatt, Matthew and McCarthy, Jay A. and Rafkind, Jon and Sam, Tobin-Hochstadt and Findler, Robert Bruce},
  title         = {Run your research: On the effectiveness of lightweight mechanization},
  year          = {2012},
  volume        = {47},
  number        = {1},
  pages         = {285 - 296},
  note          = {Domain specific languages;Formal model;Language design;Language tools;Program analysis;Programming language;Semantic Model;Work-flows;},
  __markedentry = {[Neto:5]},
  abstract      = {Formal models serve in many roles in the programming language community. In its primary role, a model communicates the idea of a language design; the architecture of a language tool; or the essence of a program analysis. No matter which role it plays, however, a faulty model doesn't serve its purpose. One way to eliminate flaws from a model is to write it down in a mechanized formal language. It is then possible to state theorems about the model, to prove them, and to check the proofs. Over the past nine years, PLT has developed and explored a lightweight version of this approach, dubbed Redex. In a nutshell, Redex is a domain-specific language for semantic models that is embedded in the Racket programming language. The effort of creating a model in Redex is often no more burdensome than typesetting it with LaTeX; the difference is that Redex comes with tools for the semantics engineering life cycle. In this paper we report on a validation of this form of lightweight mechanization. The largest part of this validation concerns the formalization and exploration of nine ICFP 2009 papers in Redex, an effort that uncovered mistakes in all nine papers. The results suggest that Redex-based lightweight modeling is effective and easy to integrate into the work flow of a semantics engineer. This experience also suggests lessons for the developers of other mechanization tools. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {15232867},
  journal       = {ACM SIGPLAN Notices},
  key           = {Machinery},
  keywords      = {Computer programming languages;Formal languages;Mechanization;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2103621.2103691},
}

@InProceedings{20121114843704,
  author        = {Klein, Casey and Clements, John and Dimoulas, Christos and Eastlund, Carl and Felleisen, Matthias and Flatt, Matthew and McCarthy, Jay A. and Rafkind, Jon and Tobin-Hochstadt, Sam and Findler, Robert Bruce},
  title         = {Run your research: On the effectiveness of lightweight mechanization},
  year          = {2012},
  pages         = {285 - 296},
  address       = {Philadelphia, PA, United states},
  note          = {Domain specific languages;Formal model;Language design;Language tools;Program analysis;Semantic Model;Work-flows;},
  __markedentry = {[Neto:5]},
  abstract      = {Formal models serve in many roles in the programming language community. In its primary role, a model communicates the idea of a language design; the architecture of a language tool; or the essence of a program analysis. No matter which role it plays, however, a faulty model doesn't serve its purpose. One way to eliminate flaws from a model is to write it down in a mechanized formal language. It is then possible to state theorems about the model, to prove them, and to check the proofs. Over the past nine years, PLT has developed and explored a lightweight version of this approach, dubbed Redex. In a nutshell, Redex is a domain-specific language for semantic models that is embedded in the Racket programming language. The effort of creating a model in Redex is often no more burdensome than typesetting it with LaTeX; the difference is that Redex comes with tools for the semantics engineering life cycle. In this paper we report on a validation of this form of lightweight mechanization. The largest part of this validation concerns the formalization and exploration of nine ICFP 2009 papers in Redex, an effort that uncovered mistakes in all nine papers. The results suggest that Redex-based lightweight modeling is effective and easy to integrate into the work flow of a semantics engineer. This experience also suggests lessons for the developers of other mechanization tools. Copyright &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Duplicados},
  issn          = {07308566},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  key           = {Machinery},
  keywords      = {Computer programming languages;Formal languages;Mechanization;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2103656.2103691},
}

@Article{20122215059602,
  author        = {Iglberger, Klaus and Hager, Georg and Treibig, Jan and Rude, Ulrich},
  title         = {Expression templates revisited: A performance analysis of current methodologies},
  journal       = {SIAM Journal on Scientific Computing},
  year          = {2012},
  volume        = {34},
  number        = {2},
  pages         = {C42 - C69},
  note          = {Blaze;Blitz++;Boost;Eigen3;Expression templates;High performance programming;MTL4;Performance optimizations;UBLAS;},
  __markedentry = {[Neto:5]},
  abstract      = {In the last decade, expression templates (ETs) have gained a reputation as an efficient performance optimization tool for C++ codes. This reputation builds on several ET-based linear algebra frameworks focused on combining both elegant and high-performance C++ code. However, on closer examination the assumption that ETs are a performance optimization technique cannot be maintained. In this paper we compare the performance of several generations of ET-based frameworks. We analyze different ET methodologies and explain the inability of some ET implementations to deliver high performance for dense and sparse linear algebra operations. Additionally, we introduce the notion of "smart" ETs, which truly allow for a combination of high performance code with the elegance and maintainability of a domain-specific language. &copy; 2012 Society for Industrial and Applied Mathematics.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {10648275},
  key           = {Object oriented programming},
  keywords      = {Linear algebra;Maintainability;Optimization;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1137/110830125},
}

@Article{20150600497288,
  author    = {Skersys, Tomas and Pavalkis, Saulius and Lagzdinyte-Budnike, Ingrida},
  title     = {Model-driven approach and implementation of partial model-to-model transformations in a CASE tool},
  journal   = {Communications in Computer and Information Science},
  year      = {2014},
  volume    = {465},
  pages     = {260 - 271},
  note      = {Capability requirements;Development process;Drag and drop;MDA;Model driven approach;Model driven architectures;Model to model transformation;Uml profiles;},
  abstract  = {One of the main features of Model Driven Architecture is a model-to-model (M2M) transformations, which improve the overall model-driven systems development process by speeding up the development process itself and also enabling the reusability of the existing models within a single or even multiple projects. However, CASE tool-supported M2M transformations quite often lack so needed flexibility and customization options. The main goal of this paper is to present a practical model-driven approach to improve the usability of partial model-to-model transformations in a CASE tool environment. The approach is currently implemented in the CASE tool MagicDraw; however, it can be adopted by any other CASE tool that meets certain capability requirements. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {18650929},
  key       = {Software architecture},
  keywords  = {Computer aided software engineering;DSL;Reusability;Software design;},
  language  = {English},
}

@InProceedings{20160501875959,
  author    = {Silvestre, Luis},
  title     = {Automatic generation of transformations for software process tailoring},
  year      = {2015},
  volume    = {1503},
  pages     = {46 - 51},
  address   = {Ottawa, ON, Canada},
  note      = {Automatic Generation;Current transformation;Domain specific languages;Model-driven Engineering;Small software enterprise;Software company;Software industry;Software process tailoring;},
  abstract  = {Tailoring software processes is an activity that allows process engineers to adapt organizational software processes to the needs of particular projects. Model-driven engineering (MDE) has been used for tailoring software processes using models and transformations. Even though there are some proposals for automatically generating part of the transformations, they are not easily applicable in the software industry because there are still factors that jeopardize its usage in small software enterprises. First, the potential users-process engineers-do not usually have the required knowledge for writing transformations. Second, current transformation languages and tools are not simple for defining and applying tailoring transformations. Trying to deal with these challenges, this research proposes a tool-set that balances the formality required by MDE and the usability needed by the users. We define a domain-specific language for defining tailoring rules. These rules are the input for a higher-order transformation that automatically generates tailoring transformations with no direct user interaction with the code. The tool-set reduces the complexity of defining tailoring rules and allows for the automatic generation of tailoring transformations. We illustrate the application of our approach in a small Chilean software company.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Application programs},
  keywords  = {Computational linguistics;Computer programming languages;Graphical user interfaces;Problem oriented languages;Software design;Software engineering;},
  language  = {English},
}

@InProceedings{20161002077055,
  author    = {Sun, Wei-Tsun and Girault, Alain and Delaval, Gwenael},
  title     = {A formal approach for the synthesis and implementation of fault-tolerant industrial embedded systems},
  year      = {2015},
  pages     = {264 - 273},
  address   = {Siegen, Germany},
  note      = {Correct-by-construction;Discrete controller synthesis;Distributed embedded system;Distributed systems;Domain specific languages;Fault tolerant systems;Integrated circuit modeling;Processor failures;},
  abstract  = {We demonstrate the feasibility of a complete workflow to synthesize and implement correct-by-construction fault tolerant distributed embedded systems consisting of real-time periodic tasks. Correct-by-construction is provided by the use of discrete controller synthesis (DCS), a formal method thanks to which we are able to guarantee that the synthesized controlled system guarantees the functionality of its tasks even in the presence of processor failures. For this step, our workflow uses the Heptagon domain specific language and the Sigali DCS tool. The correct implementation of the resulting distributed system is a challenge, all the more since the controller itself must be tolerant to the processor failures. We achieve this step thanks to the libDGALS realtime library (1) to generate the glue code that will migrate the tasks upon processor failures, maintaining their internal state through migration, and (2) to make the synthesized controller itself fault-tolerant. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, IEEEDSML, IEEEDSL, Scopus, excluidos},
  journal   = {2015 10th IEEE International Symposium on Industrial Embedded Systems, SIES 2015 - Proceedings},
  key       = {Embedded systems},
  keywords  = {Computer programming languages;Contracts;Control systems;Controllers;Digital libraries;Energy utilization;Fault tolerance;Fault tolerant computer systems;Formal methods;Problem oriented languages;Process control;Real time systems;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SIES.2015.7185068},
}

@InProceedings{20163802810636,
  author    = {Dziwok, Stefan and Gerking, Christopher and Becker, Steffen and Thiele, Sebastian and Heinzemann, Christian and Pohlmann, Uwe},
  title     = {A tool suite for the model-driven software engineering of cyber-physical systems},
  year      = {2014},
  volume    = {16-21-November-2014},
  pages     = {715 - 718},
  address   = {Hong Kong, China},
  note      = {Cyber physical systems (CPSs);Mechatronic systems;Real time coordination;System simulations;Timed model checking;},
  abstract  = {Cyber-physical systems, e.g., autonomous cars or trains, interact with their physical environment. As a consequence, they commonly have to coordinate with other systems via complex message communication while realizing safety-critical and real-time tasks. As a result, those systems should be correct by construction. Software architects can achieve this by using the MECHATRONICUML process and language. This paper presents the MECHATRONICUML TOOL SUITE that offers unique features to support the MECHATRONICUML modeling and analyses tasks. Copyright 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  journal   = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  key       = {Real time systems},
  keywords  = {DSL;Embedded systems;Model checking;Safety engineering;Software architecture;Software engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2635868.2661665},
}

@InProceedings{20163502761133,
  author    = {Opila, J.},
  title     = {Prototyping of visualization designs of 3D vector fields using POVRay rendering engine},
  year      = {2016},
  pages     = {343 - 348},
  address   = {Opatija, Croatia},
  note      = {Domain specific languages;Exploratory visualizations;Pov rays;Scene description languages;ScPovPlot3D;Vector field visualizations;Visual data analysis;Visualization designs;},
  abstract  = {There is a persistent quest for novel methods of visualization in order to get insight into complex phenomena in variety of scientific domains. Researchers, ex. VTK team, achieved excellent results; however, some problems connected with implementation of new techniques and quality of the final images still persist. Results of inspection of number of visualization styles of 3D vector field employing POVRay ray-tracing engine are discussed, i.e. hedgehogs, oriented glyphs, streamlines, isosurface component approach and texturing design. All styles presented have been tested using water molecule model and compared concerning computing time, informativeness and general appearance. It is shown in the work that Scene Description Language (SDL), domain specific language implemented in POVRay is flexible enough to use it as a tool for fast prototyping of novel and exploratory visualization techniques. Visualizations discussed in the paper were computed using selected components of API of ScPovPlot3D, i.e. templates written in the SDL language. Results are compared to designs already implemented in VTK. &copy; 2016 Croatian Society MIPRO.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2016 - Proceedings},
  key       = {Three dimensional computer graphics},
  keywords  = {Computational linguistics;Computer programming languages;Data visualization;Engines;Microelectronics;Molecules;Problem oriented languages;Ray tracing;Rendering (computer graphics);Visualization;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/MIPRO.2016.7522164},
}

@InProceedings{20133716731528,
  author    = {Ogunshile, E. and Saaj, C. and Chhaniyara, S. and Wang, X. and Langef, C. and Findlay, R.},
  title     = {Application of model based systems engineering for an asteroid lander},
  year      = {2012},
  volume    = {10},
  pages     = {8445 - 8453},
  address   = {Naples, Italy},
  note      = {Domain specific languages;Functional modelling;Integrated development;Levels of abstraction;Model-based systems engineering;Model-based systems engineering (MBSE);Platform independent;Rapid transformations;},
  abstract  = {Surface exploration of asteroids is scientifically important for understanding of the origin and history of our solar system. Space agencies all over the world have started to launch exploration missions to asteroids. Low cost, small - sized landers with some capability to move on the surface of an asteroid would be highly suitable for in-situ observations. This paper primarily proposes on Model Based Systems Engineering (MBSE) tool to handle the functional modelling of a class of small-scaled asteroid lander that would have requirements similar to the Mobile Asteroid Surface Scout (MASCOT) mission from the German Aerospace Centre (DLR). The latter aims at developing a landing package for the Hayabusa-2 mission. In this paper, System Modelling Language (SysML) is selected as the domain-specific language, and the lander system context is developed in the integrated development environmental (IDE) of IBM Rational Rhapsody. The proposed unified functional modelling tool is platform independent. It covers a wide range of features for the lander system under consideration and proposes a clear decomposition of its functionalities. This MBSE approach can be easily adapted for other asteroid landers. Through this approach, systems engineers would make a rapid transformation from stakeholders' requirements to a functional model. To this end, the proposed MBSE approach allows systems engineers and associated stakeholders at varying levels to define a number of common and basic lander scenarios derived from different levels of abstractions of the model system under test (i.e. the MASCOT lander). Furthermore, this proposed MBSE technique offers a structured and well-formed set of script templates for the lander model execution. Thus, allowing system engineers and stakeholders the privilege to verify, test and validate all functional, systems and interfacing requirements in a timely and efficient manner at varying stages in the project lifecycle. Further, the use of the animation feature of the Rational Rhapsody IDE to engineer the acquisition of visualised levels of detail for all SysML model elements and their respective executions will be presented. Finally, to further show that the theoretical purity of the proposed MBSE approach does not mitigate against practical concerns, this approach is exemplified in a SysML model implementation of a shadow mission scenario the MASCOT lander.&copy;2012 by the International Astronautical Federation.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {00741795},
  journal   = {Proceedings of the International Astronautical Congress, IAC},
  key       = {Asteroids},
  keywords  = {Animation;Engineers;Integrodifferential equations;Problem oriented languages;Systems engineering;Tools;},
  language  = {English},
}

@InProceedings{20124515646759,
  author    = {Zalila, Faiez and Cregut, Xavier and Pantel, Marc},
  title     = {Leveraging formal verification tools for DSML users: A process modeling case study},
  year      = {2012},
  volume    = {7610 LNCS},
  number    = {PART 2},
  pages     = {329 - 343},
  address   = {Heraklion, Crete, Greece},
  note      = {Associated tool;Behavioral model;Behavioral properties;Domain language;Domain specific;Domain specific modeling languages;Formal tools;Formal verification tools;Formal verifications;Meta model;Metamodeling patterns;Model-driven Engineering;Process Modeling;Safety critical systems;Temporal extensions;User oriented;Validation and verification;},
  abstract  = {In the last decade, Model Driven Engineering (MDE) has been used to improve the development of safety critical systems by providing early Validation and Verification (V&amp;V) tools for Domain Specific Modeling Languages (DSML). Verification of behavioral models is mainly addressed by translating domain specific models to formal verification dedicated languages in order to use the sophisticated associated tools such as model-checkers. This approach has been successfully applied in many different contexts, but it has a major drawback: the user has to interact with the formal tools. In this paper, we present an illustrated approach that allows the designer to formally express the expected behavioral properties using a user oriented language - a temporal extension of OCL -, that is automatically translated into the formal language; and then to get feedback from the assessment of these properties using its domain language without having to deal with the formal verification language nor with the underlying translational semantics. This work is based on the metamodeling pattern for executable DSML that extends the DSML metamodel to integrate concerns related to execution and behavior. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Translation (languages)},
  keywords  = {Computer aided software engineering;Embedded systems;Formal languages;Model checking;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-34032-1_34},
}

@Article{20154101365722,
  author    = {Tafazzoli, Nima},
  title     = {Methods, Computational Platform, Verification, and Application of Earthquake-Soil-Structure-Interaction Modeling and Simulation},
  journal   = {ProQuest Dissertations and Theses Global},
  year      = {2012},
  note      = {Computational platforms;Domain specific languages;Energy dissipation mechanism;Foundation embedments;Full three-dimensional;Soil structure system;Structural excitation;Verification-and-validation;},
  abstract  = {Seismic response of soil-structure systems has attracted significant attention for a long time. This is quite understandable with the size and the complexity of soil-structure systems. The focus of three important aspects of ESSI modeling could be on consistent following of input seismic energy and a number of energy dissipation mechanisms within the system, numerical techniques used to simulate dynamics of ESSI, and influence of uncertainty of ESSI simulations. This dissertation is a contribution to development of one such tool called ESSI Simulator. The work is being done on extensive verified and validated suite for ESSI Simulator. Verification and validation are important for high fidelity numerical predictions of behavior of complex systems. This simulator uses finite element method as a numerical tool to obtain solutions for large class of engineering problems such as liquefaction, earthquake-soil-structure-interaction, site effect, piles, pile group, probabilistic plasticity, stochastic elastic-plastic FEM, and detailed large scale parallel models. Response of full three-dimensional soil-structure-interaction simulation of complex structures is evaluated under the 3D wave propagation. Domain-Reduction-Method is used for applying the forces as a two-step procedure for dynamic analysis with the goal of reducing the large size computational domain. The issue of damping of the waves at the boundary of the finite element models is studied using different damping patterns. This is used at the layer of elements outside of the Domain-Reduction-Method zone in order to absorb the residual waves coming out of the boundary layer due to structural excitation. Extensive parametric study is done on dynamic soil-structure-interaction of a complex system and results of different cases in terms of soil strength and foundation embedment are compared. High efficiency set of constitutive models in terms of computational time are developed and implemented in ESSI Simulator. Efficiency is done based on simplifying the elastic-plastic stiffness tensor of the constitutive models. Almost in all the soil-structure systems, there are interface zones in contact with each other. These zones can get detached during the loading or can slip on each other. In this dissertation the frictional contact element is implemented in ESSI Simulator. Extended verification has been done on the implemented element. The interest here is the effect of slipping and gap opening at the interface of soil and concrete foundation on the soil-structure system behavior. In fact transferring the loads to structure is defined based on the contact areas which will affect the response of the system. The effect of gap openings and sliding at the interfaces are shown through application examples. In addition, dissipation of the seismic energy due to frictional sliding of the interface zones are studied. Application Programming Interface (API) and Domain Specific Language (DSL) are being developed to increase developer's and user's modeling and simulation capabilities. API describes software services developed by developers that are used by users. A domain-specific language (DSL) is a small language which usually focuses on a particular problem domain in software. In general DSL programs are translated to a common function or library which can be viewed as a tool to hide the details of the programming, and make it easier for the user to deal with the commands. ProQuest Subject Headings: Civil engineering, Geophysics.  &copy; Citation reproduced with permission of ProQuest LLC.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  key       = {Finite element method},
  keywords  = {Application programming interfaces (API);Boundary layers;Computational linguistics;Computer programming languages;Constitutive models;Damping;Earthquakes;Elastoplasticity;Energy dissipation;Friction;Geophysics;Large scale systems;Modeling languages;Numerical methods;Piles;Problem oriented languages;Seismology;Simulators;Soil liquefaction;Soil structure interactions;Soils;Stochastic models;Stochastic systems;Structural geology;Uncertainty analysis;Wave propagation;},
  language  = {English},
}

@InProceedings{20143918179801,
  author    = {Aram, Michael and Neumann, Gustaf},
  title     = {Exploring collective DSL integration in a large situated IS: Towards comprehensive language integration in information systems},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  note      = {Domain specific languages;Enterprise wiki;Language integration;Shared understanding;Via technologies;},
  abstract  = {In large situated information system instances, a great variety of stakeholders interact with each other via technology, constantly shaping and refining the information system. In the course of such a system's history, a range of domain-specific languages may have been incorporated. These language means are often not sufficiently integrated on an ontological level leading to syntactical and conceptual redundancies and impeding a shared understanding of the systems' functionalities. In this paper, we present our ambitions towards a language integration approach that aims at mitigating this problem. We exemplify it in the context of an existing educational information system instance. &copy; 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {Integration},
  keywords  = {DSL;Information systems;Problem oriented languages;Semantics;Software architecture;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2642803.2642823},
}

@InProceedings{20143918179802,
  author    = {Caracciolo, Andrea and Lungu, Mircea Filip and Nierstrasz, Oscar},
  title     = {Dicto: A unified DSL for testing architectural rules},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  note      = {Architectural rules;Declarative Languages;Non-functional requirements;Non-trivial;Testing tools;Third-party tools;Validation;},
  abstract  = {Software architecture consists of a set of design choices that can be partially expressed in form of rules that the implementation must conform to. Architectural rules are intended to ensure properties that fulfill fundamental non-functional requirements. Verifying architectural rules is often a non-trivial activity: available tools are often not very usable and support only a narrow subset of the rules that are commonly specified by practitioners. In this paper we present a new highly-readable declarative language for specifying architectural rules. With our approach, users can specify a wide variety of rules using a single uniform notation. Rules can get tested by third-party tools by conforming to pre-defined specification templates. Practitioners can take advantage of the capabilities of a growing number of testing tools without dealing with them directly. &copy; 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {Software architecture},
  keywords  = {Computer applications;Computer programming;DSL;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2642803.2642824},
}

@InProceedings{20162902597339,
  author        = {Kalnins, Audris and Barzdins, Janis},
  title         = {Metamodel specialization for DSL tool building},
  year          = {2016},
  volume        = {615},
  pages         = {68 - 82},
  address       = {Riga, Latvia},
  note          = {Abstract syntax;Diagram editors;Domain specific;Meta model;Metamodeling;New approaches;Transformation languages;UML class diagrams;},
  __markedentry = {[Neto:5]},
  abstract      = {Most of domain-specific tool building and especially diagram editor building nowadays involves some usage of metamodels. However normally the metamodel alone is not sufficient to define an editor. Frequently the metamodel just defines the abstract syntax of the domain, mappings or transformations are required to define the editor. Another approach [8] is based on a fixed type metamodel, there an editor definition consists of an instance of this metamodel to be executed by an engine. However there typically a number of functionality extensions in a transformation language is required. The paper offers a new approach based on metamodel specialization. First the metamodel specialization based on UML class diagrams and OCL is defined. A universal metamodel and an associated universal engine is described, then it is shown how a specific editor definition can be obtained by specializing this metamodel. Examples of a flowchart editor and UML class diagram editor are given. &copy; Springer International Publishing Switzerland 2016.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  issn          = {18650929},
  journal       = {Communications in Computer and Information Science},
  key           = {Information systems},
  keywords      = {Encoding (symbols);Engines;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-40180-5_5},
}

@InProceedings{20133516658120,
  author        = {Kouhen, Amine El and Dumoulin, Cedric and Gerard, Sebastien and Boulet, Pierre},
  title         = {A component-based approach for specifying dsml's concrete syntax},
  year          = {2013},
  pages         = {3 - 11},
  address       = {Montpellier, France},
  note          = {Component based approach;Concrete syntax;Development process;Meta-CASE;Metamodeling;Model-driven development;Model-driven Engineering;Reusable components;},
  __markedentry = {[Neto:5]},
  abstract      = {Model-Driven Engineering (MDE) encourages the use of graphical modeling tools, which facilitate the development process from modeling to coding. Such tools can be designed using the MDE approach into meta-modeling environments called metaCASE tools. It turned out that current metaCASE tools still require, in most cases, manual programming to build full tool support for the modeling language, especially for users' native methodologies and representational elements and propose limited possibilities in terms of reusability. In this context, we propose MID, a set of meta-models supporting the easy specification of modeling editors by means of reusable components and explain how representational meta-modeling is carried out with it. Copyright 2013 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  journal       = {Proceedings of the 2nd Workshop on Graphical Modeling Language Development, GMLD 2013 - In Conjunction with European Conference on Modelling Foundations and Applications, ECMFA 2013},
  key           = {Visual languages},
  keywords      = {Graphic methods;Reusability;Syntactics;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2489820.2489822},
}

@InProceedings{20130716009027,
  author        = {Krikava, Filip and Collet, Philippe},
  title         = {On the use of an internal DSL for enriching EMF models},
  year          = {2012},
  pages         = {25 - 30},
  address       = {Innsbruck, Austria},
  note          = {Alternative approach;Language constructs and features;Modeling languages;Multi-paradigm;Object Constraint Language;Object oriented design methods;Query operations;Side effect;Structural constraints;Supporting tool;Tool support;},
  __markedentry = {[Neto:5]},
  abstract      = {The Object Constraint Language (OCL) is widely used to enrich modeling languages with structural constraints, side effect free query operations implementation and contracts. OCL was designed to be small and compact language with appealing short "to-the-point" expressions. When trying to apply it to larger EMF models some shortcomings appear in the language expressions, the invariant constructs as well as in the supporting tools. In this paper we argue that some of these shortcomings are mainly related to the scalability of the OCL language and its trade-offs between domain-specificity and general-purpose. We present an alternative approach based on an internal DSL in Scala. By using this modern multi-paradigm programing language we can realize an internal DSL with similar features found in OCL while taking full advantage of the host language including state-of-the-art tool support. In particular, we discuss the mapping between the OCL and Scala concepts together with some additional constructs for better scalability in both expressiveness and reusability of the expressions. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the 12th Workshop on OCL and Textual Modelling, OCL 2012 - Being Part of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  key           = {Models},
  keywords      = {Object oriented programming;Reusability;Scalability;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2428516.2428521},
}

@InProceedings{20151100647526,
  author    = {Georg, Geri and Troup, Lucy},
  title     = {Experiences developing a requirements language based on the psychological framework activity theory},
  year      = {2013},
  volume    = {1092},
  pages     = {63 - 72},
  address   = {Miami, FL, United states},
  note      = {Activity Theory;Domain specific languages;Initial system designs;Interactive system;Requirements elicitation;Social behavior;Social constraints;Structural constraints;},
  abstract  = {We have developed a Domain Specific Language (DSL) for requirements elicitation that is based on the psychological framework of Activity Theory (AT). AT emphasizes the social context in which human activity takes place, and thus is useful to systematically develop models of social contexts, validate these contexts with stakeholders, and identify potential sources of system evolution based on identified changing social constraints. AT holds potential as a requirements elicitation tool for complex human interactive systems with a diverse set of stakeholders that do not have common goals. Our adaptation of AT for use in software engineering has evolved over time as we have used it in a case study and developed limited tools that can support designers both during initial system design and during system evolution. Here we describe how the USE tool was applied to develop the DSL and how we have used this tool to create instances of AT models and analyze them for structural constraint inconsistencies. We identify some of the issues encountered in this process and some of the remaining open issues regarding a USE model as an implementation of our DSL.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Computational linguistics},
  keywords  = {Activity coefficients;Computer programming languages;DSL;Economic and social effects;Problem oriented languages;Requirements engineering;Software engineering;Systems analysis;},
  language  = {English},
}

@InProceedings{20133716719198,
  author        = {Biely, Martin and Delgado, Pamela and Milosevic, Zarko and Schiper, Andre},
  title         = {Distal: A framework for implementing fault-tolerant distributed algorithms},
  year          = {2013},
  pages         = {IEEE; ifip -},
  address       = {Budapest, Hungary},
  note          = {Connection managements;Domain specific languages;Efficient implementation;Fault-tolerant;Paxos;Protocol description;Protocol specifications;SMR;},
  __markedentry = {[Neto:5]},
  abstract      = {We introduce Distal, a new framework that simplifies turning pseudocode of fault tolerant distributed algorithms into efficient executable code. Without proper tool support, even small amounts of pseudocode normally ends up in several thousands of non-trivial lines of Java or C++. Distal is implemented as a library in Scala and consists of two main parts: a domain specific language (DSL) in which algorithms are expressed and an efficient messaging layer that deals with low level issues such as connection management, threading and (de)serialization. The DSL is designed such that implementations of distributed algorithms highly resemble the pseudocode found in research papers. By writing code that is close to the protocol description, one can be more convinced that the implemented system really reflects the protocol specification on paper. Distal does not only make it simple and intuitive to implement distributed algorithms but it also leads to efficient implementations. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings of the International Conference on Dependable Systems and Networks},
  key           = {Algorithms},
  keywords      = {Computer networks;DSL;Information systems;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/DSN.2013.6575306},
}

@Article{20132916502334,
  author        = {Molina, Ana I. and Gallardo, Jesus and Redondo, Miguel A. and Ortega, Manuel and Giraldo, William J.},
  title         = {Metamodel-driven definition of a visual modeling language for specifying interactive groupware applications: An empirical study},
  journal       = {Journal of Systems and Software},
  year          = {2013},
  volume        = {86},
  number        = {7},
  pages         = {1772 - 1789},
  note          = {Domain specific languages;Groupware design;Interaction design;Interactive applications;MDE;Meta model;Model-driven Engineering;Visual modeling languages;},
  __markedentry = {[Neto:5]},
  abstract      = {This work is framed in the area of software development for Computer Supported Cooperative Work (CSCW). These software systems are called groupware systems. The development of groupware systems is a complex task, a problem that can be addressed applying the Model Driven Engineering (MDE) principles and techniques, where the use of models is essential. However, there are no proposals to address all issues to model in this kind of application (group work, shared context, coordination, etc.) and, in particular, there are no proposals that consider the modeling of both interactive and collaborative issues. To solve this deficiency, a domain-specific language (DSL) called Collaborative Interactive Application Notation (CIAN) has been proposed. To define this DSL a metamodel has been created describing the universe of discourse of the applications supporting interactive group work. We have defined the syntax and semantics of this language. We have also implemented a tool (called CIAT) for supporting the edition and validation of models created with CIAN. This tool has been implemented using the metamodeling facilities provided by the Eclipse platform. Finally, an empirical study was conducted with the aim of verifying the suitability of this approach and the perception of software engineers about its usefulness. The results obtained show that our proposal can facilitate the development process of groupware systems. &copy; 2012 Elsevier Inc. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {01641212},
  key           = {Groupware},
  keywords      = {Computer supported cooperative work;DSL;Models;Problem oriented languages;Semantics;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.jss.2012.07.049},
}

@InProceedings{20135017083196,
  author        = {Sujeeth, Arvind K. and Gibbons, Austin and Brown, Kevin J. and Lee, HyoukJoong and Rompf, Tiark and Odersky, Martin and Olukotun, Kunle},
  title         = {Forge: Generating a high performance DSL implementation from a declarative specification},
  year          = {2013},
  pages         = {145 - 154},
  address       = {Indianapolis, IN, United states},
  note          = {Code Generation;Distributed hardware;Distributed programming;Domain specific languages;High level specification;High-level abstraction;Multi-stage programming;Software expertise;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific languages provide a promising path to automatically compile high-level code to parallel, heterogeneous, and distributed hardware. However, in practice high performance DSLs still require considerable software expertise to develop and force users into tool-chains that hinder prototyping and debugging. To address these problems, we present Forge, a new meta DSL for declaratively specifying high performance embedded DSLs. Forge provides DSL authors with high-level abstractions (e.g., data structures, parallel patterns, effects) for specifying their DSL in a way that permits high performance. From this high-level specification, Forge automatically generates both a nave Scala library implementation of the DSL and a high performance version using the Delite DSL framework. Users of a Forge-generated DSL can prototype their application using the library version, and then switch to the Delite version to run on multicore CPUs, GPUs, and clusters without changing the application code. Forge-generated Delite DSLs perform within 2x of hand-optimized C++ and up to 40x better than Spark, an alternative high-level distributed programming environment. Compared to a manually implemented Delite DSL, Forge provides a factor of 3-6x reduction in lines of code and does not sacrifice any performance. Furthermore, Forge specifications can be generated from existing Scala libraries, are easy to maintain, shield DSL developers from changes in the Delite framework, and enable DSLs to be retargeted to other frameworks transparently. &copy; 2013 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {SPLASH Indianapolis 2013; GPCE 2013 - Proceedings of the 12th International Conference on Generative Programming: Concepts and Experiences},
  key           = {Program debugging},
  keywords      = {Automatic programming;Parallel programming;Problem oriented languages;Program processors;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2517208.2517220},
}

@InProceedings{20155201723341,
  author    = {Haav, Hele-Mai and Ojamaa, Andres and Grigorenko, Pavel and Kotkas, Vahur},
  title     = {Ontology-based integration of software artefacts for DSL development},
  year      = {2015},
  volume    = {9416},
  pages     = {309 - 318},
  address   = {Rhodes, Greece},
  note      = {Domain specific languages;High level semantics;Meta model;Ontology based modeling;Ontology-based integrations;Semantic integration;Semantic interoperability;Software artefacts;},
  abstract  = {This paper addresses a high level semantic integration of software artefacts for the development of Domain Specific Languages (DSL). The solution presented in the paper utilizes a concept of DSL meta-model ontology that is defined in the paper as consisting of a system ontology linked to one or more domain ontologies. It enables dynamic semantic integration of software artefacts for the composition of a DSL meta-model. The approach is prototypically implemented in Java as an extension to the DSL development tool CoCoViLa. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Ontology},
  keywords  = {Computer programming languages;High level languages;Integration;Internet;Problem oriented languages;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-26138-6_34},
}

@InProceedings{20164002874907,
  author        = {Pescador, Ana and De Lara, Juan},
  title         = {DSL-Maps: From requirements to design of domain-specific languages},
  year          = {2016},
  pages         = {438 - 443},
  address       = {Singapore, Singapore},
  note          = {Customizable;Design and implementations;Domain specific languages;Meta model;Meta-modelling;Model-driven Engineering;Requirements analysis;Requirements to designs;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-Specific Languages (DSLs) are central to ModelDriven Engineering, where they are used for creating models for particular domains. However, current research and tools for building DSLs focus on the design and implementation aspects of the DSL, while the requirements analysis phase, and its automated transition to design is largely neglected. In order to alleviate this situation, we propose DSL-maps, a notation inspired by mind-maps, to represent requirements for DSLs. The notation is supported by a tool, which helps in the automated transition into an initial meta-model design, using a customizable transformation and recommendations from a catalogue of meta-model design patterns. &copy; 2016 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSL, Duplicados},
  journal       = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  key           = {Software engineering},
  keywords      = {Automation;Computer programming languages;Modeling languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2970276.2970328},
}

@InProceedings{20163202680453,
  author    = {Barreiro, Fabian A. and Vazquez, Diana},
  title     = {Expanding and integrating L2 software systems using a new cooperative DSL language},
  year      = {2016},
  volume    = {3},
  pages     = {3161 - 3168},
  address   = {Pittsburgh, PA, United states},
  note      = {Domain specific languages;Industrial software;New plants;Software industry;Software systems;Tubular products;},
  abstract  = {Finding a clear method of expressing an objective in a particular domain is one of the most challenging problems that the software industry faces. A lot of time and effort have been spent on searching for a way to deal with this issue. Domain Specific Languages (DSL) are well known for increasing the developers' productivity and improving the communication between the experts of the domain. This paper demonstrates the implementation of a new, expansible DSL language, which was designed as a cooperative tool in the integration of different vendors' industrial software systems and that took place in a new plant of tubular products. &copy; 2016 by AIST.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {15516997},
  journal   = {AISTech - Iron and Steel Technology Conference Proceedings},
  key       = {Computational linguistics},
  keywords  = {Computer programming languages;Computer software;Problem oriented languages;Software engineering;},
  language  = {English},
}

@InProceedings{20150900588948,
  author    = {Wider, Arif},
  title     = {Implementing a bidirectional model transformation language as an internal DSL in scala},
  year      = {2014},
  volume    = {1133},
  pages     = {63 - 70},
  address   = {Athens, Greece},
  note      = {Bidirectional model transformation;Bidirectional transformation;Domain specific languages;Eclipse modeling framework;General-purpose programming language;Java platforms;Software technology;Transformation languages;},
  abstract  = {Despite advantages in terms of comprehensibility, verification, and maintainability, bidirectional transformation (bx) languages lack wide-spread adoption. Possible reasons are that tool support for bx languages is sometimes weak or outdated, that many bx languages are hard to integrate with existing software technologies, or that bx languages often cannot be mixed with unidirectional transformation languages and general-purpose programming languages. We present an approach to implement existing bx languages as internal domain-specific languages (iDSLs) in the Scala programming language and demonstrate the approach by implementing state-based tree lenses as a statically typed iDSL in Scala. We show that this approach allows for rich tool-support based on static analysis and for achieving technological integration with the Java platform in general and with the Eclipse Modeling Framework (EMF) in particular. At the same time, the iDSL is independent from DSL-specific tool-support and can be mixed with Scala, Java, or unidirectional transformation languages.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Java programming language},
  keywords  = {Computational linguistics;Computer programming languages;Problem oriented languages;Static analysis;},
  language  = {English},
}

@InProceedings{20163002629449,
  author    = {Akhundov, Jafar and Werner, Matthias and Schaus, Volker and Gerndt, Andreas},
  title     = {Using timed automata to check space mission feasibility in the early design phases},
  year      = {2016},
  volume    = {2016-June},
  address   = {Big Sky, MT, United states},
  note      = {Component activities;Distributed systems;Domain specific languages;German aerospace centers;Model-based systems engineering;Satellite trajectories;Space mission design;Spacecraft missions;},
  abstract  = {According to the model-based systems engineering paradigm, all engineers contribute to a single centralized data model of the system. The German Aerospace Center (DLR) develops a software tool Virtual Satellite which enables the engineers to store, exchange and alter their corresponding subsystem data on base of a distributed system model and thus contribute to the overall mission design during concurrent engineering (CE) sessions. Each engineer has their own scope of responsibilities, e.g. satellite trajectory, communication, or thermal analysis. Tracking implications of design changes on the whole system and feasibility aspects of the design is not trivial. Having an automated feasibility checking mechanism as a part of CE which would run iteratively after each design change provides a useful feedback mechanism for engineers and for the spacecraft client. For the purpose of mission feasibility checking a domain specific language (DSL) has been implemented using the Xtext Java framework. The extended parametric data model defined in the DSL serves as an executable representation of the spacecraft mission. The idea to use such an executable model to create a preliminary mission plan and hence confirm missions feasibility during conceptual study has already been introduced by Schaus et al. at the DLR. However, the vector of values of system variables was assumed to be equivalent with the currently active component, implying that component activities are mutually exclusive. This led to over-constraining of the execution model. Our work argues that concurrency considerations are critical from the earliest design phases. Since satellite is coupled with its environment and concurrency is an intrinsic property of the physical nature, considering concurrency allows for more realistic mission plans. The contributions of this paper are the introduction of concurrency considerations at the early space mission design phases and the use of timed automata tool (UPPAAL) for the mission feasibility check during concurrent engineering sessions. As a result, with almost no overhead, the planned mission can be analyzed in a more realistic way. Furthermore, the run-times of the feasibility check amount to 10-100 milliseconds or less, which is also a significant improvement with respect to the previous work. This allows for more precision and fine granular modeling, and is a promising basis for model refinements in the consecutive mission design phases. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {1095323X},
  journal   = {IEEE Aerospace Conference Proceedings},
  key       = {Design},
  keywords  = {Automata theory;Computer aided software engineering;Computer programming languages;Concurrent engineering;Engineers;Java programming language;Problem oriented languages;Satellites;Space flight;Spacecraft;Thermoanalysis;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/AERO.2016.7500572},
}

@InProceedings{20152701007159,
  author    = {Alegroth, Emil and Bache, Geoffrey and Bache, Emily},
  title     = {On the industrial applicability of TextTest: An empirical case study},
  year      = {2015},
  pages     = {Graz University of Technology (TU Graz); IEEE Computer Society -},
  address   = {Graz, Austria},
  note      = {Cost-benefit tradeoffs;Domain specific languages;Empirical case studies;Graphical user interface (GUIs);Industrial case study;Industrial Study;System testing;TextTest;},
  abstract  = {Software systems are becoming more complex, not least in their Graphical User Interfaces (GUIs), which presents challenges for existing testing practices. Pressure to reduce time to market leaves less time for manual testing and increases the importance of test automation. Previous research has identified several generations of automated GUI-based test approaches with different cost-benefit tradeoffs. Whilst test automation provides fast quality feedback it can be associated with high costs and inability to identify defects not explicitly anticipated by the test designer. TextTest is a capture-replay tool for GUI-based testing with a novel approach that overcomes several of the challenges experienced with previous approaches. Firstly the tool supports Approval Testing, an approach where ASCII-art representations of the GUI's visual state are used to verify correct application behavior at the system level. Secondly it records and replays test scripts in a user defined domain specific language (DSL) that is readable by all stakeholders. In this paper we present a three phase industrial case study that aims to identify TextTest's applicability in industrial practice. The paper reports that the tool is associated with (1) low script development costs due to recording functionality, (2) low maintenance costs, on average 7 minutes per test case, (3) better defect finding ability than manual system testing, (4) high test case execution performance (In this case 500 test cases in 20 minutes), (5) high script readability due to DSL defined scripts, and (6) test suites that are robust to change (In this case 93 percent per iteration). However, the tool requires a higher degree of technical skill for customization work, test maintainers need skills in designing regular expressions and the tool's applicability is currently restricted to Java and Python based applications. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
  key       = {Software testing},
  keywords  = {Ability testing;Automation;Commerce;Computer programming languages;Cost effectiveness;Costs;Defects;Graphical user interfaces;Java programming language;Problem oriented languages;System theory;User interfaces;Verification;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICST.2015.7102598},
}

@Article{20152400940949,
  author    = {Qamar, Ahsan and Wikander, Jan and During, Carl},
  title     = {Managing dependencies in mechatronic design: a case study on dependency management between mechanical design and system design},
  journal   = {Engineering with Computers},
  year      = {2015},
  volume    = {31},
  number    = {3},
  pages     = {631 - 646},
  note      = {Automated model transformations;Domain specific modeling languages;DSML;General purpose modeling languages;Machine learning techniques;Mechatronic design;Model transformation;SysML;},
  abstract  = {In this paper, we have investigated the role of dependencies in the design process of mechatronic products. Since explicit modeling of dependencies is largely considered unnecessary today, current languages do not support dependency modeling due to lack of sufficiently expressive language constructs. However, this paper argues that modeling dependencies is important in managing the overall design process. The paper highlights dependencies between two important viewpoints: system design and mechanical design. We have looked closely at how mechanical design (supported by CAD tools) establishes a backbone for the overall design concept. Mechanical design cannot be isolated from other design activities, and the mismanagement of dependencies there leads to problems in other domains too. To illustrate the process, the paper presents an example of modeling dependencies between system hierarchy in OMG SysML&trade; and the CAD assembly in Solid Edge for a mechatronic design example. The paper presents two different approaches to capturing dependencies&mdash;using a general purpose modeling language such as SysML and using a domain specific modeling language (DSML). We argue for using a DSML instead of a general purpose language and provide a DSML called the dependency modeling language (DML). An example DML model for a two degree of freedom robot use case is discussed. The paper also illustrates the complete process of capturing dependencies in a general purpose modeling language like SysML, which served as a good exercise on how to fetch data from a CAD tool and how to represent dependencies inside a significantly different modeling language. Lessons learned from doing this were applied to the construction of DML. Our aim for the future is to reduce the human effort required to build dependency models. Machine learning techniques and automated model transformations are valuable techniques to support this cause. &copy; 2014, Springer-Verlag London.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, SpringerLink, excluidos},
  issn      = {01770667},
  key       = {Computer aided design},
  keywords  = {Artificial intelligence;Computational linguistics;Degrees of freedom (mechanics);Design;High level languages;Learning systems;Modeling languages;Product design;Specification languages;Systems analysis;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s00366-014-0366-x},
}

@InProceedings{20162502508926,
  author        = {Ratiu, Daniel and Voelter, Markus},
  title         = {Automated testing of DSL implementations: Experiences from building mbeddr},
  year          = {2016},
  pages         = {15 - 21},
  address       = {Austin, TX, United states},
  note          = {Associated tool;Automated testing;Development environment;Domain specific languages;Language engineering;Language testing;Language workbenches;Quality of softwares;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain specific languages promise to improve productivity and quality of software by providing problem-adequate abstractions to developers. Projectional language workbenches like JetBrains MPS allow the definition of modular and extensible domain specific languages, generators and development environments. While recent advances in language engineering have enabled the definition of DSLs and tooling in a modular and cost-effective manner, the quality assurance of their implementation is still challenging. In this paper we present our work on testing the implementation of domain specific languages and associated tools, and discuss different approaches to increase the automation of language testing. We illustrate this based on MPS and our experience with testing mbeddr, a set of domain specific languages and tools on top of C tailored to embedded software development. &copy; 2016 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {Proceedings - 11th International Workshop on Automation of Software Test, AST 2016},
  key           = {C (programming language)},
  keywords      = {Automation;Computational linguistics;Computer programming languages;Cost effectiveness;Cost engineering;Problem oriented languages;Productivity;Quality assurance;Software design;Software engineering;Software testing;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2896921.2896922},
}

@InProceedings{20133716718173,
  author        = {Torsel, Arne-Michael},
  title         = {A testing tool for web applications using a domain-specific modelling language and the NuSMV model checker},
  year          = {2013},
  pages         = {383 - 390},
  address       = {Luxembourg, Luxembourg},
  note          = {Domain specific languages;Domain-Specific Modelling Languages;Model based testing;Model checking software;Model-based testing approaches;Test Automation;Test automation tool;WEB application;},
  __markedentry = {[Neto:5]},
  abstract      = {Test case generation from formal models using model checking software is an established method. This paper presents a model-based testing approach for web applications based on a domain-specific language model. It is shown how the domain-specific language is transformed into the input language of the NuSMV model checker and how the resulting traces are converted into executable test scripts for various test automation tools. The presented approach has been implemented with comprehensive automation in a research tool which architecture is outlined. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013},
  key           = {Software testing},
  keywords      = {Applications;Automation;Computational linguistics;Model checking;Problem oriented languages;Tools;World Wide Web;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICST.2013.54},
}

@InProceedings{20160801960773,
  author    = {Bonaki, Dragan and van den Brand, Mark and Gabriels, Joost and Jacobs, Bart and Kuiper, Ruurd and Roede, Sybren and Wijs, Anton and Zhang, Dan},
  title     = {Towards modular verification of threaded concurrent executable code generated from DSL models},
  year      = {2016},
  volume    = {9539},
  pages     = {141 - 160},
  address   = {Niteroi, Brazil},
  note      = {Fine-grained concurrency;Model transformation;Model-driven Engineering;Modular verification;Object orientation;Parameterized verifications;Traditional techniques;Transformation chains;},
  abstract  = {An important problem in Model Driven Engineering is maintaining the correctness of a specification under model transformations. We consider this issue for a framework that implements the transformation chain from the modeling language SLCO to Java. In particular, we verify the generic part of the last transformation step to Java code, involving change in granularity, focusing on the implementation of SLCO communication channels. To this end we use a parameterized modular approach; we apply a novel proof schema that supports fine grained concurrency and procedure-modularity, and use the separation logic based tool VeriFast. Our results show that such tool-assisted formal verification can be a viable addition to traditional techniques, supporting object orientation, concurrency via threads, and parameterized verification. &copy; Springer International Publishing Switzerland 2016.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Formal verification},
  keywords  = {Computer software;Embedded systems;Java programming language;Modeling languages;Software design;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-28934-2_8},
}

@Article{20124815714622,
  author    = {Jacob, Ferosh and Gray, Jeff and Carver, Jeffrey C. and Mernik, Marjan and Bangalore, Purushotham},
  title     = {PPModel: A modeling tool for source code maintenance and optimization of parallel programs},
  journal   = {Journal of Supercomputing},
  year      = {2012},
  volume    = {62},
  number    = {3},
  pages     = {1560 - 1582},
  note      = {Benchmark programs;Computation power;CUDA;Domain specific languages;Graphical modeling;Modeling tool;OpenMP;Optimum version;Parallel code;Parallel program;Parallel programming paradigms;Performance Gain;PPModel;Problem size;Re-execution;Software engineers;Source codes;TPPModel;},
  abstract  = {As the computation power in desktops advances, parallel programming has emerged as one of the essential skills needed by next generation software engineers. However, programs written in popular parallel programming paradigms have a substantial amount of sequential code mixed with the parallel code. Several such versions supporting different platforms are necessary to find the optimum version of the program for the available resources and problem size. As revealed by our study on benchmark programs, sequential code is often duplicated in these versions. This can affect code comprehensibility and re-usability of the software. In this paper, we discuss a framework named PPModel, which is designed and implemented to free programmers from these scenarios. Using PPModel, a programmer can separate parallel blocks in a program, map these blocks to various platforms, and re-execute the entire program.We provide a graphical modeling tool (PPModel) intended for Eclipse users and a Domain-Specific Language (tPPModel) for non-Eclipse users to facilitate the separation, the mapping, and the re-execution. This is illustrated with a case study from a benchmark program, which involves re-targeting a parallel block to CUDA and another parallel block to OpenMP. The modified program gave almost 5&times; performance gain compared to the sequential counterpart, and 1.5&times; gain compared to the existing OpenMP version. &copy; Springer Science+Business Media, LLC 2012.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {09208542},
  key       = {Computer software reusability},
  keywords  = {Application programming interfaces (API);DSL;Multiprocessing systems;Parallel architectures;Parallel programming;Problem oriented languages;Separation;Signal encoding;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s11227-012-0821-7},
}

@Article{20160701936941,
  author    = {Bernardi, Mario Luca and Cimitile, Marta and Di Lucca, Giuseppe},
  title     = {Design pattern detection using a DSL-driven graph matching approach},
  journal   = {Journal of Software: Evolution and Process},
  year      = {2014},
  volume    = {26},
  number    = {12},
  pages     = {1233 - 1266},
  note      = {Design pattern detections;Domain specific languages;Graph matchings;Model driven development;Object-oriented system;},
  abstract  = {Knowledge about design pattern (DP) instances improves program comprehension and reengineering of object-oriented systems. Effectively, it helps to discover developer design decisions and trade-offs that often are not documented. This work describes an approach to automatically detect DPs in existing object-oriented systems by tracing systems' source code components with the roles they play in the patterns. In the proposed approach, DPs are modeled based on their high-level structural properties (e.g., inheritance, dependency, invocation, delegation, type nesting, and membership relationships) that are checked, by source code parsing, against the system structure and components. Moreover, the approach can also detect pattern variants, defined by overriding the pattern properties. This paper presents a description of the approach, provides a brief description of the supporting tool, and discusses the results from the experiments carried out to validate it. The approach was validated on seven systems of an open benchmark that contains systems of increasing sizes. For five additional systems, the results have been compared with the ones from a similar approach existing in the literature. The obtained results, the identified DP variants, and the effectiveness of the approach are thoroughly presented and discussed. Copyright &copy; 2014 John Wiley & Sons, Ltd.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {20477481},
  key       = {Pattern recognition},
  keywords  = {Computer programming languages;Design;Economic and social effects;Object oriented programming;Problem oriented languages;Structural properties;},
  language  = {English},
  url       = {http://dx.doi.org/10.1002/smr.1674},
}

@InProceedings{20153401191825,
  author        = {Saviankou, Pavel and Knobloch, Michael and Visser, Anke and Mohr, Bernd},
  title         = {Cube v4: From performance report explorer to performance analysis tool},
  year          = {2015},
  volume        = {51},
  pages         = {1343 - 1352},
  address       = {Reykjavik, Iceland},
  note          = {Call-tree profile;Derived metrics;Domain specific languages;Parallel performance tools;Performance analysis;Performance analysis techniques;Performance reports;Plug-ins;},
  __markedentry = {[Neto:5]},
  abstract      = {Cube v3 has been a powerful tool to examine reports of the parallel performance tool Scalasca, but was basically unable to perform analyses on its own. With Cube v4, we addressed several shortcomings of Cube v3. We generalized the Cube data model, extended the list of supported data types, and allow operations with nontrivial algebras, e.g. for performance models or statistical data. Additionally, we introduced two major new features that greatly enhance the performance analysis features of Cube: Derived metrics and GUI plugins. Derived metrics can be used to create and manipulate metrics directly within the GUI, using a powerful domain-specific language called CubePL. Cube GUI plugins allow the development of novel performance analysis techniques and visualizations based on Cube data without changing the source code of the Cube GUI. &copy; The Authors. Published by Elsevier B.V.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, ScienceDirect, Duplicados},
  issn          = {18770509},
  journal       = {Procedia Computer Science},
  key           = {Geometry},
  keywords      = {Computer programming languages;DSL;Graphical user interfaces;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.procs.2015.05.320},
}

@InProceedings{20123415364568,
  author    = {Biehl, Matthias and Gu, Wenqing and Loiret, Frederic},
  title     = {Model-based service discovery and orchestration for OSLC services in tool chains},
  year      = {2012},
  volume    = {7387 LNCS},
  pages     = {283 - 290},
  address   = {Berlin, Germany},
  note      = {Development tools;Distributed development;Domain specific modeling languages;High level of abstraction;Model driven development;Model-driven;Open services;Platform independent;Service discovery;Service orchestration;Service Oriented;Tool integration;},
  abstract  = {Globally distributed development of complex systems relies on the use of sophisticated development tools but today the tools provide only limited possibilities for integration into seamless tool chains. If development tools could be integrated, development data could be exchanged and tracing across remotely located tools would be possible and would increase the efficiency of globally distributed development. We use a domain specific modeling language to describe tool chains as models on a high level of abstraction. We use model-driven technology to synthesize the implementation of a service-oriented wrapper for each development tool based on OSLC (Open Services for Lifecyle Collaboration) and the orchestration of the services exposed by development tools. The wrapper exposes both tool data and functionality as web services, enabling platform independent tool integration. The orchestration allows us to discover remote tools via their service wrapper, integrate them and check the correctness of the orchestration. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Integration},
  keywords  = {Web services;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-31753-8_21},
}

@InProceedings{20143418079291,
  author        = {Miao, Yongwu and Ally, Mohamed and Samaka, Mohammed and Tsinakos, Avgoustos A.},
  title         = {Towards pedagogy-driven learning design: A case study of problem-based learning design},
  year          = {2014},
  volume        = {8613 LNCS},
  pages         = {179 - 189},
  address       = {Tallinn, Estonia},
  note          = {Authoring tool;Course plans;Design languages;Domain specific languages;IMS-LD;Learning designs;PBL;Problem based learning;},
  __markedentry = {[Neto:5]},
  abstract      = {Existing learning design languages are pedagogy-neutral. They provide insufficient support to explicitly represent pedagogy-specific approaches such as problem-based learning (PBL). As the first step towards pedagogy-driven learning design, we developed a PBL design language and an associated authoring tool by adopting a domain-specific language (DSL) approach. The language and the tool provide means for teachers to think and represent their own PBL designs in vocabularies that the teacher daily uses to describe their PBL approaches. This paper presents a case study to investigate whether the language and the tool can facilitate the design of a PBL course plan. Although participants had minimal knowledge of PBL and were not skilled in process modeling, after a short training they were able to prepare their own PBL course plans using the PBL authoring tool. They reported that the vocabularies in the PBL design language were easy to understand. Some thought that the tool provides flexibility and others did not think so. Nevertheless, some found the process somewhat difficult to represent the narrative into a course plan. In addition, most participants found that the tool is user-friendly and easy to learn. &copy; 2014 Springer International Publishing.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Curricula},
  keywords      = {Computer aided instruction;Design;DSL;E-learning;Personnel training;Problem oriented languages;Teaching;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-09635-3_20},
}

@InProceedings{20144700227689,
  author        = {Collet, Philippe},
  title         = {Domain specific languages for managing feature models: Advances and challenges},
  year          = {2014},
  volume        = {8802},
  pages         = {273 - 288},
  address       = {Imperial, Corfu, Greece},
  note          = {Analysis techniques;Domain specific languages;Error prones;Feature models;Scale management;Software product line engineerings;Supporting tool;Toolsets;},
  __markedentry = {[Neto:5]},
  abstract      = {Managing multiple and complex feature models is a tedious and error-prone activity in software product line engineering. Despite many advances in formal methods and analysis techniques, the supporting tools and APIs are not easily usable together, nor unified. In this paper, we report on the development and evolution of the Familiar Domain-Specific Language (DSL). Its toolset is dedicated to the large scale management of feature models through a good support for separating concerns, composing feature models and scripting manipulations. We overview various applications of Familiar and discuss both advantages and identified drawbacks. We then devise salient challenges to improve such DSL support in the near future.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Software design},
  keywords      = {Computer programming languages;DSL;Formal methods;Problem oriented languages;, rank3},
  language      = {English},
}

@InProceedings{20140117155357,
  author    = {Asenov, Dimitar and Muller, Peter},
  title     = {Customizing the visualization and interaction for embedded domain-specific languages in a structured editor},
  year      = {2013},
  pages     = {127 - 130},
  address   = {San Jose, CA, United states},
  note      = {editor customization;Embedded domain-specific languages;Programming environment;Structured editors;Visual programming;},
  abstract  = {Large software projects are often based on libraries that provide abstractions for a particular domain such as writing database queries, staging, or constraint solving. The API provided by such a library can be considered a domain-specific language within the implementation language of the library, a so-called internal or embedded domain-specific language (eDSL). Embedding a DSL leverages the tool infrastructure of the host language, but also restricts the syntax and IDE support to that of the host language. This restriction prevents programmers from using convenient specialized notations and, thus, has a negative effect on their productivity. To address this problem, we outline concepts for a structured code editor that enable developers of eDSLs to customize how eDSL code is rendered and what interactions are available. We demonstrate the benefits of our approach by customizing a structured editor for the.NET Code Contracts API. Our prototype shows in particular that we can customize many aspects of visualization and interaction with little effort. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  issn      = {19436092},
  journal   = {Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC},
  key       = {Problem oriented languages},
  keywords  = {Computer programming;Graphical user interfaces;Human computer interaction;Visual languages;Visualization;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/VLHCC.2013.6645255},
}

@InProceedings{20163102662262,
  author        = {Solms, Fritz and Hammond, Priscilla Naa Dedei and Marshall, Linda},
  title         = {Constraints-based URDAD Model verification},
  year          = {2016},
  pages         = {148 - 155},
  address       = {Rome, Italy},
  note          = {Domain specific languages;Meta model;Model validation;Model-driven Engineering;Object Constraint Language;URDAD;},
  __markedentry = {[Neto:5]},
  abstract      = {In Model-Driven Engineering the primary artifact is a technology and architecture neutral model called a Platform Independent Model (PIM). The Use-Case, Responsibility Driven Analysis and Design (URDAD) is a service-oriented method which is used to construct a PIM commonly specified in the URDAD Domain-Specific Language (DSL). In this paper we show that model quality can be verified by specifying a set of quality constraints at metamodel level which are used to verify certain consistency, completeness, traceability and simplicity qualities of URDAD models. The set of constraints has been mapped onto the Object Constraint Language (OCL) and a tool used to verify these constraints has been developed. The set of constraints is also used by an URDAD model editor to verify aspects of model quality as it is being developed. Copyright &copy; 2016 by SCITEPRESS - Science and Technology Publications, Lda. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ENASE 2016 - Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering},
  key           = {Software engineering},
  keywords      = {Computational linguistics;Computer aided software engineering;Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
}

@InProceedings{20161602265338,
  author        = {Adam, Sorin and Schultz, Ulrik Pagh},
  title         = {Towards tool support for spreadsheet-based domain-specific languages},
  year          = {2015},
  pages         = {95 - 98},
  address       = {Pittsburgh, PA, United states},
  note          = {Automatic Generation;Domain specific languages;Parser;Safety specifications;Structured data;Tool support;Two-dimensional grammars;},
  __markedentry = {[Neto:5]},
  abstract      = {Spreadsheets are commonly used by non-programmers to store data in a structured form, this data can in some cases be considered to be a program in a domain-specific language (DSL). Unlike ordinary text-based domain-specific languages, there is however currently no formalism for expressing the syntax of such spreadsheet-based DSLs (SDSLs), and there is no tool support for automatically generating language infrastructure such as parsers and IDE support. In this paper we define a simple notion of two-dimensional grammars for SDSLs, and show how such grammars can be used for automatically generating parsers that extract structured data from a spreadsheet in the form of an AST. We demonstrate automatic generation of parsers for a number of examples, including the questionnaire DSL from LWC2014 and a DSL for writing safety specifications. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {GPCE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  key           = {Computational linguistics},
  keywords      = {Computer programming languages;Graphical user interfaces;Problem oriented languages;Spreadsheets;Syntactics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2814204.2814215},
}

@InProceedings{20124615674225,
  author    = {Jia, Xiaoping and Jones, Chris},
  title     = {AXIOM: A model-driven approach to cross-platform application development},
  year      = {2012},
  pages     = {24 - 33},
  address   = {Rome, Italy},
  note      = {Application development;Cross-platform;Customizable;Development costs;Development productivity;Domain specific languages;Mobile application development;Mobile applications;Mobile platform;Model driven approach;Model-driven Engineering;Multiple platforms;Platform-independent model;Product quality;Prototype tools;Transformation process;},
  abstract  = {The development and maintenance of mobile applications for multiple platforms is expensive. One approach to reducing this cost is model-driven engineering (MDE). In this paper, we present AXIOM, a model-driven approach for developing cross-platform mobile applications. Our approach uses a domain specific language (DSL) for defining platform-independent models (PIM) of mobile applications. It also defines a multi-phase, customizable transformation process to convert platform-independent models into native applications for target mobile platforms. Our approach could significantly reduce the development cost and increase the product quality of mobile applications. A prototype tool has been developed to demonstrate the feasibility of the approach. The preliminary findings are promising and show significant gains in development productivity.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  journal   = {ICSOFT 2012 - Proceedings of the 7th International Conference on Software Paradigm Trends},
  key       = {Problem oriented languages},
  keywords  = {Mobile computing;},
  language  = {English},
}

@InProceedings{20154201406352,
  author        = {Roussev, Vassil},
  title         = {Building a forensic computing language},
  year          = {2015},
  volume        = {2015-March},
  pages         = {5228 - 5233},
  address       = {Kauai, HI, United states},
  note          = {Digital forensic;Domain specific languages;Forensic computing;Initial design;Logical sequences;Security analysis;},
  __markedentry = {[Neto:5]},
  abstract      = {The primary goal of this discussion is to motivate the need for the development of a domain-specific language (DSL) focused on the requirements of forensic and security analysis. We argue that, at present, there is no adequate mechanism that a) allows analysts to specify the forensic computation as a tool-agnostic, logical sequence of steps, b) provides a formal specification for tool developers, and c) seamlessly integrates different available tools to provides a complete and extensible solution. We present an initial design sketch for a forensic DSL called nugget, and use it to illustrate the ideas behind our approach. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {15301605},
  journal       = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  key           = {Computer crime},
  keywords      = {Computational linguistics;Computer programming languages;DSL;Modems;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/HICSS.2015.617},
}

@InProceedings{20140417233206,
  author    = {Cabanillas, Cristina and Del-Rio-ortega, Adela and Resinas, Manuel and Ruiz-Cortes, Antonio},
  title     = {CRISTAL: Collection of resource-centric supporting tools and languages},
  year      = {2012},
  volume    = {936},
  pages     = {51 - 56},
  address   = {Tallinn, Estonia},
  note      = {Analysis capabilities;Automated resolution;Business process management systems;Business process modelling notations;Domain specific languages;Potential problems;Resource assignment;Resource management;},
  abstract  = {In this demo, we introduce CRISTAL (Collection of ResourcecentrIc Supporting Tools And Languages), a tool suite aimed at improving the human resource management capabilities of current Business Process Management Systems (BPMSs), covering the design and enactment phases of the business process (BP) life cycle. The central element is Resource Assignment Language (RAL), a Domain Specific Language (DSL) for specifying resource assignments in process models. RAL's strong analysis capabilities enable the automated resolution of resource assignment expressions both (i) at design time, serving for post-design analysis to find and correct potential problems prior to execution, and (ii) at run time, in order to execute the BP in an existing BPMS considering the RAL assignments for resource allocation. The resource assignments can be directly modelled in a Business Process Modelling Notation (BPMN) diagram, or specified by means of a RACI matrix. In the latter case, CRISTAL can take all the RACI information automatically and introduce it into a resource-unaware BPMN model at any moment, resulting in a RACI-aware BP model (and, thus, a resource-aware BP model).},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Tools},
  keywords  = {Administrative data processing;Computer programming languages;Design;Human resource management;},
  language  = {English},
}

@InProceedings{20150600504786,
  author    = {James, Phillip and Moller, Faron and Nguyen, Hoang Nga and Roggenbach, Markus and Treharne, Helen},
  title     = {Decomposing scheme plans to manage verification complexity},
  year      = {2014},
  pages     = {210 - 220},
  address   = {Braunschweig, Germany},
  note      = {Automatic Generation;CSP;Domain specific languages;Railway applications;Railway interlocking system;Safety verification;System specification;Verification complexity;},
  abstract  = {Several formal methods have been proposed for the specification and safety verification of railway applications. In order to be successful they need industrial strength tools to support the animation, proof, model checking and simulation of such systems. The complexity of railway systems means that capabilities of the analysis tools have consistently been improving. In our approach we propose that the complexity of analysis of railway interlocking systems can also be managed through incremental addition of system detail and decomposition of system specifications themselves. We propose a domain specific language (DSL) which describes the core aspects of a railway interlocking system and demonstrate how one can identify suitable decompositions in terms of the DSL. The DSL informs our system engineering approach which uses a graphical editor to input railway scheme plans, supports the automatic generation of CSP jj B specifications of the plans and uses the ProB tool for their animation and model checking.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {FORMS/FORMAT 2014 - 10th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  key       = {Interlocking signals},
  keywords  = {Animation;Boron;Computer programming languages;Decomposition;Formal methods;Formal specification;Formal verification;Model checking;Problem oriented languages;Railroad transportation;Railroads;Safety devices;Safety engineering;Specifications;Transportation;},
  language  = {English},
}

@Article{20162202431329,
  author    = {Patwari, Puneet and Chaudhuri, Subhrojyoti Roy and Natarajan, Swaminathan and Muralikrishna, G.},
  title     = {MC ML: A modeling language for monitoring and control systems},
  journal   = {Fusion Engineering and Design},
  year      = {2016},
  note      = {C-systems;Domain specific languages;Interface control documents;International thermonuclear experimental reactor;Model-driven Engineering;Monitoring and control;Monitoring and control systems;Square kilometer arrays;},
  abstract  = {The use of System Engineering (SE) language such as SysML [1,20] is common within the community of control system designers. However the design handoff to the subsequent phases of the control system development is carried out manually in most cases without much tool support. The approach to agreeing on the control interface between components is a good example where engineers still rely on either manually created Interface Control Documents (ICD) or one off tools implemented by individual projects. Square Kilometer Array (SKA) [2] and International Thermonuclear Experimental Reactor (ITER) [3] are two good examples of such large projects adopting these approaches. This results in non-uniformity in the overall system design since individual groups invent their own vocabulary while using a language like SysML which leads to inconsistencies across the design, interface and realized code. To mitigate this, we propose the development of a Monitoring and Control Modeling Language (M&amp;CML), a domain specific language (DSL) [4,22] for specifying M&amp;C solutions. M&amp;C ML starts with defining a vocabulary borrowing concepts from standard practices used in the control domain and incorporates a language which ensures uniformity and consistency across the M&amp;C design, interfaces and implementation artifacts. In this paper we discuss this language with an analysis of its usage to point out its benefits. &copy; 2016 Elsevier B.V.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {09203796},
  key       = {C (programming language)},
  keywords  = {Computational linguistics;Computer programming languages;Control systems;Design;Experimental reactors;Modeling languages;Monitoring;Nuclear reactors;Problem oriented languages;Systems analysis;Systems engineering;Tokamak devices;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.fusengdes.2016.05.024},
}

@InProceedings{20133816750972,
  author    = {Cencetti, M. and Pasquinelli, M. and Maggiore, P.},
  title     = {System modeling framework and MDO tool integration: MBSE methodologies applied to design and analysis of space system},
  year      = {2013},
  address   = {Boston, MA, United states},
  note      = {Design and analysis;Design approaches;Design optimization;Domain specific languages;Model-based system engineerings;Multidisciplinary design optimization;System characteristics;Tool integration;},
  abstract  = {This paper presents the results of a research study related to the integration of a Design Optimization Framework in a Model Based System Engineering (MBSE) environment. The main aim of this work concerns the feasibility of such connection in order to assess actual advantages and possible drawbacks. The objective is to show how the Multidisciplinary Design Optimization (MDO) methods may be managed in the context of a MBSE environment with respect to the traditional design approach. Basically this analysis is addressed to the demonstration of the benefits of MBSE methodology in the field of aerospace engineering. The state of the art of the considered methodology is briefly introduced in the first part of the paper. The following part concerns the description of the modeling activities that have been used to define system characteristics. System data model is defined through a Domain Specific Language (DSL) on the basis of MBSE paradigm and managed through a web application tool. Design optimization functionalities are also integrated within this framework to assess if possible advantages can be obtained. A test case is presented in the following section, reporting the results reached and discussing their meaning. A comparison between the MBSE approach and the traditional one is then proposed in the final section.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {AIAA Modeling and Simulation Technologies (MST) Conference},
  key       = {Tools},
  keywords  = {Aerospace engineering;Computer simulation;Design aids;Optimization;},
  language  = {English},
}

@InProceedings{20135017066944,
  author        = {Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
  title         = {Managing the coupled evolution of metamodels and textual concrete syntax specifications},
  year          = {2013},
  pages         = {114 - 121},
  address       = {Santander, Spain},
  note          = {Concrete syntax;Coupled evolution;Difference models;Domain specific modeling languages;MDE;Metamodeling;Model to model transformation;Model-driven Engineering;},
  __markedentry = {[Neto:5]},
  abstract      = {In the context of Model Driven Engineering (MDE) the definition of a Domain Specific Modeling Language (DSML) consists of a set of coordinated artifacts specifying the abstract and concrete syntax of the language, and possibly further aspects related to semantics. Concerning the specification of concrete syntaxes a number of tools are available. They typically permit to associate syntactic elements to metamodel (abstract syntax) of the modeling language being developed and to generate a number of supporting tools (e.g., parsers, pretty printers, and editors). Currently, tools for the specification of textual concrete syntaxes lack support for propagating metamodel changes to the corresponding concrete syntax specifications. In this paper, we analyze such a co-evolution problem, and provide an approach able to automate the propagation of metamodel changes to textual concrete specifications given by means of the TCS tool. The approach relies on model-to-model transformations which are applied according to difference models which represent the occurred metamodel changes. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, Duplicados},
  journal       = {Proceedings - 39th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2013},
  key           = {Visual languages},
  keywords      = {Embedded systems;Semantics;Software engineering;Specifications;Syntactics;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/SEAA.2013.22},
}

@InProceedings{20132216381532,
  author        = {Rose, Louis M. and Kolovos, Dimitrios S. and Paige, Richard F.},
  title         = {EuGENia live: A flexible graphical modelling tool},
  year          = {2012},
  pages         = {15 - 20},
  address       = {Innsbruck, Austria},
  note          = {Design and implementations;Domain specific languages;Eclipse modeling framework;Graphical modelling;Incremental process;Model-driven Engineering;Potential benefits;Technical expertise;},
  __markedentry = {[Neto:5]},
  abstract      = {Designing a domain-specific language (DSL) is a collaborative, iterative and incremental process between domain experts and software engineers. Existing tools for implementing DSLs produce powerful and interoperable domain-specific editors, but are resistant to language change and require considerable technical expertise to use. We present EuGENia Live, a tool for designing (graphical) DSLs. EuGENia Live runs in a web browser, supports on-the-fly meta-model editing, and produces DSLs that can be exported and used with the Eclipse Modeling Framework. As well as presenting the design and implementation of EuGENia Live, we discuss potential benefits to our underlying approach, and challenges for future work on flexible modelling tools. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {2012 Extreme Modeling Workshop, XM 2012 - Post-Proceedings, Satellite Event of the IEEE/ACM 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  key           = {Embedded systems},
  keywords      = {Graphical user interfaces;Models;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2467307.2467311},
}

@InProceedings{20133616695135,
  author    = {Ben Maissa, Yann and Kordon, Fabrice and Mouline, Salma and Thierry-Mieg, Yann},
  title     = {Modeling and analyzing wireless sensor networks with VeriSensor: An integrated workflow},
  year      = {2013},
  volume    = {8100 LNCS},
  pages     = {24 - 47},
  address   = {Hamburg, Germany},
  note      = {Domain specific modeling languages;Environmental conditions;Formal Specification;Formal verifications;Integrated workflow;Life-critical applications;Model-driven Engineering;Quality requirements;},
  abstract  = {A Wireless Sensor Network (WSN), made of distributed autonomous nodes, is designed to monitor physical or environmental conditions. WSNs have many application domains such as environment or health monitoring. Their design must consider energy constraints, concurrency issues, node heterogeneity, while still meeting the quality requirements of life-critical applications. Formal verification helps to obtain WSN reliability, but usually requires a high expertise, which limits its adoption in industry. This paper presents VeriSensor, a domain specific modeling language (DSML) for WSNs offering support for formal verification. VeriSensor is designed to be used by WSN experts. It can be automatically translated into a formal specification for model checking. We present the language and its translation into a formal model (we use Instantiable Transition Systems - ITS). A tool has been implemented. We used it to work on a case study, illustrating how several metrics and properties relevant to the domain can be evaluated. &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Sensor nodes},
  keywords  = {Embedded systems;Model checking;Petri nets;Wireless sensor networks;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-40465-8_2},
}

@InProceedings{20134416912606,
  author        = {Edwards, Craig and Gruner, Stefan},
  title         = {A new tool for URDAD to Java EE EJB transformations'},
  year          = {2013},
  pages         = {144 - 153},
  address       = {East London, South africa},
  note          = {EJB;JaMoPP;MDA;Model transformation;MOF;QVT;URDAD;},
  __markedentry = {[Neto:5]},
  abstract      = {Following the Object Management Group's (OMG) Model-Driven Architecture (MDA) approach, the semi-formal, service-orientated "Use Case, Responsibility Driven Analysis and Design" (URDAD) method is used by requirements engineers to specify a software system's functional properties in a Platform Independent Model (PIM). PIMs are represented using the URDAD Domain Specific Language (DSL), and thus conform to the URDAD MOF meta model. As a result, they can be transformed into Platform-Specific Models (PSM) for frameworks such as Java Platform Enterprise Edition (JEE) Enterprise Java Beans (EJB). This paper describes the semi-automatic transformation of a URDAD PIM into a EJB PSM, which is the basis for the further generation of EJB program code. For this purpose, a new prototype CASE tool<sup>1</sup>was implemented to facilitate such transformations. The tool was evaluated using a non-trivial example project, with results indicating that it produces the PSM and template code that constitutes the static Java EE EJB structural representation of the example PIM. Copyright 2013 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Software architecture},
  keywords      = {Computer aided software engineering;Computer science;Engineers;Information technology;Java programming language;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2513456.2513459},
}

@InProceedings{20131616208286,
  author        = {Yamashita, Kazuhiro},
  title         = {Modular construction of an analysis tool for mining software repositories},
  year          = {2013},
  pages         = {37 - 38},
  address       = {Fukuoka, Japan},
  note          = {Analysis tools;Domain specific languages;Feature oriented domain analysis;Mining software repositories;Mining software repository (MSR);Software Evolution;},
  __markedentry = {[Neto:5]},
  abstract      = {In this paper, we propose an analysis tool for mining software repository (MSR) called E-CUBE, which corresponds to three types of evolution in MSR (i.e., Platform Evolution, Target Evolution and Scale Evolution). To encapsulate the essence of these types of evolution, we introduce modular construction for MSR studies to E-CUBE. We make a choice of features (i.e., modules) in the field of MSR using Feature Oriented Domain Analysis (FODA) and implement those modules using an internal Domain specific language (DSL). Copyright &copy; 2013 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {AOSD 2013 Companion - Proceedings of the 2013 ACM on Aspect-Oriented Software Development},
  key           = {Modular construction},
  keywords      = {Computer systems programming;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2457392.2457409},
}

@InProceedings{20163102672840,
  author    = {Lopes, Felipe A. and Lima, Leonidas and Santos, Marcelo and Fidalgo, Robson and Fernandes, Stenio},
  title     = {High-level modeling and application validation for SDN},
  year      = {2016},
  pages     = {197 - 205},
  address   = {Istanbul, Turkey},
  note      = {Complex topology;Domain specific modeling languages;Feasible solution;framework;High-level modeling;Performance tests;Policy based network management;Software defined networking (SDN);},
  abstract  = {Software-Defined Networking (SDN) enables applications running on its control plane. The Northbound API allows programmers to develop SDN applications for a number of policy-based network management tasks. However, there is still a clear need for supporting the development of controller-agnostic modeled applications. In this paper, we show how the Model-Driven Networking (MDN), a framework composed of CASE tool and Domain-Specific Modeling Language (DSML), can be a feasible solution to create applications independent from controllers and to enable proper verification of SDN applications. Our evaluation demonstrates that MDN framework is viable for using in real scenarios and independent from SDN controllers. Moreover, our performance tests show that: (i) MDN's code generation is two times faster than other approaches; and (ii) it can validate several constraints and complex topologies at millisecond-timescale. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {Proceedings of the NOMS 2016 - 2016 IEEE/IFIP Network Operations and Management Symposium},
  key       = {Application programs},
  keywords  = {Applications;Complex networks;Computational linguistics;Computer aided software engineering;Controllers;Embedded systems;Modeling languages;Network management;Software defined networking;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/NOMS.2016.7502813},
}

@InProceedings{20143918179818,
  title     = {Proceedings of the ECSA 2014 Workshops and Tool Demos Track - European Conference on Software Architecture, ECSAW 2014},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  abstract  = {The proceedings contain 33 papers. The topics discussed include: adaptive risk management with ontology linked evidential statistics and SDN; a tool for security metrics modeling and visualization; the merits of a meritocracy in open source software ecosystems; the reality of an associate model - comparing partner activity in the eclipse ecosystem; scientific research software ecosystems; governance mechanisms for healthcare apps; towards faster method search through static ecosystem analysis; a quantitative analysis of developer information needs in software ecosystems; supporting architects in mastering the complexity of open software ecosystems; flexibility in ecosystem architectures; domain specific language for deployment of parallel applications on parallel computing platforms; hierarchical combination of internal and external domain-specific languages for scientific computing; and supporting software evolution by integrating DSL-based architectural abstraction and understandability related metrics.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  journal   = {ACM International Conference Proceeding Series},
  keywords  = {rank5},
  language  = {English},
}

@Article{20143800066660,
  author        = {Bachtarzi, Faycal and Chaoui, Allaoua},
  title         = {A modelling language and a tool for web services composition},
  journal       = {International Journal of Communication Networks and Distributed Systems},
  year          = {2014},
  volume        = {13},
  number        = {2},
  pages         = {221 - 240},
  note          = {Business Process Execution Language;Domain specific languages;Extensible Mark-Up language (XML);Model-driven Engineering;Software development process;Web services composition;Web services description languages;Web Services technologies;},
  __markedentry = {[Neto:5]},
  abstract      = {Web services technology is the most common implementation of service oriented architecture. Web services are based on open technologies such as eXtensible Markup Language (XML) and offer a distributed approach for the integration of heterogeneous applications across the internet. The process of combining web services functionalities into one composite service is called web services composition. To perform this task, several languages such as Business Process Execution Language (BPEL), Web Services Flow Language (WSFL) and Web Service Choreography Interface (WSCI) have emerged. These languages are based on programming concepts and neglect the specification step which is very important in any software development process. In this paper, we address the formal specification of web services descriptions and the modelling of their composition using the model driven engineering principles. To this end, we propose a domain specific language (DSL) called S-GNet. The proposed DSL introduces new modelling elements which make it well adapted to the web services characteristics. We also propose a graph grammar which transforms Web Services Description Language (WSDL) descriptions into their equivalent S-GNet specifications. This grammar is integrated within an S-GNet modelling tool. &copy; 2014 Inderscience Enterprises Ltd.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {17543916},
  key           = {Web services},
  keywords      = {Computer programming languages;Formal languages;Hypertext systems;Information services;Problem oriented languages;Service oriented architecture (SOA);Social networking (online);Software design;Specifications;XML;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1504/IJCNDS.2014.064168},
}

@InProceedings{20140117164424,
  title     = {Software Language Engineering - 6th International Conference, SLE 2013, Proceedings},
  year      = {2013},
  volume    = {8225 LNCS},
  address   = {Indianapolis, IN, United states},
  abstract  = {The proceedings contain 20 papers. The topics discussed include: developing a domain-specific language for scheduling in the European energy sector; micro-machinations: a DSL for game economies; xMOF: executable DSMLs based on fUML; variability support in domain-specific language development; software evolution to domain-specific languages; safe specification of operator precedence rules; detecting ambiguity in programming language grammars; a pretty good formatting pipeline; the state of the art in language workbenches: conclusions from the language workbench challenge; a model-driven approach to enhance tool interoperability using the theory of models of computation; method and tool support for classifying software languages with Wikipedia; a language independent task engine for incremental name and type analysis; a generic framework for symbolic execution; mapping-aware megamodeling: design patterns and laws; and reifying concurrency for executable metamodeling.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20122215073689,
  author        = {Tariq, Muhammad Umer and Nasir, Hasan Arshad and Muhammad, Abubakr and Wolf, Marilyn},
  title         = {Model-driven performance analysis of large scale irrigation networks},
  year          = {2012},
  pages         = {151 - 160},
  address       = {Beijing, China},
  note          = {Cyber physical systems (CPSs);Domain specific modeling languages;Model transformation;Model-Driven Software Development;Modeling and simulation;},
  __markedentry = {[Neto:5]},
  abstract      = {Irrigation networks play a fundamental part in the agriculture system of various countries. In the wake of global environmental challenges and economic competition, efficient use of water resources has become extremely important. This can only be achieved by developing smarter control infrastructures for irrigation networks, via the incorporation of communication and computation technologies. Thus, future irrigation networks represent a prime example of cyber physical systems. Effective operation of these complex cyber physical systems is not possible with conventional methods and requires unprecedented levels of automation and decision-support tools. We argue that these cyber physical systems will require a complete model-driven toolset for effective operation. As a first step towards that tool flow, we have developed a model-driven simulation infrastructure for irrigation networks. In the future, we propose to complete the toolset by developing a model-driven configuration infrastructure. Our contributions in this paper include the development of a domain-specific modeling language (DSML) for irrigation networks, implementation of this DSML in Generic Modeling Environment (GME), and automatic simulator M-file generation capability from the DSML-based case diagram of an arbitrary irrigation network. Moreover, we present case studies of water distribution and flood management to show the utility as well as the effectiveness of our approach. We also present the performance of our toolset for the realistic scenario of irrigation networks in Pakistan. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, Duplicados},
  journal       = {Proceedings - 2012 IEEE/ACM 3rd International Conference on Cyber-Physical Systems, ICCPS 2012},
  key           = {Computer simulation},
  keywords      = {Decision support systems;Embedded systems;Flood control;Irrigation;Specification languages;Water resources;Water supply systems;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICCPS.2012.23},
}

@InProceedings{20123315330517,
  author        = {Li, Huiqing and Thompson, Simon},
  title         = {Let's make refactoring tools user-extensible!},
  year          = {2012},
  pages         = {32 - 39},
  address       = {Rapperswil, Switzerland},
  note          = {analysis;API;Concrete syntax;Erlang;extensible;Program transformations;Refactorings;Wrangler;},
  __markedentry = {[Neto:5]},
  abstract      = {We present a framework for making a refactoring tool extensible, allowing users to define refactorings from scratch using the concrete syntax of the language, as well as to describe complex refactorings in a domain-specific language for scripting. We demonstrate the approach in practice through a series of examples. The extension framework is built into Wrangler, a tool for refactoring Erlang programs, but we argue that the approach is equally applicable to tools for other languages. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Syntactics},
  keywords      = {DSL;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2328876.2328881},
}

@InProceedings{20144900279144,
  author        = {Li, Kaituo and Joshi, Pallavi and Gupta, Aarti and Ganai, Malay K.},
  title         = {ReproLite: A lightweight tool to quickly reproduce hard system bugs},
  year          = {2014},
  pages         = {ACM Special Interest Group on Management of Data (SIGMOD); ACM Special Interest Group on Operating Systems (SIGOPS) -},
  address       = {Seattle, WA, United states},
  note          = {Automatically generated;Cloud systems;Domain specific languages;Execution logs;Hard system bug;Internet users;Lightweight;Non-determinism;},
  __markedentry = {[Neto:5]},
  abstract      = {Cloud systems have become ubiquitous today - they are used to store and process the tremendous amounts of data being generated by Internet users. These systems run on hundreds of commodity machines, and have a huge amount of non-determinism (thousands of threads and hundreds of processes) in their execution. Therefore, bugs that occur in cloud systems are hard to understand, reproduce, and fix. The state-of-the-art of debugging in the industry is to log messages during execution, and refer to those messages later in case of errors. In ReproLite, we augment the already widespread process of debugging using logs by enabling testers to quickly and easily specify the conjectures that they form regarding the cause of an error (or bug) from execution logs, and to also automatically validate those conjectures. ReproLite includes a Domain Specific Language (DSL) that allows testers to specify all aspects of a potential scenario (e.g., specific workloads, execution operations and their orders, environment non-determinism) that causes a given bug. Given such a scenario, ReproLite can enforce the conditions in the scenario during system execution. Potential buggy scenarios can also be automatically generated from a sequence of log messages that a tester believes indicates the cause of the bug. We have experimented ReproLite with 11 bugs from two popular cloud systems, Cassandra and HBase. We were able to reproduce all of the bugs using ReproLite. We report on our experience with using ReproLite on those bugs.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the 5th ACM Symposium on Cloud Computing, SOCC 2014},
  key           = {Program debugging},
  keywords      = {Cloud computing;Computer debugging;Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2670979.2671004},
}

@InProceedings{20133716724973,
  author    = {Thillainathan, Niroshan and Hoffmann, Holger and Hirdes, Eike M. and Leimeister, Jan Marco},
  title     = {Enabling educators to design serious games - A serious game logic and structure modeling language},
  year      = {2013},
  volume    = {8095 LNCS},
  pages     = {643 - 644},
  address   = {Paphos, Cyprus},
  note      = {Didactical experts;Domain specific modeling languages;Educational contents;Educational context;Learning objectives;Model driven development;Programming knowledge;Structure modeling;},
  abstract  = {Serious games are applications combining educational content with gameplay by integrating learning objectives into a game-like environment to keep up the player's motivation to continue playing, and hence learning. This characteristic is highly sought after in educational contexts, making serious games a big asset for didactics [1]. Offering new learning contents through a game not only induces higher motivation, employing serious games can also yield higher learning success than presenting material in a classical, non-computer based, way [2]. Only few people having the proper didactical background to tailor the learning objectives to the students' need also have the programming knowledge and game design skills allowing them to develop didactically and technically sound serious games [3, 4]. In this paper, we argue for an approach to enable didactical experts, i.e. educators, to develop serious games adapted to their own learning content. To address this problem we develop a tool allowing educators to visually design their serious games, which is based on model driven development techniques that allow the generation of software from visual models. We describe the first step towards this tool, the development of the underlying domain specific modeling language (DSML). &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Learning systems},
  keywords  = {Motivation;Students;Tools;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-40814-4_92},
}

@InProceedings{20132816491630,
  author        = {Kurpick, Thomas and Pinkernell, Claas and Look, Markus and Rumpe, Bernhard},
  title         = {Modeling cyber-physical systems: Model-driven specification of energy efficient buildings},
  year          = {2012},
  pages         = {ACM Special Interest Group on Software Engineering (SIGSOFT); IEEE CS -},
  address       = {Innsbruck, Austria},
  note          = {CPS;Cyber physical systems (CPSs);Domain specific languages;energy;Model-driven;Specification of energy;Technical facility;UML;},
  __markedentry = {[Neto:5]},
  abstract      = {A lot of current buildings are operated energy inefficient and offer a great potential to reduce the overall energy consumption and CO<inf>2</inf> emission. Detecting these inefficiencies is a complicated task and needs domain experts that are able to identify them. Most approaches try to support detection by focussing on monitoring the building's operation and visualizing data. Instead our approach focuses on using techniques taken from the cyber-physical systems' modeling domain. We create a model of the building and show how we constrain the model by OCL-like rules to support a sound specification which can be matched against monitoring results afterwards. The paper presents our domain-specific language for modeling buildings and technical facilities that is implemented in a software-based tool used by domain experts and thus hopefully providing a suitable contribution to modeling the cyber-physical world. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the Modelling of the Physical World Workshop, MOTPW 2012},
  key           = {Models},
  keywords      = {Carbon dioxide;DSL;Embedded systems;Energy efficiency;Energy utilization;Problem oriented languages;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2491617.2491619},
}

@InProceedings{20153401202673,
  author        = {Barclay, Jack and Dhokia, Vimal and Nassehi, Aydin},
  title         = {Generating milling tool paths for prismatic parts using genetic programming},
  year          = {2015},
  volume        = {33},
  pages         = {490 - 495},
  address       = {Capri, Italy},
  note          = {Automatic Generation;Computer numerical control;Domain specific languages;Evolutionary process;Genetic programming system;Manual intervention;Relative performance;Tool path generation;},
  __markedentry = {[Neto:5]},
  abstract      = {The automatic generation of milling tool paths traditionally relies on applying complex tool path generation algorithms to a geometric model of the desired part. For parts with unusual geometries or intricate intersections between sculpted surfaces, manual intervention is often required when normal tool path generation methods fail to produce efficient tool paths. In this paper, a simplified model of the machining process is used to create a domain-specific language that enables tool paths to be generated and optimised through an evolutionary process -formulated, in this case, as a genetic programming system. The driving force behind the optimisation is a fitness function that promotes tool paths whose result matches the desired part geometry and favours those that reach their goal in fewer steps. Consequently, the system is not reliant on tool path generation algorithms, but instead requires a description of the desired characteristics of a good solution, which can then be used to measure and evaluate the relative performance of the candidate solutions that are generated. The performance of the system is less sensitive to different geometries of the desired part and doesn't require any additional rules to deal with changes to the initial stock (e.g. when rest roughing). The method is initially demonstrated on a number of simple test components and the genetic programming process is shown to positively influence the outcome. Further tests and extensions to the work are presented. &copy; 2014 The Authors. Published by Elsevier B.V.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, ScienceDirect, Duplicados},
  issn          = {22128271},
  journal       = {Procedia CIRP},
  key           = {Genetic programming},
  keywords      = {Algorithms;Computer control systems;Computer programming;Computer programming languages;Genetic algorithms;Geometry;Manufacture;Milling (machining);Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.procir.2015.06.060},
}

@InProceedings{20143618129747,
  author    = {Machot, Fadi Al and Mayr, Heinrich C. and Michael, Judith},
  title     = {Behavior modeling and reasoning for ambient support: HCM-L modeler},
  year      = {2014},
  volume    = {8482 LNAI},
  number    = {PART 2},
  pages     = {388 - 397},
  address   = {Kaohsiung, Taiwan},
  note      = {Ambient Assistance;Answer set programming;Behavior model;Knowledge base;Model languages;Model mappings;Modeling tool;Reasoning;},
  abstract  = {This paper introduces the architecture and the features of the HCM-L Modeler, a modeling tool supporting the Human Cognitive Modeling Language HCM-L and a comprehensive reasoning approach for Human Cognitive Models based on Answer Set Programming. The HCM-L tool has been developed using the ADOxx&reg; meta modeling platform and following the principles of the Open Modeling Initiative: to provide open models that are formulated in an arbitrary, domain specific modeling language, which however is grounded in a common ontological framework, and therefore easily to translate in another language depending of the given purpose. &copy; 2014 Springer International Publishing Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Cognitive systems},
  keywords  = {Intelligent systems;Knowledge based systems;Logic programming;Ontology;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-07467-2_41},
}

@Article{20164302941951,
  author    = {Vogele, Christian and van Hoorn, Andre and Schulz, Eike and Hasselbring, Wilhelm and Krcmar, Helmut},
  title     = {WESSBAS: extraction of probabilistic workload specifications for load testing and performance predictiona model-driven approach for session-based application systems},
  journal   = {Software and Systems Modeling},
  year      = {2016},
  pages     = {1 - 35},
  note      = {Domain specific languages;Industry-standard benchmarks;Model driven approach;Performance characteristics;Performance evaluation tools;Performance Model;Performance prediction;Testing and modeling;},
  abstract  = {The specification of workloads is required in order to evaluate performance characteristics of application systems using load testing and model-based performance prediction. Defining workload specifications that represent the real workload as accurately as possible is one of the biggest challenges in both areas. To overcome this challenge, this paper presents an approach that aims to automate the extraction and transformation of workload specifications for load testing and model-based performance prediction of session-based application systems. The approach (WESSBAS) comprises three main components. First, a system- and tool-agnostic domain-specific language (DSL) allows the layered modeling of workload specifications of session-based systems. Second, instances of this DSL are automatically extracted from recorded session logs of production systems. Third, these instances are transformed into executable workload specifications of load generation tools and model-based performance evaluation tools. We present transformations to the common load testing tool Apache JMeter and to the Palladio Component Model. Our approach is evaluated using the industry-standard benchmark SPECjEnterprise2010 and the World Cup 1998 access logs. Workload-specific characteristics (e.g., session lengths and arrival rates) and performance characteristics (e.g., response times and CPU utilizations) show that the extracted workloads match the measured workloads with high accuracy. &copy; 2016 The Author(s)},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {16191366},
  key       = {Load testing},
  keywords  = {Computer programming languages;Extraction;Forecasting;Modeling languages;Problem oriented languages;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-016-0566-5},
}

@InProceedings{20160101752174,
  author        = {Aerts, Arend and Mousavi, Mohammad Reza and Reniers, Michel},
  title         = {A tool prototype for model-based testing of cyber-physical systems},
  year          = {2015},
  volume        = {9399},
  pages         = {563 - 572},
  address       = {Cali, Colombia},
  note          = {Acumen;Conformance testing;Cyber physical systems (CPSs);DC-DC boost converters;Domain specific languages;Hybrid system models;Model based testing;Test case generation;},
  __markedentry = {[Neto:5]},
  abstract      = {We report on a tool prototype for model-based testing of cyber-physical systems. Our starting point is a hybrid-system model specified in a domain-specific language called Acumen. Our prototype tool is implemented in Matlab and covers three stages of model-based testing, namely, test-case generation, test-case execution, and conformance analysis. We have applied our implementation to a number of typical examples of cyber-physical systems in order to analyze its applicability. In this paper, we report on the result of applying the prototype tool on a DC-DC boost converter. &copy; Springer International Publishing Switzerland 2015.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Embedded systems},
  keywords      = {Computer programming languages;DC-DC converters;Hybrid systems;MATLAB;Model checking;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-25150-9_32},
}

@InProceedings{20143718153646,
  author    = {Tatibouet, Jeremie and Cuccuru, Arnaud and Gerard, Sebastien and Terrier, Francois},
  title     = {Towards a systematic, tool-independent methodology for defining the execution semantics of UML profiles with fUML},
  year      = {2014},
  pages     = {182 - 192},
  address   = {Lisbon, Portugal},
  note      = {Alf;DSML;Execution;FUML;MoC;Profile;Turing;},
  abstract  = {The purpose of UML profile mechanism is to design domain specific languages (DSL) based on UML. It exists a wide range of UML profiles: MARTE, ROOM, SysML. Current profile design methodology only considers the syntactic part of the language and keeps informal the execution semantics description. This impairs Model Driven Engineering (MDE) promises which advocates for executable models. This paper presents a systematic approach to formalize the execution semantics of UML profiles using foundational UML (normative specification) which defines a precise semantics for a subset of UML. This approach is integrated into the reference profile design methodology. It is illustrated on a small profile to support Turing machines. It demonstrates capability to execute resulting profiled models through the defined semantics. Copyright &copy; 2014 SCITEPRESS - Science and Technology Publications. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  key       = {Unified Modeling Language},
  keywords  = {Computer programming languages;Design;Markup languages;Semantics;Software design;Turing machines;},
  language  = {English},
}

@InProceedings{20123915476603,
  author        = {Benchaib, Yacine and Chaudet, Claude},
  title         = {Virmanel: A mobile multihop network virtualization tool},
  year          = {2012},
  pages         = {67 - 74},
  address       = {Istanbul, Turkey},
  note          = {Domain specific languages;Ease-of-use;Firewall rules;Large networks;Mobile multihop networks;Mobility model;Multihop mobile networks;Network connectivity;Open sources;Real softwares;System levels;Virtual machines;Virtualization tools;Virtualizations;Wireless multi-hop network;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes VIRMANEL, a new, open source (LGPL) tool that we developed to run experiments and evaluate protocols and algorithms on mobile multihop networks using real software and real operating systems. VIRMANEL comprises an integrated domain-specific language to define new mobility models, a Graphical User Interface to study the behavior of mobiles nodes and a controller engine that emulates a multihop mobile network by setting firewall rules between virtual machines to define network connectivity. Designed to work with OpenVZ1, an eficient operating system-level virtualization tool, VIRMANEL combines ease of use and ef- ficiency by enabling the study of large networks distributed over multiple physical machines. Copyright &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the Annual International Conference on Mobile Computing and Networking, MOBICOM},
  key           = {Wireless networks},
  keywords      = {Carrier mobility;Computer system firewalls;Graphical user interfaces;Open systems;Problem oriented languages;Testbeds;Virtual reality;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2348688.2348703},
}

@InProceedings{20141817636840,
  title     = {ESM 2012 - 2012 European Simulation and Modelling Conference: Modelling and Simulation 2012},
  year      = {2012},
  pages     = {The European Simulation Society (EUROSIS); FOM University of Applied Sciences; Ghent University; The University of Skovde; The Higher Technology Institute -},
  address   = {Essen, Germany},
  abstract  = {The proceedings contain 61 papers. The topics discussed include: Markov chain Monte Carlo methods to analyze the steady-state flux solution space of metabolic network models; nonparametric estimation of a survival function using refined descriptive sampling; COASTGEN: a new agent based modeling tool for invasive spartina species; vine model design using a domain specific modeling language: prototype &amp; proof of concept; a distributed simulation tool on windows phone 7; a CFD approach for CANDU6 fuel bundle subcooled boiling flow; development of CANDU 6 moderator models for simulating the flow circulation and predicting temperature distribution inside the Calandria vessel; providing a graphical user interface for the modeling of network simulator 3 scenarios; and influence of relative traffic distribution in nodes with blocking: an analytical model.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  journal   = {ESM 2012 - 2012 European Simulation and Modelling Conference: Modelling and Simulation 2012},
  keywords  = {rank5},
  language  = {English},
}

@InProceedings{20160401841687,
  author    = {Van Broeckhoven, Frederik and Vlieghe, Joachim and De Troyer, Olga},
  title     = {Mapping between Pedagogical Design Strategies and Serious Game Narratives},
  year      = {2015},
  pages     = {University of Skovde -},
  address   = {Skovde, Sweden},
  note      = {Annotation systems;Cyber bullying;Domain specific modeling languages;Intervention methods;Multi-disciplinary collaborations;Multi-disciplinary groups;Pedagogical designs;Pedagogical experts;},
  abstract  = {Successful serious games include a compelling narrative context and empirically validated pedagogical intervention methods. In order to create such games, design teams must consist of a multidisciplinary group of technical and pedagogical experts. In this paper, the authors show how the domain specific modeling language ATTAC-L facilitates communication between designers with different expertise, thus enabling and stimulating multidisciplinary collaboration. As a serious game design tool, ATTAC-L creates a link between the processes of pedagogical design and narrative modeling through its elaborate annotation system. As such, this modeling language enables designers to concentrate on aspects related to their field of expertise without losing oversight of the serious game as a whole. To support these tentative claims, the author present illustrations of how ATTAC-L is used in combination with a specific pedagogical design strategy (i.e. the Intervention Mapping Protocol) for the development of a serious game against cyber-bullying. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, excluidos},
  journal   = {VS-Games 2015 - 7th International Conference on Games and Virtual Worlds for Serious Applications},
  key       = {Design},
  keywords  = {Computational linguistics;Education;Mapping;Modeling languages;Specification languages;Virtual reality;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/VS-GAMES.2015.7295780},
}

@InProceedings{20161602247485,
  author        = {Geyer, Fabien and Schneele, Stefan and Carle, Georg},
  title         = {PETFEN: A performance evaluation tool for flow-level network modeling of ethernet networks},
  year          = {2014},
  pages         = {25 - 30},
  address       = {Bratislava, Slovakia},
  note          = {Discrete-event simulators;Effective domains;Ethernet networks;Link utilization;Network modeling;Network traffic modeling;Performance evaluation;Performance evaluation tools;},
  __markedentry = {[Neto:5]},
  abstract      = {We present in this paper PETFEN, a Performance Evaluation Tool for Flow-level network modeling of Ethernet Networks. Flow-level network models are a useful tool to dimension and predict various performances of networks with TCP and UDP flows, providing information such as mean flow bandwidths, link utilizations or queue sizes. While the literature on flow-level network models is extensive, there is still a lack of tools for numerical evaluations on user provided topologies. In this paper, we describe the three components of PETFEN: (i) an effective domain specific language used for algorithmically describing topologies, (ii) a mathematical toolbox for the numerical evaluation of flow-level network models on the provided topologies, (iii) modules for the evaluation of the topologies with external tools. Via various numerical evaluations, we compare the results of PETFEN with results of SimGrid, another tool based on flow-level network models, as well as results of the discrete event simulator OMNeT++. &copy; Copyright 2015 ICST.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {Proceedings of the 8th International Conference on Performance Evaluation Methodologies and Tools, VALUETOOLS 2014},
  key           = {Internet protocols},
  keywords      = {Computer programming languages;Discrete event simulation;Ethernet;Numerical models;Problem oriented languages;Topology;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.4108/icst.valuetools.2014.258166},
}

@InProceedings{20161302149612,
  author    = {Boube, Erwan and Corley, Jonathan and Combemale, Benoit and Gray, Jeff and Baudry, Benoit},
  title     = {Supporting efficient and advanced omniscient debugging for xDSMLs},
  year      = {2015},
  pages     = {137 - 148},
  address   = {Pittsburgh, PA, United states},
  note      = {Debuggers;Domain specific modeling languages;Error prone tasks;Execution trace;General purpose languages;Generic solutions;Omniscient debugging;XDSML;},
  abstract  = {Omniscient debugging is a promising technique that relies on execution traces to enable free traversal of the states reached by a system during an execution. While some General-Purpose Languages (GPLs) already have support for omniscient debugging, developing such a complex tool for any executable Domain-Specific Modeling Language (xDSML) remains a challenging and error prone task. A solution to this problem is to define a generic omniscient debugger for all xDSMLs. However, generically supporting any xDSML both compromises the efficiency and the usability of such an approach. Our contribution relies on a partly generic omniscient debugger supported by generated domain-specific trace management facilities. Being domain-specific, these facilities are tuned to the considered xDSML for better efficiency. Usability is strengthened by providing multidimensional omniscient debugging. Results show that our approach is on average 3.0 times more efficient in memory and 5.03 more efficient in time when compared to a generic solution that copies the model at each step. &copy; 2015 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {SLE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  key       = {Program debugging},
  keywords  = {Computational linguistics;Computer programming languages;Efficiency;Modeling languages;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2814251.2814262},
}

@InProceedings{20160902036908,
  author        = {Groce, Alex and Pinto, Jervis and Azimi, Pooria and Mittal, Pranjal},
  title         = {TSTL: A language and tool for testing (demo)},
  year          = {2015},
  pages         = {414 - 417},
  address       = {Baltimore, MD, United states},
  note          = {Automated testing;Delta debugging;Domain specific languages;Programming tasks;Python;Source language;Support testing;Testing tools;},
  __markedentry = {[Neto:5]},
  abstract      = {Writing a test harness is a difficult and repetitive programming task, and the lack of tool support for customized automated testing is an obstacle to the adoption of more sophisticated testing in industry. This paper presents TSTL, the Template Scripting Testing Language, which allows users to specify the general form of valid tests for a system in a simple but expressive language, and tools to support testing based on a TSTL definition. TSTL is a minimalist template- based domain-specific language, using the source language of the Software Under Test (SUT) to support most operations, but adding declarative idioms for testing. TSTL compiles to a common testing interface that hides the details of the SUT and provides support for logging, code coverage, delta debugging, and other core testing functionality, making it easy to write universal testing tools such as random testers or model checkers that apply to all TSTL-defined harnesses. TSTL is currently available for Python, but easily adapted to other languages as well. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {2015 International Symposium on Software Testing and Analysis, ISSTA 2015 - Proceedings},
  key           = {Software testing},
  keywords      = {Computational linguistics;Computer programming;Computer programming languages;Graphical user interfaces;High level languages;Model checking;Natural language processing systems;Problem oriented languages;XML;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2771783.2784769},
}

@InProceedings{20160201784907,
  author        = {Gunalp, Ozan and Escoffier, Clement and Lalanda, Philippe},
  title         = {Rondo: A Tool Suite for Continuous Deployment in Dynamic Environments},
  year          = {2015},
  pages         = {720 - 727},
  address       = {New York, NY, United states},
  note          = {Computing environments;Continuous Deployment;Domain specific languages;Dynamic environments;Dynamism;Heterogeneous environments;Service oriented application;Service oriented computing;},
  __markedentry = {[Neto:5]},
  abstract      = {Driven by the emergence of new computing environments, dynamically evolving software systems makes it impossible for developers to deploy software with human-centric processes. Instead, there is an increasing need for automation tools that continuously deploy software into execution, in order to push updates or adapt existing software regarding contextual and business changes. Existing solutions fall short on providing fault-tolerant, reproducible deployments that can scale on heterogeneous environments. In this paper we present Rondo, a tool suite that enables continuous deployment for dynamic, service-oriented applications. At the center of these tools, we propose a deterministic and idem potent deployment process. We provide with Rondo a deployment manager that implements this process and capable of conducting deployments and continuously adapting applications according to the changes in the current target platform. The tool suite also includes a domain-specific language for describing deployment requests. We validate our approach in multiple projects, for provisioning the platform as well as for installing applications and continuous reconfigurations. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - 2015 IEEE International Conference on Services Computing, SCC 2015},
  key           = {Computer aided software engineering},
  keywords      = {Computer programming languages;Distributed computer systems;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/SCC.2015.102},
}

@Article{20143600043933,
  author    = {Selim, Gehan M. K. and Wang, Shige and Cordy, James R. and Dingel, Juergen},
  title     = {Model transformations for migrating legacy deployment models in the automotive industry},
  journal   = {Software and Systems Modeling},
  year      = {2013},
  volume    = {14},
  number    = {1},
  pages     = {365 - 381},
  note      = {Automotive control softwares;AutoSAR;Model transformation;Model-driven development;Transformation languages;},
  abstract  = {Many companies in the automotive industry have adopted model-driven development in their vehicle software development. As a major automotive company, General Motors (GM) has been using a custom-built, domain-specific modeling language, implemented as an internal proprietary metamodel, to meet the modeling needs in its control software development. Since AUTomotive Open System ARchitecture (AUTOSAR) has been developed as a standard to ease the process of integrating components provided by different suppliers and manufacturers, there has been a growing demand to migrate these GM-specific, legacy models to AUTOSAR models. Given that AUTOSAR defines its own metamodel for various system artifacts in automotive software development, we explore applying model transformations to address the challenges in migrating GM-specific, legacy models to their AUTOSAR equivalents. As a case study, we have built and validated a model transformation using the MDWorkbench tool, the Atlas Transformation Language, and the Metamodel Coverage Checker tool. This paper reports on the case study, makes observations based on our experience to assist in the development of similar types of transformations, and provides recommendations for further research. &copy; 2013, Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16191366},
  key       = {Software design},
  keywords  = {Automobile manufacture;Automotive industry;Black-box testing;Computational linguistics;Embedded systems;Model checking;Modeling languages;Open systems;Software testing;Specification languages;Supply chains;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-013-0365-1},
}

@InProceedings{20123015267169,
  author        = {Simic, Hrvoje},
  title         = {Predicate trees: A tool for descriptive subgraph extraction},
  year          = {2012},
  pages         = {Vestlandsforsking; Sitech; DataArt; Eau de Web; PlanetData Network of Excellence -},
  address       = {Craiova, Romania},
  note          = {Linked datum;RDF data;Scala;SPARQL;Subgraph extraction;},
  __markedentry = {[Neto:5]},
  abstract      = {Extracting a subgraph descriptive of a single resource from a given RDF graph is an issue relevant to the Linked Data initiative, RDF triple stores and Semantic Web in general. Existing methods of subgraph extraction tend to be either simple and inexpressive, or else powerful and complex. This paper introduces a novel method of descriptive subgraph extraction as a new expression language and as a domain-specific language library in Scala, which aims to be more expressive than the former and easier to write and use than the latter methods. These expressions can then be translated into SPARQL, used directly on triple pattern matching interfaces for RDF graphs, or as DESCRIBE handlers in SPARQL engines. A comparison highlighting advantages and limitations of the new method is also given. Copyright 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Semantic Web},
  keywords      = {Data handling;Pattern matching;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2254129.2254160},
}

@InProceedings{20155201735059,
  author    = {Peralta, Alvaro Jose and Le, Nguyen Tuan Thanh and Stinckwich, Serge and Hanachi, Chihab and Bergel, Alexandre and Ho, Tuong Vinh},
  title     = {A tool for assessing quality of rescue plans by combining visualizations of different business process perspectives},
  year      = {2015},
  volume    = {233},
  pages     = {155 - 166},
  address   = {Tunis, Tunisia},
  note      = {Allocation strategy;BPMN;Business process model;Crisis situations;Domain specific languages;Formal structures;Rescue plans;Static and dynamic analysis;},
  abstract  = {Rescue plans for crisis situations such as natural or made disasters are mostly presented in a textual format to the relevant authority. Assessing the quality of a rescue plan requires analyzing different perspectives, such as plan complexity, resources costs, service time, allocation strategy and organization efficiency. Unfortunately, textual rescue plans lack a formal structure to ease the reading and navigation through the document. To address this problem we are composing tailored visualizations, each visualization representing a particular perspective. We provide a domain specific language to describe domain specific visualizations of processes. We validate our approach using static and dynamic analysis of the Ho Chi Minh city rescue plan in case of a tsunami. Our approach provides recommendations that are useful for the authority to improve the original rescue plan. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  key       = {Information management},
  keywords  = {Computer programming languages;Flow visualization;Information systems;Problem oriented languages;Systems engineering;Visualization;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-24399-3_14},
}

@InProceedings{20144800250273,
  author    = {Karnitis, Girts and Bicevska, Zane and Cerina-Berzina, Jana and Bicevskis, Janis},
  title     = {Practitioners approach to business processes modeling},
  year      = {2014},
  volume    = {Databases and Information Systems VIII -Selected Papers from the Eleventh International Baltic Conference,DB\&IS 2014},
  pages     = {343 - 356},
  address   = {Tallinn, Estonia},
  note      = {Business modeling;Business Process;Business process model;Domain specific languages;Executable model;Modeling type;Public institution;Support tool;},
  abstract  = {This paper describes experience in business process modeling using Domain Specific Language (DSL) in several public institutions in Latvia. Authors identified five types of business model use: (1) informal model to enhance comprehension of business processes, (2) manually or semi-automatically executable model to define business processes, (3) model to specify requirements for information system (IS), (4) executable model as component of IS and (5) model to verify correctness of business processes. Authors analyze special requirements dictated by each type of use towards DSL and its support tools. Authors demonstrate ude-cases for each model type. &copy; 2014 The authors and IOS Press.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {09226389},
  journal   = {Frontiers in Artificial Intelligence and Applications},
  key       = {Process engineering},
  keywords  = {Computer programming languages;Information systems;Problem oriented languages;Systems engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.3233/978-1-61499-458-9-343},
}

@Article{20153201109246,
  author    = {Semerath, Oszkar and Barta, agnes and Horvath, akos and Szatmari, Zoltan and Varro, Daniel},
  title     = {Formal validation of domain-specific languages with derived features and well-formedness constraints},
  journal   = {Software and Systems Modeling},
  year      = {2015},
  note      = {Derived features;Design environment;Domain specific languages;Language validation;Partial snapshots;Performance experiment;Smt solvers;Transitive closure;},
  abstract  = {Despite the wide range of existing tool support, constructing a design environment for a complex domain-specific language (DSL) is still a tedious task as the large number of derived features and well-formedness constraints complementing the domain metamodel necessitate special handling. Such derived features and constraints are frequently defined by declarative techniques (such graph patterns or OCL invariants). However, for complex domains, derived features and constraints can easily be formalized incorrectly resulting in inconsistent, incomplete or ambiguous DSL specifications. To detect such issues, we propose an automated mapping of EMF metamodels enriched with derived features and well-formedness constraints captured as graph queries in EMF-IncQuery or (a subset of) OCL invariants into an effectively propositional fragment of first-order logic which can be efficiently analyzed by back-end reasoners. On the conceptual level, the main added value of our encoding is (1) to transform graph patterns of the EMF-IncQuery framework into FOL and (2) to introduce approximations for complex language features (e.g., transitive closure or multiplicities) which are not expressible in FOL. On the practical level, we identify and address relevant challenges and scenarios for systematically validating DSL specifications. Our approach is supported by a tool, and it will be illustrated on analyzing a DSL in the avionics domain. We also present initial performance experiments for the validation using Z3 and Alloy as back-end reasoners. &copy; 2015 Springer-Verlag Berlin Heidelberg},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {16191366},
  key       = {Computational linguistics},
  keywords  = {Computer programming languages;Formal logic;Graphical user interfaces;Problem oriented languages;Specifications;XML;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-015-0485-x},
}

@Article{20150500483596,
  author    = {Moline, Eric and Morette, Nicolas and Novales, Cyril and Vieyres, Pierre},
  title     = {Robotic engineers specifications for a well-fitted model-driven control architecture for robots},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year      = {2014},
  volume    = {8810},
  pages     = {170 - 181},
  note      = {Associated tool;Component-based models;Domain specific languages;Model driven architectures;Model driven control;Robot architecture;Robotic architectures;Software model;},
  abstract  = {This paper gives an overview of reflections about more generic robotic architectures models and their associated tools. The objective of our work is not to define a new robot software but rather to specify common robotic requirements for future component-based models. These models could be used as a common-base by the robotic sub-communities whatever the purpose their different robots have been designed for, whatever the targeted hardware, the chosen frameworks or the host operating systems. Even if we are not yet strongly familiar with the specificities of the Model-Driven Architecture (MDA) and with the Domain-Specific Language (DSL), we are self-convinced by the powerful benefits that these two fields could bring to robotics and to robotic architecture models. In this paper, we discuss about the characteristics a robotic architecture model should own to be efficiently designed by software model engineers and easily but efficiently used by robot engineers. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, excluidos},
  issn      = {03029743},
  key       = {Robotics},
  keywords  = {Computer programming languages;Engineers;Problem oriented languages;Robots;Software architecture;Software design;},
  language  = {English},
}

@InProceedings{20134516952780,
  author    = {Semerath, Oszkar and Horvath, Akos and Varro, Daniel},
  title     = {Validation of derived features and well-formedness constraints in DSLs: By mapping graph queries to an SMT-solver},
  year      = {2013},
  volume    = {8107 LNCS},
  pages     = {538 - 554},
  address   = {Miami, FL, United states},
  note      = {Automated mapping;Design environment;Domain specific languages;First order logic;Incremental modeling;Model validation;SMT-solvers;Transitive closure;},
  abstract  = {Despite the wide range of existing generative tool support, constructing a design environment for a complex domain-specific language (DSL) is still a tedious task as the large number of derived features and well-formedness constraints complementing the domain metamodel necessitate special handling. Incremental model queries as provided by the EMF-IncQuery framework can (i) uniformly specify derived features and well-formedness constraints and (ii) automatically refresh their result set upon model changes. However, for complex domains, derived features and constraints can be formalized incorrectly resulting in incomplete, ambiguous or inconsistent DSL specifications. To detect such issues, we propose an automated mapping of EMF metamodels enriched with derived features and well-formedness constraints captured as graph queries in EMF-IncQuery into an effectively propositional fragment of first-order logic which can be efficiently analyzed by the Z3 SMT-solver. Moreover, overapproximations are proposed for complex query features (like transitive closure and recursive calls). Our approach will be illustrated on analyzing a DSL being developed for the avionics domain. &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Models},
  keywords  = {Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-41533-3_33},
}

@InProceedings{20125015782922,
  author    = {Unutulmaz, A. and Dundar, G. and Fernandez, F.V.},
  title     = {LDS based tools to ease template construction},
  year      = {2012},
  pages     = {61 - 64},
  address   = {Seville, Spain},
  note      = {Analog layout;Domain specific languages;Layout templates;},
  abstract  = {Layout Description Script (LDS) is a domain specific language (DSL) intended to describe analog layouts. This paper introduces an LDS based tool, Capture, and an add-on, LDS Analyzer, for LDS. Capture aims to convert layout images into layout templates. Components of a layout are extracted with this tool and a template is synthesized from the extracted data. LDS Analyzer is an enhanced LDS parser. Analyzer investigates an LDS statement and conducts either simple parsing or enhanced parsing which make use of symbolic variables. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {2012 International Conference on Synthesis, Modeling, Analysis and Simulation Methods and Applications to Circuit Design, SMACD 2012},
  key       = {Software engineering},
  keywords  = {Chemistry;Circuit simulation;Speech synthesis;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SMACD.2012.6339417},
}

@InProceedings{20144800255625,
  author    = {Maroti, Miklos and Kecskes, Tamas and Kereskenyi, Robert and Broll, Brian and Volgyesi, Peter and Juracz, Laszlo and Levendoszky, Tihamer and Ledeczi, Akos},
  title     = {Next generation (Meta)modeling: Web- and cloud-based collaborative tool infrastructure},
  year      = {2014},
  volume    = {1237},
  pages     = {41 - 60},
  address   = {Valencia, Spain},
  note      = {Collaboration;Collaborative tools;Cross-cutting concerns;Domain specific modeling languages;DSML;Meta model;Multi paradigm modeling;Web-based architecture;},
  abstract  = {The paper presents WebGME, a novel, web- and cloud-based, collaborative, scalable (meta)modeling tool that supports the design of Domain Specific Modeling Languages (DSML) and the creation of corresponding domain models. The unique prototypical inheritance, originally introduced by GME, is extended in WebGME to fuse metamodeling with modeling. The tool also introduces novel ways to model cross-cutting concerns. These concepts are especially useful for multi-paradigm modeling. The main design drivers for WebGME have been scalability, extensibility and version control. The web-based architecture and the constraints the browser-based environment introduces provided significant challenges that WebGME has overcome with balanced trade-offs. The paper describes the architecture of WebGME, argues why the major design decisions were taken and presents the novel features of the tool.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Social networking (online)},
  keywords  = {Design;Economic and social effects;Embedded systems;Specification languages;Web browsers;},
  language  = {English},
}

@InProceedings{20140917372806,
  author        = {Ozik, Jonathan and Collier, Nicholson T. and Murphy, John T. and North, Michael J.},
  title         = {The ReLogo agent-based modeling language},
  year          = {2013},
  pages         = {1560 - 1568},
  address       = {Washington, DC, United states},
  note          = {Agent-based model;Code libraries;Domain specific languages;Dynamically typed languages;High performance computing;Integrated development environment;Open sources;Programming idioms;},
  __markedentry = {[Neto:5]},
  abstract      = {ReLogo is a new agent-based modeling (ABM) domain specific language (DSL) for developing agent-based models in the free and open source Repast Suite of ABM tools; the Java based Repast Simphony ABM toolkit and the C++ high performance computing Repast HPC toolkit both incorporate ReLogo. The language is geared towards a wide range of modeling and programming expertise, combining the sophisticated and powerful ABM infrastructure and capabilities in the Repast Suite with the ease of use of the Logo programming language and its associated programming idioms. This paper will present how ReLogo combines a number of concepts, including object-oriented programming, simple integration of existing code libraries, statically and dynamically typed languages, domain specific languages, and the use of integrated development environments, to create an ABM tool that is easy to learn yet is also capable of creating large scale ABMs of real world complex systems. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings of the 2013 Winter Simulation Conference - Simulation: Making Decisions in a Complex World, WSC 2013},
  key           = {Open systems},
  keywords      = {Computational methods;Computer programming languages;Decision making;Object oriented programming;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/WSC.2013.6721539},
}

@InProceedings{20150500483149,
  author    = {Hiya, Shuhei and Hisazumi, Kenji and Fukuda, Akira and Nakanishi, Tsuneo},
  title     = {Clooca : Web based tool for domain specific modeling},
  year      = {2013},
  volume    = {1115},
  pages     = {31 - 35},
  address   = {Miami, FL, United states},
  note      = {Code generators;Development environment;Domain specific modeling;Domain specific modeling languages;DSML;Level of abstraction;Professional knowledge;SaaS;},
  abstract  = {Clooca is a development environment that allows us to build up domain-specific modeling languages, or DSMLs, and their code gen- erators. DSMLs are widely used to improve productivity and quality of developing software to raise the level of abstraction and to generate a fully functional software codes. Currently some tools to develop software are provided as web services. We can use the tool without installing any software and without professional knowledge of software development. Even domain specialists who do not know how to develop software can use it. Therefore, we tackle with developing software-as-a-service(SaaS) type of DSML tools to bring benefits of both DSML and SaaS type of development tools. We chose to use clooca in an education setting, because this tool solves some problems in that field. The youtube link is http://www.youtube.com/watch?v=VS5VNB0YA-o. The youtube link is http://www.youtube.com/watch?v=VS5VNB0YA-o.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Duvida},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Software as a service (SaaS)},
  keywords  = {Codes (symbols);Computational linguistics;Education computing;Embedded systems;Modeling languages;Productivity;Social networking (online);Software design;Software engineering;Specification languages;Technology transfer;Web services;Websites;World Wide Web;},
  language  = {English},
}

@InProceedings{20122915249390,
  author    = {Hlaoui, Yousra Bendaly and Ben Ayed, Leila Jemni and Ben Fradj, Imen},
  title     = {A model driven approach to compose and develop Grid service workflow applications},
  year      = {2012},
  address   = {Sousse, Tunisia},
  note      = {Activity diagram;BPEL4WS;BPEL4WS language;Domain specific languages;Grid service workflow;Grid services;Meta model;Model driven approach;UML activity diagrams;Workflow models;},
  abstract  = {We use a Domain Specific Language (DSL) based on UML activity diagrams (UML-AD) to specify and compose systematically workflow models from Grid services. To be executed, workflow activity diagram models should be translated into BPEL4WS models which will be executed by the BPEL4WS engine. To reach this objective, we propose a meta-model based transformation from UML activity diagrams to BPEL4WS language. To ensure the correctness and the completion of the transformation, we propose a graph homomorphic mapping between the activity diagram and BPEL4WS language elements. To execute the BPEL4WS provided model, we propose in this paper an execution infrastructure based on The Globus Tool Kit. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {2012 International Conference on Information Technology and e-Services, ICITeS 2012},
  key       = {Telecommunication services},
  keywords  = {Grid computing;Information technology;Systems analysis;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ICITeS.2012.6216638},
}

@InProceedings{20134416925186,
  author        = {Iliasov, Alexei and Lopatkin, Ilya and Romanovsky, Alexander},
  title         = {The SafeCap platform for modelling railway safety and capacity},
  year          = {2013},
  volume        = {8153 LNCS},
  pages         = {130 - 137},
  address       = {Toulouse, France},
  note          = {capacity-improving patterns;Domain specific languages;Eclipse;Event-B;GMF;Model transformation;ProB;Smt solvers;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes a tooling platform that supports reasoning about railway capacity while ensuring system safety. It uses a Domain Specific Language (DSL) that allows signalling engineers to design stations and junctions, to check their safety and to evaluate the potential improvements of capacity while applying various alteration patterns that change the railway schemas. The platform uses a combination of model checking and SMT solving to verify system safety in the most efficient and user-friendly way. It includes several plug-ins that evaluate various capacity parameters. The tool uses the Eclipse technology, including its EMF and GMF frameworks. It has been developed in close cooperation with the Invensys Rail engineers and applied in a variety of mediumscale projects, which has demonstrated its ability to help understand the effects that changes in the plans and schemas can potentially have on capacity. &copy; 2013 Springer-Verlag.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Security of data},
  keywords      = {Electric potential;Model checking;Problem oriented languages;Railroad transportation;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-40793-2_12},
}

@InProceedings{20140917370419,
  author    = {George, Nithin and Novo, David and Rompf, Tiark and Odersky, Martin and Ienne, Paolo},
  title     = {Making domain-specific hardware synthesis tools cost-efficient},
  year      = {2013},
  pages     = {120 - 127},
  address   = {Kyoto, Japan},
  note      = {Cost-effective approach;Domain specific languages;Efficient implementation;Hardware implementations;Hardware synthesis;High level of abstraction;High level specification;High-level synthesis;},
  abstract  = {Tools to design hardware at a high level of abstraction promise software-like productivity for hardware designs. Among them, tools like Spiral, HDL Coder, Optimus and MMAlpha target specific application domains and produce highly efficient implementations from high-level input specifications in a Domain Specific Language (DSL). But, developing similar domain-specific High-Level Synthesis (HLS) tools need enormous effort, which might offset their many advantages. In this paper, we propose a novel, cost-effective approach to develop domain-specific HLS tools. We develop the HLS tool by embedding its input DSL in Scala and using Lightweight Modular Staging (LMS), a compiler framework written in Scala, to perform optimizations at different abstraction levels. For example, to optimize computation on matrices, some optimizations are more effective when the program is represented at the level of matrices while others are better applied at the level of individual matrix elements. To illustrate the proposed approach, we create an HLS flow to automatically generate efficient hardware implementations of matrix expressions described in our own high-level specification language. Although a simple example, it shows how easy it is to reuse modules across different HLS flows and to integrate our flow with existing tools like LegUp, a C-to-RTL compiler, and FloPoCo, an arithmetic core generator. The results reveal that our approach can simultaneously achieve high productivity and design quality with a very reasonable tool development effort. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, excluidos},
  journal   = {FPT 2013 - Proceedings of the 2013 International Conference on Field Programmable Technology},
  key       = {Tools},
  keywords  = {Computer programming languages;Hardware;Optimization;Productivity;Program compilers;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/FPT.2013.6718341},
}

@Article{20143017980323,
  author        = {Satyanarayan, Arvind and Heer, Jeffrey},
  title         = {Authoring narrative visualizations with Ellipsis},
  journal       = {Computer Graphics Forum},
  year          = {2014},
  volume        = {33},
  number        = {3},
  pages         = {361 - 370},
  note          = {Descriptors;Domain specific languages;Graphical interface;Information interfaces;Interactive narrative;Prototyping tools;Technical expertise;Visualization tools;},
  __markedentry = {[Neto:5]},
  abstract      = {Data visualization is now a popular medium for journalistic storytelling. However, current visualization tools either lack support for storytelling or require significant technical expertise. Informed by interviews with journalists, we introduce a model of storytelling abstractions that includes state-based scene structure, dynamic annotations and decoupled coordination of multiple visualization components. We instantiate our model in Ellipsis: a system that combines a domain-specific language (DSL) for storytelling with a graphical interface for story authoring. User interactions are automatically translated into statements in the Ellipsis DSL. By enabling storytelling without programming, the Ellipsis interface lowers the threshold for authoring narrative visualizations. We evaluate Ellipsis through example applications and user studies with award-winning journalists. Study participants find Ellipsis to be a valuable prototyping tool that can empower journalists in the creation of interactive narratives. &copy; 2014 The Eurographics Association and John Wiley &amp; Sons Ltd. Published by John Wiley &amp; Sons Ltd.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {01677055},
  key           = {Visualization},
  keywords      = {Data visualization;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1111/cgf.12392},
}

@Article{20133016525276,
  author    = {Kuhlmann, Mirco and Sohr, Karsten and Gogolla, Martin},
  title     = {Employing UML and OCL for designing and analysing role-based access control},
  journal   = {Mathematical Structures in Computer Science},
  year      = {2013},
  volume    = {23},
  number    = {4},
  pages     = {796 - 833},
  note      = {Domain specific languages;Mathematical structure;New approaches;Role-based Access Control;Security policy;Security requirements;Validation tools;Visual representations;},
  abstract  = {The stringent security requirements of organisations like banks or hospitals frequently adopt role-based access control (RBAC) principles to represent and simplify their internal permission management. While representing a fundamental advanced RBAC concept enabling precise restrictions on access rights, authorisation constraints increase the complexity of the resulting security policies so that tool support for convenient creation and adequate validation is required. A particular contribution of our work is a new approach to developing and analysing RBAC policies using a UML-based domain-specific language (DSL), which allows the hiding of the mathematical structures of the underlying authorisation constraints implemented in OCL. The DSL we present is highly configurable and extensible with respect to new concepts and classes of authorisation constraints, and allows the developer to validate RBAC policies in an effective way. The handling of dynamic (that is, time-dependent) constraints, their visual representation through the RBAC DSL and their analysis all form another part of our contribution. The approach is supported by a UML and OCL validation tool. &copy; 2013 University Press.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {09601295},
  key       = {Tools},
  keywords  = {Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1017/S0960129512000266},
}

@Article{20144800253988,
  author    = {Hernandez, Guillermo Infante and Perez, Benjamin Lopez and Fuente, Aquilino Adolfo Juan},
  title     = {Specific modeling for procedures in eGovernment domain},
  journal   = {RISTI - Revista Iberica de Sistemas e Tecnologias de Informacao},
  year      = {2012},
  volume    = {2012},
  number    = {9},
  pages     = {736 -},
  note      = {Domain specific languages;e-Government;eGovernment domain;GraphicaL model;Management platforms;Meta model;Procedure managements;},
  abstract  = {Due to the complexity involved in E-Government domain applications, the developed ones should be able to interoperate with the growing number of emerging management platforms. The impact of this integration has among its main goals to improve the procedure management task, which suffers an important lack of technological proposals. This work proposes a graphical domain specific language (DSL) for procedure management in E-Government domain. This language came from the definition of a metamodel that states the principle EGovernment elements and defines its relations. A further graphical modeling tool was developed to implement the DSL and was tested with two actual case studies.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16469895},
  key       = {Government data processing},
  keywords  = {Computer programming languages;Problem oriented languages;},
  language  = {English},
}

@InProceedings{20133816763530,
  author    = {Bajaj, Manas and Scott, Andrew and Deming, Douglas and Wickstrom, Gregory and De Spain, Mark and Zwemer, Dirk and Peak, Russell},
  title     = {Maestro-a model-based systems engineering environment for complex electronic systems},
  year      = {2012},
  volume    = {4},
  pages     = {2651 - 2667},
  address   = {Rome, Italy},
  note      = {Complex electronic systems;Design and simulation;Domain specific languages;Model-based systems engineering;Model-based systems engineering (MBSE);Sandia National Laboratories;System architectures;Systems engineering process;},
  abstract  = {In this paper we present Maestro, a model-based systems engineering (MBSE) environment for design and simulation of complex electronic systems using Orchestra-a simulation tool developed at Sandia National Laboratories. Maestro is deployed as a plugin for MagicDraw and uses Orchestra domain-specific language (DSL) which is based on SysML. Maestro enables a model-based design and analysis approach that replaces the traditional document-based systems engineering process. It provides a unified graphical modeling environment to domain experts who have had to depend on drawing tools for defining system architecture and manual transcription of system topology in creating complex simulation models.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  journal   = {22nd Annual International Symposium of the International Council on Systems Engineering, INCOSE 2012 and the 8th Biennial European Systems Engineering Conference 2012, EuSEC 2012},
  key       = {Systems engineering},
  keywords  = {Computer simulation;Electronics engineering;Problem oriented languages;},
  language  = {English},
}

@InProceedings{20143118006559,
  author    = {Jia, Xiaoping and Jones, Chris},
  title     = {Cross-Platform Application Development Using AXIOM as an Agile Model-Driven Approach},
  year      = {2013},
  volume    = {411 CCIS},
  pages     = {36 - 51},
  address   = {Rome, Italy},
  note      = {Application development;Development productivity;Domain specific languages;Mobile applications;Model driven approach;Model-driven Engineering;Platform-independent model;Transformation process;},
  abstract  = {The development and maintenance of cross-platform mobile applications is expensive. Two approaches for reducing this cost are model-driven engineering (MDE) and Agile development. In this paper, we present AXIOM, a model-driven approach for developing cross-platform mobile applications in ways that also support Agile principles. Our approach uses a domain specific language (DSL) for defining platform-independent models (PIM) of mobile applications. AXIOM defines a multi-phase, customizable transformation process to convert platform-independent models into native applications for target mobile platforms. Our approach could significantly reduce development time and cost while increasing the quality of mobile applications. A prototype tool has been developed to demonstrate the feasibility of the approach. The preliminary findings are promising and show significant gains in development productivity. &copy; Springer-Verlag Berlin Heidelberg 2013.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Cost reduction},
  keywords  = {Computer programming languages;Mobile computing;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-45404-2_3},
}

@InProceedings{20161602247501,
  author        = {Van Hoorn, Andre and Vogele, Christian and Schulz, Eike and Hasselbring, Wilhelm and Krcmar, Helmut},
  title         = {Automatic extraction of probabilistic workload specifications for load testing session-based application systems},
  year          = {2014},
  pages         = {139 - 146},
  address       = {Bratislava, Slovakia},
  note          = {Application systems;Clustering;Clustering techniques;Controlled conditions;Domain specific languages;Industry-standard benchmarks;Navigational patterns;Performance properties;},
  __markedentry = {[Neto:5]},
  abstract      = {Workload generation is essential to systematically evaluate performance properties of application systems under controlled conditions, e.g., in load tests or benchmarks. The definition of workload specifications that represent the real workload as accurately as possible is one of the biggest challenges in this area. This paper presents our approach for the modeling and automatic extraction of probabilistic workload specifications for load testing session-based application systems. The approach, called Wessbas, comprises (i.) a domain-specific language (DSL) enabling layered modeling of workload specifications as well as support for (ii.) automatically extracting instances of the DSL from recorded sessions logs and (iii.) transforming instances of the DSL to workload specifications of existing load testing tools. During the extraction process, different groups of customers with similar navigational patterns are identified using clustering techniques. We developed corresponding tool support including a transformation to probabilistic test scripts for the Apache JMeter load testing tool. The evaluation of the proposed approach using the industry standard benchmark SPECjEnterprise2010 demonstrates its applicability and the representativeness of the extracted workloads. &copy; Copyright 2015 ICST.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {Proceedings of the 8th International Conference on Performance Evaluation Methodologies and Tools, VALUETOOLS 2014},
  key           = {Load testing},
  keywords      = {Benchmarking;Computer programming languages;Extraction;Modeling languages;Problem oriented languages;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.4108/icst.valuetools.2014.258171},
}

@InProceedings{20155201733196,
  author        = {Barnett, Scott and Vasa, Rajesh and Grundy, John},
  title         = {Bootstrapping Mobile App Development},
  year          = {2015},
  volume        = {2},
  pages         = {657 - 660},
  address       = {Florence, Italy},
  note          = {Code Generation;Data driven;Domain specific languages;High level description;Mobile app;Model driven development;Professional development;},
  __markedentry = {[Neto:5]},
  abstract      = {Modern IDEs provide limited support for developers when starting a new data-driven mobile app. App developers are currently required to write copious amounts of boilerplate code, scripts, organise complex directories, and author actual functionality. Although this scenario is ripe for automation, current tools are yet to address it adequately. In this paper we present RAPPT, a tool that generates the scaffolding of a mobile app based on a high level description specified in a Domain Specific Language (DSL). We demonstrate the feasibility of our approach by an example case study and feedback from a professional development team. Demo at: https://www.youtube.com/watch?v=ffquVgBYpLM. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {02705257},
  journal       = {Proceedings - International Conference on Software Engineering},
  key           = {Software engineering},
  keywords      = {Computer programming languages;High level languages;Problem oriented languages;Scaffolds;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICSE.2015.216},
}

@Article{20140817345285,
  author        = {Acmann, Uwe and Bartho, Andreas and Burger, Christoff and Cech, Sebastian and Demuth, Birgit and Heidenreich, Florian and Johannes, Jendrik and Karol, Sven and Polowinski, Jan and Reimann, Jan and Schroeter, Julia and Seifert, Mirko and Thiele, Michael and Wende, Christian and Wilke, Claas},
  title         = {DropsBox: The Dresden Open Software Toolbox: Domain-specific modelling tools beyond metamodels and transformations},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {133 - 169},
  note          = {Academic environment;Development and applications;Domain specific languages;Domain-specific modelling;Eclipse modeling framework;MDSD;Model-Driven Software Development;Modelling tools;},
  __markedentry = {[Neto:5]},
  abstract      = {The Dresden Open Software Toolbox (DropsBox) is a software modelling toolbox consisting of a set of open source tools developed by the Software Technology Group at TU Dresden. The DropsBox is built on top of the Eclipse Platform and the Eclipse Modeling Framework. The DropsBox contributes to the development and application of domain-specific language changes (DSLs) in model-driven software development. It can be customised by tool and language developers to support various activities of a DSL's life cycle ranging from language design to language application and evolution. In this paper, we provide an overview of the DSL life cycle, the DropsBox tools, and their interaction on a common example. Furthermore, we discuss our experiences in developing and integrating tools for DropsBox in an academic environment. &copy; 2012 Springer-Verlag.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  issn          = {16191366},
  key           = {Tools},
  keywords      = {Computer aided software engineering;Electric potential;Life cycle;Open systems;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/s10270-012-0284-6},
}

@Article{20143600026227,
  author        = {Sarimbekov, Aibek and Zheng, Yudi and Ansaloni, Danilo and Bulej, Lubomir and Marek, Luka and Binder, Walter and Tma, Petr and Qi, Zhengwei},
  title         = {Dynamic program analysis - Reconciling developer productivity and tool performance},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {95},
  number        = {P3},
  pages         = {344 - 358},
  note          = {Bytecode instrumentation;Controlled experiment;Development productivity;Domain specific languages;Dynamic analysis tools;Dynamic program analysis;High-level programming;Program instrumentations;},
  __markedentry = {[Neto:5]},
  abstract      = {Dynamic program analysis tools serve many important software engineering tasks such as profiling, debugging, testing, program comprehension, and reverse engineering. Many dynamic analysis tools rely on program instrumentation and are implemented using low-level instrumentation libraries, resulting in tedious and error-prone tool development. Targeting this issue, we have created the Domain-Specific Language for Instrumentation (DiSL), which offers high-level programming abstractions especially designed for instrumentation-based dynamic analysis. When designing DiSL, our goal was to boost the productivity of tool developers targeting the Java Virtual Machine, without impairing the performance of the resulting tools. In this paper we assess whether DiSL meets this goal. First, we perform a controlled experiment to measure tool development time and correctness of the developed tools, comparing DiSL with a prevailing, state-of-the-art instrumentation library. Second, we recast 10 open-source software engineering tools in DiSL and compare source code metrics and performance with the original implementations. Our studies show that DiSL significantly improves developer productivity, enables concise tool implementations, and does not have any negative impact on tool performance. &copy; 2014 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {01676423},
  key           = {Program debugging},
  keywords      = {Computer aided software engineering;Experiments;Java programming language;Open source software;Open systems;Problem oriented languages;Productivity;Reverse engineering;Software testing;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.scico.2014.03.014},
}

@Article{20161302152236,
  author    = {Abrantes, Joilson and Coelho, Roberta and Bonifacio, Rodrigo},
  title     = {DAEH: A tool for specifying and monitoring the exception handling policy},
  journal   = {International Journal of Software Engineering and Knowledge Engineering},
  year      = {2015},
  volume    = {25},
  number    = {9-10},
  pages     = {1515 - 1530},
  note      = {Contract languages;Domain specific languages;Exception handling;Monitoring tools;Runtime Monitoring;Source codes;System architects;Web-based system;},
  abstract  = {The exception handling policy of a system comprises the set of design rules that specify its exception handling behavior (how exceptions should be handled and thrown). Such policy is usually undocumented and implicitly defined by the system architect. For this reason, developers often consider that by just including catch-blocks in the code they are dealing with exceptional conditions. This lack of information may turn the exception handling into a generalized "goto" mechanism making the program more complex and less reliable. This work presents a domain-specific language called ECL (Exception Contract Language) to specify the exception handling policy and a runtime monitoring tool which dynamically checks this policy. The monitoring tool is implemented in the form of an aspect library, which can be added to any Java system without the need to change the application source code. We applied this approach to two large-scale web-based systems and to a set of versions of the well-known JUnit framework. The results indicate that this approach can be used to express and to automatically check the exception handling policy of a system, and consequently support the development of more robust Java systems. &copy; 2015 World Scientific Publishing Company.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {02181940},
  key       = {Java programming language},
  keywords  = {Computational linguistics;Computer programming languages;Dynamic analysis;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1142/S0218194015400306},
}

@InProceedings{20162902610890,
  author        = {Morales, Zuriel and Magaa, Cristina and Aguilar, Jose Alfonso and Zaldivar-Colado, Anibal and Tripp-Barba, Carolina and Misra, Sanjay and Garcia, Omar and Zurita, Eduardo},
  title         = {A baseline domain specific language proposal for model-driven web engineering code generation},
  year          = {2016},
  volume        = {9790},
  pages         = {50 - 59},
  address       = {Beijing, China},
  note          = {Domain specific languages;MDA(model driven architecture);MDWE;Meta model;Model-driven web engineerings;Non-functional requirements;Platform independent model;Web application development;},
  __markedentry = {[Neto:5]},
  abstract      = {It is well-known that Model-Driven Web Engineering requires the development of code-generation tools in order to be adopted outside research field as a complete solution in Web application development industry. Regrettably, a fully-guided methodology supported by a complete code-generation tool that considers a complete development process based on MDA (Model-Driven Architecture) is missing. The idea behind MDA is that requirements are considered (functional and nonfunctional requirements) from the Computational Independent Model (CIM), to the Platform Specific Model (PSM) passing for the Platform Independent Model (PIM) to generate the source code for the Web application. In our work is presented a baseline DSL (Domain Specific Language) for Web application code-generation considering the basic language used in a small software factory in Mexico. This is an ongoing work which is part of a institutional project in order to build a suite of tools for code-generation for Web application development. &copy; Springer International Publishing Switzerland 2016.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Software architecture},
  keywords      = {Application programs;Codes (symbols);Computational linguistics;Computer aided software engineering;Computer programming languages;Problem oriented languages;Software design;World Wide Web;XML;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-42092-9_5},
}

@InProceedings{20142417819040,
  author        = {Franceschini, Romain and Bisgambiglia, Paul-Antoine and Bisgambglia, Paul and Hill, David},
  title         = {DEVS-Ruby: A domain specific language for DEVS modeling and simulation (WIP)},
  year          = {2014},
  volume        = {46},
  number        = {4},
  pages         = {103 - 108},
  address       = {Tampa, FL, United states},
  note          = {DEVS;Discrete event system specification;Domain specific;Domain specific languages;Formal Specification;Model and simulation;Specialized tools;Syntactic sugars;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces a new Discrete EVent system Specification (DEVS) modeling and simulation library implemented in Ruby. Its syntactic sugar and features such as monkey patching, lexical closures, custom dispatch behavior and native plug-in API provides strong support to grow a Domain Specific Language (DSL). The library, by providing an internal DSL, allows formal specifications of DEVS models. The greatest strength of DEVS-Ruby lies in the extensibility of the DSL, allowing to meet each modeler's domain specific vocabulary and thus, to evolve from a general modeling and simulation formalism to a specialized tool.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {07359276},
  journal       = {Simulation Series},
  key           = {Computer programming languages},
  keywords      = {Discrete event simulation;DSL;Ruby;Specifications;, rank3},
  language      = {English},
}

@InProceedings{20123315339317,
  author        = {Lai, Qinan and Carpenter, Andy},
  title         = {Defining and verifying behaviour of domain specific language with fUML},
  year          = {2012},
  pages         = {Eur. Conf. Model. Found. Appl. (ECMFA) -},
  address       = {Kgs. Lyngby, Denmark},
  note          = {Abstract syntax;Behaviour models;Design time;Domain specific languages;Executable UML;Formal framework;fUML;Meta model;Modeling languages;Operational semantics;Tool generation;},
  __markedentry = {[Neto:5]},
  abstract      = {The behavioural semantics of a Domain Specific Language (DSL) are the instructions on how to execute the language. In practice, such semantics are often documented by text, which leads to ambiguity and tool generation problems. Although some formal frameworks have been proposed to address these drawbacks, they only allow the correctness of a specification to be tested at a later stage, usually when the semantics are implemented. This paper presents a new framework for implementing the behavioural semantics of meta-model based DSLs and tools. The framework uses the foundational subset of executable UML (fUML) as its semantic base, and uses the fUML meta-model for modelling the abstract syntax and operational semantics of a DSL. The semantics specification can be verified at design time without the need to execute behaviour models. Thus, it can provide useful feedback to the DSL designer. The framework is demonstrated in a Petri-net example. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Semantics},
  keywords      = {Abstracting;Computer programming languages;Specifications;Visual languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2325276.2325277},
}

@InProceedings{20130115856658,
  author        = {Nakamura, Hiroki and Nagano, Rina and Hisazumi, Kenji and Kamei, Yasutaka and Ubayashi, Naoyasu and Fukuda, Akira},
  title         = {QORAL: An external domain-specific language for mining software repositories},
  year          = {2012},
  pages         = {23 - 29},
  address       = {Osaka, Japan},
  note          = {Domain specific languages;Man hours;Mining software repositories;MSR;Multiple iterations;QORAL;Source codes;Source control;Statistical analysis tools;},
  __markedentry = {[Neto:5]},
  abstract      = {The mining software repositories (MSR) field integrates and analyzes data stored in repositories such as source control and bug repositories to provide support to practitioners. In order to provide useful information to practitioners, MSR researchers need to perform tasks iteratively, these tasks include extracting data from repositories, transforming them into specific data formats, and loading them into the statistical analysis tool. These tasks require a significant amount of man hours to implement and execute according to the requirements of the researchers. This paper proposes an external domain-specific language (DSL) called QORAL to facilitate the performance of multiple iterations and environment development. The results from a questionnaire used to evaluate QORAL indicate that it is easy to understand and modify source code. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - 2012 4th International Workshop on Empirical Software Engineering in Practice, IWESEP 2012},
  key           = {Loading},
  keywords      = {DSL;Metadata;Problem oriented languages;Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/IWESEP.2012.20},
}

@InProceedings{20151700774781,
  author    = {Moser, Michael and Pfeiffer, Michael and Pichler, Josef},
  title     = {A novel domain-specific language for the robot welding automation domain},
  year      = {2014},
  pages     = {IEEE Industrial Electronics Society (IES); Technical University of Catalonia - BarcelonaTech (UPC) -},
  address   = {Barcelona, Spain},
  note      = {Development approach;Domain specific languages;General-purpose programming language;Industrial automation;Professional software;Programming skills;Visual notations;Welding automation;},
  abstract  = {Implementation, fault analysis, and maintenance of robot welding automation solutions are traditionally restricted to professional software developers only. Program code is written in a general purpose programming language and, hence, unmanageable by other stakeholders with limited or no programming skills. To tackle this problem we have implemented a domain-specific language (DSL) specifically designed to the domain of robot welding automation and to be intuitively manageable by all stakeholders. The created DSL supports a textual and visual notation and is embedded within a full featured tool chain which let our customer fully replace the creation and maintenance of welding automation solutions by our DSL-based development approach. &copy; 2014 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSML, IEEEDSL, Inclusos},
  journal   = {19th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2014},
  key       = {Automation},
  keywords  = {Computational linguistics;Computer programming languages;Factory automation;Maintenance;Problem oriented languages;Robots;Welding;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ETFA.2014.7005348},
}

@Article{20120514732894,
  author        = {Montenegro-Marin, Carlos Enrique and Cueva-Lovelle, Juan Manuel and Sanjuan-Martinez, Oscar and Garcia-Diaz, Vicente},
  title         = {Domain Specific Language for the generation of Learning Management Systems modules},
  journal       = {Journal of Web Engineering},
  year          = {2012},
  volume        = {11},
  number        = {1},
  pages         = {23 - 50},
  note          = {Domain specific languages;Meta model;Model transformation;Model-driven architecture;Platform independent model;},
  __markedentry = {[Neto:5]},
  abstract      = {Nowadays there are many research projects conducted in the areas of Learning Management Systems (LMS) and Model-Driven Engineering (MDE). These research projects have shown that there are LMS platforms with different architectures and inoperative to each other. The most significant contribution of MDE has been the creation of a common meta-metamodel. This meta-metamodel allows transformations between different models. This research work presents a LMS metamodel. The metamodel created is based on the study of five LMS platforms. The LMS metamodel is a global model that makes a bridge for the transformation of modules between the model and different LMS platforms, and it also presents the development of a Domain Specific Language (DSL) tool to validate the metamodel, the transformation process of the model with our DSL Tool to modules deployed in Moodle, Claroline and Atutor, and finally testing and validation of creating modules with LMS platforms VS creating modules with our DSL Tool. &copy; Rinton Press.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {15409589},
  key           = {Software architecture},
  keywords      = {Engineering research;Project management;Software design;, rank3},
  language      = {English},
}

@InProceedings{20155201723318,
  author    = {Vukovi, eljko and Milanovi, Nikola and Vaderna, Renata and Dejanovi, Igor and Milosavljevi, Gordana},
  title     = {Sail: A domain-specific language for semantic-aided automation of interface mapping in enterprise integration},
  year      = {2015},
  volume    = {9416},
  pages     = {97 - 106},
  address   = {Rhodes, Greece},
  note      = {Domain specific languages;Enterprise Integration;ESB;Model-based OPC;Semantic conflict;},
  abstract  = {Mapping elements of various interfaces is one of the most complex tasks in enterprise integration. Differences in the ways that these interfaces represent data in lead to the need of conflict detection and resolving. We present an approach where a structural model of the interfaces can be annotated with a semantic model and used together to (semi-)automate this process. A domain-specific language (DSL) is proposed that can be used to specify criteria for interface element mapping, define conflicts with steps for their resolution if possible, and how the resulting mappings will be translated into expressions needed for code generation. This DSL is intended to give the user the possibility to customise a prototype tool (which we have presented earlier) enabling us to practically test our approach and yield a real-world runnable implementation. Code generated by this tool is deployable to an enterprise service bus (ESB). &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Mapping},
  keywords  = {Chemical detection;Computational linguistics;Computer programming languages;Integration;Internet;Ontology;Problem oriented languages;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-26138-6_13},
}

@Article{20163402734138,
  author    = {Bocanegra Garcia, Jose and Pavlich-Mariscal, Jaime and Carillo-Ramos, Angela},
  title     = {Towards a domain-specific language to design adaptive software: The DMLAS approach},
  journal   = {Ingenieria y Universidad},
  year      = {2016},
  volume    = {20},
  number    = {2},
  pages     = {277 - 296},
  note      = {Adaptation;Adaptive software;Context;Domain specific languages;Model-driven Engineering;Notation;},
  abstract  = {An adaptive software has the ability to modify its own behavior at runtime due to changes in the users and their context in the system, requirements, or environment in which the system is deployed, and thus, give the users a better experience. However, the development of this kind of systems is not a simple task. There are two main issues: (1) there is a lack of languages to specify, unambiguously, the elements related to the design phase. As a consequence, these systems are often developed in an ad-hoc manner, without the required formalism, augmenting the complexity in the process of derivation of design models to the next phases in the development cycle. (2) Design decisions and the adaptation model tend to be directly implemented into the source code and not thoroughly specified at the design level. Since the adaptation models become tangled with the code, system evolution becomes more difficult. To address the above issues, this paper proposes DMLAS, a Domain-Specific Language (DSL) to design adaptive systems. As proof of concept, this paper also provides a functional prototype based on the Sirius plugin for Eclipse. This prototype is a tool to model, in several layers of abstraction, the main components of an adaptive system. The notation used both in the models and the tool was validated against the nine principles for designing cognitively effective visual notations presented by Moody. &copy; 2016, Pontificia Universidad Javeriana. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {01232126},
  key       = {Design},
  keywords  = {Adaptive systems;Computational linguistics;Computer programming languages;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.11144/Javeriana.iyu20-2.tdsl},
}

@InProceedings{20161102111846,
  author        = {Li, Huiqing and Thompson, Simon},
  title         = {A domain-specific language for scripting refactorings in erlang},
  year          = {2012},
  volume        = {7212},
  pages         = {501 - 515},
  address       = {Tallinn, Estonia},
  note          = {Analysis;Erlang;Refactorings;Transformation;Wrangler;},
  __markedentry = {[Neto:5]},
  abstract      = {Refactoring is the process of changing the design of a program without changing its behaviour. Many refactoring tools have been developed for various programming languages; however, their support for composite refactorings &ndash; refactorings that are composed from a number of primitive refactorings &ndash; is limited. In particular, there is a lack of powerful and easy-to-use frameworks that allow users to script their own large-scale refactorings efficiently and effectively. This paper introduces the domain-specific language framework of Wrangler &ndash; a refactoring and code inspection tool for Erlang programs &ndash; that allows users to script composite refactorings, test them and apply them on the fly. The composite refactorings are fully integrated into Wrangler and so can be previewed, applied and &lsquo;undone&rsquo; interactively. &copy; Springer-Verlag Berlin Heidelberg 2012.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Software engineering},
  keywords      = {Computational linguistics;Computer programming languages;Computer systems programming;DSL;Problem oriented languages;, rank3},
  language      = {English},
}

@InProceedings{20121414921418,
  author        = {Li, Huiqing and Thompson, Simon},
  title         = {A domain-specific language for scripting refactorings in Erlang},
  year          = {2012},
  volume        = {7212 LNCS},
  pages         = {501 - 515},
  address       = {Tallinn, Estonia},
  note          = {analysis;API;Erlang;Refactorings;transformation;Wrangler;},
  __markedentry = {[Neto:5]},
  abstract      = {Refactoring is the process of changing the design of a program without changing its behaviour. Many refactoring tools have been developed for various programming languages; however, their support for composite refactorings - refactorings that are composed from a number of primitive refactorings - is limited. In particular, there is a lack of powerful and easy-to-use frameworks that allow users to script their own large-scale refactorings efficiently and effectively. This paper introduces the domain-specific language framework of Wrangler - a refactoring and code inspection tool for Erlang programs -that allows users to script composite refactorings, test them and apply them on the fly. The composite refactorings are fully integrated into Wrangler and so can be previewed, applied and 'undone' interactively. &copy; 2012 Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Software engineering},
  keywords      = {Computer systems programming;DSL;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-28872-2_34},
}

@InProceedings{20162002384839,
  author        = {Hadiwijaya, Ryan Ignatius and Inggriani Liem, M.M.},
  title         = {A domain-specific language for automatic generation of checkers},
  year          = {2015},
  pages         = {7 - 12},
  address       = {Yogyakarta, Indonesia},
  note          = {Automatic Generation;Automatic programs;Competition environments;Domain specific languages;Generator tool;Programming class;Programming learning;property checker;},
  __markedentry = {[Neto:5]},
  abstract      = {One of the important modules of a black-box automatic program grader is a "checker". In programming competition environment, a checker is a program written for the purpose to check the output of the contestant's program for a task that has many solutions. Usually, a checker is written manually as needed. In this paper, the idea of the output checker in the programming competition environment is extended to input checker and source code checker as a part of the automatic grader in our programming learning environment. Input checker validates the input coverage. The source code checker is used to validate a set of properties from a source code against the given coding specification. A Domain-Specific Language (DSL) grammar is designed and developed as a specification for the automatic generation of the output, input, and source code checkers. The DSL grammar and the checker generator tool set are used to evaluate source codes in our programming class. By writing the checkers specification in DSL, the specification is automatically documented and can be reused for similar properties. &copy; 2015 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, IEEEDSL, Duplicados},
  journal       = {Proceedings of 2015 International Conference on Data and Software Engineering, ICODSE 2015},
  key           = {Automatic programming},
  keywords      = {Codes (symbols);Computational linguistics;Computer aided instruction;Computer programming languages;Grading;Natural language processing systems;Problem oriented languages;Software engineering;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICODSE.2015.7436963},
}

@Article{20133816764250,
  author        = {Hoyos, Jose R. and Garcia-Molina, Jesus and Botia, Juan A.},
  title         = {A domain-specific language for context modeling in context-aware systems},
  journal       = {Journal of Systems and Software},
  year          = {2013},
  volume        = {86},
  number        = {11},
  pages         = {2890 - 2905},
  note          = {Context information;Context modeling;Context-Aware;Context-aware systems;Domain specific languages;High-level abstraction;Middleware platforms;Model driven development;},
  __markedentry = {[Neto:5]},
  abstract      = {Context-awareness refers to systems that can both sense and react based on their environment. One of the main difficulties that developers of context-aware systems must tackle is how to manage the needed context information. In this paper we present MLContext, a textual Domain-Specific Language (DSL) which is specially tailored for modeling context information. It has been implemented by applying Model-Driven Development (MDD) techniques to automatically generate software artifacts from context models. The MLContext abstract syntax has been defined as a metamodel, and model-to text transformations have been written to generate the desired software artifacts. The concrete syntax has been defined with the EMFText tool, which generates an editor and model injector. MLContext has been designed to provide a high-level abstraction, to be easy to learn, and to promote reuse of context models. A domain analysis has been applied to elicit the requirements and design choices to be taken into account in creating the DSL. As a proof of concept of the proposal, the generative approach has been applied to two different middleware platforms for context management. &copy; 2013 Elsevier Inc.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {01641212},
  key           = {Abstracting},
  keywords      = {Middleware;Problem oriented languages;Semantics;Syntactics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.jss.2013.07.008},
}

@InProceedings{20125015800408,
  author        = {Dayba, Orcun and Oguztuzun, Halit},
  title         = {Kutulu: A domain-specific language for feature-driven product derivation},
  year          = {2012},
  pages         = {105 - 110},
  address       = {Izmir, Turkey},
  note          = {Component;Dependency injection;Domain specific languages;Feature-component binding;Software Product Line;Variability management;},
  __markedentry = {[Neto:5]},
  abstract      = {Software Product Line Engineering (SPLE) defines processes to facilitate the development of a family of products in a pre-defined market more effectively. Its success depends on implementation of these processes utilizing best practices with proper tool support. This paper describes how to enhance domain design and variation management processes of SPLE with a domain-specific language (DSL), namely "Kutulu". It also introduces novel modeling tools and dependency injection-based realization approach that are well-suited for product derivation in SPL. Our DSL definition, developed tools and their position in the product line context are put forth in this paper. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  issn          = {07303157},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  key           = {Problem oriented languages},
  keywords      = {Software design;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/COMPSAC.2012.20},
}

@InProceedings{20144900294543,
  author    = {Maeda, Kazuaki},
  title     = {Generation of presentation slides on web browser using a domain-specific language},
  year      = {2014},
  pages     = {173 - 177},
  address   = {New Orleans, LA, United states},
  note      = {Desktop presentations;Domain specific languages;Fully integrated;HTML documents;On chrome;Presentation slides;Slide shows;},
  abstract  = {This paper describes how to create presentation slides using a DSL (Domain-Specific Language), generate HTML documents on a modern web browser, Chrome, and run an impressive slide show on the web browser. Current desktop presentation tools are not fully integrated to the World Wide Web. On the other hand, we can create impressive presentation slides using the modern web browser. To bridge the gap, an internal DSL based on Ruby for creating presentation slides was designed by the author. A tool to generate HTML documents on Chrome was implemented using Native Client SDK. In the author's preliminary experience, productivity was improved while creating presentation slides for the web browser.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {23rd International Conference on Software Engineering and Data Engineering, SEDE 2014},
  key       = {World Wide Web},
  keywords  = {Bridges;Computer programming languages;HTML;Problem oriented languages;Social networking (online);Software engineering;Web browsers;},
  language  = {English},
}

@InProceedings{20143918179799,
  author    = {Schefer-Wenzl, Sigrid and Feiertag, Katharina},
  title     = {A domain-specific language for XML security standards},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  note      = {Concepts and features;Domain specific languages;Problem domain;Security domains;XML encryption;XML security;XML signature;XML standards;},
  abstract  = {A domain-specific language (DSL) is designed for a certain problem domain. Its notation is tailored to the relevant concepts and features of that domain. In this paper, we present a basis for a DSL for XML security standards. In particular, we focus on three prominent examples, i.e. XML Signature, XML Encryption, and SAML that are integrated into a common DSL. The main goals of our DSL are to make it easily comprehensible for security domain experts, easily applicable for people being familiar with at least one GPL, and easily extensible for further XML standards. &copy; 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Compendex, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {XML},
  keywords  = {Problem oriented languages;Software architecture;Standards;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2642803.2642821},
}

@InProceedings{20131516185172,
  author        = {Acher, Mathieu and Collet, Philippe and Lahire, Philippe and France, Robert B.},
  title         = {FAMILIAR: A domain-specific language for large scale management of feature models},
  year          = {2013},
  volume        = {78},
  number        = {6},
  pages         = {657 - 681},
  note          = {Domain specific languages;Feature models;Model management;Software Product Line;Variability;},
  __markedentry = {[Neto:5]},
  abstract      = {The feature model formalism has become the de facto standard for managing variability in software product lines (SPLs). In practice, developing an SPL can involve modeling a large number of features representing different viewpoints, sub-systems or concerns of the software system. This activity is generally tedious and error-prone. In this article, we present FAMILIAR a Domain-Specific Language (DSL) that is dedicated to the large scale management of feature models and that complements existing tool support. The language provides a powerful support for separating concerns in feature modeling, through the provision of composition and decomposition operators, reasoning facilities and scripting capabilities with modularization mechanisms. We illustrate how an SPL consisting of medical imaging services can be practically managed using reusable FAMILIAR scripts that implement reasoning mechanisms. We also report on various usages and applications of FAMILIAR and its operators, to demonstrate their applicability to different domains and use for different purposes. &copy; 2012 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {01676423},
  journal       = {Science of Computer Programming},
  key           = {Software design},
  keywords      = {Computer software;Medical imaging;Modular construction;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.scico.2012.12.004},
}

@InProceedings{20131616212929,
  author    = {Adolf, Diego and Ferranti, Ettore and Koch, Stephan},
  title     = {SmartScript - A domain-specific language for appliance control in Smart Grids},
  year      = {2012},
  pages     = {465 - 470},
  address   = {Tainan, Taiwan},
  note      = {Active components;Appliance controls;Building automation;Building automation systems;Domain specific languages;Energy-aware algorithms;Software systems;Voice-controlled;},
  abstract  = {This paper describes an auto-configuring agent based software architecture connecting appliances, smart meters, solar panels, and a KNX building automation system, resulting in a complete demand-side smart grid. The agents are responsible for providing access to all datapoints in the system as well as sending commands to the active components. To control the system, a domain-specific language (DSL) called SmartScript was developed, whose benefits are twofold. The first one is to provide users, experts in electrical engineering and/or building automation but not in software systems, with a high level tool which they can use to control a demand-side smart grid. The second benefit is to provide a layer to implement and test quickly and effectively energy-aware algorithms without having to deal with all the underlying connections. Finally, some demo applications created using SmartScript (i.e., smartphone interface, voice-controlled building automation system) are presented in this work, in order to give an example of how SmartScript can be used. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Inclusos},
  journal   = {2012 IEEE 3rd International Conference on Smart Grid Communications, SmartGridComm 2012},
  key       = {Smart power grids},
  keywords  = {Electrical engineering;Intelligent buildings;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/SmartGridComm.2012.6486028},
}

@InProceedings{20143918179797,
  author    = {Arkin, Ethem and Tekinerdogan, Bedir},
  title     = {Domain specific language for deployment of parallel applications on parallel computing platforms},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  note      = {Architecture designs;Computing performance;Deployment;Domain specific languages;Parallel application;Parallel computing platform;Software languages;Traffic simulations;},
  abstract  = {To increase the computing performance the current trend is towards applying parallel computing in which parallel tasks are executed on multiple nodes. The deployment of tasks on the computing platform usually impacts the overall performance and as such needs to be modelled carefully. In the architecture design community the deployment viewpoint is an important viewpoint to support this mapping process. In general the derived deployment views are visual notations that are not amenable for run-time processing, and do not scale well for deployment of large scale parallel applications. In this paper we propose a domain specific language (DSL) for modeling the deployment of parallel applications and for providing automated support for the deployment process. The DSL is based on a metamodel that is derived after a domain analysis on parallel computing. We illustrate the application of the DSL for a traffic simulation system and provide a set of important scenarios for using the DSL. &copy; 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {Parallel architectures},
  keywords  = {Computer programming languages;Parallel processing systems;Software architecture;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2642803.2642819},
}

@InProceedings{20160501861478,
  author        = {De Sousa, Luis and Da Silva, Alberto Rodrigues},
  title         = {A domain specific language for spatial simulation scenarios(DSL3S): Introduction and tool support},
  year          = {2015},
  volume        = {13-17-April-2015},
  pages         = {1854 - 1856},
  address       = {Salamanca, Spain},
  note          = {Agent-based modelling;Design of simulations;Domain specific languages;Graphical elements;Model driven development;Programming skills;Spatial simulation;Uml profiles;},
  __markedentry = {[Neto:5]},
  abstract      = {Cellular automata and agent-based modelling techniques have long been used for spatial simulation in the Geographic Information Systems field. However, they largely rely on code libraries and pre-compiled models, either requiring advanced programming skills or imposing scope constraints. Several domain specific languages have been proposed in this context, but mostly resulting in new textual programming languages. DSL3S is a domain specific language for spatial simulation, synthesising concepts in a UML profile, permitting the design of simulation models through graphical elements. MDD3S is an implementation of this language relying on model-driven development (MDD) tools built around the Eclipse IDE; it produces ready to run simulations from DSL3S models, supported by theMASON simulation tool-kit. These assets have proved sufficient to developed classic models in different GIS application fields. Copyright 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  key           = {Computational linguistics},
  keywords      = {Autonomous agents;Computational methods;Computer programming languages;Geographic information systems;Graphical user interfaces;Markup languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2695664.2695972},
}

@InProceedings{20163002625887,
  author        = {Haser, Florian and Felderer, Michael and Breu, Ruth},
  title         = {An integrated tool environment for experimentation in domain specific language engineering},
  year          = {2016},
  volume        = {01-03-June-2016},
  address       = {Limerick, Ireland},
  note          = {Controlled experiment;Domain specific languages;Empirical evaluations;Experimentation;Language engineering;Meta Programming;Tool support;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain specific languages (DSLs) are widely used in practice and investigated in software engineering research. But so far, language workbenches do not provide sufficient builtin decision support for language design and improvement. Controlled experiments have the potential to provide appropriate, data-driven decision support for language engineers and researchers to compare different language features with evidence-based feedback. This paper provides an integrated end-to-end tool environment to perform controlled experiments in DSL engineering. The experiment environment is built on the basis and integrated into the language workbench Meta Programming System (MPS). The environment not only supports language design but also all steps of experimentation, i.e., planning, operation, analysis &amp; interpretation, as well as presentation &amp; package. The tool environment is presented by means of a running example experiment comparing the time taken to create system acceptance tests for web applications in two different DSLs. &copy; 2016 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Computational linguistics},
  keywords      = {Acceptance tests;Computer programming languages;Decision support systems;Graphical user interfaces;Problem oriented languages;Software engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2915970.2916010},
}

@InProceedings{20153101086285,
  author    = {Visic, Niksa and Fill, Hans-Georg and Buchmann, Robert Andrei and Karagiannis, Dimitris},
  title     = {A domain-specific language for modeling method definition: From requirements to grammar},
  year      = {2015},
  volume    = {2015-June},
  number    = {June},
  pages     = {286 - 297},
  address   = {Athens, Greece},
  note      = {Domain specific languages;Domain specificity;Level of abstraction;Meta model;Model method;Modeling tool;Platform independent;Research questions;},
  abstract  = {The core process a modeling method engineer needs to accomplish starts with the acquisition of domain knowledge and requirements, and ends with the deployment of a usable modeling tool. In between, a key intermediate deliverable of this process is the modeling method specification which, ideally, should be platform independent. On one hand, it takes input from a structured understanding of the application domain and scenarios; on the other hand, it provides sufficiently structured input to support the implementation of tool support for modeling activities. It is quite common that such modeling methods are domain-specific, in the sense that they provide concepts from the domain as 'first-class modeling citizens'. However, for the purposes of this paper, we raise the level of abstraction for 'domain specificity' and consider 'modeling method engineering' as the application domain. Consequently, we raise several research questions - whether a domain-specific language can support this domain, and what would be its requirements, properties, constructs and grammar. We propose an initial draft of such a language - one that abstracts away from meta-modeling platforms by establishing a meta&lt;sup&gt;2&lt;/sup&gt; layer of abstraction where a modeling method can be defined in a declarative manner, then the final modeling tool is generated by automated compilation of the method definition for the meta-modeling environment of choice. &copy; 2015 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, IEEEDSML, IEEEDSL, Inclusos},
  issn      = {21511349},
  journal   = {Proceedings - International Conference on Research Challenges in Information Science},
  key       = {Modeling languages},
  keywords  = {Abstracting;Computational linguistics;Computer programming languages;Information science;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/RCIS.2015.7128889},
}

@InProceedings{20131116119224,
  author        = {Hover, Kai Michael and Borgert, Stephan and Muhlhauser, Max},
  title         = {A domain specific language for describing S-BPM processes},
  year          = {2013},
  volume        = {360 CCIS},
  pages         = {72 - 90},
  address       = {Deggendorf, Germany},
  note          = {Business Process;Business process modeling;Domain specific languages;ePASS;Graph-based tool;Language elements;Natural languages;Process engines;Subject-oriented modeling;},
  __markedentry = {[Neto:5]},
  abstract      = {Natural language is the first choice for most stakeholders for describing business processes. S-BPM addresses this by taking basic natural language structure into consideration. However, so far S-BPM processes can only be modeled with graph-based tools. Although graph-based tools provide a good overview of processes they have also their disadvantages, because changing or adding language elements is costly, and graphical symbols cannot be written like natural sentences. In this paper, we present a Domain Specific Language to specify S-BPM processes and a process engine kernel for executing these modeled processes. &copy; 2013 Springer-Verlag.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  issn          = {18650929},
  journal       = {Communications in Computer and Information Science},
  key           = {Systems engineering},
  keywords      = {Enterprise resource management;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-36754-0_5},
}

@InProceedings{20151200662902,
  author        = {Jaroslav, Poruban and Dominik, Lakato},
  title         = {Iterative domain-specific language development with YAJCo parser generator},
  year          = {2015},
  volume        = {1648},
  pages         = {Santilli Foundation -},
  address       = {Rhodes, Greece},
  __markedentry = {[Neto:5]},
  abstract      = {Tool support for iterative language development is crucial when we treat a domain-specific language as a dynamic element in the software development lifecycle. We present YAJCo language processor generator and its approach to iterative development of DSLs on the case study of the Karel the Robot language. YAJCo is built upon existing parsing technologies and it reuses programmer experience in the field of object- and aspect-oriented programming paradigms and existing tooling infrastructure widely used for system development (e.g. IDE). &copy; 2015 AIP Publishing LLC.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  issn          = {0094243X},
  journal       = {AIP Conference Proceedings},
  keywords      = {rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1063/1.4912558},
}

@InProceedings{20154501506285,
  author    = {Belo, Orlando and Gomes, Claudia and Oliveira, Bruno and Marques, Ricardo and Santos, Vasco},
  title     = {Using a domain-specific language to enrich ETL schemas},
  year      = {2015},
  volume    = {539},
  pages     = {28 - 35},
  address   = {Poitiers, France},
  note      = {Conceptual model;Data migration;Data warehousing systems;Domain specific languages;ETL skeletons;Kettle;Specification models;},
  abstract  = {Today it is easy to find a lot of tools to define data migration schemas among different types of information systems. Data migration processes use to be implemented on a very diverse range of applications, ranging from conventional operational systems to data warehousing platforms. The implementation of a data migration process often involves a serious planning, considering the development of conceptual migration schemas at early stages. Such schemas help architects and engineers to plan and discuss the most adequate way to migrate data between two different systems. In this paper we present and discuss a way for enriching data migration conceptual schemas in BPMN using a domain-specific language, demonstrating how to convert such enriched schemas to a first correspondent physical representation (a skeleton) in a conventional ETL implementation tool like Kettle. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Modeling languages},
  keywords  = {Administrative data processing;Computational linguistics;Computer programming languages;Data warehouses;Information systems;Musculoskeletal system;Problem oriented languages;Warehouses;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-23201-0_4},
}

@InProceedings{20121914991981,
  author        = {Marek, Luka and Villazon, Alex and Zheng, Yudi and Ansaloni, Danilo and Binder, Walter and Qi, Zhengwei},
  title         = {DiSL: A domain-specific language for bytecode instrumentation},
  year          = {2012},
  pages         = {239 - 250},
  address       = {Potsdam, Germany},
  note          = {Aspect-J;Aspect-oriented;Bytecode instrumentation;Bytecode manipulation;Bytecodes;Code coverage;Domain specific languages;Dynamic analysis tools;Dynamic program analysis;High-level abstraction;Join point;JVM;Language features;Local variables;Static and dynamic;Tool development;},
  __markedentry = {[Neto:5]},
  abstract      = {Many dynamic analysis tools for programs written in managed languages such as Java rely on bytecode instrumentation. Tool development is often tedious because of the use of low-level bytecode manipulation libraries. While aspect-oriented programming (AOP) offers high-level abstractions to concisely express certain dynamic analyses, the join point model of mainstream AOP languages such as AspectJ is not well suited for many analysis tasks and the code generated by weavers in support of certain language features incurs high overhead. In this paper we introduce DiSL (domain-specific language for instrumentation), a new language especially designed for dynamic program analysis. DiSL offers an open join point model where any region of byte-codes can be a shadow, synthetic local variables for efficient data passing, efficient access to comprehensive static and dynamic context information, and weave-time execution of user-defined static analysis code. We demonstrate the benefits of DiSL with a case study, recasting an existing dynamic analysis tool originally implemented in AspectJ. We show that the DiSL version offers better code coverage, incurs significantly less overhead, and eases the integration of new analysis features that could not be expressed in AspectJ. &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {AOSD'12 - Proceedings of the 11th Annual International Conference on Aspect Oriented Software Development},
  key           = {Java programming language},
  keywords      = {Aspect oriented programming;Computer software;Computer systems programming;Dynamic analysis;Problem oriented languages;Static analysis;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2162049.2162077},
}

@InProceedings{20124315601071,
  author    = {Rabbi, Fazle and MacCaull, Wendy},
  title     = {T: A domain specific language for rapid workflow development},
  year      = {2012},
  volume    = {7590 LNCS},
  pages     = {36 - 52},
  address   = {Innsbruck, Austria},
  note      = {Access control policies;Domain specific languages;Health services;Model-driven Engineering;Requirement specification;Scheduling tasks;Software systems;Task specifications;Tool support;Transformation methods;Workflow management systems;},
  abstract  = {In MDE, software systems are always synchronized with their models since changes are made first to the model whenever there are changes in the requirement specifications. While MDE has a lot of potential, it requires maturity and tool support. In this research we present a framework for a workflow management system based on the MDE approach. We propose a domain specific language, T <inf>&squ;</inf> (T-Square) for rapidly specifying details of (workflow) tasks and their associated user interfaces which may be used with the NOVA Workflow, an executable workflow management system. T <inf>&squ;</inf> includes syntax for writing procedural statements, for querying an ontology, for declaring user interfaces, for applying access control policy, and for scheduling tasks, using Xtext to write the grammar. We apply transformation methods, based on Xtend, to generate executable software from the abstract task specifications. A running example from health services delivery illustrates the usefulness of this approach. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Models},
  keywords  = {Access control;Ontology;User interfaces;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-33666-9_4},
}

@InProceedings{20124815732185,
  author    = {Kaewchinporn, Chinnapat and Limpiyakorn, Yachai},
  title     = {Semantic approach to verifying activity diagrams with a domain specific language},
  year      = {2012},
  volume    = {340 CCIS},
  pages     = {466 - 473},
  address   = {Jeju Island, Korea, Republic of},
  note      = {Action description languages;Activity diagram;Design tool;Domain specific languages;Process Improvement;Quality of design;Quality software;Semantic approach;Software systems;Static and dynamic;UML activity diagrams;UML specifications;},
  abstract  = {The Unified Modeling Language is widely used as a design tool for modeling a software system via a set of diagrams providing both static and dynamic views of the system. However, the applications of UML have many problems, namely model inconsistent behaviors, model misconception, and mistake interpretation. The notations are used in different definitions that may not conform to the UML specification. This paper thus present a semantic approach to verifying UML activity diagrams with a domain specific language called Action Description Language (ADL). The method would facilitate the inspection of activity diagrams for the conformance to UML specification, resulting in better quality of design blueprints that would lead to quality software systems. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Unified Modeling Language},
  keywords  = {Computer applications;Computer software;Semantics;Specifications;Systems analysis;Verification;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-35267-6_62},
}

@InProceedings{20140117164419,
  author        = {Vacchi, Edoardo and Cazzola, Walter and Pillay, Suresh and Combemale, Benoit},
  title         = {Variability support in domain-specific language development},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {76 - 95},
  address       = {Indianapolis, IN, United states},
  note          = {CVL and Neverlang;Domain specific languages;Language component;Language design;Language development;Modular programming;Time-consuming tasks;Variability management;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain Specific Languages (DSLs) are widely adopted to capitalize on business domain experiences. Consequently, DSL development is becoming a recurring activity. Unfortunately, even though it has its benefits, language development is a complex and time-consuming task. Languages are commonly realized from scratch, even when they share some concepts and even though they could share bits of tool support. This cost can be reduced by employing modern modular programming techniques that foster code reuse. However, selecting and composing these modules is often only within the reach of a skilled DSL developer. In this paper we propose to combine modular language development and variability management, with the objective of capitalizing on existing assets. This approach explicitly models the dependencies between language components, thereby allowing a domain expert to configure a desired DSL, and automatically derive its implementation. The approach is tool supported, using Neverlang to implement language components, and the Common Variability Language (CVL) for managing the variability and automating the configuration. We will further illustrate our approach with the help of a case study, where we will implement a family of DSLs to describe state machines. &copy; 2013 Springer International Publishing.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Graphical user interfaces},
  keywords      = {Computer programming languages;Problem oriented languages;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-02654-1_5},
}

@InProceedings{20154501493335,
  author    = {Oliveira, Bruno and Belo, Orlando},
  title     = {A domain-specific language for ETL patterns specification in data warehousing systems},
  year      = {2015},
  volume    = {9273},
  pages     = {597 - 602},
  address   = {Coimbra, Portugal},
  note      = {Conceptual modelling;Data warehousing systems;Domain specific languages;ETL patterns;Specification models;},
  abstract  = {During the last few years many research efforts have been done to improve the design of ETL (Extract-Transform-Load) systems. ETL systems are considered very time-consuming, error-prone and complex involving several participants from different knowledge domains. ETL processes are one of the most important components of a data warehousing system that are strongly influenced by the complexity of business requirements, their changing and evolution. These aspects influence not only the structure of a data warehouse but also the structures of the data sources involved with. To minimize the negative impact of such variables, we propose the use of ETL patterns to build specific ETL packages. In this paper, we formalize this approach using BPMN (Business Process Modelling Language) for modelling more conceptual ETL workflows, mapping them to real execution primitives through the use of a domain- specific language that allows for the generation of specific instances that can be executed in an ETL commercial tool. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Data warehouses},
  keywords  = {Administrative data processing;Artificial intelligence;Computational linguistics;Computer programming languages;Graphical user interfaces;Modeling languages;Problem oriented languages;Specifications;Structural design;Systems engineering;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-23485-4_60},
}

@InProceedings{20123315344373,
  author    = {Hadar, Ethan and Hadar, Irit and Ferguson, Donald F.},
  title     = {QDSL - Quality domain specific language for cloud composite applications: Short research paper},
  year      = {2012},
  pages     = {228 - 233},
  address   = {Porto, Portugal},
  note      = {Cloud modeling;Cloud services;Domain specific languages;Quality assessment;Service Level Agreements;},
  abstract  = {Quality Domain Specific Language (QDSL) is a model-driven approach providing a taxonomy, model, and visual editing tool for evaluating and benchmarking the quality of composite applications in cloud environments. Our language and associated modeling tool provide visual and textual means for constructing mathematical algorithms needed for computing aggregated quality assessment of cloud services. QDSL enables the illustration and definition of metrics, measurements and indicators, relationships for computation, and transformation functions that normalize the measurements into relative quality scoring. As a result, QDSL provides a structure that guides overall quality assessments. The computation algorithm is structured in a visual manner and associates the quality assessments graph with the structure of the cloud composite application in a hybrid environment. QDSL supports transformation from physical measurements into scoring comparative assessments of benchmarked provided IT solutions. This paper presents a basic model for QDSL and examples of usage. A prototypical eclipse EMF modeling tool of QDSL is used for communication, whereas commercial monitoring tools implement the instantiated models for evaluating service qualities.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {CLOSER 2012 - Proceedings of the 2nd International Conference on Cloud Computing and Services Science},
  key       = {Benchmarking},
  keywords  = {Algorithms;Cloud computing;Distributed database systems;Quality of service;Visual languages;},
  language  = {English},
}

@Article{20163802818799,
  author    = {Oliveira, Bruno and Belo, Orlando},
  title     = {On the specification of extract, transform, and load patterns behavior: A domain-specific language approach},
  journal   = {Expert Systems},
  year      = {2016},
  note      = {Conceptual model;Data warehousing systems;Domain specific languages;ETL patterns;ETL skeletons;Specification models;},
  abstract  = {During the last few years, many research efforts have been done to improve the design of extract, transform, and load (ETL) models systems. Still, ETL systems are considered very time-consuming, error-prone, and complex involving several participants from different knowledge domains. The ETL processes are one of the most important components of a data warehousing system that are strongly influenced by the complexity of business requirements, their changing and evolution. These aspects influence not only the structure of the data warehouse itself but also the structures of the data sources involved with. To minimize the negative impact of such variables, we propose the use of ETL patterns to build specific ETL packages. In this paper, we formalize this approach using the BPMN for modeling more conceptual ETL workflows, mapping them to real execution primitives through the use of a domain-specific language that allows for the generation of specific instances that can be executed in an ETL commercial tool. &copy; 2016 Wiley Publishing Ltd.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {02664720},
  key       = {Structural design},
  keywords  = {Administrative data processing;Computer programming languages;Data warehouses;Modeling languages;Problem oriented languages;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1111/exsy.12168},
}

@InProceedings{20161802338293,
  author        = {Cuenca, Fredy and Van Den Bergh, Jan and Luyten, Kris and Coninx, Karin},
  title         = {A user study for comparing the programming efficiency of modifying executable multimodal interaction descriptions: A domain-specific language versus equivalent event-callback code},
  year          = {2015},
  pages         = {31 - 38},
  address       = {Pittsburgh, PA, United states},
  note          = {Composite event;Declarative Languages;Domain specific languages;Multi-Modal Interactions;Multimodal system;Perceived difficulties;Perceived usability;Programming tasks;},
  __markedentry = {[Neto:5]},
  abstract      = {The present paper describes an empirical user study intended to compare the programming efficiency of our proposed domain-specific language versus a mainstream event language when it comes to modify multimodal interactions. By concerted use of observations, interviews, and standardized questionnaires, we managed to measure the completion rates, completion time, code testing effort, and perceived difficulty of the programming tasks along with the perceived usability and perceived learnability of the tool supporting our proposed language. Based on this experience, we propose some guidelines for designing comparative user studies of programming languages. The paper also discusses the considerations we took into account when designing a multimodal interaction description language that intends to be well regarded by its users. &copy; 2015 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {PLATEAU 2015 - Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools},
  key           = {Computational linguistics},
  keywords      = {Computer programming languages;Efficiency;Graphical user interfaces;Interactive computer systems;Problem oriented languages;Surveys;User interfaces;XML;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2846680.2846686},
}

@InProceedings{20160101743305,
  author        = {Bryant, Barrett and Jezequel, Jean-Marc and Lammel, Ralf and Mernik, Marjan and Schindler, Martin and Steinmann, Friedrich and Tolvanen, Juha-Pekka and Vallecillo, Antonio and Volter, Markus},
  title         = {Globalized domain specific language engineering},
  year          = {2015},
  volume        = {9400},
  pages         = {43 - 69},
  address       = {Dagstuhl Castle, Germany},
  note          = {Domain specific languages;Engineering aspects;Globalized DSLs;Key Issues;Language engineering;Language integration;Refactorings;Tool integration;},
  __markedentry = {[Neto:5]},
  abstract      = {This chapter is dedicated to discussing the engineering aspects involved in the integration of modeling languages, as an essential part of the globalization process. It covers the foundations of language integration, the definition of the relationships between the languages to be integrated, and the various dimensions of language and tool integration. Language variants, evolution, refactoring and retirement are also discussed, as key issues involved in the globalization of modeling languages. &copy; Springer International Publishing Switzerland 2015.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Modeling languages},
  keywords      = {Computational linguistics;Computer programming languages;Graphical user interfaces;Integration;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-26172-0_4},
}

@Article{20154301433503,
  author        = {Moreira de Sousa, Luis and Rodrigues da Silva, Alberto},
  title         = {A domain specific language for spatial simulation scenarios},
  journal       = {GeoInformatica},
  year          = {2016},
  volume        = {20},
  number        = {1},
  pages         = {117 - 149},
  note          = {Agent-based modelling;Design of simulations;Domain specific languages;Domain-Specific Modelling Languages;Model driven development;Spatial informations;Spatial simulation;Uml profiles;},
  __markedentry = {[Neto:5]},
  abstract      = {This article describes DSL3S, a domain specific modelling language for Spatial Simulation in the field of Geographic Information Systems (GIS). Techniques such as cellular automata and agent-based modelling have long been used to capture and simulate the temporal dynamics of spatial information. Tools commonly employed to implement spatial simulation models include code libraries and pre-compiled models; the former require advanced programming skills while the latter impose relevant constraints on application scope. Previous attempts to produce domain specific languages in the field have invariably resulted in new textual programming languages (e.g. SELES, NetLogo, Ocelet) that are platform specific and in some cases with weak GIS support and interoperability. DSL3S synthesises relevant concepts of spatial simulation in a UML profile, that allows the design of simulation models through the arrangement of graphical elements. An implementation of this language is also presented, that relies on Model Driven Development (MDD) tools distributed with the Eclipse IDE. This includes a code generation infrastructure, that produces ready to run simulations from DSL3S models, supported by the MASON simulation tool-kit. Finally, DSL3S models for three simple and classical simulations allows to better illustrate and discuss the usage of the language. &copy; 2015, Springer Science+Business Media New York.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  issn          = {13846175},
  key           = {Modeling languages},
  keywords      = {Autonomous agents;Computational linguistics;Computational methods;Computer programming languages;Geographic information systems;Graphical user interfaces;Markup languages;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/s10707-015-0233-y},
}

@InProceedings{20142117741499,
  author        = {Vendrov, Ivan and Dutchyn, Christopher and Osgood, Nathaniel D.},
  title         = {Frabjous: A declarative domain-specific language for agent-based modeling},
  year          = {2014},
  volume        = {8393 LNCS},
  pages         = {385 - 392},
  address       = {Washington, DC, United states},
  note          = {Agent based simulation;Agent-based model;Domain specific languages;functional reactive;simulation;},
  __markedentry = {[Neto:5]},
  abstract      = {Agent-based modeling (ABM) is a powerful tool for the study of complex systems; but agent-based models are notoriously difficult to create, modify, and reason about, especially in contrast to system dynamics models. We argue that these difficulties are strongly related to the choice of specification language, and that they can be mitigated by using functional reactive programming (FRP), a paradigm for describing dynamic systems. We describe Frabjous, a new language for agent-based modeling based on FRP, and discuss its software engineering benefits and their broader implications for language choice in ABM. &copy; 2014 Springer International Publishing Switzerland.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Computational methods},
  keywords      = {Dynamic models;Functional programming;Problem oriented languages;Software engineering;Specification languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-319-05579-4_47},
}

@InProceedings{20124315587616,
  author    = {Lindeman, Ricky T. and Kats, Lennart C.L. and Visser, Eelco},
  title     = {Declaratively Defining Domain-Specific Language Debuggers},
  year      = {2012},
  volume    = {47},
  number    = {3},
  pages     = {127 - 136},
  note      = {Debuggers;Domain specific languages;High level specification;Language workbenches;Meta language;Spoofax;Stratego;Tool support;},
  abstract  = {Tool support is vital to the effectiveness of domain-specific languages. With language workbenches, domain-specific languages and their tool support can be generated from a combined, high-level specification. This paper shows how such a specification can be extended to describe a debugger for a language. To realize this, we introduce a meta-language for coordinating the debugger that abstracts over the complexity of writing a debugger by hand. We describe the implementation of a language-parametric infrastructure for debuggers that can be instantiated based on this specification. The approach is implemented in the Spoofax language workbench and validated through realistic case studies with the Stratego transformation language and the WebDSL web programming language. &copy; 2011 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {15232867},
  journal   = {ACM SIGPLAN Notices},
  key       = {Problem oriented languages},
  keywords  = {Computer debugging;Graphical user interfaces;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2189751.2047885},
}

@InProceedings{20124915762770,
  author    = {Kopp, Oliver and Binz, Tobias and Breitenbucher, Uwe and Leymann, Frank},
  title     = {BPMN4TOSCA: A domain-specific language to model management plans for composite applications},
  year      = {2012},
  volume    = {125 LNBIP},
  pages     = {38 - 52},
  address   = {Vienna, Austria},
  note      = {BPMN Extension;Composite applications;Data objects;Domain specific languages;Management plans;Model management;Modeling tool;Node management;Service management;Strong link;Topology management;Work-flows;Workflow modeling;},
  abstract  = {TOSCA is an upcoming standard to capture cloud application topologies and their management in a portable way. Management aspects include provisioning, operation and deprovisioning of an application. Management plans capture these aspects in workflows. BPMN 2.0 as general-purpose language can be used to model these workflows. There is, however, no tailored support for management plans in BPMN. This paper analyzes TOSCA with the focus on requirements on workflow modeling languages to come up with a strong link to the application topology with the goal to improve modeling support. To simplify the modeling of management plans, we introduce BPMN4TOSCA, which extends BPMN with four TOSCA-specific elements: TOSCA Topology Management Task, TOSCA Node Management Task, TOSCA Script Task, and TOSCA Data Object. Portability is ensured by a transformation of BPMN4TOSCA to plain BPMN. A prototypical modeling tool supports the strong link between the management plan and the TOSCA topology. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  key       = {Management science},
  keywords  = {Cloud computing;Problem oriented languages;Topology;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-33155-8_4},
}

@Article{20163102654764,
  author        = {Cordoba-Sanchez, Irene and de Lara, Juan},
  title         = {Ann: A domain-specific language for the effective design and validation of Java annotations},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2016},
  volume        = {45},
  pages         = {164 - 190},
  note          = {Code Generation;Conceptual model;Domain specific languages;Domain-Specific Modelling Languages;Integrity constraints;Java annotations;Model-driven Engineering;Software project;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes a new modelling language for the effective design and validation of Java annotations. Since their inclusion in the 5th edition of Java, annotations have grown from a useful tool for the addition of meta-data to play a central role in many popular software projects. Usually they are not conceived in isolation, but in groups, with dependency and integrity constraints between them. However, the native support provided by Java for expressing this design is very limited. To overcome its deficiencies and make explicit the rich conceptual model which lies behind a set of annotations, we propose a domain-specific modelling language. The proposal has been implemented as an Eclipse plug-in, including an editor and an integrated code generator that synthesises annotation processors. The environment also integrates a model finder, able to detect unsatisfiable constraints between different annotations, and to provide examples of correct annotation usages for validation. The language has been tested using a real set of annotations from the Java Persistence API (JPA). Within this subset we have found enough rich semantics expressible with Ann and omitted nowadays by the Java language, which shows the benefits of Ann in a relevant field of application. &copy; 2016 Elsevier Ltd},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, ScienceDirect, Duplicados},
  issn          = {14778424},
  key           = {Java programming language},
  keywords      = {Automatic programming;Computational linguistics;Computer programming languages;Computer software;Graphical user interfaces;Modeling languages;Problem oriented languages;Program compilers;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.cl.2016.02.002},
}

@InProceedings{20124315605706,
  author    = {Lace, Lelde and Liepin, Renars and Rencis, Edgars},
  title     = {Architecture and language for semantic reduction of domain-specific models in BPMS},
  year      = {2012},
  volume    = {128 LNBIP},
  pages     = {70 - 84},
  address   = {Nizhny Novgorod, Russia},
  note      = {BPMS;Business process management systems;Domain specific;Domain specific languages;Domain-specific modeling language;Industry standards;Model transformation;Modeling languages;Semantic reductions;Specific languages;Tool-building Platforms;},
  abstract  = {Nowadays each business process management system (BPMS) supports either an industry standard or its own specific modeling language. But no BPMS supports a specific language for each organization. We propose an architecture for building BPMS that allows creating a domain-specific modeling language for every client easily. The main problem is to bridge the gap between the domain-specific language and the executable language. We show that we can look at this problem as a classification of the domain-specific language constructs in the terms of the executable language. To solve this problem we present a novel model transformation language, with which this type of problem can be solved more naturally than with existing transformation languages. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Duvida},
  issn      = {18651348},
  journal   = {Lecture Notes in Business Information Processing},
  key       = {Problem solving},
  keywords  = {DSL;Enterprise resource management;Information science;Mathematical models;Problem oriented languages;Semantics;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-33281-4_6},
}

@InProceedings{20131716225025,
  author    = {Zalila, Faiez and Cregut, Xavier and Pantel, Marc},
  title     = {Towards a generic approach for DSML v v},
  year      = {2012},
  pages     = {IEEE CS; ACM Special Interest Group on Software Engineering (SIGSOFT) -},
  address   = {Obergurgl, Austria},
  note      = {Business languages;Domain-specific modeling language;Formal verifications;Generic approach;Safety-critical embedded systems;Traceability;Verification feedbacks;Verification results;},
  abstract  = {Model checking has produced very good results for the verfication of safety critical embedded systems. However, au-tomated verifcation tool-chains that allow users to rely on their usual business languages while enjoying the benefits of model checking powerful methods show different barriers: 1) the semantic gap between these languages is a very seri- ous barrier in the specification and implementation of this translational definition of the semantics of business models in the formal level, 2) expressing behavioral requirements in the business level and mapping them on the formal level and 3) the interpretation of verification results from the formal level by the end users in the business world. We propose a tooled approach which allows to resolve these cited barriers.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {Modeling Wizards: 2nd International Master Class on Model-Driven Engineering, MW 2012 - Satellite Event of MODELS 2012},
  key       = {Semantics},
  keywords  = {Model checking;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2448076.2448081},
}

@Article{20141917704254,
  author    = {Biehl, Matthias and El-Khoury, Jad and Loiret, Frederic and Torngren, Martin},
  title     = {On the modeling and generation of service-oriented tool chains},
  journal   = {Software and Systems Modeling},
  year      = {2014},
  volume    = {13},
  number    = {2},
  pages     = {461 - 480},
  note      = {Complex software systems;Domain specific modeling languages;Domain-specific modeling language;Generative approach;Industrial case study;Level of abstraction;Service component architecture;Tool integration;},
  abstract  = {Tool chains have grown from ad-hoc solutions to complex software systems, which often have a service-oriented architecture. With service-oriented tool integration, development tools are made available as services, which can be orchestrated to form tool chains. Due to the increasing sophistication and size of tool chains, there is a need for a systematic development approach for service-oriented tool chains. We propose a domain-specific modeling language (DSML) that allows us to describe the tool chain on an appropriate level of abstraction. We present how this language supports three activities when developing service-oriented tool chains: communication, design and realization. A generative approach supports the realization of the tool chain using the service component architecture. We present experiences from an industrial case study, which applies the DSML to support the creation of a service-oriented tool chain. We evaluate the approach both qualitatively and quantitatively by comparing it with a traditional development approach. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, SpringerLink, excluidos},
  issn      = {16191366},
  key       = {Tools},
  keywords  = {Chains;Industrial applications;Information services;Service oriented architecture (SOA);Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-012-0275-7},
}

@InProceedings{20142017730457,
  author        = {Viana, Matheus and Penteado, Rosangela and Do Prado, Antonio and Durelli, Rafael},
  title         = {F3T: From features to frameworks tool},
  year          = {2013},
  pages         = {89 - 98},
  address       = {Brasilia, DF, Brazil},
  note          = {Adaptive natures;Development process;Domain model;Domain-specific modeling language;Framework development;Model application;},
  __markedentry = {[Neto:5]},
  abstract      = {Frameworks are used to enhance the quality of applications and the productivity of development process, since applications can be designed and implemented by reusing framework classes. However, frameworks are hard to develop, learn and reuse, due to their adaptive nature. In this paper we present the From Features to Framework Tool (F3T), which supports framework development in two steps: Domain Modeling, in which the features of the framework domain are modeled, and Framework Construction, in which the source-code and the Domain-Specific Modeling Language (DSML) of the framework are generated from the features. In addition, the F3T also supports the use of the framework DSML to model applications and generate their source-code. The F3T has been evaluated in a experiment that is also presented in this paper. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, Duplicados},
  journal       = {Proceedings - 2013 27th Brazilian Symposium on Software Engineering, SBES 2013},
  key           = {Tools},
  keywords      = {Software engineering;Specification languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/SBES.2013.15},
}

@InProceedings{20162902597573,
  author    = {Baar, Thomas},
  title     = {Verification support for a state-transition-DSL defined with Xtext},
  year      = {2016},
  volume    = {9609},
  pages     = {50 - 60},
  address   = {Kazan and Innopolis, Russia},
  note      = {Automatic refactoring;Deterministic execution;Domain specific languages;Language specification;Model verification;Proof obligations;Semantic verification;State machine;},
  abstract  = {A Domain-Specific Language (DSL) allows the succinct modeling of phenomena in a problem domain. Modern DSL-tools make it easy for a language designer to define the syntax of a new DSL, to specify code generators or to build a new DSL on top of existing DSLs. Based on the language specification, the DSL-tool then generates rich editors. Often, these editors support features such as syntax highlighting, code completion or automatic refactoring. In this paper, we describe an approach of adding verification support for DSLs defined within the Eclipse-framework Xtext. Xtext provides good support for checking the well-formedness rules of the DSL&rsquo;s syntax. In contrast, support for specifying the language&rsquo;s semantics as well as verification support have been rather neglected so far. Our approach of incorporating semantic verification techniques is illustrated by a very simple State-Transition-DSL, which has been fully implemented in Xtext. The DSL&rsquo;s editor verifies on the fly that the current model holds some semantic properties such as deterministic execution and invariant preservation. The verification services for this DSL are based on the theorem prover PRINCESS. &copy; Springer International Publishing Switzerland 2016.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Computer programming languages;DSL;Information science;Problem oriented languages;Semantics;Syntactics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-41579-6_5},
}

@InProceedings{20124315601060,
  author    = {Noyrit, Florian and Gerard, Sebastien and Selic, Bran},
  title     = {FacadeMetamodel: Masking UML},
  year      = {2012},
  volume    = {7590 LNCS},
  pages     = {20 - 35},
  address   = {Innsbruck, Austria},
  note      = {Abstract syntax;Alternative approach;Domain-specific modeling language;Meta model;Uml profiles;UML tools;},
  abstract  = {UML profiling is pragmatic choice that lets language designers define a Domain-Specific Modeling Language (DSML) by tuning UML to meet specific domain. An alternative approach is to define a pure-DSML. Each approach has its own benefits and drawbacks. We propose an approach and a tool that helps get the best from both approaches; maximizing reuse while retaining a focused and adapted DSML. We guide the language designer in the definition of a metamodel based on one or more UML profiles. Language designers then recast UML so that only what they need will appear in this metamodel. From that, the tool automatically generates the pure-DSML and the transformations between it and UML. However, the new pure-DSML is only a facade; models can be manipulated using the pure-DSML abstract syntax but they are actually stored in fully-compliant UML abstract syntax and therefore remain compatible with UML tools. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Unified Modeling Language},
  keywords  = {Design;Markup languages;Models;Syntactics;Visual languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-33666-9_3},
}

@Article{20141917704267,
  author    = {Levendovszky, Tihamer and Balasubramanian, Daniel and Narayanan, Anantha and Shi, Feng and van Buskirk, Chris and Karsai, Gabor},
  title     = {A semi-formal description of migrating domain-specific models with evolving domains},
  journal   = {Software and Systems Modeling},
  year      = {2014},
  volume    = {13},
  number    = {2},
  pages     = {807 - 823},
  note      = {Domain specific;Domain specific modeling;Domain-specific modeling language;Language evolution;Model change;Model languages;Model migrations;},
  abstract  = {One of the main advantages of defining a domain-specific modeling language (DSML) is the flexibility to adjust the language definition to changing requirements or in response to a deeper understanding of the domain. With the industrial applications of domain-specific modeling environments, models are valuable investments. If the modeling language evolves, these models must be seamlessly migrated to the evolved DSML. Although the changes stemming from the language evolution are not abrupt in nature, migrating existing models to a new language is still a challenging task. Our solution is the Model Change Language (MCL) tool set, which defines a DSML to describe the migration rules and then performs the model migration automatically. In this paper, we describe the precise semantics of MCL and its execution, along with the confluence of the migration. &copy; 2013 Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  issn      = {16191366},
  key       = {Natural language processing systems},
  keywords  = {Industrial applications;Semantics;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-012-0313-5},
}

@InProceedings{20142217769078,
  author    = {He, Lei and Yao, Jian and Lei, Yong Lin},
  title     = {Air-combat decision modeling method based on DSM},
  year      = {2014},
  volume    = {536-537},
  pages     = {416 - 420},
  address   = {Zhuhai, China},
  note      = {Decision modeling;Domain specific modeling;Domain-specific modeling language;Generic modeling;Important features;Metamodeling;Model generation;Open source tools;},
  abstract  = {Air-combat decision modeling in effectiveness simulation has to be concerned with the important feature of decision making, such as complexity, diversity, flexibility. So Several challenges have to be mastered, including: improving the abstract level of modeling, providing friendly modeling language, validating concept model and generated code (or executive model) automatically. In this paper, domain-specific modeling (DSM) method is applied in air-combat decision simulation modeling to cope with those challenges. A graphical and textual domain-specific modeling language (DSML) of air-combat decision is designed through metamodel based on an open source tool, Generic Modeling Environment (GME). A code generator is developed to implement users' decision model based on python script. &copy; (2014) Trans Tech Publications, Switzerland.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, excluidos},
  issn      = {16609336},
  journal   = {Applied Mechanics and Materials},
  key       = {Robotics},
  keywords  = {Computer simulation;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.4028/www.scientific.net/AMM.536-537.416},
}

@InProceedings{20144700225488,
  author    = {Bordeleau, Francis},
  title     = {Model-Based Engineering: A new era based on papyrus and open source tooling},
  year      = {2014},
  volume    = {1290},
  pages     = {2 - 8},
  address   = {Valencia, Spain},
  note      = {Domain-specific modeling language;Eclipse;Integrated development environment;Model-based engineering;Open sources;Papyrus;Research communities;Software organization;},
  abstract  = {Model-Based Engineering (MBE) has proven to be highly successful in many different contexts in large software organizations such as Ericsson over the last decades. However, the broad adoption of MBE has been significantly limited by the fact that existing tools have failed to provide for better customizability and support for Domain-Specific Modeling Language (DSML) and to deliver capabilities to cover for the broad range of development aspects that are considered critical by end-users. Moreover, the lack of evolution of commercial modeling tools in the recent years has led several development units to seriously re-consider the use of modeling tools. We believe that the emergence of Papyrus as an industrial-grade open source modeling UML tool has the potential to be a real game changer and provide the required cornerstone of a new MBE era that will enable collaboration between industry and the research community to develop a complete MBE Integrated Development Environment (IDE) that will provide support for the broad set of capabilities required by the end-users.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Open systems},
  keywords  = {Industrial research;Open source software;Software engineering;Specification languages;Web services;},
  language  = {English},
}

@InProceedings{20154001333217,
  author    = {Groce, Alex and Pinto, Jervis},
  title     = {A little language for testing},
  year      = {2015},
  volume    = {9058},
  pages     = {204 - 218},
  address   = {Pasadena, CA, United states},
  note      = {Automated testing;Domain specific languages;Test harness;Testing algorithm;},
  abstract  = {The difficulty of writing test harnesses is a major obstacle to the adoption of automated testing and model checking. Languages designed for harness definition are usually tied to a particular tool and unfamiliar to programmers; moreover, such languages can limit expressiveness. Writing a harness directly in the language of the software under test (SUT) makes it hard to change testing algorithms, offers no support for the common testing idioms, and tends to produce repetitive, hard to- read code. This makes harness generation a natural fit for the use of an unusual kind of domain-specific language (DSL). This paper defines a template scripting testing language, TSTL, and shows how it can be used to produce succinct, readable definitions of state spaces. The concepts underlying TSTL are demonstrated in Python but are not tied to it. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Software testing},
  keywords  = {Computational linguistics;Computer programming languages;Formal methods;Model checking;NASA;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-17524-9_15},
}

@InProceedings{20130315904612,
  author    = {Lugato, David and Palyart, Marc and Engelvin, Christophe},
  title     = {Domain specific modeling for operations research simulation in a large industrial context},
  year      = {2012},
  pages     = {19 - 24},
  note      = {Associated tool;Computer scientists;Domain specific languages;Domain specific modeling;Domain-specific modeling language;Industrial context;Inherent complexity;Model-driven Engineering;Modeling technique;Parametric study;Physical phenomena;Time-consuming tasks;},
  abstract  = {In order to conduct operations research studies on complex systems, CEA/CESTA<sup>1</sup> has been using and developing a new generation of simulator. The inherent complexity of such simulations ensues from the large spectrum of physical phenomena involved. As a consequence the description of a scenario and the analysis of parametric studies are time-consuming tasks. In this paper, we illustrate how the use of modeling techniques can help users construct and interpret simulation scenarios, especially users who are not computer scientists. To that end, we present a domain-specific modeling language for operations research. Moreover its associated tool, which is deployed in a large industrial context, is introduced along with model examples. Copyright &copy; 2012 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Duvida},
  journal   = {SPLASH 2012: DSM 2012 - Proceedings of the 2012 ACM Workshop on Domain-Specific Modeling},
  key       = {Research},
  keywords  = {Models;Operations research;Problem oriented languages;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2420918.2420924},
}

@InProceedings{20161502237471,
  author    = {Yue, Songqing and Gray, Jeff},
  title     = {A DSL for reducing the accidental complexities of using program transformation engines},
  year      = {2015},
  pages     = {195 - 200},
  address   = {San Diego, CA, United states},
  note      = {Abstraction level;Code Generation;Code modifications;Domain specific languages;Language tools;Program transformation techniques;Program transformations;Software evolution and maintenances;},
  abstract  = {Many software evolution and maintenance problems can be addressed through techniques of program transformation. To facilitate development of language tools assisting software evolution and maintenance, we created a Domain-Specific Language (DSL), named SPOT (Specifying PrOgram Transformation), which can be used to raise the abstraction level of code modification. The design goal is to automate source-tosource program transformations through techniques of code generation, so that developers only need to specify desired transformations using constructs provided by the DSL while being oblivious to the details about how the transformations are performed. The paper provides a general motivation for using program transformation techniques and explains the design details of SPOT. In addition, we present a case study to illustrate how SPOT can be used to build a code coverage tool for applications implemented in different programming languages.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  journal   = {24th International Conference on Software Engineering and Data Engineering, SEDE 2015},
  key       = {Computer software maintenance},
  keywords  = {Codes (symbols);Computational linguistics;Computer programming languages;Problem oriented languages;Program compilers;Software engineering;},
  language  = {English},
}

@InProceedings{20150900589366,
  author    = {Celikovi, Milan and Dimitrieski, Vladimir and Aleksic, Slavica and Ristic, Sonja and Lukovic, Ivan},
  title     = {A DSL for EER data model specification},
  year      = {2014},
  pages     = {290 - 297},
  address   = {Varazdin, Croatia},
  note      = {Domain specific languages;Ecore;Entity-relationship;Graphical notation;Information system model;Model specifications;Object Constraint Language;Relational data models;},
  abstract  = {In this paper we present a domain specific language (DSL) for Extended Entity-Relationship (EER) data model approach, named EERDSL. EERDSL is a part of our Multi-Paradigm Information System Modeling Tool (MIST) that provides EER database schema specification at the conceptual level and its transformation into a relational data model, or a class model. EERDSL modeling concepts are specified by Ecore, one of the commonly used approaches to create meta-models. In the paper we present both textual and graphical notations of EERDSL. Since only few modeling constraints may be described at the level of abstract syntax, we use Object Constraint Language (OCL) to specify complex validation rules for EER models.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  journal   = {Information Systems Development: Transforming Organisations and Society Through Information Systems - Proceedings of the 23rd International Conference on Information Systems Development, ISD 2014},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Computer programming languages;Data mining;Database systems;Information systems;Metadata;Problem oriented languages;Specifications;},
  language  = {English},
}

@InProceedings{20144600188474,
  author    = {Rahman, Anisur and Amyot, Daniel},
  title     = {A DSL for importing models in a requirements management system},
  year      = {2014},
  pages     = {37 - 46},
  address   = {Karlskrona, Sweden},
  note      = {Automatic Generation;Domain specific languages;evolution;Proprietary solutions;Requirements management;Requirements management systems;traceability;Traceability links;},
  abstract  = {Requirements are artefacts often described with text and models. It is important to manage traceability between requirements and other software artefacts, including designs and test cases, also often captured with specialized models. Some Requirements Management Systems (RMS) support traceability relationships, between (textual) requirements artefacts in the RMS and model artefacts created outside the RMS, through complex standards or proprietary solutions. This paper proposes a new Domain-Specific Language (DSL) for describing the concepts of a modeling language intended to be traced using an RMS, with tool support handling the import and re-import of models and of their traceability links. The Model Import DSL (MI-DSL) is supported by an Xtext-based editor and the automatic generation of an import library targeting a leading RMS, namely IBM Rational DOORS. The language and the tools are demonstrated for model import and evolution scenarios with two different modeling languages. This work contributes a simple yet reliable mechanism to define and support traceability between requirements and models from different tools. &copy; 2014 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Todos A, Scopus, Inclusos},
  journal   = {2014 IEEE 4th International Model-Driven Requirements Engineering Workshop, MoDRE 2014 - Proceedings},
  key       = {Requirements engineering},
  keywords  = {Computer programming languages;Doors;DSL;Models;Outsourcing;Problem oriented languages;Software testing;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/MoDRE.2014.6890824},
}

@Article{20133516666866,
  author    = {Lukman, Tomaz and Godena, Giovanni and Gray, Jeff and Hericko, Marjan and Strmcnik, Stanko},
  title     = {Model-driven engineering of process control software - beyond device-centric abstractions},
  journal   = {Control Engineering Practice},
  year      = {2013},
  volume    = {21},
  number    = {8},
  pages     = {1078 - 1096},
  note      = {Application engineering;Automatic code generations;Domain-specific modeling language;Industrial process control;Model languages;Model transformation;Model-driven Engineering;Process control software;},
  abstract  = {This paper presents a new, two-level, model-driven engineering approach to industrial process control software. The first level (infrastructure engineering) is concerned with the following: the definition of the development process and guidelines, the definition of a domain-specific modeling language, the specification of the model transformations, and the development of a tool suite. This tool suite enables modeling of the process control software and the automatic code generation for programmable logic controllers. In the second level (application engineering), the process control software is engineered using the results of the infrastructure level. The approach is demonstrated on excerpts from an industrial project. &copy; 2013 Elsevier Ltd.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {09670661},
  key       = {Application programs},
  keywords  = {Controllers;Process control;Programmable logic controllers;Programmed control systems;Specification languages;Tools;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.conengprac.2013.03.013},
}

@InProceedings{20123015276546,
  author    = {Selim, Gehan M. K. and Wang, Shige and Cordy, James R. and Dingel, Juergen},
  title     = {Model transformations for migrating legacy models: An industrial case study},
  year      = {2012},
  volume    = {7349 LNCS},
  pages     = {90 - 101},
  address   = {Kgs. Lyngby, Denmark},
  note      = {Atlas transformation languages;Automotive companies;Automotive control;AutoSAR;Domain-specific modeling language;General motors;Growing demand;Industrial case study;Meta model;Model transformation;Model-driven development;Open system architecture;Vehicle control software;},
  abstract  = {Many companies in the automotive industry have adopted MDD in their vehicle control software development. As a major automotive company, General Motors has been using a custom-built, domain-specific modeling language, implemented as an internal proprietary metamodel, to meet the modeling needs in its control software development. As AUTOSAR (AUTomotive Open System ARchitecture) is being developed as a standard to ease the process of integrating components provided by different suppliers and manufacturers, there is a growing demand to migrate these GM-specific, legacy models to AUTOSAR models. Given that AUTOSAR defines its own metamodel for various system artifacts in automotive software development, we explore using model transformations to address the challenges in migrating GM legacy models to their AUTOSAR equivalents. As a case study, we have built a model transformation using the MDWorkbench tool and the Atlas Transformation Language (ATL). This paper reports on the case study, makes observations based on our experience to assist in the development of similar types of transformations, and provides recommendations for further research. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Mathematical models},
  keywords  = {Automotive industry;Control system synthesis;Industrial applications;Open systems;Research;Software design;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-31491-9_9},
}

@InProceedings{20144800255627,
  author    = {Balasubramanian, Daniel and Levendovszky, Tihamer and Dubey, Abhishek and Karsai, Gabor},
  title     = {Taming multi-paradigm integration in a software architecture description language},
  year      = {2014},
  volume    = {1237},
  pages     = {67 - 76},
  address   = {Valencia, Spain},
  note      = {Architecture description languages;Automated analysis;Distributed real time system;Domain-specific modeling language;High-level structure;Software architecture description languages;Software community;Software systems;},
  abstract  = {Software architecture description languages offer a convenient way of describing the high-level structure of a software system. Such descriptions facilitate rapid prototyping, code generation and automated analysis. One of the big challenges facing the software community is the design of architecture description languages that are general enough to describe a wide-range of systems, yet detailed enough to capture domain-specific properties and provide a high level of tool automation. This paper presents the multi-paradigm challenges we faced and solutions we built when creating a domain-specific modeling language for software architectures of distributed real-time systems.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {High level languages},
  keywords  = {Embedded systems;Interactive computer systems;Real time systems;Software architecture;Specification languages;Systems analysis;},
  language  = {English},
}

@InProceedings{20142817910406,
  author        = {Thiery, Adrien and Cerqueus, Thomas and Thorpe, Christina and Sunye, Gerson and Murphy, John},
  title         = {A DSL for deployment and testing in the cloud},
  year          = {2014},
  pages         = {376 - 382},
  address       = {Cleveland, OH, United states},
  note          = {Application deployment;Cloud applications;Deployment;Generation process;High-level domain;Production environments;Resource requirements;Software-as-a-Service;},
  __markedentry = {[Neto:5]},
  abstract      = {Cloud computing is becoming increasingly prevalent, more and more software providers are offering their applications as Software-as-a-Service solutions rather than traditional on-premises installations. In order to ensure the efficacy of the testing phase, it is critical to create a test environment that sufficiently emulates the production environment. Thus, Cloud applications should be tested in the Cloud. Cloud providers offer command-line tools for interacting with their platforms. However, writing custom low-level scripts using the provider's tool can become very complex to maintain and manage when variability (in terms of providers and platforms) is introduced. The contributions in this paper include: the development of a high level Domain Specific Language for the abstract definition of the application deployment process, and resource requirements, and a generation process that transforms these definitions to automatically produce deployment and instantiation scripts for a variety of providers and platforms. These contributions significantly simplify and accelerate the testing process for Cloud applications. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - IEEE 7th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2014},
  key           = {Application programs},
  keywords      = {Clouds;Computer programming languages;DSL;Software testing;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICSTW.2014.43},
}

@InProceedings{20143118008948,
  author    = {Sztipanovits, Janos and Bapty, Ted and Neema, Sandeep and Howard, Larry and Jackson, Ethan},
  title     = {OpenMETA: A model- and component-based design tool chain for cyber-physical systems},
  year      = {2014},
  volume    = {8415 LNCS},
  pages     = {235 - 248},
  address   = {Grenoble, France},
  note      = {Component based design;Cyber physical systems (CPSs);Design automations;Domain-specific modeling language;Model integrated computing;Model integration;Model-based design;},
  abstract  = {Model- and component-based design have yielded dramatic increase in design productivity in several narrowly focused homogeneous domains, such as signal processing, control and aspects of electronic design. However, significant impact on the design and manufacturing of complex cyber-physical systems (CPS) such as vehicles has not yet been achieved. This paper describes challenges of and solution approaches to building a comprehensive design tool suite for complex CPS. The primary driver for the OpenMETA tool chain was to push the boundaries of the "correct-by-construction" principle to decrease significantly the costly design-build-test-redesign cycles in design flows. In the discussions we will focus on the impact of heterogeneity in modeling CPS. This challenge is compounded by the need for rapidly evolving the design flow by changing/updating the selection of modeling languages, analysis and verification tools and synthesis methods. Based on our experience with the development of OpenMETA and with the evaluation of its performance in a complex CPS design challenge we argue that the current vertically integrated, discipline-specific tool chains for CPS design need to be complemented with horizontal integration layers that support model integration, tool integration and design process integration. This paper will examine the OpenMETA technical approach to construct the new integration layers, provides and overview of the technical framework we established for their implementation and summarize our experience with their application. &copy; 2014 Springer-Verlag Berlin Heidelberg.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Chains},
  keywords  = {Computer aided design;Embedded systems;Signal processing;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-54848-2_16},
}

@Article{20122915259411,
  author        = {Eyisi, Emeka and Bai, Jia and Riley, Derek and Weng, Jiannian and Yan, Wei and Xue, Yuan and Koutsoukos, Xenofon and Sztipanovits, Janos},
  title         = {NCSWT: An integrated modeling and simulation tool for networked control systems},
  journal       = {Simulation Modelling Practice and Theory},
  year          = {2012},
  volume        = {27},
  pages         = {90 - 111},
  note          = {Control system dynamics;Data-communication;Domain-specific modeling language;High level architecture standards;HLA;Industrial control systems;Integrated modeling;MATLAB /simulink;Modeling and simulation;Network effects;Networking systems;Runtimes;Simulation;Software component;Time synchronization;Use-model;},
  __markedentry = {[Neto:5]},
  abstract      = {Networked Control Systems (NCS) are becoming increasingly ubiquitous in a growing number of applications, such as groups of unmanned aerial vehicles and industrial control systems. The evaluation of NCS properties such as stability and performance is very important given that these systems are typically deployed in critical settings. This paper presents the Networked Control Systems Wind Tunnel (NCSWT), an integrated modeling and simulation tool for the evaluation of Networked Control Systems (NCS). NCSWT integrates Matlab/Simulink and ns-2 for modeling and simulation of NCS using the High Level Architecture (HLA) standard. The tool is composed of two parts, the design-time models and the run-time components. The design-time models use Model Integrated Computing (MIC) to define HLA-based model constructs such as federates representing the simulators and interactions representing the communication between the simulators. MIC techniques facilitate the modeling and design of complex systems by using abstractions defined in domain-specific modeling languages (DSMLs) to describe the systems. The design-time models represent the control system dynamics and networking system behaviors in order to facilitate the run-time simulation of a NCS. The run-time components represent the main software components and interfaces for the actual realization of a NCS simulation using the HLA framework. Our implementation of the NCSWT based on HLA guarantees accurate time synchronization and data communication. Two case studies are presented to demonstrate the capabilities of the tool as well as evaluate the impact of network effects on NCS. &copy; 2012 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, ScienceDirect, Duplicados},
  issn          = {1569190X},
  key           = {Networked control systems},
  keywords      = {Computer simulation;Design;Integration;Models;Specification languages;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.simpat.2012.05.004},
}

@InProceedings{20123415350878,
  author    = {Cho, Hyun and Gray, Jeff and Syriani, Eugene},
  title     = {Creating visual domain-specific modeling languages from end-user demonstration},
  year      = {2012},
  pages     = {22 - 28},
  address   = {Zurich, Switzerland},
  note      = {Abstract syntax;Concrete syntax;Design Patterns;Development activity;Domain knowledge;Domain model;Domain-specific modeling language;End users;End-user involvements;Error prones;Incremental approach;Language development;Meta model;Semantic inference;Static semantics;Tool support;},
  abstract  = {Domain-Specific Modeling Languages (DSMLs) have received recent interest due to their conciseness and rich expressiveness for modeling a specific domain. However, DSML adoption has several challenges because development of a new DSML requires both domain knowledge and language development expertise (e.g., defining abstract/concrete syntax and specifying semantics). Abstract syntax is generally defined in the form of a metamodel, with semantics associated to the metamodel. Thus, designing a metamodel is a core DSML development activity. Furthermore, DSMLs are often developed incrementally by iterating across complex language development tasks. An iterative and incremental approach is often preferred because the approach encourages end-user involvement to assist with verifying the DSML correctness and feedback on new requirements. However, if there is no tool support, iterative and incremental DSML development can be mundane and error-prone work. To resolve issues related to DSML development, we introduce a new approach to create DSMLs from a set of domain model examples provided by an end-user. The approach focuses on (1) the identification of concrete syntax, (2) inducing abstract syntax in the form of a metamodel, and (3) inferring static semantics from a set of domain model examples. In order to generate a DSML from user-supplied examples, our approach uses graph theory and metamodel design patterns. &copy; 2012 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, Inclusos},
  journal   = {2012 4th International Workshop on Modeling in Software Engineering, MiSE 2012 - Proceedings},
  key       = {Visual languages},
  keywords  = {Graph theory;Semantics;Software engineering;Specification languages;Syntactics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/MISE.2012.6226010},
}

@Article{20122715215998,
  author    = {Perrouin, Gilles and Vanwormhoudt, Gilles and Morin, Brice and Lahire, Philippe and Barais, Olivier and Jezequel, Jean-Marc},
  title     = {Weaving variability into domain metamodels},
  journal   = {Software and Systems Modeling},
  year      = {2012},
  volume    = {11},
  number    = {3},
  pages     = {361 - 383},
  note      = {Aspect model;Aspect oriented modeling;Common-base;Domain metamodels;Domain specific languages;Domain-specific modeling language;Learning curves;Meta model;Model weaving;Product line engineering;Product-lines;Software Product Line;Tool support;},
  abstract  = {Domain-specific modeling languages (DSMLs) are the essence of MDE. A DSML describes the concepts of a particular domain in a metamodel, as well as their relationships. Using a DSML, it is possible to describe a wide range of different models that often share a common base and vary on some parts. On the one hand, some current approaches tend to distinguish the variability language from the DSMLs themselves, implying greater learning curve for DSMLs stakeholders and a significant overhead in product line engineering. On the other hand, approaches integrating variability in DSMLs lack generality and tool support. We argue that aspect-oriented modeling techniques enabling flexible metamodel composition and results obtained by the software product line community to manage and resolve variability form the pillars for a solution for integrating variability into DSMLs. In this article, we consider variability as an independent and generic aspect to be woven into the DSML. In particular, we detail how variability is woven and how to perform product line derivation. We validate our approach through the weaving of variability into two different metamodels: Ecore-widely used for DSML definition-and SmartAdapters, our aspect model weaver. These results emphasize how new abilities of the language can be provided by this means. &copy; 2010 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16191366},
  key       = {Weaving},
  keywords  = {Network architecture;Production engineering;Software design;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-010-0186-4},
}

@InProceedings{20160101760945,
  author    = {de la Vega, Alfonso and Garcia-Saiz, Diego and Zorrilla, Marta and Sanchez, Pablo},
  title     = {Towards a DSL for educational data mining},
  year      = {2015},
  volume    = {563},
  pages     = {79 - 90},
  address   = {Madrid, Spain},
  note      = {Data analysis tool;Domain specific languages;Educational data mining;Work process;},
  abstract  = {Nowadays, most companies and organizations rely on computer systems to run their work processes. Therefore, the analysis of how these systems are used can be an important source of information to improve these work processes. In the era of Big Data, this is perfectly feasible with current state-of-art data analysis tools. Nevertheless, these data analysis tools cannot be used by general users, as they require a deep and sound knowledge of the algorithms and techniques they implement. In other areas of computer science, domain-specific languages have been created to abstract users from low level details of complex technologies. Therefore, we believe the same solution could be applied for data analysis tools. This article explores this hypothesis by creating a Domain-Specific Language (DSL) for the educational domain. &copy; Springer International Publishing Switzerland 2015.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Big data},
  keywords  = {Abstracting;Computational linguistics;Computer programming languages;Data handling;Data mining;Graphical user interfaces;Information analysis;Problem oriented languages;Slate;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-27653-3_8},
}

@InProceedings{20123315339751,
  author        = {Sulzmann, Martin and Zechner, Axel},
  title         = {Model checking DSL-generated C source code},
  year          = {2012},
  volume        = {7385 LNCS},
  pages         = {241 - 247},
  address       = {Oxford, United kingdom},
  note          = {Domain specific languages;Mission critical applications;Source codes;Temporal specification;},
  __markedentry = {[Neto:5]},
  abstract      = {We report on the application of SPIN for model-checking C source code which is generated out of a textual domain-specific language (DSL). We have built a tool which automatically generates the necessary SPIN wrapper code using (meta-)information available at the DSL level. The approach is part of a larger tool-chain for developing mission critical applications. The main purpose of SPIN is for bug-finding where error traces resulting from SPIN can be automatically replayed at the DSL level and yield concise explanations in terms of a temporal specification DSL. The tool-chain is applied in some large scale industrial applications. &copy; 2012 Springer-Verlag Berlin Heidelberg.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Model checking},
  keywords      = {Industrial applications;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1007/978-3-642-31759-0_18},
}

@InProceedings{20144700211884,
  author        = {Visic, Niksa and Karagiannis, Dimitris},
  title         = {Developing conceptual modeling tools using a DSL},
  year          = {2014},
  volume        = {8793},
  pages         = {162 - 173},
  address       = {Sibiu, Romania},
  note          = {Abstract levels;Conceptual model;Concrete syntax;Domain specific languages;Graphical editors;Metamodeling;Technological platform;Technology independent;},
  __markedentry = {[Neto:5]},
  abstract      = {There are multiple ways one can pursue when developing conceptual modeling tools. The most common are the ones where modeling tool engineers implement by using multiple graphical editors and various programming languages to realize the requirements of a modeling method. In this case, implementing artifacts such as abstract and concrete syntax or algorithms is linked to a specific technological platform. This motivated us to develop a DSL for this area, which entailed designing, specifying and implementing it. In this paper we propose a domain-specific language (MM-DSL) based on a metamodeling approach, which gives us the ability to be technology independent. With MMDSL a specification for a conceptual modeling tool is programmed on an abstract level. The code can be compiled and executed on different metamodeling platforms. We tested the MM-DSL 1.0 using a prototype-based evaluation. &copy; Springer International Publishing Switzerland 2014.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, SpringerLink, Duplicados},
  issn          = {03029743},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key           = {Data mining},
  keywords      = {Computer programming languages;Problem oriented languages;, rank3},
  language      = {English},
}

@Article{20142717895849,
  author    = {Frank, Ulrich},
  title     = {Multi-perspective enterprise modeling: Foundational concepts, prospects and future research challenges},
  journal   = {Software and Systems Modeling},
  year      = {2014},
  volume    = {13},
  number    = {3},
  pages     = {941 - 962},
  note      = {Domain-specific modeling language;Enterprise modeling;Method engineering;Modeling tool;Reference modeling;},
  abstract  = {The paper presents a method for multi- perspective enterprise modeling (MEMO) and a corresponding (meta-) modeling environment. An extensive analysis of requirements for enterprise modeling serves to motivate and assess the method. The method is based on an elaborate conception of multi-perspective enterprise models and on an extensible language architecture. The language architecture is comprised of a meta modeling language and an extensible set of integrated domain-specific modeling languages (DSML). The DSML are supplemented with process models and with guidelines for their reflective use. The corresponding modeling environment integrates editors for various DSML into multi-language model editors. It includes a meta model editor which enables the convenient use, development and extension of the set of supported DSML and supports the generation of respective graphical model editors. Thus, it also serves as a foundation for method engineering. MEMO covers both software engineering as well as social, managerial and economic aspects of the firm. The presentation of MEMO is supplemented with a comparative overview of other approaches to enterprise modeling. The paper concludes bys summarizing fundamental technical, epistemological and political challenges for enterprise modeling research and discusses potential paths for future research. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16191366},
  key       = {Research},
  keywords  = {Computational linguistics;High level languages;Industry;Software engineering;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/s10270-012-0273-9},
}

@InProceedings{20143017986845,
  author        = {Kourzanov, Peter},
  title         = {DSL methods for CPS simulation in the cloud experience report},
  year          = {2014},
  pages         = {25 - 32},
  address       = {Dresden, Germany},
  note          = {Cyber physical systems (CPSs);Declarative Programming;Discrete event models;Domain specific languages;Network simulation;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents our approach to Cyber-physical System (CPS) simulation including a number of embedded nodes that form a wireless network. On one hand, we use the NS-2 discrete-event simulator as a C++ kernel for running network simulation scenarios, while on the other hand, a combination of components written using standard Scheme as well as a number of Domain-Specific Language (DSL) instances embedded into Scheme (implementing pattern-matching, logicrelational models, and Web programming) are used in a cloud-based tool-set that supports research exploration cycle where variation in network parameters is compared to the resulting CPS performance. These components cooperate to provide an intuitive Web-based user interface, analysis tools and a seamless work-flow including visualization. &copy; 2014 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  key           = {Distributed computer systems},
  keywords      = {C++ (programming language);Cloud computing;Computer programming;Discrete event simulation;Embedded systems;Graphical user interfaces;Models;Problem oriented languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2559627.2559634},
}

@Article{20152300912442,
  author        = {Popovic, Aleksandar and Lukovic, Ivan and Dimitrieski, Vladimir and Djukic, Verislav},
  title         = {A DSL for modeling application-specific functionalities of business applications},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2015},
  volume        = {43},
  pages         = {69 - 95},
  note          = {Application specific;Domain specific languages;Information system development process;Integrated information system;Model transformation;Model-Driven Software Development;Platform independent model;System implementation;},
  __markedentry = {[Neto:5]},
  abstract      = {Models have been widely used in the information system development process. Models are not just means for system analysis and documentation. They may be also transformed into system implementation, primarily program code. Generated program code of screen forms and transaction programs mainly implements generic functionalities that can be expressed by simple retrieval, insertion, update, or deletion operations over database records. Besides the program code of generic functionalities, each application usually includes program code for specific business logic that represents application-specific functionalities, which may include complex calculations, as well as a series of database operations. There is a lack of domain-specific and tool-supported techniques for specification of such application-specific functionalities at the level of platform-independent models (PIMs). In this paper, we propose an approach and a domain-specific language (DSL), named IIS<sup>&lowast;</sup>CFuncLang, aimed at enabling a complete specification of application-specific functionalities at the PIM level. We have developed algorithms for transformation of IIS<sup>&lowast;</sup>CFuncLang specifications into executable program code, such as PL/SQL program code. In order to support specification of application-specific functionalities using IIS<sup>&lowast;</sup>CFuncLang, we have also developed appropriate tree-based and textual editors. The language, editors, and the transformations are embedded into a Model-Driven Software Development tool, named Integrated Information Systems CASE (IIS<sup>&lowast;</sup>Case). IIS<sup>&lowast;</sup>Case supports platform-independent design and automated prototyping of information systems, which allows us to verify and test our approach in practice. &copy; 2015 Elsevier Ltd.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {14778424},
  key           = {Application programs},
  keywords      = {Codes (symbols);Computational linguistics;Computer programming languages;Embedded systems;Graphical user interfaces;Information systems;Markup languages;Problem oriented languages;Software design;Software engineering;Specifications;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.cl.2015.03.003},
}

@InProceedings{20134516952779,
  author    = {Wouters, Laurent},
  title     = {Towards the notation-driven development of DSMLs},
  year      = {2013},
  volume    = {8107 LNCS},
  pages     = {522 - 537},
  address   = {Miami, FL, United states},
  note      = {Abstract syntax;Concrete syntax;Domain specific modeling;Domain-specific modeling language;Empirical studies;Interface domains;ITS applications;Model-driven Engineering;},
  abstract  = {Domain-Specific Modeling Languages (DSML) enable domain experts to leverage Model-Driven Engineering methods and tools through concepts and notations from their own domain. The notation of a DSML is critical because it is the sole interface domain experts will have with their tool. Unfortunately, the current process for the development of DSMLs strongly emphasizes the abstract syntaxes and often treats the notations (concrete syntaxes) as byproducts. Focusing on the case of visual DSMLs, this paper proposes to automatically generate a DSML's abstract syntax from the specification of its concrete syntax. This shift towards the notation-driven development of DSMLs is expected to enable the production of DSMLs closer to domain experts' expectations. This approach is validated by its implementation in a prototype, its application on an industrial case and the results of an empirical study. &copy; 2013 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Visual languages},
  keywords  = {Byproducts;Models;Specification languages;Syntactics;Tools;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-41533-3_32},
}

@InProceedings{20134216854465,
  author        = {Lindecker, David and Simko, Gabor and Madari, Istvan and Levendovszky, Tihamer and Sztipanovits, Janos},
  title         = {Multi-way semantic specification of domain-specific modeling languages},
  year          = {2013},
  pages         = {20 - 29},
  address       = {Phoenix, AZ, United states},
  note          = {Cyber-physical systems (CPS);Denotational semantics;Domain-specific modeling language;Formal modeling and analysis;Model-based design;Operational semantics;Semantic specification;Syntactic structure;},
  __markedentry = {[Neto:5]},
  abstract      = {Increased emphasis on the use of model-based design methods, particularly for developing Cyber-Physical Systems (CPS), has created challenges in the area of developing domain-specific modeling languages (DSML). To meet the increased demand for DSMLs, rapid development tools and techniques are needed. While tools such as the Generic Modeling Environment (GME) for the specification of the syntactic structure of DSMLs are well established, proper techniques for the specification of semantics and methods for integrating the semantic specifications with the language design tool suite remain interesting challenges. Current efforts in semantic specification of DSMLs focus solely on operational semantics. In this paper we show how the specification of multiple types of semantics can bring added benefit. We also emphasize the use of FORMULA, a formal modeling and analysis language, and show how it can be used to specify the semantics of a DSML in a way that integrates with DSML development tools. As a case study, we consider the operational and denotational semantics of a Statecharts-like language and show that the two semantic specifications can be used for complementary applications. &copy; 2013 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, Duplicados},
  journal       = {Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems},
  key           = {Specifications},
  keywords      = {Embedded systems;Semantics;Specification languages;Tools;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ECBS.2013.29},
}

@InProceedings{20160501879859,
  author    = {Sprogis, Arturs and Barzdins, Janis},
  title     = {Specification, configuration and implementation of DSL tool},
  year      = {2013},
  volume    = {249},
  pages     = {330 - 343},
  note      = {Extension mechanisms;Meta model;Precise definition;transformation;},
  abstract  = {A new specification method for DSL and DSL tools is proposed. The method is based on an advanced stereotype mechanism. A special feature of the proposed method is a precise definition of the extension mechanism for realization of non-standard features of DSL tools. In conclusions the architecture of a DSL tool building framework based on the proposed specification method is described. &copy; 2013 The authors and IOS Press. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {09226389},
  journal   = {Frontiers in Artificial Intelligence and Applications},
  key       = {Specifications},
  keywords  = {Artificial intelligence;DSL;},
  language  = {English},
  url       = {http://dx.doi.org/10.3233/978-1-61499-161-8-330},
}

@InProceedings{20131116105520,
  author        = {Combemale, Benoit and Cregut, Xavier and Pantel, Marc},
  title         = {A design pattern to build executable DSMLs and associated V V tools},
  year          = {2012},
  volume        = {1},
  pages         = {282 - 287},
  address       = {Hong Kong, China},
  note          = {Design Patterns;Domain-specific modeling language;Execution semantics;Graphical animation;Meta model;Model validation;Model-driven Engineering;Software languages;Systematic method;Target domain;Validation and verification;Virtual machines;},
  __markedentry = {[Neto:5]},
  abstract      = {Model executability is now a key concern in model-driven engineering' mainly to support early validation and verification (V&amp;amp;V). Some approaches allow to weave executability into metamodels' defining executable domain-specific modeling languages (DSMLs). Model validation can then be achieved by simulation and graphical animation through direct interpretation of the conforming models. Other approaches address model executability by model compilation' allowing to reuse the virtual machines or V&amp;amp;V tools existing in the target domain. Nevertheless' systematic methods are currently not available to help the language designer in the definition of such an execution semantics and related tools. For instance' simulators are mostly hand-crafted in a tool specific manner for each DSML. In this paper' we propose to reify the elements commonly used to support state-based execution in a DSML. We infer a design pattern (called Executable DSML pattern) providing a general reusable solution for the expression of the executability concerns in DSMLs. It favors flexibility and improves reusability in the definition of semantics-based tools for DSMLs. We illustrate how this pattern can be applied to ease the development of V&amp;amp;V tools. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, Duplicados},
  issn          = {15301362},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  key           = {Computer simulation},
  keywords      = {Animation;Reusability;Semantics;Specification languages;Verification;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/APSEC.2012.79},
}

@Article{20133316608411,
  author    = {De Lara, Juan and Guerra, Esther and Sanchez Cuadrado, Jesus},
  title     = {Reusable abstractions for modeling languages},
  journal   = {Information Systems},
  year      = {2013},
  volume    = {38},
  number    = {8},
  pages     = {1128 - 1149},
  note      = {Abstraction;Domain-specific modeling language;Genericity;MetaDepth;Metamodeling;Model-driven Engineering;},
  abstract  = {Model-driven engineering proposes the use of models to describe the relevant aspects of the system to be built and synthesize the final application from them. Models are normally described using Domain-Specific Modeling Languages (DSMLs), which provide primitives and constructs of the domain. Still, the increasing complexity of systems has raised the need for abstraction techniques able to produce simpler versions of the models while retaining some properties of interest. The problem is that developing such abstractions for each DSML from scratch is time and resource consuming. In this paper, our goal is reducing the effort to provide modeling languages with abstraction mechanisms. For this purpose, we have devised some techniques, based on generic programming and domain-specific meta-modeling, to define generic abstraction operations that can be reused over families of modeling languages sharing certain characteristics. Abstractions can make use of clustering algorithms as similarity criteria for model elements. These algorithms can be made generic as well, and customized for particular languages by means of annotation models. As a result, we have developed a catalog of reusable abstractions using the proposed techniques, together with a working implementation in the MetaDepth multi-level meta-modeling tool. Our techniques and prototypes demonstrate that it is feasible to build reusable and adaptable abstractions, so that similar abstractions need not be developed from scratch, and their integration in new or existing modeling languages is less costly. &copy; 2013 Elsevier Ltd.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, excluidos},
  issn      = {03064379},
  key       = {Abstracting},
  keywords  = {Clustering algorithms;Computer programming languages;Computer software reusability;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.is.2013.06.001},
}

@InProceedings{20162902597341,
  author    = {Sprogis, Arturs},
  title     = {DSML tool building platform in WEB},
  year      = {2016},
  volume    = {615},
  pages     = {99 - 109},
  address   = {Riga, Latvia},
  note      = {Building process;Configurator;Three component;Tool-building Platforms;Web development;},
  abstract  = {The paper discusses how to build DSML tool building platform in WEB. Previously this was not possible due to the limitations of the browsers to render graphical diagrams but the technologies have evolved and currently the limitations are eliminated. Basically, the platform consists of three components &ndash; Presentation, engine, Interpreter and the Configurator. The paper gives an explanation what are the tasks for each of the component and how they interact with each other. To demonstrate a tool building process, a building of a simple flowchart editor is presented. &copy; Springer International Publishing Switzerland 2016.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Information systems},
  keywords  = {Computer science;Computers;Models;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-40180-5_7},
}

@InProceedings{20152500951424,
  author        = {Tcholtchev, Nikolay and Dudeck, Grit and Wagner, Michael and Hein, Christian and Prakash, Arun and Ritter, Tom},
  title         = {Integrating the modelica DSL into a platform for model-based tool interoperability},
  year          = {2014},
  pages         = {528 - 534},
  address       = {Vasteras, Sweden},
  note          = {Automotive domains;Cost-efficient design;Development and operations;Domain specific languages;MDE;Model-driven Engineering;Modelica;System development process;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain Specific Languages (DSL) are an important concept that is used in industry, in order to enable the fast and cost efficient design of specific functions/components, and/or to target particular aspects of the systems' development and operation. In the current paper, we describe our experiences on the integration of the Modelica DSL into a platform that enables the integration and interoperability of model-based tools across the various phases of the system development process. Thereby, we present our approach, compare different tools which were used, in order to efficiently complete the integration, and finally exemplify the outcome on a case study from the automotive domain. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, IEEEDSL, Duplicados},
  journal       = {Proceedings - IEEE 38th Annual International Computers, Software and Applications Conference Workshops, COMPSACW 2014},
  key           = {Interoperability},
  keywords      = {Application programs;Computational linguistics;Computer programming languages;DSL;Integration;Modeling languages;Models;Problem oriented languages;XML;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/COMPSACW.2014.88},
}

@Article{20150500465603,
  author        = {Gibbs, Ivan and Dascalu, Sergiu and Harris, Frederick C.},
  title         = {A separation-based UI architecture with a DSL for role specialization},
  journal       = {Journal of Systems and Software},
  year          = {2015},
  volume        = {101},
  pages         = {69 - 85},
  note          = {Climate science;Code Generation;Development process;Development time;Domain specific languages;Model-driven Engineering;Related works;User experience;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper proposes an architecture and associated methodology to separate front end UI concerns from back end coding concerns to improve the platform flexibility, shorten the development time, and increase the productivity of developers. Typical UI development is heavily dependent upon the underlying platform, framework, or tool used to create it, which results in a number of problems. We took a separation-based UI architecture and modified it with a domain specific language to support the independence of UI creation thereby resolving some of the aforementioned problems. Amethodology incorporating this architecture into the development process is proposed. A climate science application was created to verify the validity of the methodology using modern practices of UX, DSLs, code generation, and model-driven engineering. Analyzing related work provides an overview of other methods similar to our method. Subsequently we evaluate the climate science application, conclude, and detail future work. &copy; 2014 Published by Elsevier Inc.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {01641212},
  key           = {Climate models},
  keywords      = {Architecture;Computational linguistics;Computer programming languages;Problem oriented languages;Separation;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.jss.2014.11.039},
}

@InProceedings{20145100328971,
  author        = {Kuhn, Eva and Crass, Stefan and Hambock, Thomas},
  title         = {Approaching coordination in distributed embedded applications with the peer model DSL},
  year          = {2014},
  pages         = {64 - 68},
  address       = {Verona, Italy},
  note          = {Complex synchronization;Concurrent activities;Coordination strategy;Distributed embedded system;Domain specific languages;Embedded application;Embedded system softwares;Graphical documentation;},
  __markedentry = {[Neto:5]},
  abstract      = {Coordination in distributed embedded systems requires complex synchronization of many concurrent activities. This task becomes especially difficult when network and system failures have to be assumed. The Peer Model is a novel programming model for the design of coordination strategies among multiple nodes, aiming to bridge design and implementation. A major advantage is that designs based on the Peer Model are very flexible regarding changing requirements and policies. The motivating use case is an application in the railway domain where embedded nodes detect approaching trains and route this information over several forwarder nodes to the level crossing. In this paper, we present a Domain Specific Language for the Peer Model which allows to automatically generate a graphical documentation and source code for different embedded platforms. It lays the foundations for an embedded system software development tool chain. We prove the feasibility by implementing an event notification strategy for the level crossing use case.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSML, IEEEDSL, Duplicados},
  journal       = {Proceedings - 40th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2014},
  key           = {Embedded systems},
  keywords      = {Application programs;Complex networks;Computer programming languages;Coordination reactions;Design;Problem oriented languages;Railroad crossings;Software design;Systems engineering;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/SEAA.2014.72},
}

@InProceedings{20140417234410,
  author    = {Miao, Yongwu and Samaka, Mohammed and Impagliazzo, John},
  title     = {Facilitating teachers in developing online PBL courses},
  year      = {2013},
  pages     = {454 - 459},
  address   = {Kuta, Indonesia},
  note      = {Course authoring;Domain-specific modeling language;IMS-LD;learning deisgn;Model driven architectures;PBL;},
  abstract  = {Developing a sound online problem-based learning (PBL) course plan is difficult because teachers need comprehensive PBL and technical knowledge. This paper proposes a model-driven approach to develop a PBL authoring tool that helps teachers create and customize online PBL course plans in a cost-effective and flexible manner. A pilot study was conducted to assess teacher acceptance of the tool. The results reveal that after a short training session, teachers understood the authoring tool and thought the tool was easy to use to develop online PBL course plans. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, excluidos},
  journal   = {Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering, TALE 2013},
  key       = {E-learning},
  keywords  = {Curricula;Engineering education;Personnel training;Specification languages;Teaching;Tools;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/TALE.2013.6654481},
}

@InProceedings{20132216374606,
  author    = {Campos, Edmilson and Freire, Marilia and Kulesza, Uira and Bezerra, Adorilson and Aranha, Eduardo},
  title     = {Composition of domain specific modeling languages: An exploratory study},
  year      = {2013},
  pages     = {149 - 156},
  address   = {Barcelona, Spain},
  note      = {Composition method;Controlled experiment;Domain specific languages;Domain specific modeling languages;Domain-specific modeling language;Experimental software engineering;Exploratory studies;Model composition;},
  abstract  = {This paper presents an exploratory study in the context of composition of domain-specific modeling languages (DSMLs). It aims evaluating a composition method using Ecore-based DSMLs based on xText tool. The study was performed applying the method to modelling a composition of DSMLs from the domain of controlled experiments in software engineering. The study consists of four different DSMLs, whose ultimate goal is to generate executable workflows for each experiment subject. The study results present: (i) new adaptations that can be incorporated into the method in order to enable its application to the xText context; and (ii) a brief comparison of the method application using xText and XML based approaches.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development},
  key       = {Experiments},
  keywords  = {Software design;Specification languages;},
  language  = {English},
}

@InProceedings{20151100647520,
  author    = {Arendt, Thorsten and Taentzer, Gabriele and Weber, Alexander},
  title     = {Quality assurance of textual models within eclipse using OCL and model transformations},
  year      = {2013},
  volume    = {1092},
  pages     = {1 - 10},
  address   = {Miami, FL, United states},
  note      = {Design and implementations;Domain-specific modeling language;Eclipse modeling framework;Interrelated components;Model based development;Quality assurance tools;Software development process;Software quality assurance;},
  abstract  = {Modern software development processes often use domainspecific modeling languages (DSMLs) combined with custom code generators and/or interpreters. Especially textual DSMLs as provided by Eclipse Xtext are becoming more and more popular. As a consequence, software quality assurance frequently leads back to quality assurance of the involved textual models. Here, various quality aspects have to be considered depending on the modeling purpose and domain. In this paper, we present a quality assurance tool set for textual models in Eclipse using several interrelated components like Xtext, EMF Refactor, Henshin and the OCL tools which are all based on the Eclipse Modeling Framework (EMF). The practicability and flexibility of this tool set are demonstrated by the design and implementation of a case study that is based on a textual modeling language for simple web applications named SWM (Simple Web Modeling Language).},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Modeling languages},
  keywords  = {Computational linguistics;Computer software selection and evaluation;Embedded systems;Quality assurance;Social networking (online);Software design;Software engineering;Systems analysis;},
  language  = {English},
}

@Article{20144900276683,
  author    = {Viana, Matheus and Penteado, Rosngela and do Prado, Antnio and Durelli, Rafael},
  title     = {Developing frameworks from extended feature models},
  journal   = {Advances in Intelligent Systems and Computing},
  year      = {2014},
  volume    = {263},
  pages     = {263 - 284},
  note      = {Domain model;Domain-specific modeling language;Extended feature models;Feature modeling;Framework;Framework designs;Framework development;Patterns;},
  abstract  = {Frameworks are composed of concrete and abstract classes implementing the functionality of a domain. Applications can reuse framework design and code to improve their quality and be developed more efficiently. However, framework development is a complex task, since it must be adaptable enough to be reused by several applications. In this chapter we present the From Features to Framework (F3) approach, which aims to facilitate the development of frameworks. This approach is divided in two steps: Domain Modeling, in which framework domain is defined in a extended feature model; and Framework Construction, in which the framework is designed and implemented by following a set of patterns from its feature model. Since these steps can be systematically applied, we also present the design of a tool that supports the use of the F3 approach on framework development. Moreover, we performed an experiment that showed that the F3 approach makes framework development easier and more efficient. &copy; Springer International Publishing Switzerland 2014.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {21945357},
  key       = {Computer software reusability},
  keywords  = {Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-04717-1_12},
}

@InProceedings{20122115055169,
  author        = {Hill, James H.},
  title         = {Using parameterized attributes to improve testing capabilities with domain-Specific Modeling Languages},
  year          = {2012},
  pages         = {43 - 51},
  address       = {Novi Sad, Serbia},
  note          = {Distributed software system;Domain-specific modeling language;Error prones;Generic modeling;Graphical languages;Model based testing;Open source tools;Parameterized;Software systems;Template engines;Time-consuming tasks;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific modeling languages (DSMLs) show promise in improving model-based testing and experimentation (TE) capabilities for software systems. This is because its intuitive graphical languages reduce complexities associated with error-prone, tedious, and time-consuming tasks. Despite the benefits of using DSMLs to facilitate model-based TE, it is hard for testers to capture many variations of similar tests without manually duplicating modeling effort. This paper therefore presents a method called parameterized attributes that is used to capture points-of-variation in models. It also shows how parameterized attributes is realized in an open-source tool named the Generic Modeling Environment (GME) Template Engine. Finally, this paper quantitatively evaluates applying parameterized attributes to TE of a representative distributed software system. Experience and results so show that parameterized attributes can reduce modeling effort after an initial model (or design) is constructed. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Scopus, IEEEDSML, Duplicados},
  journal       = {Proceedings - 2012 IEEE 19th International Conference and Workshops on Engineering of Computer-Based Systems, ECBS 2012},
  key           = {Parameterization},
  keywords      = {Computer software;High level languages;Specification languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ECBS.2012.47},
}

@Article{20120314686436,
  author    = {Hemingway, Graham and Neema, Himanshu and Nine, Harmon and Sztipanovits, Janos and Karsai, Gabor},
  title     = {Rapid synthesis of high-level architecture-based heterogeneous simulation: A model-based integration approach},
  journal   = {Simulation},
  year      = {2012},
  volume    = {88},
  number    = {2},
  pages     = {217 - 232},
  note      = {Distributed simulations;Domain-specific modeling language;Heterogeneous simulation;High level architecture;model-based integration;Multi paradigm modeling;},
  abstract  = {Virtual evaluation of complex command and control concepts demands the use of heterogeneous simulation environments. Development challenges include how to integrate multiple simulation engines with varying semantics and how to integrate simulation models and manage the complex interactions between them. While existing simulation frameworks may provide many of the required run-time services needed to coordinate among multiple simulation engines, they lack an overarching integration approach that connects and relates the interoperability of heterogeneous domain models and their interactions. This paper outlines some of the challenges encountered in developing a command and control simulation environment and discusses our use of the Generic Modeling Environment tool suite to create a model-based integration approach that allows for rapid synthesis of complex high-level architecture-based simulation environments. &copy; Simulation Councils Inc. 2011.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {00375497},
  key       = {Computer simulation},
  keywords  = {Architecture;Circuit simulation;Command and control systems;Computer simulation languages;Integration;Interoperability;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1177/0037549711401950},
}

@InProceedings{20124415619273,
  author    = {Mantz, Florian and Jurack, Stefan and Taentzer, Gabriele},
  title     = {Graph transformation concepts for meta-model evolution guaranteeing permanent type conformance throughout model migration},
  year      = {2012},
  volume    = {7233 LNCS},
  pages     = {3 - 18},
  address   = {Budapest, Hungary},
  note      = {AS graph;Co-evolution;Domain-specific modeling language;Eclipse modeling framework;Formal setting;Graph morphisms;Graph Transformation;Henshin;Key technologies;Meta model;Metamodeling;Migration process;Model transformation;Model-driven Engineering;Modeling languages;State machine;Transformation rules;},
  abstract  = {Meta-modeling has become the key technology to define domain-specific modeling languages for model-driven engineering. However, these modeling languages can change quite frequently which requires the evolution of their meta-models as well as the co-evolution (or migration) of their models. In this paper, we present an approach towards meta-model model co-evolution based on graph transformation concepts that targets to consider this challenge in a formal setting. Models are specified as graphs while model relations, especially type-instance relations, are defined by graph morphisms specifying type conformance of models to their meta-models. We present a basic approach to automatic deduction of model migrations from meta-model evolution steps which are specified by single transformation rules. Throughout that migration process, type conformance is ensured permanently. A first implementation is given using existing technology, namely the Eclipse Modeling Framework (EMF) and the EMF model transformation tool Henshin which is based on graph transformation concepts. Our evolution approach is presented at two small evolution scenarios for Petri nets and state machines. &copy; 2012 Springer-Verlag.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, excluidos},
  issn      = {03029743},
  journal   = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  key       = {Mathematical models},
  keywords  = {Graph theory;Petri nets;Specification languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-642-34176-2_3},
}

@Article{20161202134980,
  author        = {Pereira, Maria Joao Varanda and Fonseca, Joao and Henriques, Pedro Rangel},
  title         = {Ontological approach for DSL development},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2016},
  volume        = {45},
  pages         = {35 - 52},
  note          = {Attribute grammars;Domain specific languages;Grammar engineering;Grammars;Internal representation;Ontological approach;Problem domain;Specific semantics;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents a project whose main objective is to explore the ontological based development of Domain Specific Languages (DSL), more precisely, of their underlying Grammar. After reviewing the basic concepts characterizing Ontologies and DSLs, we introduce a tool, Onto2Gra, that takes profit of the knowledge described by the ontology and automatically generates a grammar for a DSL that allows to discourse about the domain described by that ontology. This approach represents a rigorous method to create, in a secure and effective way, a grammar for a new specialized language restricted to a concrete domain. The usual process of creating a grammar from the scratch is, as every creative action, difficult, slow and error prone; so this proposal is, from a grammar engineering point of view, of uttermost importance. After the grammar generation phase, the Grammar Engineer can manipulate it to add syntactic sugar to improve the final language quality or even to add specific semantic actions. The Onto2Gra project is composed of three engines. The main one is OWL2DSL, the component that converts an OWL ontology into a complete Attribute Grammar for the construction of an internal representation of all the input data. The two additional modules are Onto2OWL, converts ontologies written in OntoDL into standard OWL, and DDesc2OWL, converts domain instances written in the new DSL into the initial OWL ontology.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {14778424},
  key           = {Ontology},
  keywords      = {Birds;Computational linguistics;Computer programming languages;DSL;Problem oriented languages;Semantics;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.cl.2015.12.004},
}

@Article{20145200366617,
  author        = {Freudenthal, Margus},
  title         = {Simpl DSL toolkit},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {85 - 91},
  note          = {Abstract Syntax Trees;Code Generation;Data type;Simpl DSL toolkit;Target language;Typechecking;},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes LDTA tool challenge entry that is implemented using Simpl DSL toolkit. Simpl is targeted at enterprise software development, helping to create DSL implementations that can be embedded into other systems. Simpl builds up on top of existing tools and programming languages and adds: a simple language for grammar descriptions that can be used to generate both the parser and the data types for representing abstract syntax trees; a pretty-printing library; an IDE framework; and integration layer that combines all components into a single whole and minimizes the need for boilerplate code. When implementing the challenge, Simpl provided direct support for parsing and code generation tasks. Name and type checking were implemented in Scala. In addition to the challenge task, Simpl was used to create an Eclipse-based IDE for the target language. &copy; 2014 Elsevier B.V. All rights reserved.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, ScienceDirect, Duplicados},
  issn          = {01676423},
  key           = {Abstract data types},
  keywords      = {Embedded systems;Enterprise software;Formal languages;Integrodifferential equations;Software design;Syntactics;Trees (mathematics);, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1016/j.scico.2014.11.018},
}

@InProceedings{20123015277503,
  author        = {Haitzer, Thomas and Zdun, Uwe},
  title         = {DSL-based support for semi-automated architectural component model abstraction throughout the software lifecycle},
  year          = {2012},
  pages         = {61 - 70},
  address       = {Bertinoro, Italy},
  note          = {Architectural abstraction;Architectural components;Model transformation;Software Evolution;UML;},
  __markedentry = {[Neto:5]},
  abstract      = {In this paper we present an approach for supporting the semi-automated abstraction of architectural models throughout the software lifecycle. It addresses the problem that the design and the implementation of a software system often drift apart as software systems evolve, leading to architectural knowledge evaporation. Our approach provides concepts and tool support for the semi-automatic abstraction of architectural knowledge from implemented systems and keeping the abstracted architectural knowledge up-to-date. In particular, we propose architecture abstraction concepts that are supported through a domainspecific language (DSL). Our main focus is on providing architectural abstraction specifications in the DSL that only need to be changed, if the architecture changes, but can tolerate non-architectural changes in the underlying source code. The DSL and its tools support abstracting the source code into UML component models for describing the architecture. Once the software architect has defined an architectural abstraction in the DSL, we can automatically generate UML component models from the source code and check whether the architectural design constraints are fulfilled by the models. Our approach supports full traceability between source code elements and architectural abstractions, and allows software architects to compare different versions of the generated UML component model with each other. We evaluate our research results by studying the evolution of architectural abstractions in different consecutive versions and the execution times for five existing open source systems. Copyright &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  journal       = {QoSA'12 - Proceedings of the 8th International ACM SIGSOFT Conference on the Quality of Software Architectures},
  key           = {Open systems},
  keywords      = {Abstracting;Architectural design;Automation;Computer programming languages;Computer software;DSL;Life cycle;Software architecture;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2304696.2304709},
}

@InProceedings{20140617279512,
  author    = {Farias, F.S. and Borges, G.S. and Monteiro, W.B. and Silva, D.L.L. and Costa, J.C.W.A.},
  title     = {Noise estimation in DSL systems using linear regression},
  year      = {2013},
  pages     = {291 - 294},
  address   = {Ho Chi Minh, Viet nam},
  note      = {backhaul;Digital subscriber line systems;Management information base;Mutual interference;Network measurement;Noise;Performance bottlenecks;Real time monitoring;},
  abstract  = {The Digital Subscriber Line (DSL) systems performance tightly depends on noise interference. The users (lines) in the binder create mutual interference (crosstalk), therefore decreasing the rates of all users. Crosstalk noise is more predominant in DSL and its major performance bottleneck is to limit high-speed data rate. This study proposes a new real-time monitoring methodology for noise estimation based on Management Information Base (MIB) metrics. Linear regression is used for fitting, in which input parameters are MIBs and the output is the estimated noise power. The results confirm the possibility of estimating noise with a general equation. Moreover, it is showing the result improvement if a Loop Topology Identification tool is used as prior knowledge. &copy; 2013 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSL, Inclusos},
  issn      = {21621039},
  journal   = {International Conference on Advanced Technologies for Communications},
  key       = {Telecommunication lines},
  keywords  = {Crosstalk;DSL;Estimation;Interactive computer systems;Linear regression;Monitoring;Real time systems;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/ATC.2013.6698124},
}

@InProceedings{20121114843650,
  author        = {Ureche, Vlad and Rompf, Tiark and Sujeeth, Arvind and Chafi, Hassan and Odersky, Martin},
  title         = {StagedSAC: A case study in performance-oriented DSL development},
  year          = {2012},
  pages         = {73 - 82},
  address       = {Philadelphia, PA, United states},
  note          = {Array algorithms;Compiler optimizations;Domain specific languages;Functional semantics;High-level programming;Language features;Multidimensional arrays;Optimizing compilation;Parallel code;SAC;Single assignment C;Staging;},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific languages (DSLs) can bridge the gap between high-level programming and efficient execution. However, implementing compiler tool-chains for performance oriented DSLs requires significant effort. Recent research has produced methodologies and frameworks that promise to reduce this development effort by enabling quick transition from library-only, purely embedded DSLs to optimizing compilation. In this case study we report on our experience implementing a compiler for StagedSAC. StagedSAC is a DSL for arithmetic processing with multidimensional arrays modeled after the stand-alone language SAC (Single Assignment C). The main language feature of both SAC and StagedSAC is a loop construction that enables high-level and concise implementations of array algorithms. At the same time, the functional semantics of the two languages allow for advanced compiler optimizations and parallel code generation. We describe how we were able to quickly evolve from a pure library DSL to a performance-oriented compiler with a good speedup and only minor syntax changes using the technique of Lightweight Modular Staging. We also describe the optimizations we perform to obtain fast code and how we plan to generate parallel code with minimal effort using the Delite framework. Copyright &copy; 2012 ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {ACM, Scopus, Duplicados},
  issn          = {07308566},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  key           = {Program compilers},
  keywords      = {C (programming language);Computer programming languages;DSL;Optimization;Problem oriented languages;Research;Semantics;, rank3},
  language      = {English},
}

@InProceedings{20143918179796,
  author    = {Sobernig, Stefan and Strembeck, Mark},
  title     = {DSL-based architecting and DSL-based architectures},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  note      = {Co-located;Design decisions;Design documentation;Domain specific languages;International workshops;Vienna , Austria;},
  abstract  = {The International Workshop on DSL Architecting and DSL-based Architectures (DADA'14) aims at exploring current perspectives on DSL architecting and on DSL-based architectures in research and industry. The workshop is co-located with the 8th European Conference on Software Architecture (ECSA'14) in Vienna, Austria. &copy; 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {Software architecture},
  keywords  = {Computer programming languages;DSL;Industrial research;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2642803.2642818},
}

@Article{20151000615120,
  author    = {Zivkovic, Srdjan and Miksa, Krzystof and Kuhn, Harald},
  title     = {On developing hybrid modeling methods using metamodeling platforms: A case of physical devices DSML based on ADOxx},
  journal   = {International Journal of Information System Modeling and Design},
  year      = {2015},
  volume    = {6},
  number    = {1},
  pages     = {47 - 66},
  note      = {Domain specific modeling;Metamodeling;Model method;Modeling tool;Semantic technologies;},
  abstract  = {It has been acknowledged that model-based approaches and domain-specific modeling (DSM) languages, methods and tools are beneficial for the engineering of increasingly complex systems and software. Instead of general-purpose one-size-fits-all modeling languages, DSM methods facilitate model-based analysis and design of complex systems by providing modeling concepts tailored to the specific problem domain. Furthermore, hybrid DSM methods combine single DSM methods into integrated modeling methods, to allow for multi-perspective modeling. Metamodeling platforms provide flexible means for design and implementation of such hybrid modeling methods and appropriate domain-specific modeling tools. In this paper, we report on the conceptualization of a hybrid DSM method in the domain of network physical devices management, and its implementation based on the ADOxx metamodeling platform. The method introduces a hybrid modeling approach. A dedicated DSM language (DSML) is used to model the structure of physical devices and their configurations, whereas the formal language for knowledge representation OWL2 is used to specify configuration-related constraints. The outcome of the work is a hybrid, semantic technology-enabled DSM tool that allows for efficient and consistency-preserving model-based configuration of network equipment. Copyright &copy; 2015, IGI Global.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {, Scopus, Inclusos},
  issn      = {19478186},
  key       = {Modeling languages},
  keywords  = {Complex networks;Computational linguistics;Formal languages;Knowledge representation;Semantic Web;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.4018/ijismd.2015010103},
}

@InProceedings{20143918179800,
  author    = {Stevanetic, Srdjan and Haitzer, Thomas and Zdun, Uwe},
  title     = {Supporting software evolution by integrating DSL-based architectural abstraction and understandability related metrics},
  year      = {2014},
  pages     = {University of Vienna -},
  address   = {Vienna, Austria},
  note      = {Architectural Abstraction;Architectural components;Empirical evaluations;Software Evolution;Software metrics;Understandability;},
  abstract  = {Software architecture erosion and architectural drift are well known software evolution problems. While there exist a number of approaches to address these problems, so far in these approaches the understandability of the resulting architectural models (e.g., component models) is seldom studied. However, reduced understandability of the architectural models might lead to problems similar to architecture erosion and architectural drift. To address this problem, we propose to extend our existing DSL-based architecture abstraction approach with empirically evaluated understandability metrics. While the DSL-based architecture abstraction approach enables software architects to keep source code and architecture consistent, the understandability metrics extensions enables them, while working with the DSL, to continuously judge the understandability of the architectural component models they create with the DSL. We studied the applicability of our approach in a case study of an existing open source system. &copy; 2014 ACM.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Compendex, Inclusos},
  journal   = {ACM International Conference Proceeding Series},
  key       = {Open systems},
  keywords  = {Abstracting;DSL;Erosion;Open source software;Software architecture;},
  language  = {English},
  url       = {http://dx.doi.org/10.1145/2642803.2642822},
}

@Article{20121014836324,
  author    = {Kos, Tomaz and Kosar, Tomaz and Mernik, Marjan},
  title     = {Development of data acquisition systems by using a domain-specific modeling language},
  journal   = {Computers in Industry},
  year      = {2012},
  volume    = {63},
  number    = {3},
  pages     = {181 - 192},
  note      = {Brake tests;DEWESoft;Domain specific languages;Domain-specific modeling language;Measuring systems;Sequencer;},
  abstract  = {Data acquisition is the process of capturing and measuring physical data and then converting the results into a digital form that is further manipulated by a computer program. Within the industry, data acquisition systems (measurement systems) are used in a wide variety of fields, including product quality testing. Usually measuring systems are complicated devices, however newer data acquisition systems tend to be easier to use. As such, they open the door for the development of customized software, which can be easily manipulated, not only by programmers but also by domain experts, enabling them to understand and modify programs. Raising the level of abstraction, particularly with those programs that use visual models, can be an effective aid for domain experts, who are then able to model their programs on their own. This paper describes the design and use of a domain-specific modeling language called the Sequencer, integrated with the measuring equipment DEWESoft, which enables domain experts to model their own data acquisitions. Specifically, in this paper the Sequencer is exposed to: domain concepts identification, the construction of modeling notation, a connection with execution framework, and the end-users' point of view on the modeling tool. The use of the Sequencer will be presented on car brake tests. For this purpose, the Sequencer has already been successfully applied in the automotive industry. &copy; 2011 Elsevier B.V.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, Inclusos},
  issn      = {01663615},
  key       = {Specification languages},
  keywords  = {Data acquisition;Measurements;Problem oriented languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.compind.2011.09.004},
}

@InProceedings{20144600197675,
  author        = {Wang, Disi and Miao, Yongwu and Hoppe, H. Ulrich and Samaka, Mohammed},
  title         = {A domain-specific modeling language approach to support various forms of online PBL},
  year          = {2014},
  pages         = {611 - 613},
  address       = {Athens, Greece},
  note          = {Authoring tool;DSML;PBL;PBL script;Scripting languages;},
  __markedentry = {[Neto:5]},
  abstract      = {Problem-based learning (PBL) can be organized and conducted in a variety of forms. By adopting a Domain-Specific Modeling Language (DSML) approach we have developed a PBL scripting language, which provides natural concepts that teachers can understand and use in practical PBL. Based on this PBL scripting language, a web-based PBL authoring tool has been developed, which enables teachers to develop their own PBL strategies as PBL scripts. &copy; 2014 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, Scopus, IEEEDSML, Duplicados},
  journal       = {Proceedings - IEEE 14th International Conference on Advanced Learning Technologies, ICALT 2014},
  key           = {Teaching},
  keywords      = {Social networking (online);Specification languages;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ICALT.2014.178},
}

@Article{20155201726740,
  author    = {Azadi Marand, Elaheh and Azadi Marand, Elham and Challenger, Moharram},
  title     = {DSML4CP: A Domain-specific Modeling Language for Concurrent Programming},
  journal   = {Computer Languages, Systems and Structures},
  year      = {2015},
  volume    = {44},
  pages     = {319 - 341},
  note      = {Code Generation;Concurrent programming;Constraint control;Domain specific modeling languages;Meta model;},
  abstract  = {Nowadays, concurrent programs are an inevitable part of many software applications. They can increase the computation performance of the applications by parallelizing their computations. One of the approaches to realize the concurrency is using multi thread programming. However, these systems are structurally complex considering the control of the parallelism (such as thread synchronization and resource control) and also considering the interaction between their components. So, the design of these systems can be difficult and their implementation can be error-prone especially when the addressed system is big and complex. On the other hand, a Domain-specific Modeling Language (DSML) is one of the Model Driven Development (MDD) approaches which tackles this problem. Since DSMLs provide a higher abstraction level, they can lead to reduce the complexities of the concurrent programs. With increasing the abstraction level and generating the artifacts automatically, the performance of developing the software (both in design and implementation phases) is increased, and the efficiency is raised by reducing the probability of occurring errors. Thus, in this paper, a DSML is proposed for concurrent programs, called DSML4CP, to work in a higher level of abstraction than code level. To this end, the concepts of concurrent programs and their relationships are presented in a metamodel. The proposed metamodel provides a context for defining abstract syntax, and concrete syntax of the DSML4CP. This new language is supported by a graphical modeling tool which can visualize different instance models for domain problems. In order to clarify the expressions of the language; the static semantic controls are realized in the form of constraints. Finally, the architectural code generation is fulfilled via model transformation rules using the templates of the concurrent programs. To increase level of the DSML's leverage and to demonstrate the general support of concurrent programming by the DSML, the transformation mechanism of the tool supports two well-known and highly used programming languages for code generation; Java and C#. The performed experiments on two case studies indicate a high performance for proposed language. In this regard, the results show automatic generation of 79% of the final code and 86% of the functions/modules on average. &copy; 2015 Elsevier Ltd. All rights reserved.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, Inclusos},
  issn      = {14778424},
  key       = {Concurrency control},
  keywords  = {Abstracting;Application programs;Automatic programming;Codes (symbols);Computational linguistics;Computer programming;Computer simulation languages;Embedded systems;Java programming language;Modeling languages;Network components;Problem oriented languages;Semantics;Specification languages;Syntactics;Visual languages;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.cl.2015.09.002},
}

@InProceedings{20164402963055,
  author    = {Monthe, Valery M. and Nana, Laurent and Kouamou, Georges E. and Tangha, Claude},
  title     = {RsaML: A domain specific modeling language for describing robotic software architectures with integration of real-time properties},
  year      = {2016},
  volume    = {1697},
  address   = {Pittsburgh, PA, United states},
  note      = {Conceptual model;Domain specific modeling languages;Eclipse modeling framework;Level of abstraction;Real-time and embedded systems;Real-time properties;Robotic architectures;Robotic softwares;},
  abstract  = {This paper deals with the problem of expression and rep-resentation of robotics software architectures, at a level of abstraction high enough, and independent of the implemen-tation platform, taking into account real-time properties. It also addresses the problem of standard representation, communication between domain experts, and therefore that of reusability of these architectures. It presents RsaML (Robotic Software Architecture Modeling Language), a Do-main Specific Modeling Language (DSML) for robotics soft-ware architectures that we proposed in order to solve the problems mentioned above. The conceptual model defin-ing the terminology, and the hierarchy of concepts used for the description and representation of robotic architectures in RsaML are presented in this paper. RsaML is defined through a meta-model which represents the abstract syntax of the language. Real-time properties of robotics software architectures are identified and included in the meta model. The use of RsaML is illustrated through the definition of a robotic system and the description of its architecture with the help of the language. The support tool used for this work is the Eclipse Modeling Framework (EMF).},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  issn      = {16130073},
  journal   = {CEUR Workshop Proceedings},
  key       = {Robotics},
  keywords  = {Computer architecture;Embedded systems;Modeling languages;Problem solving;Real time systems;Reusability;Software architecture;Specification languages;Visual languages;},
  language  = {English},
}

@InProceedings{20152100860906,
  author    = {Aoun, Charbel Geryes and Alloush, Iyas and Kermarrec, Yvon and Zein, Oussama Kassem and Champeau, Joel},
  title     = {Domain specific modeling language for object localization in marine observatories},
  year      = {2014},
  pages     = {130 - 136},
  address   = {Lisbon, Portugal},
  note      = {Continuous observation;Design activity;Domain specific modeling;Domain specific modeling languages;Marine observatories;Object localization;Physical components;Underwater objects;},
  abstract  = {Marine observatories (MO) based on sensor networks provide a continuous observation of the ocean. The logical and physical components that are used in these observatories provide data exchanged environment between different devices (Smart Sensor, Data Fusion). These components provide new functionalities or services due to the stable running of this network. In this paper, we present our approach in extending the modeling languages to include new domain-specific concepts and constraints. Thus, we propose a meta-model that is used to generate a new design tool (ArchiMO). We illustrate our proposal with an example from the MO domain. Additionally, we generate the corresponding simulation code using our selfdeveloped domain-specific model compiler. Our approach helps to reduce the complexity and time of the design activity. It provides a way to share the different viewpoints of the designers in the domain of MO. Copyright &copy; (2014) by International Academy.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, Inclusos},
  journal   = {SENSORCOMM 2014 - 8th International Conference on Sensor Technologies and Applications},
  key       = {Modeling languages},
  keywords  = {Complex networks;Computational linguistics;Data fusion;Electronic data interchange;Object recognition;Observatories;Sensor data fusion;Sensor networks;Specification languages;},
  language  = {English},
}

@Article{20161902348748,
  author    = {Weichhart, Georg and Guedria, Wided and Naudet, Yannick},
  title     = {Supporting interoperability in complex adaptive enterprise systems: A domain specific language approach},
  journal   = {Data and Knowledge Engineering},
  year      = {2016},
  volume    = {105},
  pages     = {90 - 106},
  note      = {Adaptive enterprise;Agent interaction protocols;Complex adaptive systems;Domain specific languages;Domain-specific language approaches;Enterprise interoperability;Scala;Software environments;},
  abstract  = {From a Complex Adaptive Systems (CAS) theory perspective a new approach for supporting Enterprise Interoperability (EI) is described. Particular needs informed by the theory are presented and a software environment supporting these requirements is proposed. The infrastructure aims at serving as a tool for solving problems in the EI domain, and includes a Domain Specific Language (DSL) supporting engineering interoperability solutions. The Ontology of Enterprise Interoperability (OoEI) provides the underlying conceptualisation of the Enterprise Interoperability (EI) domain and is used as basis. The DSL enhances the ontology with CAS related concepts. The CAS perspective provides a particular focus on dynamic aspects, which requires a new approach currently only addressed to a limited extend. The research interoperability infrastructure provides components to address the decentralised nature of a CAS by providing software agents and agent interaction protocols that facilitate the identification of interoperability problems and agent negotiations to find solutions. It is realised using the functional programming language Scala. &copy; 2016 Elsevier B.V.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, ScienceDirect, Inclusos},
  issn      = {0169023X},
  key       = {Interoperability},
  keywords  = {Adaptive systems;Computational linguistics;Computer programming languages;Functional programming;Multi agent systems;Problem oriented languages;Software agents;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.datak.2016.04.001},
}

@InProceedings{20130916066201,
  author        = {Franchi, Enrico},
  title         = {A domain specific language approach for agent-based social network modeling},
  year          = {2012},
  pages         = {607 - 612},
  address       = {Istanbul, Turkey},
  note          = {Agent based;Agent-based model;Agent-based modeling;Domain specific languages;Domain-specific language approaches;Political science;Research tools;Social Network Analysis;Social Networks;Software instruments;},
  __markedentry = {[Neto:5]},
  abstract      = {Although in the past twenty years agent-based modeling has been widely adopted as a research tool in the fields of social and political sciences, there is lack of software instruments specifically created for social network simulations. Restricting the field of interest specifically to social network models and simulations instead of supporting general agent-based ones, allows for the creation of easier to use, more focused tools. In this work, we propose PyNetSYM, an agent-based modeling framework designed to be friendly to programmers and non-programmers alike. PyNetSYM provides a domain-specific language to specify social network simulations expressed as agent-based models. PyNetSYM was created to deal with large simulations and to work effortlessly with other social network analysis toolkits. &copy; 2012 IEEE.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, IEEEDSL, Duplicados},
  journal       = {Proceedings of the 2012 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, ASONAM 2012},
  key           = {Social networking (online)},
  keywords      = {Computational methods;Computer programming;Problem oriented languages;Social sciences computing;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1109/ASONAM.2012.102},
}

@InProceedings{20161202125998,
  author        = {Sporer, Harald},
  title         = {A model-based domain-specific language approach for the automotive E/E-System design},
  year          = {2015},
  pages         = {357 - 362},
  address       = {Prague, Czech republic},
  note          = {Automotive embedded systems;Development process;Domain specific languages;Domain specific modeling;Domain-specific language approaches;Enterprise architects;High-quality products;Software architectural;},
  __markedentry = {[Neto:5]},
  abstract      = {The electrical and electronic systems (E/E-Systems) in the automotive world have been getting more and more complex over the past decades. New functionality, which is mainly realized through embedded E/E-Systems, as well as the growing connectivity (Car2X-Communication), will keep this trend alive in the upcoming years. Additionally, new standards and regulations have been released during the last years (e.g. ISO 26262), which leads to an even higher system complexity. Therefore, well-defined development processes are crucial to manage this complexity and achieve high quality products. To accomplish an appropriated guidance through these processes, a tool chain has to be established, which supports each phase of the E/E-System development. However, it isn't enough to provide a stand-alone solution for the assistance at each phase. A smooth transition of the development artefacts between the different levels as well as their bilateral traceability is crucial. Common approaches utilize tools like Enterprise Architect or Artisan Studio to model the E/E-System design in SysML or a kind of UML2 profile. Usually, several abstraction layers are designed with these tools, starting from the system architectural design down to the software architectural design. Although, in the majority of cases the design should represent a mechatronics-based system, the hardware as well as the mechanics view is not considered. The aim of this work is to remedy the deficiencies regarding the missing representation of hardware and mechanics artefacts within the E/E-System design. Therefore, a model-based domainspecific language was developed that describes the system in a more comprehensive way. Additionally, it makes it easier for domain experts, who are not that familiar with UML or SysML, to create an architectural design. Furthermore, the already existing SysML models are not ignored at the presented methodology, but supported through a translator, which converts the DSL model into a SysML representation. &copy; 2015 Copyright held by the owner/author(s). Publication rights licensed to ACM.},
  copyright     = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups        = {Todos A, ACM, Scopus, Duplicados},
  journal       = {Proceeding of the 2015 Research in Adaptive and Convergent Systems, RACS 2015},
  key           = {Architectural design},
  keywords      = {Abstracting;Automobile electronic equipment;Computational linguistics;Computer programming languages;Design;Embedded systems;Hardware;Problem oriented languages;Reconfigurable hardware;, rank3},
  language      = {English},
  url           = {http://dx.doi.org/10.1145/2811411.2811533},
}

@InProceedings{20164302934714,
  author    = {Durelli, Gianluca C. and Spada, Fabrizio and Pilato, Christian and Santambrogio, Marco D.},
  title     = {Scala-based domain-specific language for creating accelerator-based SoCs},
  year      = {2016},
  volume    = {2016-August},
  pages     = {225 - 232},
  address   = {Chicago, IL, United states},
  note      = {Domain specific languages;Embedded application;Hardware components;Industrial standards;Processing elements;Specialized hardware;System level integration;System-on-chip architecture;},
  abstract  = {Nowadays, thanks to technology miniaturization and industrial standards, it is possible to create System-on-Chip (SoC) architectures featuring a combination of many components, like processor cores and specialized hardware accelerators. However, designing an SoC to accelerate an embedded application is particularly complex. After decomposing this application into tasks and assigning each of them to a processing element, the designer must create the required hardware components and integrate them into the final system. Currently, this process is not well supported by commercial tool flows and has to be manually performed. This is time consuming and error prone. This paper proposes a Domain-Specific Language (DSL) based on Scala to specify the architecture of accelerator-based SoCs. We leverage this DSL to coordinate commercial High-Level Synthesis (HLS) tools in order to create the corresponding accelerators with proper standard interfaces for system-level integration. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {Scopus, IEEEDSML, IEEEDSL, Inclusos},
  journal   = {Proceedings - IEEE 28th International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2014},
  key       = {System-on-chip},
  keywords  = {Computer programming languages;Distributed computer systems;Electron beam lithography;Hardware;High level synthesis;Masks;Problem oriented languages;Programmable logic controllers;Reconfigurable hardware;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/IPDPSW.2016.169},
}

@Article{20164502996560,
  author    = {Franky, Maria Consuelo and Pavlich-Mariscal, Jaime A. and Acero, Maria Catalina and Zambrano, Angee and Olarte, John C. and Camargo, Jorge and Pinzon, Nicolas},
  title     = {A practical experience of implementing a model driven environment in a software development organization},
  journal   = {International Journal of Web Information Systems},
  year      = {2016},
  volume    = {12},
  number    = {4},
  pages     = {533 - 556},
  note      = {Code Generation;Enterprise applications;Legacy component;Model-driven Engineering;Xtext;},
  abstract  = {Purpose - This purpose of this paper is to present ISML-MDE, a model-driven environment that includes ISML, a platform-independent modeling language for enterprise applications; ISML-GEN, a code generation framework to automatically generate code from models; and LionWizard, a tool to automatically integrate different components into a unified codebase. Design/methodology/approach - The development comprises five stages: standardizing architecture; refactoring and adapting existing components; automating their integration; developing a modeling language; and creating code generators. After development, model-to-code ratios in ISML-MDE are measured for different applications. Findings - The average model-to-code ratio is approximately 1:4.6 when using the code generators from arbitrary models. If a model transformation is performed previously to the code generation, this ratio raises to 1:115. The current validation efforts show that ISML properly supports several DSL essential characteristics described by Kahraman and Bilgen (2015). Research limitations/implications - ISML-MDE was tested on relatively small applications. Further validation of the approach requires measurement of development times and their comparison with previous similar projects, to determine the gains in productivity. Originality/value - The value of ISML-MDE can be summarized as follows: ISML-MDE has the potential to significantly reduce development times, because of an adequate use of models and transformations. The design of ISML-MDE addresses real-world development requirements, obtained from a tight interaction between the researchers and the software development company. The underlying process has been thoroughly documented and it is believed it can be used as a reference for future developments of MDE tools under similar conditions. &copy; Emerald Group Publishing Limited.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {A, Scopus, excluidos},
  issn      = {17440084},
  key       = {Software design},
  keywords  = {Codes (symbols);Modeling languages;Software engineering;Unified Modeling Language;},
  language  = {English},
  url       = {http://dx.doi.org/10.1108/IJWIS-04-2016-0025},
}

@InProceedings{20164603016499,
  author    = {Mora Segura, Angel and Pescador, Ana and De Lara, Juan and Wimmer, Manuel},
  title     = {An extensible meta-modelling assistant},
  year      = {2016},
  pages     = {79 - 88},
  address   = {Vienna, Austria},
  note      = {Domain specific languages;Heterogeneous data;Language engineering;Meta-modelling;Model transformation;Model-driven Engineering;Modelling environment;Process modelling;},
  abstract  = {Meta-models play a pivotal role in Model-Driven Engineering (MDE). They are used to create domain-specific models, and to type model management operations like model transformations or code generators. However, even though creating meta-models is a common activity, it is currently mostly a manual activity, which does not profit from existing knowledge. In order to facilitate the meta-modelling task, we propose an extensible meta-modelling assistant. While primarily focussed on helping in the creation of meta- models, it can also help in creating models. The assistant permits the provision of heterogeneous data description sources (like ontologies, RDF data, XML schemas, database schemas and meta-models), and enables their uniform querying. Different kinds of queries are supported, and improved through synonym search. Query results are prioritized through sense disambiguation, can be graphically visualized, and incorporated into the (meta-)model being built. The assistant has been realized within Eclipse, and its architecture has been designed to be independent of the meta-modelling technology used. As a proof- of-concept, we show its integration within DSL-tao, a pattern-based meta-modelling tool built by our group, and two other tools developed by third-parties. The usefulness of the system is illustrated with a running example in the process modelling domain. &copy; 2016 IEEE.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {A, Scopus, IEEEDSL, excluidos},
  journal   = {Proceedings - 2016 IEEE 20th International Enterprise Distributed Object Computing Conference, EDOC 2016},
  key       = {Modeling languages},
  keywords  = {Computer programming languages;Models;Natural language processing systems;Problem oriented languages;Query processing;XML;},
  language  = {English},
  url       = {http://dx.doi.org/10.1109/EDOC.2016.7579377},
}

@Article{20164703029299,
  author    = {Bettini, Lorenzo},
  title     = {Implementing type systems for the IDE with Xsemantics},
  journal   = {Journal of Logical and Algebraic Methods in Programming},
  year      = {2016},
  volume    = {85},
  number    = {5},
  pages     = {655 - 680},
  note      = {Eclipse;Efficient implementation;Featherweight Java;Implementation;Implementation techniques;Lambda calculus;Operational semantics;Type systems;},
  abstract  = {Xsemantics is a DSL for writing type systems, reduction rules and, in general, relation rules for languages implemented in Xtext (Xtext is an Eclipse framework for rapidly building languages together with all the typical IDE tooling). Xsemantics aims at reducing the gap between the formalization of a language (i.e., type system and operational semantics) and the actual implementation in Xtext, since it uses a syntax that resembles the rules in a formal setting. In this paper we present the main features of Xsemantics for implementing type systems and reduction rules through examples (Featherweight Java and lambda calculus). We show how such implementations are close to the actual formalizations, and how Xsemantics can be a helpful tool when proving the type safety of a language. We also describe the new features of Xsemantics that help achieving a modular and efficient implementation of type systems. In particular, we focus on specific implementation techniques for implementing type systems that are suited for the IDE (in our context, Eclipse), in order to keep the tooling responsive and guarantee a good user experience. &copy; 2015 Elsevier Inc.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {F, Scopus, ScienceDirect, excluidos},
  issn      = {23522216},
  key       = {Java programming language},
  keywords  = {Calculations;Differentiation (calculus);Digital subscriber lines;DSL;Integrodifferential equations;Semantics;},
  language  = {English},
  url       = {http://dx.doi.org/10.1016/j.jlamp.2015.11.005},
}

@InProceedings{20164502992673,
  author    = {Solms, Fritz and Pieterse, Vreda},
  title     = {Towards a generic DSL for automated marking systems},
  year      = {2016},
  volume    = {642},
  pages     = {59 - 66},
  address   = {Cullinan, South africa},
  note      = {Automated assessment;Automatic assessment;Domain specific languages;Dynamic assessment;Learning opportunity;Programming assignments;Specific languages;Syntax;},
  abstract  = {The automated static and dynamic assessment of programs makes it practical to increase the learning opportunities of large student classes through the regular assessment of programming assignments. Automatic assessments are traditionally specified in tool-specific languages which are closely linked to the functionality and implementation of a particular tool. This paper considers existing specification languages for assessments and proposes a generic and extensible domain-specific language for the specification of programming assignment assessments. &copy; Springer International Publishing AG 2016.},
  copyright = {Compilation and indexing terms, Copyright 2016 Elsevier Inc.},
  groups    = {F, Scopus, Inclusos},
  issn      = {18650929},
  journal   = {Communications in Computer and Information Science},
  key       = {Digital subscriber lines},
  keywords  = {Automation;Computer aided software engineering;Computer programming languages;DSL;Problem oriented languages;Software testing;Specification languages;Specifications;},
  language  = {English},
  url       = {http://dx.doi.org/10.1007/978-3-319-47680-3_6},
}

@InProceedings{6405348,
  author    = {I. Macia and R. Arcoverde and E. Cirilo and A. Garcia and A. von Staa},
  title     = {Supporting the identification of architecturally-relevant code anomalies},
  booktitle = {Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
  year      = {2012},
  pages     = {662-665},
  month     = {Sept},
  abstract  = {Code anomalies are likely to be critical to the systems' maintainability when they are related to architectural problems. Many tools have been developed to support the identification of code anomalies. However, those tools are restricted to only analyze source code structure and identify individual anomaly occurrences. These limitations are the main reasons why state-of-art tools are often unable to identify architecturally-relevant code anomalies, i.e. those related to architectural problems. To overcome these shortcomings we propose SCOOP, a tool that includes: (i) architecture-code traces in the analysis of the source code, and (ii) exploits relationships between multiple occurrences of code anomalies to detect the architecturally-relevant ones. Our preliminary evaluation indicated that SCOOP was able to detect anomalous code elements related to 293 out of 368 architectural problems found in 3 software systems.},
  doi       = {10.1109/ICSM.2012.6405348},
  groups    = {IEEEDSL, excluidos},
  issn      = {1063-6773},
  keywords  = {program diagnostics;software maintenance;SCOOP tool;architectural problem;architecturally-relevant code anomaly;code anomaly identification;software maintainability;software system;source code analysis;Computer architecture;Conferences;Couplings;DSL;Measurement;Software maintenance;Software systems;architectural problem;code anomaly;pattern},
}

@InProceedings{7377601,
  author    = {D. Kovacevic and M. Krunic and N. Cetic and J. Kovacevic},
  title     = {Xtext-based eclipse editor for linker configuration file},
  booktitle = {Telecommunications Forum Telfor (TELFOR), 2015 23rd},
  year      = {2015},
  pages     = {862-865},
  month     = {Nov},
  abstract  = {This paper presents implementation of the text editor for linker configuration files. The editor contains tools and options such as spell checker, autocomplete or syntax highlighting, etc. which facilitate development process. The solution contains a description of the syntax that should be used for writing configuration files which further determine the manner of interpretation and linking of object files. Xtext Eclipse framework has been used as development platform. Xtext provides very sophisticated, modern and practical API for describing and defining huge range of domain-specific languages. Syntax developed in Xtext is independent of Eclipse IDE and it can be used in any Java environment.},
  doi       = {10.1109/TELFOR.2015.7377601},
  groups    = {SCOPUS, excluidos},
  keywords  = {Java;application program interfaces;program compilers;text analysis;API;IDE;Java environment;Xtext-based eclipse editor;autocomplete;domain-specific languages;integrated development component;linker configuration file;object files;spell checker;syntax description;syntax highlighting;DSL;Digital signal processing;Domain specific languages;Grammar;Java;Joining processes;Syntactics;Eclipse;Xtext;configuration;editor configuration files linker;grammar;linker;plugin;syntax},
}

@InProceedings{7363638,
  author        = {J. Y. Mori and C. H. Llanos and M. Hüebner},
  title         = {A Framework to the Design and Programming of Many-Core Focal-Plane Vision Processors},
  booktitle     = {Embedded and Ubiquitous Computing (EUC), 2015 IEEE 13th International Conference on},
  year          = {2015},
  pages         = {193-198},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {The Focal-Plane Image Processing area aims to bring processing elements as near as possible to the pixels and to the camera's focal-plane. Most of the works reported in the literature uses only simple processing elements, in general analog ones, with few flexibility. With the technology advances, a new generation of Vision Processors is emerging. It is expected that multi/many-core systems will be integrated to the pixel sensors, offering several opportunities for parallelism exploration, resulting in high performance and flexible processing systems. The programmability is one of the main problems in this area, since most programmers are not able to create parallel algorithms and applications. In this work, we propose a methodology to the design and programming of many-core focal-plane vision processors. The application is described using a Domain Specific Language, from which the parallelism characteristics are extracted. Afterwards, a new abstract model is derived using techniques such as Program Slicing (PS) and Task-Graph Clustering (TGC). The abstract model is then transformed in a SystemC/TLM2.0 description, in order to allow for different timing accuracy simulations. The results of the simulations are used together with an ASIP design tool in order to determine both the microarchitecture of processing elements and the communication structure of the new system. Finally, from the model derived before, a new source code is generated and programmed into the new platform. In this context, the main concepts and ideas are described in this work, as well as some partial results.},
  doi           = {10.1109/EUC.2015.24},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {graph theory;image processing;image sensors;multiprocessing systems;program slicing;ASIP design tool;SystemC/TLM2.0;domain specific language;focal-plane image processing;many-core focal-plane vision processor;multicore system;pixel sensor;program slicing;task-graph clustering;Analytical models;Arrays;Image processing;Parallel processing;Program processors;Programming;Real-Time;computer vision;embedded computing;focal-plane image processing;many-core architecture, rank3},
}

@InProceedings{7306085,
  author    = {C. B. De Oliveira and R. Menotti and J. M. P. Cardoso and E. Marques},
  title     = {A special-purpose language for implementing pipelined FPGA-based accelerators},
  booktitle = {2015 Forum on Specification and Design Languages (FDL)},
  year      = {2015},
  pages     = {1-8},
  month     = {Sept},
  abstract  = {A common use for Field-Programmable Gate Arrays (FPGAs) is the implementation of hardware accelerators. A way of doing so is to specify the internal logic of such accelerators by using Hardware Description Languages (HDLs). However, HDLs rely on the expertise of developers and their knowledge about hardware development with FPGAs. Regarding this, efforts have been focused on developing High-level Synthesis (HLS) tools in an attempt to increase the overall abstraction level required for using FPGAs. However, the solutions presented by such tools are commonly considered inefficient in comparison to the ones achieved by a specialized hardware designer. An alternative solution to program FPGAs is the use of Domain- Specific Languages (DSLs), as they can provide higher abstraction levels than HDLs still allowing the developers to deal with specific issues leading to more efficient designs and not always covered by HLS tools. In this paper we present our recent work on a DSL named LALP (Language for Aggressive Loop Pipelining), which has been developed focusing on the development of FPGAbased, aggressively pipelined, hardware accelerators. We present the recent LALP extensions and the challenges we are facing regarding to the compilation of LALP to FPGAs.},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  issn      = {1636-9874},
  keywords  = {field programmable gate arrays;hardware description languages;pipeline processing;DSL;HDL;HLS tool;LALP;domain-specific language;field-programmable gate array;hardware description language;high-level synthesis tool;language for aggressive loop pipelining;pipelined FPGA-based accelerator;special-purpose language;Arrays;Clocks;Delays;Field programmable gate arrays;Hardware;Pipeline processing;Radiation detectors},
}

@Article{7432157,
  author   = {V. Oksman and R. Strobel and X. Wang and D. Wei and R. Verbin and R. Goodson and M. Sorbara},
  title    = {The ITU-T's new G.fast standard brings DSL into the gigabit era},
  journal  = {IEEE Communications Magazine},
  year     = {2016},
  volume   = {54},
  number   = {3},
  pages    = {118-126},
  month    = {March},
  abstract = {This article explores the recently issued ITU-T Recommendations specifying "G.fast" (G.9701 [1] and G.9700 [2]) that bring user bit rates up to 1 Gb/s over twisted pairs from the distribution point to customer premises. The overview and some key research challenges of G.fast are discussed in [3]. The standardized G.fast transmission method and advanced crosstalk cancellation techniques are presented here with specific performance projections and measurement results achieved during the first demonstrations and trials, showing bit rates of 500 Mb/s over 250 m and available reach up to 400 m. A description of standardized tools for dynamic performance maintenance, resource allocation, and power saving enhancing G.fast applications concludes this article.},
  doi      = {10.1109/MCOM.2016.7432157},
  groups   = {SCOPUS, Inclusos},
  issn     = {0163-6804},
  keywords = {crosstalk;digital subscriber lines;resource allocation;DSL;G.fast transmission method;ITU-T Recommendations;advanced crosstalk cancellation techniques;dynamic performance maintenance;resource allocation;twisted pairs;Bit rate;Channel estimation;Crosstalk;DSL;ITU Standards;Robustness;Synchronization},
}

@InProceedings{7070443,
  author        = {V. Roussev},
  title         = {Building a Forensic Computing Language},
  booktitle     = {System Sciences (HICSS), 2015 48th Hawaii International Conference on},
  year          = {2015},
  pages         = {5228-5233},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {The primary goal of this discussion is to motivate the need for the development of a domain-specific language (DSL) focused on the requirements of forensic and security analysis. We argue that, at present, there is no adequate mechanism that a) allows analysts to specify the forensic computation as a tool-agnostic, logical sequence of steps, b) provides a formal specification for tool developers, and c) seamlessly integrates different available tools to provides a complete and extensible solution. We present an initial design sketch for a forensic DSL called nugget, and use it to illustrate the ideas behind our approach.},
  doi           = {10.1109/HICSS.2015.617},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1530-1605},
  keywords      = {digital forensics;formal specification;specification languages;domain-specific language;forensic DSL;forensic computing language;formal specification;nugget;security analysis;Abstracts;Computers;DSL;Forensics;Runtime;digital forensics;dsl;nugget forensic computing language, rank3},
}

@InProceedings{6227234,
  author    = {D. Di Ruscio and P. Pelliccione and A. Pierantonio},
  title     = {EVOSS: A tool for managing the evolution of free and open source software systems},
  booktitle = {2012 34th International Conference on Software Engineering (ICSE)},
  year      = {2012},
  pages     = {1415-1418},
  month     = {June},
  abstract  = {Software systems increasingly require to deal with continuous evolution. In this paper we present the EVOSS tool that has been defined to support the upgrade of free and open source software systems. EVOSS is composed of a simulator and of a fault detector component. The simulator is able to predict failures before they can affect the real system. The fault detector component has been defined to discover inconsistencies in the system configuration model. EVOSS improves the state of the art of current tools, which are able to predict a very limited set of upgrade faults, while they leave a wide range of faults unpredicted.},
  doi       = {10.1109/ICSE.2012.6227234},
  groups    = {IEEEDSL, excluidos},
  issn      = {0270-5257},
  keywords  = {configuration management;public domain software;software fault tolerance;software maintenance;software management;EVOSS tool;evolution management;fault detector component;free and open source software systems;simulator component;system configuration model;upgrade fault prediction;Analytical models;DSL;Fault detection;Linux;Open source software;Tagging;Configuration management and deployment;Model-driven software engineering;Software evolution;Tools and environments},
}

@InProceedings{6729768,
  author    = {C. Şenbalcı and S. Altuntaş and Z. Bozkus and T. Arsan},
  title     = {Big data platform development with a domain specific language for telecom industries},
  booktitle = {2013 High Capacity Optical Networks and Emerging/Enabling Technologies},
  year      = {2013},
  pages     = {116-120},
  month     = {Dec},
  abstract  = {This paper introduces a system that offer a special big data analysis platform with Domain Specific Language for telecom industries. This platform has three main parts that suggests a new kind of domain specific system for processing and visualization of large data files for telecom organizations. These parts are Domain Specific Language (DSL), Parallel Processing/Analyzing Platform for Big Data and an Integrated Result Viewer. In addition to these main parts, Distributed File Descriptor (DFD) is designed for passing information between these modules and organizing communication. To find out benefits of this domain specific solution, standard framework of big data concept is examined carefully. Big data concept has special infrastructure and tools to perform for data storing, processing, analyzing operations. This infrastructure can be grouped as four different parts, these are infrastructure, programming models, high performance schema free databases, and processing-analyzing. Although there are lots of advantages of Big Data concept, it is still very difficult to manage these systems for many enterprises. Therefore, this study suggest a new higher level language, called as DSL which helps enterprises to process big data without writing any complex low level traditional parallel processing codes, a new kind of result viewer and this paper also presents a Big Data solution system that is called Petaminer.},
  doi       = {10.1109/HONET.2013.6729768},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  issn      = {1949-4092},
  keywords  = {data analysis;parallel databases;parallel languages;telecommunication computing;DFD;DSL;Domain Specific Language;big data platform development;data analyzing operations;data processing;data storing operation;distributed file descriptor;higher level language;parallel processing codes;parallel processing/analyzing platform;telecom industry;DSL;Data handling;Data storage systems;Information management;Telecommunications;Web sites;Writing;Big Data Analysis;Domain Specific Language;Parallel Processing and Analyzing},
}

@InProceedings{7117975,
  author        = {Y. Korenkov and I. Loginov and A. Lazdin},
  title         = {PEG-based language workbench},
  booktitle     = {2015 17th Conference of Open Innovations Association (FRUCT)},
  year          = {2015},
  pages         = {75-81},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {In this article we present a new tool for language-oriented programming which provides to user convenient means to describe the domain specific languages in the form of language based on parsing expression grammars and helpful tools for grammar debugging. Also we consider the sample of using this toolkit as a part of an integrated development environment.},
  doi           = {10.1109/FRUCT.2015.7117975},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {2305-7254},
  keywords      = {grammars;program debugging;programming environments;specification languages;PEG-based language workbench;domain specific languages;grammar debugging;integrated development environment;language-oriented programming tool;parsing expression grammars;toolkit;DSL;Domain specific languages;Grammar;Object oriented modeling;Programming;Syntactics, rank3},
}

@InProceedings{6486028,
  author        = {D. Adolf and E. Ferranti and S. Koch},
  title         = {SmartScript - a domain-specific language for appliance control in Smart Grids},
  booktitle     = {Smart Grid Communications (SmartGridComm), 2012 IEEE Third International Conference on},
  year          = {2012},
  pages         = {465-470},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes an auto-configuring agent based software architecture connecting appliances, smart meters, solar panels, and a KNX building automation system, resulting in a complete demand-side smart grid. The agents are responsible for providing access to all datapoints in the system as well as sending commands to the active components. To control the system, a domain-specific language (DSL) called SmartScript was developed, whose benefits are twofold. The first one is to provide users, experts in electrical engineering and/or building automation but not in software systems, with a high level tool which they can use to control a demand-side smart grid. The second benefit is to provide a layer to implement and test quickly and effectively energy-aware algorithms without having to deal with all the underlying connections. Finally, some demo applications created using SmartScript (i.e., smartphone interface, voice-controlled building automation system) are presented in this work, in order to give an example of how SmartScript can be used.},
  doi           = {10.1109/SmartGridComm.2012.6486028},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {building management systems;demand side management;home automation;smart meters;smart phones;smart power grids;software agents;software architecture;solar cells;specification languages;DSL;KNX building automation system;SmartScript;appliance control;autoconfiguring agent-based software architecture;demand side smart grid control;domain-specific language;electrical engineering;energy-aware algorithms;smart meters;smartphone interface;solar panels;voice-controlled building automation system;Automation;Buildings;Home appliances;Protocols;Smart grids;Software;Software architecture, rank3},
}

@InProceedings{6840004,
  author    = {O. D. Ramos-Cantor and M. Lossow and H. Droste and G. Kadel and M. Pesavento},
  title     = {A Network Simulation Tool for User Traffic Modeling and Quality of Experience Analysis in a Hybrid Access Architecture},
  booktitle = {WTC 2014; World Telecommunications Congress 2014; Proceedings of},
  year      = {2014},
  pages     = {1-6},
  month     = {June},
  abstract  = {A Hybrid Access Architecture, where network users can be simultaneously served by different technologies, has been envisioned in order to increase the achievable data rates and enhance the user experience. This proposed access is promising to users where the costs of replacing existing technology are unmanageable and the complementary technology is underused. In order to understand the implications of a Hybrid Access between Digital Subscriber Line (DSL) and Long Term Evolution (LTE) in Downlink (DL) operation, a Network Simulation Tool has been developed, where the services demanded by the users are defined and modeled. Additionally, the Traffic and QoE Simulator (TQoES) establishes an algorithm to select the kind of access to be used by specific services, and reliably simulates the behavior of users within an LTE network based on 3GPP recommendations.},
  groups    = {SCOPUS, Compendex, excluidos},
}

@InProceedings{6462290,
  author        = {F. Alhosban and L. Burd},
  title         = {Aural instruction with visualization in E-Learning},
  booktitle     = {2012 Frontiers in Education Conference Proceedings},
  year          = {2012},
  pages         = {1-6},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {This research investigates the effectiveness of using aural instructions together with visualisation in teaching some concepts of data structures to novice computer science students. A prototype learning system, known as the Data Structure Learning (DSL) tool, was developed and used first in a short mini study that showed that, used together with visualisations of algorithms, aural instructions produced faster student response times than did textual instructions. This result suggested that the additional use of the auditory sensory channel did indeed reduce the cognitive load. The tool was then used in a second, longitudinal, study over two academic terms in which students studying the Data Structures module were offered the opportunity to use the DSL approach with either aural or textual instructions. Both the quantitative data provided by the automatic recording of DSL use and an end-of-study questionnaire showed appreciation by students of the help the tool had provided and enthusiasm for its future use and development. These findings were supported by qualitative data provided by student written feedback at the end of each task, by interviews at the end of the experiment and by interest from the lecturer in integrating use of the tool with the teaching of the module.},
  doi           = {10.1109/FIE.2012.6462290},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {0190-5848},
  keywords      = {computer aided instruction;computer science education;data structures;data visualisation;DSL tool;auditory sensory channel;aural instruction;cognitive load;computer science student;data structure learning;e-learning;prototype learning system;teaching;textual instruction;visualization;DSL;Data structures;Data visualization;Electronic learning;Interviews;Visualization;Aural Instructions;Cognitive Load;Computer Science Learning;Data Structure Learning Tool;Visualization, rank3},
}

@InProceedings{6399719,
  author        = {S. Schivo and J. Scholma and B. Wanders and R. A. U. Camacho and P. E. van der Vet and M. Karperien and R. Langerak and J. van de Pol and J. N. Post},
  title         = {Modelling biological pathway dynamics with Timed Automata},
  booktitle     = {Bioinformatics Bioengineering (BIBE), 2012 IEEE 12th International Conference on},
  year          = {2012},
  pages         = {447-453},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {When analysing complex interaction networks occurring in biological cells, a biologist needs computational support in order to understand the effects of signalling molecules (e.g. growth factors, drugs). ANIMO (Analysis of Networks with Interactive MOdelling) is a tool that allows the user to create and explore executable models of biological networks, helping to derive hypotheses and to plan wet-lab experiments. The tool is based on the formalism of Timed Automata, which can be analysed via the UPPAAL model checker. Thanks to Timed Automata, we can provide a formal semantics for the domain-specific language used to represent signalling networks. This enforces precision and uniformity in the definition of signalling pathways, contributing to the integration of signalling event models into complex, crosstalk-driven networks. We propose an approach to discretization of reaction kinetics that allows us to efficiently use UPPAAL as the computational engine to explore the dynamic cell behaviour. A user friendly interface makes the use of Timed Automata completely transparent to the biologist, while keeping the expressive power intact. This allows to define relatively simple, yet faithful models of complex biological interactions. The resulting timed behaviour is displayed graphically, allowing for an intuitive and interactive modelling experience.},
  doi           = {10.1109/BIBE.2012.6399719},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {bioinformatics;cellular biophysics;complex networks;drugs;finite automata;formal languages;formal verification;human computer interaction;molecular biophysics;reaction kinetics;ANIMO;UPPAAL model checker;analysis of networks with interactive modelling;biological cells;biological pathway dynamic modelling;complex biological interaction network analysis;computational engine;crosstalk-driven networks;domain-specific language;drugs;dynamic cell behaviour;formal semantics;growth factors;reaction kinetic discretization;signalling event model;signalling molecules;signalling network representation;signalling pathway;timed automata formalism;user friendly interface;wet-lab experiments;Analytical models;Automata;Biological system modeling;Computational modeling;Data models;Kinetic theory;dynamic behaviour;modelling;signalling pathway;timed automata, rank3},
}

@InProceedings{6569751,
  author        = {A. M. Törsel},
  title         = {A Testing Tool for Web Applications Using a Domain-Specific Modelling Language and the NuSMV Model Checker},
  booktitle     = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
  year          = {2013},
  pages         = {383-390},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Test case generation from formal models using model checking software is an established method. This paper presents a model-based testing approach for web applications based on a domain-specific language model. It is shown how the domain-specific language is transformed into the input language of the NuSMV model checker and how the resulting traces are converted into executable test scripts for various test automation tools. The presented approach has been implemented with comprehensive automation in a research tool which architecture is outlined.},
  doi           = {10.1109/ICST.2013.54},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2159-4848},
  keywords      = {Internet;automatic programming;formal verification;program testing;specification languages;NuSMV model checker software;Web applications;domain-specific modelling language;executable test scripts;model-based testing approach;test automation tools;test case generation;Adaptation models;Automation;DSL;Model checking;Software;Web pages;model checking;model-based testing;test automation;web applications, rank3},
}

@InProceedings{7005365,
  author    = {B. Butzin and F. Golatowski and C. Niedermeier and N. Vicari and E. Wuchner},
  title     = {A model based development approach for building automation systems},
  booktitle = {Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)},
  year      = {2014},
  pages     = {1-6},
  month     = {Sept},
  abstract  = {As of today, building automation systems are present in almost any commercial building. They perform climate control, lightning control, access control, surveillance, and quite a few other tasks. As a result of their evolutionary development, building automation systems are divided into separate silos of disciplines that are not well integrated with each other. As of today, a variety of communication protocols, data models and engineering approaches are used by different vendors. Existing standardized building automation protocols as BACnet or KNX allow integration of some disciplines on the communication level but fail to provide means for common description of devices, services and data on the semantic level. This means that building automation applications that span multiple disciplines require a high effort for development, engineering and maintenance. If devices from multiple vendors are integrated in one installation, a set of different engineering tools and vendor-specific knowledge is required. In the ITEA “Building as a Service” (BaaS) project we try to overcome these deficiencies and define a common way to develop, engineer, commission, operate and maintain building automation systems following a service oriented approach. The whole process will be supported by semantic models to reduce costs and time-to-market, which is a quite new approach. In this paper we will present the current state of the work with special regard to domain modeling and model driven processes that are currently being specified for the BaaS platform.},
  doi       = {10.1109/ETFA.2014.7005365},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  issn      = {1946-0740},
  keywords  = {authorisation;building management systems;data models;lightning;protocols;service-oriented architecture;BACnet;BaaS platform;ITEA BaaS project;KNX;access control;building as a service;building automation applications;building automation systems;climate control;commercial building;communication protocols;data models;evolutionary development;lightning control;model based development approach;standardized building automation protocols;surveillance;Building automation;Data models;Domain specific languages;Ontologies;Protocols;Semantics;building automation;data model;domain specific language;semantic model;service oriented architecture},
}

@InProceedings{6462650,
  author        = {S. Creff and J. Champeau and A. Monégier and J. M. Jézéquel},
  title         = {Relationships Formalization for Model-Based Product Lines},
  booktitle     = {2012 19th Asia-Pacific Software Engineering Conference},
  year          = {2012},
  volume        = {1},
  pages         = {158-163},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Model-Based Engineering (MBE) and Product Line Engineering (PLE) have been combined, to handle new system development constraints like: increasing complexity, higher product quality and cost reduction. Many authors have pointed out the need of modularization in the variability and in the core assets space. Existing approaches focus on separating and delimiting concerns or providing generic composition mechanisms. In Model-Based Product Lines, with an increasing number of models to manage, organizing the modeling space becomes central to support product line consistency, maintenance and product derivation process. To organize the modeling space, we propose to precisely describe the dependencies among modeling artifacts and clarify their use. Thus, we introduce the Product Line Modeling Space (PLiMoS) language that specializes relationships, based on an intentional framework, for the product line domain. The Domain Specific Language (DSL) provides a solution to model the modeling space and preserves independence with the product line tooling.},
  doi           = {10.1109/APSEC.2012.127},
  groups        = {ACM, IEEEDSML, Duplicados},
  issn          = {1530-1362},
  keywords      = {cost reduction;product development;software cost estimation;software maintenance;software quality;software reusability;specification languages;DSL;Domain Specific Language;MBE;PLE;PLiMoS language;cost reduction;generic composition mechanism;maintenance;model-based engineering;model-based product lines;modeling artifact;product derivation process;product line consistency;product line domain;product line engineering;product line modeling space;product line tooling;product quality;relationships formalization;system development constraint;Abstracts;Complexity theory;Context;Context modeling;Principal component analysis;Software;Unified modeling language;DSL;Feature Models;Intentional Relations;MBE;Modeling Space;PLE;Relationships, rank3},
}

@InProceedings{6617336,
  title     = {Contents},
  booktitle = {Live Programming (LIVE), 2013 1st International Workshop on},
  year      = {2013},
  pages     = {1-1},
  month     = {May},
  abstract  = {The following topics are dealt with: live mashup tools; live coding; live development environment; live logic programming; cyberphysical programming; live DSL environments; and sound improvisation.},
  doi       = {10.1109/LIVE.2013.6617336},
  keywords  = {cybernetics;interactive programming;logic programming;music;cyberphysical programming;live DSL environments;live coding;live development environment;live logic programming;live mashup tools;sound improvisation, rank5},
}

@InProceedings{7128889,
  author        = {N. Visic and H. G. Fill and R. A. Buchmann and D. Karagiannis},
  title         = {A domain-specific language for modeling method definition: From requirements to grammar},
  booktitle     = {2015 IEEE 9th International Conference on Research Challenges in Information Science (RCIS)},
  year          = {2015},
  pages         = {286-297},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {The core process a modeling method engineer needs to accomplish starts with the acquisition of domain knowledge and requirements, and ends with the deployment of a usable modeling tool. In between, a key intermediate deliverable of this process is the modeling method specification which, ideally, should be platform independent. On one hand, it takes input from a structured understanding of the application domain and scenarios; on the other hand, it provides sufficiently structured input to support the implementation of tool support for modeling activities. It is quite common that such modeling methods are domain-specific, in the sense that they provide concepts from the domain as “first-class modeling citizens”. However, for the purposes of this paper, we raise the level of abstraction for “domain specificity” and consider “modeling method engineering” as the application domain. Consequently, we raise several research questions - whether a domain-specific language can support this domain, and what would be its requirements, properties, constructs and grammar. We propose an initial draft of such a language - one that abstracts away from meta-modeling platforms by establishing a meta2 layer of abstraction where a modeling method can be defined in a declarative manner, then the final modeling tool is generated by automated compilation of the method definition for the meta-modeling environment of choice.},
  doi           = {10.1109/RCIS.2015.7128889},
  groups        = {SCOPUS, IEEEDSML, Compendex, Duplicados},
  issn          = {2151-1349},
  keywords      = {formal specification;grammars;knowledge based systems;domain knowledge;domain specificity;domain-specific language;grammar;metamodeling platform;modeling method engineering;modeling method specification;Analytical models;Computational modeling;DSL;Domain specific languages;Metamodeling;Semantics;Unified modeling language;domain-specific language;meta-modeling;modeling method;modeling tool, rank3},
}

@InProceedings{6645668,
  author        = {G. Milosavljević and M. Filipović and V. Marsenić and D. Pejaković and I. Dejanović},
  title         = {Kroki: A mockup-based tool for participatory development of business applications},
  booktitle     = {Intelligent Software Methodologies, Tools and Techniques (SoMeT), 2013 IEEE 12th International Conference on},
  year          = {2013},
  pages         = {235-242},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents Kroki (fr. croquis - sketch), a tool for participatory development of business applications based on mockups. Kroki provides a graphical editor for visual creation of mockups and two engines (Web and desktop) for mockup execution. Kroki is developed in order to foster development agility, communication and better understanding of end-user needs. The mockup editor and engines are based on our EUIS (Enterprise User Interface Specification) DSL for specifying user interfaces of business applications.},
  doi           = {10.1109/SoMeT.2013.6645668},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {business data processing;graphical user interfaces;search engines;EUIS DSL;Kroki tool;Web engine;business application development;desktop engine;development agility;end-user needs;enterprise user interface specification;graphical editor;mockup editor;mockup execution;mockup visual creation;mockup-based tool;Business;Cities and towns;Navigation;Unified modeling language, rank3},
}

@InProceedings{7459436,
  author        = {S. Ma and Z. Aklah and D. Andrews},
  title         = {Run time interpretation for creating custom accelerators},
  booktitle     = {2016 Design, Automation Test in Europe Conference Exhibition (DATE)},
  year          = {2016},
  pages         = {900-905},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Despite the significant advancements that have been made in High Level Synthesis, the reconfigurable computing community has not yet managed to achieve a wide-spread use of Field Programmable Gate Arrays (FPGAs) by programmers. Existing barriers that prevent programmers from using FPGAs include the need to work within vendor specific CAD tools, knowledge of hardware programming models, and the requirement to pass each design through a very time-consuming synthesis, place and route process. In this paper we present a new approach that takes these barriers out of the design flows for programmers. We move synthesis out of the programmers path and instead rely on composing pre-synthesized building blocks using a domain-specific language that supports programming patterns tailored to FPGA accelerators. Our results show that the achieved performance of run time assembling accelerators is equivalent to synthesizing a custom block of hardware using automated HLS tools.},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {field programmable gate arrays;high level synthesis;specification languages;CAD tool;FPGA;HLS;building block synthesis;custom accelerator;design flow;domain-specific language;field programmable gate array;high level synthesis;run time interpretation;DSL;Field programmable gate arrays;Hardware;Integrated circuit interconnections;Program processors;Programming;Switches, rank3},
}

@InProceedings{7510564,
  author    = {J. Deantoni},
  title     = {Modeling the Behavioral Semantics of Heterogeneous Languages and their Coordination},
  booktitle = {2016 Architecture-Centric Virtual Integration (ACVI)},
  year      = {2016},
  pages     = {12-18},
  month     = {April},
  abstract  = {In the software and system modeling community, research on domain-specific modeling languages (DSMLs) is focused on providing technologies for developing languages and tools that allow domain experts to develop system solutions efficiently. Unfortunately, the current lack of support for explicitly relating concepts expressed in different DSMLs makes it very difficult for software and system engineers to reason about information spread across models describing different system aspects. As a particular challenge, we present in this paper how we dealt with relationships between heterogeneous behavioral models to support their concurrent and coordinated execution. This was achieved by providing dedicated meta-language to define the behavioral semantics of DSMLs and their coordination. The approach made explicit a formal model of the control flow (MoCC); domain-specific actions (DSA) and a well-defined protocol between them (incl., mapping, feedback and callback) reified through explicit domain-specific events (DSE). The protocol is then used to infer a relevant behavioral language interface for specifying coordination patterns to be applied on conforming executable models. As a result, heterogeneous languages and their relationships can be developed in the GEMOC studio, which provides extensive support to run and debug heterogeneous models. This is outlined in the paper on the definition of the Marked Graph language and its coordination with a scenario language.},
  doi       = {10.1109/ACVI.2016.9},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {formal verification;programming language semantics;DSA;DSE;DSML;GEMOC studio;behavioral language interface;behavioral semantics;callback task;concurrent execution;coordinated execution;coordination patterns;domain-specific modeling languages;domain-specifications;explicit domain-specific events;feedback task;formal MoCC;formal model-of-the-control flow;heterogeneous behavioral semantics modeling;heterogeneous languages;heterogeneous model debugging;heterogeneous model run;mapping task;marked graph language;meta-language;system modeling community;Concurrent computing;Context;DSL;Metamodeling;Semantics;Software;Syntactics;behavioral semantics;concurrency theory;coordination;heterogeneous modeling;model of computation;simulation},
}

@InProceedings{7018445,
  author    = {X. Zhu and C. Phung and L. Pareto and S. Ehnebom and M. Krekola and M. Christerson and M. Helander},
  title     = {An industrial case study on using language workbench technology for realizing Model-Driven Engineering},
  booktitle = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year      = {2014},
  pages     = {17-29},
  month     = {Jan},
  abstract  = {Model Driven Engineering (MDE) is a proven approach to improve software development processes by automation. However, traditional development of MDE tooling requires a high upfront cost. Recent developments in language workbench technologies promise to significantly reduce these investment costs. By providing domain experts with targeted projections, the speed and quality of delivering customer value is improved. This paper provides results from an industrial case study in the telecommunications domain and compares the value of using a language workbench to traditional MDE technologies. Evaluation of the approach was based on qualitative research strategy which involved a proof of concept implementation and effort estimations by tooling experts. Our results, using the Intentional Domain Workbench, indicate that applying a language workbench promises significant improvements in several aspects of MDE based software development. Most notably in this paper: (1) improved speed in development of domain specific tooling and (2) improved speed in software development process re-engineering.},
  groups    = {SCOPUS, Compendex, excluidos},
  keywords  = {software tools;Intentional Domain Workbench;MDE based software development;Model-Driven Engineering;customer value;domain specific tooling;language workbench technology;software development process re-engineering;Abstracts;Adaptation models;DSL;Interviews;Software;Telecommunications;Unified modeling language;Domain-Specific Languages;Language Workbench;Model-Driven Engineering;Projectional Editor;Software Interface Development},
}

@InProceedings{7515417,
  author        = {I. Portugal and P. Alencar and D. Cowan},
  title         = {A Preliminary Survey on Domain-Specific Languages for Machine Learning in Big Data},
  booktitle     = {2016 IEEE International Conference on Software Science, Technology and Engineering (SWSTE)},
  year          = {2016},
  pages         = {108-110},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {The proliferation of data often called Big Data has created problems with traditional approaches to data capture, storage, analysis and visualization, thus opening up new areas of research. Machine Learning algorithms are one area that has been used in Big Data for analysis. However, because of the challenges Big Data imposes, these algorithms need to be adapted and optimized to specific applications. One important decision made by software engineers is the choice of the language that is used in the implementation of these algorithms. This literature survey identifies and describes domain-specific languages and frameworks used for Machine Learning in Big Data with the intention of assisting software engineers in making more informed choices and providing beginners with an overview of the main languages used in this domain. This is the first survey that aims at better understanding how domain-specific languages for Machine Learning are used as a tool for research in Big Data.},
  doi           = {10.1109/SWSTE.2016.23},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {Big Data;learning (artificial intelligence);specification languages;Big Data;data analysis;data capture;data proliferation;data storage;data visualization;domain-specific languages;machine learning;Big data;Computational modeling;DSL;Domain specific languages;Machine learning algorithms;Programming;Software;BD;Big Data;DSL;ML;Machine Learning;domain-specific languages;literature survey, rank3},
}

@InProceedings{6694495,
  author    = {K. Falkner and V. Chiprianov and N. Falkner and C. Szabo and G. Puddy},
  title     = {Modeling scenarios for the performance prediction of distributed real-time embedded systems},
  booktitle = {Military Communications and Information Systems Conference (MilCIS), 2013},
  year      = {2013},
  pages     = {1-6},
  month     = {Nov},
  abstract  = {Autonomous defence systems are typically characterized by hard constraints on space, weight and power. These constraints have a strong impact on the non-functional properties and especially performance of the final system. System execution modelling tools permit early prediction of the performance of model driven systems; however they are intended for one shot analysis, not for repeatable, interactive use. In this paper we propose a Domain Specific Language for describing scenarios to repeatedly test a system execution model within a Synthetic Environment. We exemplify it by describing and executing a scenario involving an UAV and a CMS.},
  doi       = {10.1109/MilCIS.2013.6694495},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {autonomous aerial vehicles;defence industry;distributed programming;embedded systems;military computing;CMS;UAV;autonomous defence systems;distributed real-time embedded systems;domain specific language;model driven systems;system execution modelling;Analytical models;Data models;Engines;Hardware;Middleware;Predictive models;Unified modeling language;formatting;insert;style;styling},
}

@InProceedings{6849709,
  author        = {G. S. Ouedraogo and M. Gautier and O. Sentieys},
  title         = {Frame-based modeling for automatic synthesis of FPGA-Software Defined Radio},
  booktitle     = {2014 9th International Conference on Cognitive Radio Oriented Wireless Networks and Communications (CROWNCOM)},
  year          = {2014},
  pages         = {341-346},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Software Defined Radio (SDR) is now becoming a ubiquitous concept to describe and implement Physical Layers (PHYs) of wireless systems. Moreover, even though the FPGA is expected to play a key role in SDR, describing a PHY at the Register-Transfer-Level (RTL) requires tremendous efforts. This paper introduces a novel methodology to rapidly implement PHYs for SDR. The work relies upon High-Level Synthesis tools and dataflow modeling in order to infer an efficient RTL control unit for the application. The proposed software-based over-layer partly handles the complexity of programming an FPGA and integrates reconfigurable features. It consists essentially of a Domain-Specific Language (DSL) combined to a DSL-Compiler. An IEEE 802.11a transceiver has been explored via this approach in order to show the flexibility features.},
  doi           = {10.4108/icst.crowncom.2014.255289},
  groups        = {SCOPUS, IEEEDSML, Duplicados},
  issn          = {2166-5370},
  keywords      = {field programmable gate arrays;program compilers;radio transceivers;software radio;specification languages;wireless LAN;DSL-compiler;FPGA-software defined radio;IEEE 802.11a transceiver;PHY;RTL control unit;SDR;dataflow modeling;domain-specific language;frame-based modeling;high-level synthesis tools;physical layers;register-transfer-level;DSL;Encoding;Field programmable gate arrays;Physical layer;Receivers;Software;Synchronization, rank3},
}

@InProceedings{6196521,
  author        = {J. Barateiro and J. Borbinha},
  title         = {Managing risk data: From spreadsheets to information systems},
  booktitle     = {2012 16th IEEE Mediterranean Electrotechnical Conference},
  year          = {2012},
  pages         = {673-676},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {The goal of Risk Management is to define prevention and control mechanisms to address the risks attached to specific activities and valuable assets. Many Risk Management efforts operate in silos with narrowly focused, functionally driven, and disjointed activities. That fact leads to a fragmented view of risks, where each activity uses its own language, customs and metrics. That limits an organization-wide perception of risks, where interdependent risks are not anticipated, controlled or managed. The lack of integrated solutions to manage risk information, lead the experts to use spreadsheets as their main tool, impeding collaboration, communication and reuse of risk information. In order to address these issues, this paper presents a solution that integrates a Risk Management framework, including a XML-based Domain Specific Language for Risk Management. The proposed framework is supported by an information system to manage the definition or risks.},
  doi           = {10.1109/MELCON.2012.6196521},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2158-8473},
  keywords      = {XML;management information systems;risk management;spreadsheet programs;XML-based domain specific language;information systems;interdependent risks;risk control mechanisms;risk data management;risk information reusage;risk prevention mechanisms;silos;spreadsheets;Computer architecture;Information systems;Organizations;Risk management;Unified modeling language;XML, rank3},
}

@InProceedings{7522164,
  author        = {J. Opiła},
  title         = {Prototyping of visualization designs of 3D vector fields using POVRay rendering engine},
  booktitle     = {2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)},
  year          = {2016},
  pages         = {343-348},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {There is a persistent quest for novel methods of visualization in order to get insight into complex phenomena in variety of scientific domains. Researchers, ex. VTK team, achieved excellent results; however, some problems connected with implementation of new techniques and quality of the final images still persist. Results of inspection of number of visualization styles of 3D vector field employing POVRay ray-tracing engine are discussed, i.e. hedgehogs, oriented glyphs, streamlines, isosurface component approach and texturing design. All styles presented have been tested using water molecule model and compared concerning computing time, informativeness and general appearance. It is shown in the work that Scene Description Language (SDL), domain specific language implemented in POVRay is flexible enough to use it as a tool for fast prototyping of novel and exploratory visualization techniques. Visualizations discussed in the paper were computed using selected components of API of ScPovPlot3D, i.e. templates written in the SDL language. Results are compared to designs already implemented in VTK.},
  doi           = {10.1109/MIPRO.2016.7522164},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {data visualisation;ray tracing;rendering (computer graphics);vectors;3D vector field;API;POVRay rendering engine;ScPovPlot3D;domain specific language;exploratory visualization;hedgehogs;isosurface component approach;oriented glyph;ray-tracing engine;scene description language;streamlines;texturing design;visualization design prototyping;Data visualization;Electrostatics;Engines;Extraterrestrial measurements;Libraries;Three-dimensional displays;Visualization;POVRay;ScPovPlot3D;VTK;vector field visualization;visual data analysis, rank3},
}

@InProceedings{7502813,
  author        = {F. A. Lopes and L. Lima and M. Santos and R. Fidalgo and S. Fernandes},
  title         = {High-level modeling and application validation for SDN},
  booktitle     = {NOMS 2016 - 2016 IEEE/IFIP Network Operations and Management Symposium},
  year          = {2016},
  pages         = {197-205},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Software-Defined Networking (SDN) enables applications running on its control plane. The Northbound API allows programmers to develop SDN applications for a number of policy-based network management tasks. However, there is still a clear need for supporting the development of controller-agnostic modeled applications. In this paper, we show how the Model-Driven Networking (MDN), a framework composed of CASE tool and Domain-Specific Modeling Language (DSML), can be a feasible solution to create applications independent from controllers and to enable proper verification of SDN applications. Our evaluation demonstrates that MDN framework is viable for using in real scenarios and independent from SDN controllers. Moreover, our performance tests show that: (i) MDN's code generation is two times faster than other approaches; and (ii) it can validate several constraints and complex topologies at millisecond-timescale.},
  doi           = {10.1109/NOMS.2016.7502813},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {programming languages;software defined networking;CASE tool;DSML;MDN;SDN application;application validation;controller-agnostic modeled application;domain-specific modeling language;high-level modeling;model-driven networking;network topology;northbound API;policy-based network management task;software-defined networking;Computer aided software engineering;Computer languages;DSL;Network topology;Programming;Software;Topology;CASE;Domain-Specific Modeling Language;MDN;Software-Defined Networking;application;framework, rank3},
}

@InProceedings{7733727,
  author    = {S. Kchir and S. Dhouib and J. Tatibouet and B. Gradoussoff and M. Da Silva Simoes},
  title     = {RobotML for industrial robots: Design and simulation of manipulation scenarios},
  booktitle = {2016 IEEE 21st International Conference on Emerging Technologies and Factory Automation (ETFA)},
  year      = {2016},
  pages     = {1-8},
  month     = {Sept},
  abstract  = {Robotic systems are a typical example of complex systems. Their design involves a combination of different technologies, requiring a multi-disciplinary approach. This is particularly challenging when a robotic system is required to interact either with humans or other entities within its environment. To tackle this complexity, we propose a design and validation approach based on MDE (Model-Driven Engineering) principles for industrial manipulators. We propose an extension of RobotML for manipulation, a modelling environment based on the Papyrus tool, which was developed specifically for the robotics domain. The extension is aiming to model a complete robotic setting, including protagonists, objects, their properties, the interactions between them, the services provided by the robots, and the actions they can perform. Then we propose to use model execution techniques to validate the design models. We illustrate our approach on a robotic scenario dedicated to the Sybot collaborative robot.},
  doi       = {10.1109/ETFA.2016.7733727},
  groups    = {IEEEDSL, excluidos},
  keywords  = {DSL;Mobile communication;Robot kinematics;Service robots;Trajectory;Unified modeling language},
}

@InProceedings{7464551,
  author        = {A. Caracciolo and M. Lungu and O. Truffer and K. Levitin and O. Nierstrasz},
  title         = {Evaluating an Architecture Conformance Monitoring Solution},
  booktitle     = {2016 7th International Workshop on Empirical Software Engineering in Practice (IWESEP)},
  year          = {2016},
  pages         = {41-44},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Architectural rules are often defined but rarely tested. Current tools offer limited functionality and often require significant effort to be configured, automated and integrated within existing platforms. We propose a platform that is aimed at reducing the overall cost of setting up and maintaining an architectural conformance monitoring environment by decoupling the conceptual representation of a user-defined rule from its technical specification prescribed by the underlying analysis tools. The user is no longer expected to encode her constraints according to the syntax of the chosen tool, but can use a simple high-level DSL that is automatically compiled to an executable specification through custom adapters developed to support the interaction with existing off-the-shelf tools. In this paper we analyze three case studies to show how this approach can be successfully adopted to support truly diverse industrial projects. By discussing qualitative aspects of the approach, we investigate limitations and opportunities for improving general quality assessment solutions in general and DSL-based conformance tools in particular.},
  doi           = {10.1109/IWESEP.2016.12},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {conformance testing;formal specification;monitoring;software architecture;architectural rules;architecture conformance monitoring;conceptual representation;conformance tools;high-level DSL;technical specification;user-defined rule;Context;DSL;Electronic mail;Maintenance engineering;Monitoring;Organizations;Quality assessment;architecture conformance checking;empirical;evaluation, rank3},
}

@InProceedings{6569750,
  author    = {A. Calvagna and A. Gargantini and P. Vavassori},
  title     = {Combinatorial Interaction Testing with CITLAB},
  booktitle = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
  year      = {2013},
  pages     = {376-382},
  month     = {March},
  abstract  = {In this paper the CITLAB tool for Combinatorial Interaction Testing is presented. The tool allows importing/exporting models of combinatorial problems from/to different application domains, by means of a common interchange syntax notation and a corresponding interoperable semantic metamodel. Moreover, the tool is a framework allowing embedding and transparent invocation of multiple, different implementations of combinatorial algorithms. CITLAB has been designed tightly integrated with the Eclipse IDE framework, by means of its plug-in extension mechanism. It is intended to easy the spread of CIT testing both in industrial practice and in academic research, by allowing users and researchers to apply multiple test suite generation algorithms, each with its peculiarities, on the same problem models, and let them compare the results in order to select the one that best fits their needs, while alleviating from the pain of knowing all the different details and notations of the underlying CIT tools.},
  doi       = {10.1109/ICST.2013.53},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  issn      = {2159-4848},
  keywords  = {combinatorial mathematics;interactive systems;open systems;testing;CITLAB tool;Eclipse IDE framework;combinatorial interaction testing;importing/exporting models;interchange syntax notation;interoperable semantic metamodel;multiple test suite generation algorithms;transparent invocation;Algorithm design and analysis;Biological system modeling;Generators;Grammar;Semantics;Syntactics;Testing;Combinatorial testing model;Eclipse;XTEXT;domain-specific language},
}

@InProceedings{7522035,
  author        = {L. Bettini and P. Crescenzi},
  title         = {Java-meets eclipse: An IDE for teaching Java following the object-later approach},
  booktitle     = {2015 10th International Joint Conference on Software Technologies (ICSOFT)},
  year          = {2015},
  volume        = {2},
  pages         = {1-12},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {In this paper, we introduce a new Eclipse-based IDE for teaching Java following the object-later approach. In particular, this IDE allows the programmer to write code in Java-, a smaller version of the Java language that does not include object-oriented features. For the implementation of this language we used Xtext, an Eclipse framework for implementing Domain Specific Languages; besides the compiler mechanisms, Xtext also allows to easily implement all the IDE tooling mechanisms in Eclipse. By using Xtext we were able to provide an implementation of Java - with all the powerful features available when using an IDE like Eclipse (including debugging, automatic building, and project wizards). With our implementation, it is also straightforward to create self-assessment exercises for students, which are integrated in Eclipse and JUnit.},
  groups        = {IEEEDSML, Duplicados},
  keywords      = {Java;computer aided instruction;computer science education;Eclipse-based IDE;JUnit;Java language;Java teaching;Xtext;compiler mechanism;domain specific language;object-later approach;Complexity theory;Education;Graphical user interfaces;Java;Programming profession;Syntactics;DSL;EMF;Eclipse;IDE;Java;Xtext, rank3},
}

@InProceedings{6257291,
  author    = {O. Krasts and A. Kleins and A. Teilans},
  title     = {Domain specific language for securities settlement systems},
  booktitle = {Digital Information Processing and Communications (ICDIPC), 2012 Second International Conference on},
  year      = {2012},
  pages     = {80-83},
  month     = {July},
  abstract  = {Actual problems during design, implementation and maintenance of securities settlement systems software are achieving complementarity of several different, connected, asynchronously communicating settlement systems and verification of this complementarity. The aim of this paper is to create domain specific language for modeling of settlement systems and their interactions. Then use models to calculate settlement systems behavior. Specific of settlement systems requires that they perform accordingly to business rules in any situation. This makes use of model checking a very desirable step in development process of settlement systems. Defining a domain specific language and creating editor supporting it is a first step to enable use of model checking techniques. Created models also can be used as input for other analysis methods and tools, for example, basis path testing, simulation and as base for deriving test cases.},
  doi       = {10.1109/ICDIPC.2012.6257291},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  keywords  = {financial data processing;formal verification;securities trading;specification languages;asynchronously communicating settlement systems;business rules;domain specific language;model checking;securities settlement systems software;settlement systems behavior;Analytical models;Biological system modeling;Business;Computational modeling;Domain specific languages;Educational institutions;Unified modeling language;modeling;validatioan;verification},
}

@InProceedings{6718341,
  author        = {N. George and D. Novo and T. Rompf and M. Odersky and P. Ienne},
  title         = {Making domain-specific hardware synthesis tools cost-efficient},
  booktitle     = {Field-Programmable Technology (FPT), 2013 International Conference on},
  year          = {2013},
  pages         = {120-127},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Tools to design hardware at a high level of abstraction promise software-like productivity for hardware designs. Among them, tools like Spiral, HDL Coder, Optimus and MMAlpha target specific application domains and produce highly efficient implementations from high-level input specifications in a Domain Specific Language (DSL). But, developing similar domain-specific High-Level Synthesis (HLS) tools need enormous effort, which might offset their many advantages. In this paper, we propose a novel, cost-effective approach to develop domain-specific HLS tools. We develop the HLS tool by embedding its input DSL in Scala and using Lightweight Modular Staging (LMS), a compiler framework written in Scala, to perform optimizations at different abstraction levels. For example, to optimize computation on matrices, some optimizations are more effective when the program is represented at the level of matrices while others are better applied at the level of individual matrix elements. To illustrate the proposed approach, we create an HLS flow to automatically generate efficient hardware implementations of matrix expressions described in our own high-level specification language. Although a simple example, it shows how easy it is to reuse modules across different HLS flows and to integrate our flow with existing tools like LegUp, a C-to-RTL compiler, and FloPoCo, an arithmetic core generator. The results reveal that our approach can simultaneously achieve high productivity and design quality with a very reasonable tool development effort.},
  doi           = {10.1109/FPT.2013.6718341},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {circuit CAD;digital arithmetic;field programmable gate arrays;high level synthesis;matrix algebra;program compilers;specification languages;C-to-RTL compiler;DSL;FPGA;FloPoCo;HDL coder;HLS;LMS;LegUp;MMAlpha;Optimus;Scala;Spiral;arithmetic core generator;compiler framework;cost-efficiency;design quality;domain specific language;domain-specific hardware synthesis tools;domain-specific high-level synthesis tools;hardware design;hardware designs;high abstraction level;high-level specification language;lightweight modular staging;matrix computation optimizations;matrix expressions;software-like productivity;Adders;DSL;Generators;Hardware;Least squares approximations;Matrices;Optimization, rank3},
}

@InProceedings{6979145,
  author    = {G. Watney and L. J. Reder and T. Canham},
  title     = {Modeling for Partitioned and Multi-core Flight Software Systems: (Instrument Software Framework)},
  booktitle = {Space Mission Challenges for Information Technology (SMC-IT), 2014 IEEE International Conference on},
  year      = {2014},
  pages     = {54-61},
  month     = {Sept},
  abstract  = {This paper presents an approach for modeling component based flight software systems that can be deployed to a wide variety of hardware and operating system configurations. Our focus is deployment to multiple ARINC653 partitions, however, the technique is effective across multiple processors as well. The modeling technique presented is two tiered: first software components are represented in System Modeling Language (SysML) utilizing an off-the-shelf Magic Draw Computer Aided Software Engineering (CASE) tool. A custom plug in is used to produce domain specific XML. Secondly, a Python code generator is used to map the domain specific XML to implementation C++ code. To facilitate the technique a new lite-weight component framework called the Instrument Software Framework (ISF) was developed. Component based software architectures have been shown to improve the quality of flight software systems. The modeling approach using SysML, XML and the ISF is explained. Separation of concerns of the deployment target environment from the component implementation are demonstrated by our technique. The ISF architecture will be described along with an essential Hub Component Design Pattern that enables swappable communication mediums between computing elements.},
  doi       = {10.1109/SMC-IT.2014.15},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {C++ language;XML;aerospace computing;computer aided software engineering;multiprocessing systems;operating systems (computers);program compilers;software quality;ARINC653 partitions;C++ code;CASE tool;ISF architecture;Instrument Software Framework;MagicDraw computer aided software engineering tool;Python code generator;SysML;component based flight software systems;component based software architectures;component implementation;custom plugin;domain specific XML;flight software systems;hardware system configurations;hub component design pattern;lite-weight component framework;multicore flight software systems;multiple processors;operating system configurations;swappable communication mediums;system modeling language;target environment;Computational modeling;Instruments;Message systems;Ports (Computers);Software;Topology;XML;Domain Specific Language;Instrument Software Framework (ISF);SysML;flight software;modeling;partitions},
}

@InProceedings{7233083,
  author    = {H. Chanti and L. Thiry and M. Hassenforder and E. Blanchard and P. Fromy},
  title     = {Fire safety DSL based algebra},
  booktitle = {Control, Engineering Information Technology (CEIT), 2015 3rd International Conference on},
  year      = {2015},
  pages     = {1-6},
  month     = {May},
  abstract  = {A complex system as the one evaluating the fire safety level, generally need the intervention of several specialists. Each one uses his own languages and own tools. To model such a system, several specific languages are needed and must be formalized and then integrated. This kind of systems can have irreversible consequences because of the human involving. To make a system sure - by the proof - the specification and composition of models/languages must be formally described and based on mathematical foundations. In this context, the paper proposes to use a formal approach based on algebraic specifications to model, formalize and compose the specific languages needed to evaluate the fire safety level in buildings.},
  doi       = {10.1109/CEIT.2015.7233083},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  keywords  = {algebraic specification;civil engineering computing;fires;safety;specification languages;Domain Specific Language;algebraic specifications;buildings;fire safety DSL;fire safety level;formal approach;Algebra;DSL;Mathematical model;Safety;Semantics;Transforms;Unified modeling language;Domain Specific Language (DSL);algebra;fire safety;formal languages},
}

@InProceedings{7289142,
  author        = {Z. Aouini and A. Kortebi and Y. Ghamri-Doudane},
  title         = {Traffic monitoring in home networks: Enhancing diagnosis and performance tracking},
  booktitle     = {2015 International Wireless Communications and Mobile Computing Conference (IWCMC)},
  year          = {2015},
  pages         = {545-550},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Home network complexity is dramatically growing in terms of topology (devices and connectivity technologies) and services leading to increasingly challenging management issues. In this context, enabling a better visibility of home network traffic usage and performance is a crucial step to provide efficient self-care and customer care. In this paper, we study home network traffic monitoring architectural approaches. In particular, we study the feasibility of a Home Gateway based flow monitoring approach, which will allow enhancing home network diagnostic and performance tracking. Our experimental evaluation aims at providing a better understanding of deployment possibilities and limits. The obtained experimental results, based on an open source tool, are promising in terms of resource consumption (an average load of 6,6% and 18MB for CPU and memory respectively ) as well as bandwidth utilization (average 156 Kbps) for typical DSL access speed scenario.},
  doi           = {10.1109/IWCMC.2015.7289142},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {2376-6492},
  keywords      = {home networks;internetworking;telecommunication traffic;DSL access speed scenario;bandwidth utilization;customer care;home gateway based flow monitoring approach;home network complexity;home network diagnostic;home network traffic monitoring architectural approaches;home network traffic usage;open source tool;performance tracking;resource consumption;self-care;Computer architecture;Home automation;Logic gates;Monitoring;Network topology;Performance evaluation;Topology;Home network monitoring;experimental test bed;passive measurements, rank3},
}

@InProceedings{6363292,
  author        = {H. Nakamura and R. Nagano and K. Hisazumi and Y. Kamei and N. Ubayashi and A. Fukuda},
  title         = {QORAL: An External Domain-Specific Language for Mining Software Repositories},
  booktitle     = {Empirical Software Engineering in Practice (IWESEP), 2012 Fourth International Workshop on},
  year          = {2012},
  pages         = {23-29},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {The mining software repositories (MSR) field integrates and analyzes data stored in repositories such as source control and bug repositories to provide support to practitioners. In order to provide useful information to practitioners, MSR researchers need to perform tasks iteratively, these tasks include extracting data from repositories, transforming them into specific data formats, and loading them into the statistical analysis tool. These tasks require a significant amount of man hours to implement and execute according to the requirements of the researchers. This paper proposes an external domain-specific language (DSL) called QORAL to facilitate the performance of multiple iterations and environment development. The results from a questionnaire used to evaluate QORAL indicate that it is easy to understand and modify source code.},
  doi           = {10.1109/IWESEP.2012.20},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {configuration management;data analysis;data mining;program debugging;software engineering;DSL;MSR;QORAL;bug repository;bug tracking system;data analysis;data extraction;data format;data integration;environment development;external domain-specific language;multiple iteration;software repository mining;source code modification;source control;statistical analysis tool;version control system;DSL;Data mining;Grammar;Libraries;Loading;Measurement;Software;DSL;MSR;QORAL, rank3},
}

@InProceedings{7302512,
  author        = {S. Vinogradov and A. Ozhigin and D. Ratiu},
  title         = {Modern model-based development approach for embedded systems practical experience},
  booktitle     = {Systems Engineering (ISSE), 2015 IEEE International Symposium on},
  year          = {2015},
  pages         = {56-59},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Control functionality of modern rail vehicles is getting more and more complex. It contains several modules such as the traction control unit or the central control unit, as well as input and output stations, such as driver's cab terminals and process I/Os. A plethora of devices are connected to the vehicle and train bus and are able to communicate. The functions of the vehicle control and traction systems are configured by using function blocks from which loadable programs are generated. The languages used to program the control units are well established in the field. However, one-size-fits-all approach cannot adequately address the increased complexity of the software in modern trains. In this paper we describe our preliminary experience with using the multi-paradigm modeling tool “mbeddr” in the railway domain. The following aspects have been in focus during the work: (a) matching the application requirements and domain specific language used for implementation; (b) integration of model-based approach into traditional product lifecycle; (c) reengineering existing functionality using modeling and code generation capabilities of mbeddr. The system example we chose was the application logic of automated train driving system implemented in development environment of Siemens process automation framework.},
  doi           = {10.1109/SysEng.2015.7302512},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {embedded systems;rail traffic control;traction;I/O process;Siemens process automation framework;application logic;application requirements;automated train driving system;central control unit;code generation capabilities;domain specific language;driver cab terminals;embedded systems;function blocks;input stations;loadable programs;mbeddr tool;model-based approach;model-based development approach;modeling capabilities;multiparadigm modeling tool;output stations;product lifecycle;rail vehicle control functionality;railway domain;reengineering;traction control unit;traction systems;train bus;vehicle bus;Complexity theory;Control systems;Domain specific languages;Formal verification;Mathematical model;Rail transportation;Software;language engineering;model based development, rank3},
}

@InProceedings{7323094,
  author        = {G. Kövesdán and M. Asztalos and L. Lengyel},
  title         = {Aggregate Callback: A design pattern for flexible and robust runtime model building},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {149-156},
  month         = {Feb},
  __markedentry = {[Neto:5]},
  abstract      = {In modern software engineering environments, tools that use Domain-Specific Languages (DSLs) are often applied. The usual workflow of such tools is that the textual input written in the DSL is parsed and a semantic model is instantiated. This model is later passed to another software component that processes it, e.g. a model transformation, a code generator or a simulator. Building the semantic model inside the parser is often a complex task. The model must be built in such a way that the constraints of the problem domain are enforced so that the consistency of the output is guaranteed. This paper presents a design pattern, referred as Aggregate Callback that supports enforcing constraints in the model and thus helps creating correct models. We have found that the Aggregate Callback pattern is useful for tool developers that build models in their applications.},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  keywords      = {program compilers;software engineering;DSL;aggregate callback pattern;code generation;domain-specific languages;robust runtime model building;semantic model;software engineering environments;Aggregates;Concrete;Context modeling;DSL;Generators;Robustness;Software;Agility;Code Generation;Design Pattern;Domain-Specific Modeling;Model Transformation;Modeling, rank3},
}

@InProceedings{7134025,
  author        = {O. Günalp and C. Escoffier and P. Lalanda},
  title         = {Demo abstract: Reproducible deployment of pervasive applications},
  booktitle     = {Pervasive Computing and Communication Workshops (PerCom Workshops), 2015 IEEE International Conference on},
  year          = {2015},
  pages         = {211-213},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Pervasive systems present stringent requirements that make software deployment especially challenging. The unknown and fluctuating environment in which pervasive applications are executed discards traditional approaches. As a result, there is an increasing need for a reproducible and dynamic deployment process. In last years, we developed several industrial pervasive platforms and applications. Based on these experiences we propose Rondo, a tool suite for deploying pervasive applications. Rondo includes a domain-specific language for declaratively describing applications, a deployment manager that can dynamically apply these descriptions and development tools for helping the description of applications. In this paper we present this tool suite and a set of deployment scenarios in which we validated our approach, including a web framework and a home automation platform.},
  doi           = {10.1109/PERCOMW.2015.7134025},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {Internet;home automation;software tools;ubiquitous computing;Rondo;Web framework;domain-specific language;home automation platform;industrial pervasive applications;industrial pervasive platforms;pervasive systems;reproducible dynamic deployment process;software deployment;tool suite;Assembly;Conferences;Context;DSL;Monitoring;Pervasive computing;Software, rank3},
}

@InProceedings{7582779,
  author        = {A. Pescador and J. de Lara},
  title         = {DSL-maps: From requirements to design of domain-specific languages},
  booktitle     = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year          = {2016},
  pages         = {438-443},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-Specific Languages (DSLs) are central to Model-Driven Engineering, where they are used for creating models for particular domains. However, current research and tools for building DSLs focus on the design and implementation aspects of the DSL, while the requirements analysis phase, and its automated transition to design is largely neglected. In order to alleviate this situation, we propose DSL-maps, a notation inspired by mind-maps, to represent requirements for DSLs. The notation is supported by a tool, which helps in the automated transition into an initial meta-model design, using a customizable transformation and recommendations from a catalogue of meta-model design patterns.},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  keywords      = {high level languages;pattern recognition;systems analysis;DSL-maps;domain-specific languages;meta-model design patterns;mind-maps;model-driven engineering;requirements analysis phase;Computational modeling;Concrete;Connectors;DSL;Software;Syntactics;Unified modeling language;Domain Analysis;Domain Specific Languages;Meta-Modelling Patterns;Model-Driven Engineering, rank3},
}

@InProceedings{6425702,
  author    = {E. Franchi},
  title     = {A Domain Specific Language Approach for Agent-Based Social Network Modeling},
  booktitle = {Advances in Social Networks Analysis and Mining (ASONAM), 2012 IEEE/ACM International Conference on},
  year      = {2012},
  pages     = {607-612},
  month     = {Aug},
  abstract  = {Although in the past twenty years agent-based modeling has been widely adopted as a research tool in the fields of social and political sciences, there is lack of software instruments specifically created for social network simulations. Restricting the field of interest specifically to social network models and simulations instead of supporting general agent-based ones, allows for the creation of easier to use, more focused tools. In this work, we propose PyNetSYM, an agent-based modeling framework designed to be friendly to programmers and non-programmers alike. PyNetSYM provides a domain-specific language to specify social network simulations expressed as agent-based models. PyNetSYM was created to deal with large simulations and to work effortlessly with other social network analysis toolkits.},
  doi       = {10.1109/ASONAM.2012.102},
  groups    = {ACM, SCOPUS, Compendex, IEEEDSML, Inclusos},
  keywords  = {social networking (online);social sciences;software agents;PyNetSYM;agent-based social network modeling;domain specific language approach;political science;social science;Analytical models;Concurrent computing;DSL;Libraries;Message systems;Object oriented modeling;Social network services;Agent Based Modeling;Social Network Analysis},
}

@InProceedings{6200153,
  author        = {A. Gargantini and P. Vavassori},
  title         = {CITLAB: A Laboratory for Combinatorial Interaction Testing},
  booktitle     = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  year          = {2012},
  pages         = {559-568},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Although the research community around combinatorial interaction testing has been very active for several years, it has failed to find common solutions on some issues. First of all, there is not a common abstract nor concrete language to express combinatorial problems. Combinatorial testing generator tools are strongly decoupled making difficult their interoperability and the exchange of models and data. In this paper, we propose an abstract and concrete specific language for combinatorial problems. It features and formally defines the concepts of parameters and types, constraints, seeds, and test goals. The language is defined by means of XTEXT, a framework for the definition of domain-specific languages. XTEXT is used to derive a powerful editor integrated with eclipse and with all the expected features of a modern editor. Eclipse is also used to build an extensible framework in which test generators, importers, and exporters can be easily added as plugins.},
  doi           = {10.1109/ICST.2012.141},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {2159-4848},
  keywords      = {Java;open systems;program testing;software tools;specification languages;CITLAB;XTEXT;abstract specific language;combinatorial interaction testing;combinatorial testing generator tool;concrete specific language;domain specific language;eclipse;interoperability;modern editor;Cameras;DSL;Generators;Grammar;Java;Syntactics;Testing;XTEXT;combinatorial testing;domain specific languages;eclipse;xtext, rank3},
}

@InProceedings{6899203,
  author        = {S. Ciraci and J. C. Fuller and J. Daily and A. Makhmalbaf and D. Callahan},
  title         = {A Runtime Verification Framework for Control System Simulation},
  booktitle     = {Computer Software and Applications Conference (COMPSAC), 2014 IEEE 38th Annual},
  year          = {2014},
  pages         = {75-84},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {In a standard workflow for the validation of a control system, the control system is implemented as an extension to a simulator. Such simulators are complex software systems, and engineers may unknowingly violate constraints a simulator places on extensions. As such, errors may be introduced in the implementation of either the control system or the simulator leading to invalid simulation results. This paper presents a novel runtime verification approach for verifying control system implementations within simulators. The major contribution of the approach is the two-tier specification process. In the first tier, engineers model constraints using a domain-specific language tailored to modeling a controller's response to changes in its input. The language is high-level and effectively hides the implementation details of the simulator, allowing engineers to specify design-level constraints independent of low-level simulator interfaces. In the second tier, simulator developers provide mapping rules for mapping design-level constraints to the implementation of the simulator. Using the rules, an automated tool transforms the design-level specifications into simulator-specific runtime verification specifications and generates monitoring code which is injected into the implementation of the simulator. During simulation, these monitors observe the input and output variables of the control system and report changes to the verifier. The verifier checks whether these changes follow the constraints of the control system. We describe application of this approach to the verification of the constraints of an HVAC control system implemented with the power grid simulator Grid LAB-D.},
  doi           = {10.1109/COMPSAC.2014.14},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {control engineering computing;formal specification;formal verification;control system simulation;design-level specification;domain-specific language;low-level simulator interface;mapping design-level constraint;monitoring code;simulator-specific runtime verification specification;two-tier specification process;Automata;Control systems;Monitoring;Object oriented modeling;Runtime;Software systems;Time factors;control system;runtime verification;simulation;timed automata, rank3},
}

@InProceedings{7500572,
  author        = {J. Akhundov and M. Werner and V. Schaus and A. Gerndt},
  title         = {Using timed automata to check space mission feasibility in the early design phases},
  booktitle     = {2016 IEEE Aerospace Conference},
  year          = {2016},
  pages         = {1-9},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {According to the model-based systems engineering paradigm, all engineers contribute to a single centralized data model of the system. The German Aerospace Center (DLR) develops a software tool Virtual Satellite which enables the engineers to store, exchange and alter their corresponding subsystem data on base of a distributed system model and thus contribute to the overall mission design during concurrent engineering (CE) sessions. Each engineer has their own scope of responsibilities, e.g. satellite trajectory, communication, or thermal analysis. Tracking implications of design changes on the whole system and feasibility aspects of the design is not trivial. Having an automated feasibility checking mechanism as a part of CE which would run iteratively after each design change provides a useful feedback mechanism for engineers and for the spacecraft client. For the purpose of mission feasibility checking a domain specific language (DSL) has been implemented using the Xtext Java framework. The extended parametric data model defined in the DSL serves as an executable representation of the spacecraft mission. The idea to use such an executable model to create a preliminary mission plan and hence confirm missions feasibility during conceptual study has already been introduced by Schaus et al. at the DLR. However, the vector of values of system variables was assumed to be equivalent with the currently active component, implying that component activities are mutually exclusive. This led to over-constraining of the execution model. Our work argues that concurrency considerations are critical from the earliest design phases. Since satellite is coupled with its environment and concurrency is an intrinsic property of the physical nature, considering concurrency allows for more realistic mission plans. The contributions of this paper are the introduction of concurrency considerations at the early space mission design phases and the use of timed automata tool (UPPAAL) for the - ission feasibility check during concurrent engineering sessions. As a result, with almost no overhead, the planned mission can be analyzed in a more realistic way. Furthermore, the run-times of the feasibility check amount to 10-100 milliseconds or less, which is also a significant improvement with respect to the previous work. This allows for more precision and fine granular modeling, and is a promising basis for model refinements in the consecutive mission design phases.},
  doi           = {10.1109/AERO.2016.7500572},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {aerospace computing;artificial satellites;automata theory;concurrent engineering;CE;DLR;DSL;German Aerospace Center;UPPAAL;Xtext Java framework;automated feasibility checking mechanism;concurrent engineering sessions;domain specific language;early design phases;extended parametric data model;software tool;space mission feasibility;spacecraft client;timed automata tool;virtual satellite;Automata;Concurrent computing;DSL;Modeling;Satellites;Space missions;Synchronization, rank3},
}

@InProceedings{6825691,
  author        = {A. Thiery and T. Cerqueus and C. Thorpe and G. Sunyé and J. Murphy},
  title         = {A DSL for Deployment and Testing in the Cloud},
  booktitle     = {Software Testing, Verification and Validation Workshops (ICSTW), 2014 IEEE Seventh International Conference on},
  year          = {2014},
  pages         = {376-382},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Cloud computing is becoming increasingly prevalent, more and more software providers are offering their applications as Software-as-a-Service solutions rather than traditional on-premises installations. In order to ensure the efficacy of the testing phase, it is critical to create a test environment that sufficiently emulates the production environment. Thus, Cloud applications should be tested in the Cloud. Cloud providers offer command-line tools for interacting with their platforms. However, writing custom low-level scripts using the provider's tool can become very complex to maintain and manage when variability (in terms of providers and platforms) is introduced. The contributions in this paper include: the development of a high level Domain Specific Language for the abstract definition of the application deployment process, and resource requirements, and a generation process that transforms these definitions to automatically produce deployment and instantiation scripts for a variety of providers and platforms. These contributions significantly simplify and accelerate the testing process for Cloud applications.},
  doi           = {10.1109/ICSTW.2014.43},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {cloud computing;program testing;specification languages;DSL;application deployment process;cloud applications;cloud computing;cloud providers;command-line tools;custom low-level scripts;domain specific language;instantiation scripts;on-premises installations;resource requirements;software providers;software-as-a-service solutions;test environment;Context;DSL;Educational institutions;Grammar;Random access memory;Software;Testing;Cloud;DSL;Deployment;Testing in the Cloud, rank3},
}

@InProceedings{7140372,
  author        = {F. A. Lopes and M. Santos and R. Fidalgo and S. Fernandes},
  title         = {Model-driven networking: A novel approach for SDN applications development},
  booktitle     = {2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)},
  year          = {2015},
  pages         = {770-773},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Software-Defined Networking (SDN) has been receiving a great deal of attention from both academic and industry communities. One reason to this interest is that SDN enables the network programmability, through an external controller, which supports applications and policies built from SDN programming languages, thus breaking the traditional bind between control and data plane. Nevertheless, the application development in this context is still complex for such recent technology. Moreover, there is a strong need for methodologies and tools that explore the abstraction levels potentials supported by SDN. This paper presents a new approach based on the Model-Driven Engineering (MDE) paradigm, called Model-Driven Networking (MDN). MDN relies on a Domain-Specific Modelling Language (DSML) to create SDN applications. We argue that MDN raises the level of abstraction on development, thus reducing the complexity to implement SDN applications and avoiding inconsistent policies. In order to show the relevance and the technological viability of our proposal, we have specified a DSML and have built a tool for creating SDN applications using the MDN approach.},
  doi           = {10.1109/INM.2015.7140372},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1573-0077},
  keywords      = {software defined networking;specification languages;DSML;MDE paradigm;MDN;SDN applications development;SDN programming languages;domain-specific modelling language;external controller;model-driven engineering paradigm;model-driven networking;network programmability;software-defined networking;Biological system modeling;Complexity theory;Computational modeling;DSL;Proposals;Semantics;Syntactics;Domain-Specific Modeling Language;Model-Driven Engineering;Software-Defined Networking, rank3},
}

@InProceedings{6651125,
  author    = {A. Kumar and A. Gheith and M. Kistler},
  title     = {Experiences with Dynamic Binary Translation in a Full System Simulator},
  booktitle = {Parallel and Distributed Processing Symposium Workshops PhD Forum (IPDPSW), 2013 IEEE 27th International},
  year      = {2013},
  pages     = {2168-2175},
  month     = {May},
  abstract  = {In this paper we describe our experiences with a new full-system simulator for the Power™ architecture that achieves a high-level of simulation performance through careful design and the application of dynamic binary translation. Our simulator is written entirely in Java and can run simple applications and also boot whole operating systems. We chose Java because it has a wide developer base, portability, support for modern programming features such as inheritance, ease of scripting, built in serialization, and a broad selection of robust developer tools. To improve simulation performance, we treat the byte code for our instruction interpreter as an intermediate representation to drive dynamic binary translation. When running as a pure instruction interpreter, the simulator can achieve simulation speeds of over 100 MIPS. For simple applications, dynamic binary translation can improve simulation performance by a factor of 2 or more, to over 200 MIPS. We continue to work on dynamic binary translation for booting a full operating system, and we are also exploring dynamic translation of Java byte code directly to host object code.},
  doi       = {10.1109/IPDPSW.2013.250},
  groups    = {IEEEDSML, excluidos},
  keywords  = {Java;operating systems (computers);program interpreters;Java byte code;Power™ architecture;dynamic binary translation;dynamic translation;full system simulator;instruction interpreter;operating system booting;portability;programming features;simulation performance improvement;Complexity theory;Computational modeling;DSL;Java;Programming;Registers;Standards;Java;interpreter;partial evaluation;simulation},
}

@InProceedings{6645251,
  author    = {F. Pérez and P. Valderas and J. Fons},
  title     = {A domain-specific language for enabling doctors to specify biomechanical protocols},
  booktitle = {2013 IEEE Symposium on Visual Languages and Human Centric Computing},
  year      = {2013},
  pages     = {99-102},
  month     = {Sept},
  abstract  = {New technologies are entering medical practice at an astounding pace. However, these technologies often cause to doctors learn and use difficulties. Then, doctors require assistance of a biomedical engineer. This is currently happening in a local hospital that has new technology to analyze biomechanical protocols in patients. Protocols are used to measure performances and identify changes in human body movements and muscles. Doctors are neither familiar with the concepts nor tools used, so biomedical engineers carry out descriptions of protocols rather than doctors. In this paper, we present the design of a domain-specific language that enables doctors to specify biomechanical protocols by addressing learning barriers (using design patterns). We also make doctors' descriptions compatible with the existing tools, and we also support legacy biomedical descriptions (combining meta-modeling and model transformations).},
  doi       = {10.1109/VLHCC.2013.6645251},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  issn      = {1943-6092},
  keywords  = {biomechanics;biomedical engineering;hospitals;protocols;specification languages;biomechanical protocols;biomedical engineer;design patterns;doctors;domain-specific language;hospital;human body movements;learning barriers;legacy biomedical descriptions;medical practice;meta-modeling;model transformations;muscles;patients;Biomechanics;Catalogs;DSL;Medical services;Motion measurement;Muscles;Protocols},
}

@InProceedings{6679649,
  author    = {J. McDaniel and C. Curtis and P. Brisk},
  title     = {Automatic synthesis of microfluidic large scale integration chips from a domain-specific language},
  booktitle = {2013 IEEE Biomedical Circuits and Systems Conference (BioCAS)},
  year      = {2013},
  pages     = {101-104},
  month     = {Oct},
  abstract  = {BioCoder is a domain-specific language by which chemists and biologists can express experimental protocols in a manner that is unambiguous and clearly repeatable. This paper presents a software toolchain that converts a protocol specified in a restricted subset of BioCoder to a technology-specific description of the protocol, targeting flow-based microfluidic large-scale integration (mLSI) chips. The technology-specific description can then be used to either: (1) execute the protocol on a capable chip; or (2) to derive the architecture of a new mLSI chip that can execute the protocol.},
  doi       = {10.1109/BioCAS.2013.6679649},
  groups    = {IEEEDSML, Inclusos},
  issn      = {2163-4025},
  keywords  = {bioMEMS;biology computing;lab-on-a-chip;microfluidics;programming languages;software tools;BioCoder;domain specific language;experimental protocols;flow based microfluidic large scale integration;mLSI chip automatic synthesis;microfluidic large scale integration chips;software toolchain;technology specific protocol description;Assembly;Biology;Computer architecture;Fluids;Heating;Microfluidics;Protocols;domain-specific language;microfluidic Large Scale Integration (mLSI)},
}

@InProceedings{6596418,
  author        = {D. V. Annenkov and E. A. Cherkashin},
  title         = {Generation technique for Django MVC web framework using the stratego transformation language},
  booktitle     = {Information Communication Technology Electronics Microelectronics (MIPRO), 2013 36th International Convention on},
  year          = {2013},
  pages         = {1084-1087},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Domain Specific Languages (DSL) allows one to raise level of abstraction, improve development productivity, and establish an equitable communication between domain experts and developers. Language-oriented programming (LOP) is a new paradigm based on DSL construction, allowing separating domain-specific and technology-specific aspects of a system under development. LOP shares some ideas with model-driven architecture and model-driven development. Spoofax language workbench is used as a primary tool for DSL design, and based on Stratego, a transformation language with programmable rewriting strategies, and Syntax Definition Formalism as language for grammar definition. As an example of DSL a simple textual language for domain modeling is considered. Rewriting rules and strategies are used as an uniform approach to generate, validate DSL code, and make arbitrary abstract syntax tree transformations. Rules for code generation implemented using so called “string interpolation” technique. Source DSL code translated to python code that can be deployed within Django web framework resulting to a web-application with create/update/delete functionality on a corresponding database. Developed DSL is an example of “definition by transformation“ approach. To get real benefits from DSL we need to add more domain specific features in DSL.},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {Internet;computational linguistics;interpolation;object-oriented languages;DSL;DSL code;Django MVC Web framework;Django Web framework;LOP;Spoofax language workbench;Stratego transformation language;code generation;domain specific aspects;domain specific languages;driven architecture model;driven development model;generation technique;grammar definition;language oriented programming;programmable rewriting strategies;rewriting rules;rewriting strategies;string interpolation technique;syntax definition formalism;syntax tree transformations;textual language, rank3},
}

@Article{6418129,
  author   = {F. Rosique and M. Jimenez and A. Iborra},
  title    = {A Graphical Modeling Language for Home Automation},
  journal  = {IEEE Latin America Transactions},
  year     = {2012},
  volume   = {10},
  number   = {6},
  pages    = {2249-2255},
  month    = {Dec},
  abstract = {Home automation systems have emerged as one of the most attractive fields in engineering, thanks to the burgeoning demand from society for information systems. Today, the development of these systems is confined to the immediate context of the solution and is platform-dependent. This has intensified the need for suitable tools to tackle their development while enhancing quality and productivity. On one hand, domain specific languages allow the description of the system by means of graphic models easily and intuitively, using domain concepts. On the other hand, the model driven development approach stands out as a good option for solving the problems of the existing methods, as well as contributing tools that pioneer the development of domain specific languages. The present article proposes an alternative methodology and tools for the development of home automation applications following the model driven approach together with the use of a domain specific language.},
  doi      = {10.1109/TLA.2012.6418129},
  groups   = {IEEEDSML, Inclusos},
  issn     = {1548-0992},
  keywords = {formal specification;home automation;information systems;software tools;specification languages;domain concepts;domain specific languages;graphic models;graphical modeling language;home automation applications;home automation systems;information systems;model driven approach;model driven development approach;Computational modeling;Computer integrated manufacturing;DSL;Domain specific languages;Home automation;Software;Visualization;home automation;model driven engineering},
}

@InProceedings{7118976,
  author    = {S. Das},
  title     = {An efficient way to enable prognostics in an onboard system},
  booktitle = {2015 IEEE Aerospace Conference},
  year      = {2015},
  pages     = {1-7},
  month     = {March},
  abstract  = {Prognostics and Health Management (PHM) systems are becoming increasingly important for monitoring and maintaining high value assets. In order to enable real time onboard diagnostic and prognostic capabilities, mechanisms for reading, manipulating and analyzing the data need to be architected into the onboard system. Machine learning and statistical algorithms provide tools to develop data models for enabling prognostics that are typically developed off-board by mining historical data. Once trained, the logic of processing real time data is then embedded on a real time onboard system. A straightforward approach for incorporating the knowledge and intelligence for real time data processing is to add the needed logic and algorithms as an integral part of the onboard software. While this method can serve the purpose of enabling real time health assessment and analysis, it is very restrictive in nature. Every time the analytics need to be updated or algorithms need refinement, it requires a refresh of the complete onboard software. The ability to fine tune onboard embedded logic for the purpose of making the analysis smarter is crucial for creating a successful and sound health monitoring system. In addition, it is desired that the process of encoding logic and algorithms should be simple and easy to incorporate into the system. User friendliness of the process of embedding intelligent logic is critical for long term maintenance of the system as well. This paper discusses an approach to build algorithms and logic into an onboard system such that they are programmatically decoupled from the onboard software. The approach described in this paper allows users the ease of use and flexibility in building knowledge into the system. In addition, as more historical data is collected and richer knowledge is discovered from mining the data, algorithms can be improved over time without having to update the onboard software.},
  doi       = {10.1109/AERO.2015.7118976},
  groups    = {IEEEDSL, excluidos},
  issn      = {1095-323X},
  keywords  = {condition monitoring;learning (artificial intelligence);structural engineering computing;PHM systems;complete onboard software;data models;health management;historical data;intelligent logic;machine learning;onboard embedded logic;prognostic capabilities;real time data processing;real time health assessment;real time onboard diagnostic capabilities;real time onboard system;sound health monitoring system;statistical algorithms;user friendliness;DSL;Hidden Markov models;Maintenance engineering;Mathematical model;Prognostics and health management;Real-time systems;Software},
}

@InProceedings{6424560,
  author        = {T. Miyajima and D. Thomas and H. Amano},
  title         = {A Domain Specific Language and Toolchain for OpenCV Runtime Binary Acceleration Using GPU},
  booktitle     = {Networking and Computing (ICNC), 2012 Third International Conference on},
  year          = {2012},
  pages         = {175-181},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Computationally intensive applications, such as OpenCV, can be off-loaded to accelerators to reduce execution time. However, developing an accelerated system requires a significant amount of time, requiring the developer to first choose an accelerator and which parts to off-load, then to port and the offloaded kernels to the accelerator using many accelerator-specific tools. In addition to the low-level parallelism of the accelerator, the developer also needs to extract and utilize system-level parallelism found within the application, while making sure that the application still executes correctly. This paper presents Courier, a tool chain and a domain specific language for Runtime Binary Acceleration, designed to simplify many of the steps involved in accelerating an application. The Courier tool chain can extract dataflow from a running software binary file, explore the off-loaded execution time on an accelerator, and then actually accelerate the original binary. By utilizing Courier, both expert and non-expert users can easily extract system-level parallelism and decide which part should be off-loaded to accelerators in a mixed software-hardware environment, without special knowledge on the target application source code and accelerator architecture. In a case study an OpenCV application is accelerated by 2.06 times using Courier, without requiring the application source code or any re-compilation of the application.},
  doi           = {10.1109/ICNC.2012.34},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {computer vision;data flow computing;graphics processing units;operating system kernels;program compilers;specification languages;Courier tool chain;GPU;OpenCV runtime binary acceleration;accelerated system;accelerator architecture;accelerator-specific tools;accelerators;computationally intensive applications;dataflow;domain specific language;low-level parallelism;mixed software-hardware environment;off-loaded execution time;offloaded kernels;software binary file;system-level parallelism;target application source code;toolchain;Acceleration;Data transfer;Field programmable gate arrays;Graphics processing units;Parallel processing;Runtime;Domain Spefic Language;Dynamic Off-loading;GPU;OpenCV;Runtime Binary Acceleration, rank3},
}

@InProceedings{6532141,
  author        = {A. Iliasov and A. Romanovsky},
  title         = {SafeCap Domain Language for Reasoning about Safety and Capacity},
  booktitle     = {Dependable Transportation Systems/Recent Advances in Software Dependability (WDTS-RASD), 2012 Workshop on},
  year          = {2012},
  pages         = {1-10},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {The on-going UK SAFECAP project develops modeling techniques and tools for improving railway capacity while ensuring that safety standards are maintained. This paper reports recent SAFECAP results on designing a Domain Specific Language (DSL) that will allow engineers to improve the node and junction capacity while guaranteeing operational safety. The SAFECAP DSL is introduced to define railway topology, its logical structure and signalling rules. The formal semantics of this graphical DSL, defined as part of our work, allows us to reason about system safety. The tooling environment, the SAFECAP Platform, offers graphical editing of railway schemas and an interface to a range of verification for ensuring railway operational safety. The work on extending the environment and its deployment in the railway sector continues with our SAFECAP partners: Invensys Rail and Swansea University.},
  doi           = {10.1109/WDTS-RASD.2012.11},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {inference mechanisms;railway safety;specification languages;SAFECAP domain language;Swansea university;UK SAFECAP project;domain specific language;graphical DSL;invensys rail;modelling techniques;railway capacity;railway operational safety;railway topology;reasoning;safety standards;domain language;formal verification;railway modelling;route-based signalling;safety, rank3},
}

@InProceedings{7180130,
  author        = {V. Karakoidas and D. Mitropoulos and P. Louridas and G. Gousios and D. Spinellis},
  title         = {Generating the Blueprints of the Java Ecosystem},
  booktitle     = {2015 IEEE/ACM 12th Working Conference on Mining Software Repositories},
  year          = {2015},
  pages         = {510-513},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Examining a large number of software artifacts can provide the research community with data regarding quality and design. We present a dataset obtained by statically analyzing 22730 jar files taken from the Maven central archive, which is the de-facto application library repository for the Java ecosystem. For our analysis we used three popular static analysis tools that calculate metrics regarding object-oriented design, program size, and package design. The dataset contains the metrics results that every tool reports for every selected jar of the ecosystem. Our dataset can be used to produce interesting research results, such as measure the domain-specific language usage.},
  doi           = {10.1109/MSR.2015.76},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2160-1852},
  keywords      = {Java;information retrieval systems;libraries;object-oriented programming;program diagnostics;software metrics;software packages;Java ecosystem;Maven central archive;blueprints;de-facto application library repository;jar files;object-oriented design;package design;software artifacts;software metrics;static analysis tools;DSL;Databases;Java;Libraries;Measurement;Software;XML;Chidamber and Kemerer;Java;Maven;Software Metrics, rank3},
}

@InProceedings{7323104,
  author        = {C. Sanz and A. Salas and M. de Miguel and A. Alonso and J. A. de la Puente and C. Benac},
  title         = {Automated model-based testing based on an agnostic-platform modeling language},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {1-8},
  month         = {Feb},
  __markedentry = {[Neto:5]},
  abstract      = {Currently multiple Domain Specific Languages (DSLs) are used for model-driven software development, in some specific domains. Software development methods, such as agile development, are test-centered, and their application in model-based frameworks requires model support for test development. We introduce a specific language to define generic test models, which can be automatically transformed into executable tests for particular testing platforms. The resulting test models represent the test plan for applications also built according to a model-based approach. The approach presented here includes some customisations for the application of the developed languages and transformation tools for some specific testing platforms. These languages and tools have been integrated with some specific DSL designed for software development.},
  groups        = {ACM, SCOPUS, Duplicados},
  keywords      = {program testing;software development management;DSL;agnostic platform modeling language;automated model;generic test models;model driven software development;multiple domain specific languages;software development methods;Architecture;Complexity theory;Computer architecture;Engines;Software;Testing;Unified modeling language;Agile Development;Automated Testing;Model-based Testing, rank3},
}

@InProceedings{6693130,
  author    = {D. Wüest and N. Seyff and M. Glinz},
  title     = {Semi-automatic generation of metamodels from model sketches},
  booktitle = {Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
  year      = {2013},
  pages     = {664-669},
  month     = {Nov},
  abstract  = {Traditionally, metamodeling is an upfront activity performed by experts for defining modeling languages. Modeling tools then typically restrict modelers to using only constructs defined in the metamodel. This is inappropriate when users want to sketch graphical models without any restrictions and only later assign meanings to the sketched elements. Upfront metamodeling also complicates the creation of domain-specific languages, as it requires experts with both domain and metamodeling expertise. In this paper we present a new approach that supports modelers in creating metamodels for diagrams they have sketched or are currently sketching. Metamodels are defined in a semi-automatic, interactive way by annotating diagram elements and automated model analysis. Our approach requires no metamodeling expertise and supports the co-evolution of models and meta-models.},
  doi       = {10.1109/ASE.2013.6693130},
  groups    = {SCOPUS, excluidos},
  keywords  = {SysML;computer graphics;automated model analysis;diagram elements annotation;domain-specific languages;graphical models;metamodels semiautomatic generation;model sketches;Adaptation models;Computational modeling;Context;DSL;Libraries;Metamodeling;Unified modeling language;Sketch;end-user;inference;metamodel;model;semiautomated},
}

@InProceedings{7323106,
  author        = {K. Beckmann},
  title         = {Integrating existing proprietary system models into a model-driven test process for an industrial automation scenario},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {255-262},
  month         = {Feb},
  __markedentry = {[Neto:5]},
  abstract      = {The introduction of modern model-driven software development methodologies into the industrial practise still proves to be a challenge. Especially small or medium-sized enterprises (SMEs) need an incremental and continuous modernisation process, which incorporates existing projects, is customised and cost-effective. Particularly, suitable solutions for model-based or -driven testing with test automation to increase the efficiency are in demand. This paper presents an approach for integrating existing proprietary system models of an SME partner for describing industrial automation processes into a model-driven test process, utilising a domain-specific language for the test specification. The test objectives focuses on the correct implementation of the communication and synchronisation of distributed state machines. The presented approach is integrated into a test framework, which is based on the Eclipse Modelling Framework (EMF) and the Eclipse Test and Performance Tools Platform Project (TPTP) framework. To separate the possibly changeable system and DSL-specific models from the implementation of the test framework, a stable and more generic test meta model was defined.},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {factory automation;program testing;small-to-medium enterprises;software engineering;EMF;SME;domain-specific language;eclipse modelling framework;eclipse test and performance tools platform project;generic test meta model;industrial automation;model-driven test process;modern model-driven software development;proprietary system model;small or medium-sized enterprises;test specification;Adaptation models;Automation;Biological system modeling;DSL;Object oriented modeling;Software;Unified modeling language;DSL;MDSD;MDT;Metamodelling;Model-driven Testing;Testing, rank3},
}

@InProceedings{7203036,
  author        = {S. Barnett and R. Vasa and J. Grundy},
  title         = {Bootstrapping Mobile App Development},
  booktitle     = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  year          = {2015},
  volume        = {2},
  pages         = {657-660},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Modern IDEs provide limited support for developers when starting a new data-driven mobile app. App developers are currently required to write copious amounts of boilerplate code, scripts, organise complex directories, and author actual functionality. Although this scenario is ripe for automation, current tools are yet to address it adequately. In this paper we present RAPPT, a tool that generates the scaffolding of a mobile app based on a high level description specified in a Domain Specific Language (DSL). We demonstrate the feasibility of our approach by an example case study and feedback from a professional development team. Demo at: https://www.youtube.com/watch?v=ffquVgBYpLM.},
  doi           = {10.1109/ICSE.2015.216},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {0270-5257},
  keywords      = {application program interfaces;mobile computing;specification languages;DSL;IDE;RAPPT tool;data-driven mobile app;domain specific language;integrated development environment;mobile application development;Androids;DSL;Humanoid robots;Mobile communication;Motion pictures;Productivity;Software engineering;Code Generation;Mobile App Prototyping;Model Driven Development, rank3},
}

@InProceedings{6927222,
  author    = {M. Gautier and G. S. Ouedraogo and O. Sentieys},
  title     = {Design Space Exploration in an FPGA-Based Software Defined Radio},
  booktitle = {Digital System Design (DSD), 2014 17th Euromicro Conference on},
  year      = {2014},
  pages     = {22-27},
  month     = {Aug},
  abstract  = {The FPGA (Field Programmable Gate Array) technology is expected to play a key role in the development of Software Defined Radio (SDR) platforms. To this aim, leveraging the nascent High-Level Synthesis (HLS) tools, a design flow from high-level specifications to Register-Transfer Level (RTL) description can be thought. Based on such a flow, this paper describes the Design Space Exploration (DSE) that can be achieved using loop optimizations. The mainstream objective is to demonstrate the compile-time flexibility of an architecture when associated with a reconfigurable platform. Throughout both IEEE 802.15.4 and IEEE 802.11g waveform examples, we show how the FPGA resources can be tuned according to a targeted throughput.},
  doi       = {10.1109/DSD.2014.44},
  groups    = {IEEEDSL, excluidos},
  keywords  = {field programmable gate arrays;optimisation;software radio;DSE;FPGA-based software defined radio throughput;HLS tool;RTL;SDR platform;compile-time flexibility;design space exploration;field programmable gate array technology;high-level synthesis tool;loop optimization;reconfigurable platform;register-transfer level;DSL;Estimation;Field programmable gate arrays;IEEE 802.15 Standards;IP networks;Table lookup;Throughput;Design Space Exploration;Field Programmable Gate Array (FPGA);High- Level Synthesis (HLS);Software Defined Radio (SDR)},
}

@InProceedings{7323141,
  author    = {P. M. S. Nazari and B. Rumpe},
  title     = {Using software categories for the development of generative software},
  booktitle = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year      = {2015},
  pages     = {498-503},
  month     = {Feb},
  abstract  = {In model-driven development (MDD) software emerges by systematically transforming abstract models to concrete source code. Ideally, performing those transformations is to a large extent the task of code generators. One approach for developing a new code generator is to write a reference implementation and separate it into handwritten and generatable code. Typically, the generator developer manually performs this separation - a process that is often time-consuming, labor-intensive, difficult to maintain and may produce more code than necessary. Software categories provide a way for separating code into designated parts with defined dependencies, for example, “Business Logic” code that may not directly use “Technical” code. This paper presents an approach that uses the concept of software categories to semi-automatically determine candidates for generated code. The main idea is to iteratively derive the categories for uncategorized code from the dependencies of categorized code. The candidates for generated or handwritten code finally are code parts belonging to specific (previously defined) categories. This approach helps the generator developer in finding candidates for generated code more easily and systematically than searching by hand and is a step towards tool-supported development of generative software.},
  groups    = {IEEEDSL, excluidos},
  keywords  = {program compilers;software engineering;source code (software);MDD software;code generator;concrete source code;generative software development;handwritten code;model-driven development software;software category;tool-supported development;DSL;Games;Generators;Java;Libraries;Software systems;Code Generators;Model-driven Development;Software Categories},
}

@InProceedings{6200121,
  author        = {T. Mesz´ros and T. Levendovszky},
  title         = {Verified Operational Patterns with Graph Transformation},
  booktitle     = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  year          = {2012},
  pages         = {954-961},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Using object-oriented patterns such as design patterns, architectural patterns, and refactoring operations has considerably simplified the design process of software systems. With the proliferation of Domain-Specific Languages, the generalization of OO patterns is a natural demand. A straightforward idea is to adapt OO patterns with automated tool support to the practice of Domain-Specific Modeling as well. A possible solution for that is using graph transformations to formalize and realize such patterns. One may expect, however, that the patterns are realized in a way that they are correct and do exactly what we expect them to. In this paper, we present how one can precisely define the requirements for a domain-specific model pattern, and how to verify the requirements on the implemented patterns. The presented concept is motivated and illustrated with a case study from the state chart domain.},
  doi           = {10.1109/ICST.2012.201},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {2159-4848},
  keywords      = {graph grammars;object-oriented methods;pattern classification;software architecture;software maintenance;software tools;OO patterns;architectural patterns;automated tool support;domain-specific language proliferation;domain-specific model pattern;graph transformation;object-oriented patterns;refactoring operations;software system design process;state chart domain;verified operational patterns;Adaptation models;Containers;Joining processes;Object oriented modeling;Semantics;Software systems;Unified modeling language;Active Model Patterns;Graph Transformation;Transformation Verification, rank3},
}

@InProceedings{7582830,
  author        = {T. Szabó and S. Alperovich and S. Erdweg and M. Voelter},
  title         = {An extensible framework for variable-precision data-flow analyses in MPS},
  booktitle     = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year          = {2016},
  pages         = {870-875},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Data-flow analyses are used as part of many software engineering tasks: they are the foundations of program understanding, refactorings and optimized code generation. Similar to general-purpose languages (GPLs), state-of-the-art domain-specific languages (DSLs) also require sophisticated data-flow analyses. However, as a consequence of the different economies of DSL development and their typically relatively fast evolution, the effort for developing and evolving such analyses must be lowered compared to GPLs. This tension can be resolved with dedicated support for data-flow analyses in language workbenches. In this tool paper we present MPS-DF, which is the component in the MPS language workbench that supports the definition of data-flow analyses for DSLs. Language developers can define data-flow graph builders declaratively as part of a language definition and compute analysis results efficiently based on these data-flow graphs. MPS-DF is extensible such that it does not compromise the support for language composition in MPS. Additionally, clients of MPS-DF analyses can run the analyses with variable precision thus trading off precision for performance. This allows clients to tailor an analysis to a particular use case.},
  groups        = {, Compendex, IEEEDSML, Duplicados},
  keywords      = {data flow analysis;data flow graphs;program compilers;software maintenance;specification languages;DSL;GPL;MPS-DF analysis;code generation;data flow analysis;data flow graph;domain-specific language;extensible framework;general-purpose language;software engineering;software refactoring;Algorithm design and analysis;DSL;Encoding;Lattices;Software;Switches;Syntactics;Data-flow Analysis;Domain-specific Language;Inter-procedural Analysis;Language Workbench, rank3},
}

@InProceedings{6755332,
  author        = {W. Deneke and W. N. Li and C. Thompson},
  title         = {Automatic Composition of ETL Workflows from Business Intents},
  booktitle     = {2013 IEEE 16th International Conference on Computational Science and Engineering},
  year          = {2013},
  pages         = {1036-1042},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Extract-Transform-Load (ETL) tools have provided organizations with the ability to build and maintain workflows (consisting of graphs of data transformation tasks) that can process the flood of digital age data. Currently, however, the specification of ETL workflows is largely manual, human time intensive, and error prone. As requirements become increasingly complex, users must have considerable technical expertise and domain knowledge to build and maintain these workflows. This paper describes a domain-specific modeling approach to automate the composition of data processing workflows. A high-level domain-specific language is used to assertion ally express the desired results of a workflow, from which the composition of the procedural workflow satisfying these goal statements can be generated. This problem solving approach results in an intuitive interface that is usable even by casual users for the rapid composition of workflows that are accurate and error free.},
  doi           = {10.1109/CSE.2013.151},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {business data processing;data handling;graph theory;high level languages;ETL tools;ETL workflows;automatic composition;business intents;data processing workflows;data transformation tasks;digital age data flood;domain knowledge;domain-specific modeling approach;extract-transform-load tools;high-level domain-specific language;human time intensive;technical expertise;Data models;Data processing;Distributed databases;Organizations;Semantics;Standards organizations;content type;domain-specific language;domain-specific modeling;extract-transform-load (ETL);semantic annotation;workflows, rank3},
}

@InProceedings{6418285,
  author    = {M. Biňas and P. Štancel and M. Novák and M. Michalko},
  title     = {Interactive eBook as a supporting tool for education process},
  booktitle = {Emerging eLearning Technologies Applications (ICETA), 2012 IEEE 10th International Conference on},
  year      = {2012},
  pages     = {39-44},
  month     = {Nov},
  abstract  = {This paper is trying to rediscover the usage of eBooks today in the form of a textbook. It describes the concept of electronic textbook, which provides to the reader some interactivity with the goal of improving his study experience. This concept is based on the results of Technical University of Košice.},
  doi       = {10.1109/ICETA.2012.6418285},
  groups    = {IEEEDSL, excluidos},
  keywords  = {computer aided instruction;electronic publishing;interactive systems;Technical University of Košice;education process;electronic textbook;interactive eBook usage;Computers;Consumer electronics;DSL;Educational institutions;Electronic publishing;Smart phones;XML},
}

@InProceedings{6630615,
  author        = {U. Thomas and G. Hirzinger and B. Rumpe and C. Schulze and A. Wortmann},
  title         = {A new skill based robot programming language using UML/P Statecharts},
  booktitle     = {Robotics and Automation (ICRA), 2013 IEEE International Conference on},
  year          = {2013},
  pages         = {461-466},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces the new robot programming language LightRocks(Light Weight Robot Coding for Skills), a domain specific language (DSL) for robot programming. The language offers three different level of abstraction for robot programming. On lowest level skills are coded by domain experts. On a more abstract level these skills are supposed to be combined by shop floor workers or technicians to define tasks. The language is designed to allow as much flexibility as necessary on the lowest level of abstraction and is kept as simple as possible with the more abstract layers. A Statechart like model is used to describe the different levels of detail. For this we apply the UML/P and the language workbench MontiCore. To this end we are able to generate code while hiding controller specific implementation details. In addition the development in LightRocks is supported by a generic graphical editor implemented as an Eclipse plugin.},
  doi           = {10.1109/ICRA.2013.6630615},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1050-4729},
  keywords      = {Unified Modeling Language;formal specification;program compilers;robot programming;DSL;Eclipse plugin;Light Weight Robot Coding for Skills;LightRocks;MontiCore language workbench;UML/P Statecharts;abstract layer;abstraction;code generation;controller specific implementation detail hiding;domain specific language;generic graphical editor;shop floor workers;skill based robot programming language;task definition;technicians;DSL;Robot programming;Robot sensing systems;Unified modeling language, rank3},
}

@InProceedings{7185068,
  author        = {W. T. Sun and A. Girault and G. Delaval},
  title         = {A formal approach for the synthesis and implementation of fault-tolerant industrial embedded systems},
  booktitle     = {10th IEEE International Symposium on Industrial Embedded Systems (SIES)},
  year          = {2015},
  pages         = {1-9},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {We demonstrate the feasibility of a complete workflow to synthesize and implement correct-by-construction fault tolerant distributed embedded systems consisting of real-time periodic tasks. Correct-by-construction is provided by the use of discrete controller synthesis (DCS), a formal method thanks to which we are able to guarantee that the synthesized controlled system guarantees the functionality of its tasks even in the presence of processor failures. For this step, our workflow uses the Heptagon domain specific language and the Sigali DCS tool. The correct implementation of the resulting distributed system is a challenge, all the more since the controller itself must be tolerant to the processor failures. We achieve this step thanks to the libDGALS realtime library (1) to generate the glue code that will migrate the tasks upon processor failures, maintaining their internal state through migration, and (2) to make the synthesized controller itself fault-tolerant.},
  doi           = {10.1109/SIES.2015.7185068},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2150-3109},
  keywords      = {embedded systems;fault tolerant computing;multiprocessing systems;HEPTAGON;SIGALI DCS tool;correct-by-construction embedded systems;discrete controller synthesis;domain specific language;fault tolerant distributed embedded systems;fault-tolerant controller;fault-tolerant industrial embedded systems;formal method;glue code;libDGALS real-time library;migration;multiprocessor distributed system;multitask distributed system;processor failures;real-time periodic tasks;Contracts;Control systems;Energy consumption;Fault tolerance;Fault tolerant systems;Integrated circuit modeling;Process control, rank3},
}

@InProceedings{6686034,
  author        = {O. Díaz and C. Arellano},
  title         = {Integrating Microblogging Into Domain Specific Language Editors},
  booktitle     = {Cloud and Green Computing (CGC), 2013 Third International Conference on},
  year          = {2013},
  pages         = {219-225},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Micro logging is emerging as a suitable means for question-answering in working settings. This leads to different efforts to seamlessly integrate microblogging into the daily-used tools. Specifically, microblogging is being regarded as particularly useful during software development, akin to the tradition of Q&A forums. This paper looks at a particular kind of software: the one being developed by domain experts through the use of Domain Specific Languages (DSLs). We believe this setting is specially amenable to benefit from Q&A microblogging due to inherent limitations of the target audience. This brings the twist of domain specific ness into microblogging, i.e. the Q&A process is now framed by the semantics of the DSL constructs. This permits the introduction of editing assistants that embed domain knowledge about the kind of questions that can be posed, and the way answers can be selected. This opens an opportunity for more focused and assisted microblogging. This paper introduces Crowd Call, an in place microblogging mediator for DSL editors. The aim is to make microblogging a natural gesture during the conception of the DSL expressions, making transparent the interplay between the DSL editor and the Social Networking Services. In addition, Crowd Call can be configured to the constructs and resolution strategies of the DSL at hand so that questions and answers are framed by the semantics of the DSL. The approach is illustrated for three DSLs: the Google Spreadsheets formula language, SQL and Sticklet. We show how Crowd Call-mediated microblogging is tuned for the semantics of each DSL.},
  doi           = {10.1109/CGC.2013.42},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {SQL;question answering (information retrieval);social networking (online);specification languages;text editing;CrowdCall-mediated microblogging;DSL constructs;DSL editors;DSL expressions;DSL semantics;Google Spreadsheets formula language;Q and A microblogging;Q and A process;SQL;Sticklet;domain experts;domain knowledge;domain specific language editors;inplace microblogging mediator;question answering;resolution strategies;social networking services;software development;Communities;Computer languages;DSL;Google;Semantics;Social network services;Software;Domain Specific Languages;Microblogging;Social Networking Services, rank3},
}

@InProceedings{6465139,
  author    = {O. Batarseh and L. F. McGinnis},
  title     = {System modeling in SYsML and system analysis in Arena},
  booktitle = {Proceedings of the 2012 Winter Simulation Conference (WSC)},
  year      = {2012},
  pages     = {1-12},
  month     = {Dec},
  abstract  = {A Model Driven Architecture approach is employed to support the practice of discrete-event simulation. OMG's System Model Language, OMG SysML™, is used to define a platform independent model (PIM) and auto-translate it into an appropriate platform specific model (PSM). The implementation and the nature of the transformation from PIM to PSM are clearly addressed to enable: (i) formal modeling of systems using their own semantics in SysML, (ii) SysML model verification and validation by stakeholders, (iii) automatic translation of system models expressed in SysML into analysis models as the PSM, and (iv) maintainability of this approach to accommodate system changes and extensions very easily. The proposed approach can be used for any analysis tool and application domain. In this paper, we choose to model transaction-based examples elicited from the manufacturing domain in SysML and translate them into Arena™ models using the Atlas Transformation Language.},
  doi       = {10.1109/WSC.2012.6465139},
  groups    = {IEEEDSL, excluidos},
  issn      = {0891-7736},
  keywords  = {discrete event simulation;formal verification;software architecture;specification languages;Arena;Atlas Transformation Language;OMG SysML;PIM;PSM;System Model Language;analysis tool;discrete-event simulation;formal modeling;manufacturing domain;model driven architecture;model transaction;model validation;model verification;platform independent model;platform specific model;semantics;system analysis;system model automatic translation;system modeling;Analytical models;DSL;Libraries;Object oriented modeling;Semantics;Unified modeling language},
}

@InProceedings{7542954,
  author    = {R. Turner and L. Yilmaz and J. Smith and D. Li and S. Chada and A. Smith and A. Tregubov},
  title     = {DATASEM: A simulation suite for SoSE management research},
  booktitle = {2016 11th System of Systems Engineering Conference (SoSE)},
  year      = {2016},
  pages     = {1-6},
  month     = {June},
  abstract  = {The Systems Engineering Research Center (A US DoD University-Affiliated Research Center) has been researching systems engineering and management problems in the evolution of Systems of Systems (SoSs) since 2011. In 2015, an initial Demonstration and Analysis Tool for Adaptive Systems Engineering Management (DATASEM) was developed to investigate how various combinations of organizational structure, work flow, and governance mechanisms affect the visibility, flow, and overall value produced in developing and evolving SoSs. This paper provides an overview of the “as developed” initial system, plans for improving and validating the system, lessons learned and early results.},
  doi       = {10.1109/SYSOSE.2016.7542954},
  groups    = {IEEEDSL, excluidos},
  keywords  = {digital simulation;military computing;organisational aspects;systems engineering;DATASEM;Demonstration and Analysis Tool for Adaptive Systems Engineering Management;SoSE management research;Systems Engineering Research Center;US DoD university-affiliated research center;governance mechanisms;organizational structure;simulation suite;systems of systems;workflow;Adaptation models;Adaptive systems;DSL;Modeling;Organizations;System of systems;System of systems;adaptive;agile;kanban;lean;management simulation;scheduling;software engineering;systems engineering;value-based},
}

@InProceedings{6613839,
  author    = {P. Mayer and A. Schroeder},
  title     = {Patterns of cross-language linking in java frameworks},
  booktitle = {2013 21st International Conference on Program Comprehension (ICPC)},
  year      = {2013},
  pages     = {113-122},
  month     = {May},
  abstract  = {The term Cross-Language Linking refers to the ability to specify, locate, navigate, and keep intact the connections between artifacts defined in different programming languages used for building one software application. Although understanding cross-language links and keeping them intact during development and maintenance activities is an important productivity issue, there has been little research on understanding the characteristics of such connections. We have thus built a theory from case studies, specifically, three theory-selected Java cross-language frameworks, each of which links artifacts written in the Java programming language to artifacts written in a declarative, framework-specific domain specific language. Our main contribution is to identify, from these experiences, common patterns of cross-language linking in the domain of Java frameworks with DSLs, which besides their informative nature can also be seen as requirements for designing and building a linking language and tooling infrastructure.},
  doi       = {10.1109/ICPC.2013.6613839},
  groups    = {IEEEDSML, excluidos},
  issn      = {1092-8138},
  keywords  = {Java;software maintenance;DSL;Java frameworks;cross-language linking;programming languages;software application;software development;software maintenance;Atmospheric modeling;Frequency control;Springs;Cross-language;artifact linking;case study;language design;patterns;semantic models},
}

@InProceedings{6889947,
  author        = {A. Melingui and R. Merzouki and J. B. Mbede and C. Escande and B. Daachi and N. Benoudjit},
  title         = {Qualitative approach for inverse kinematic modeling of a Compact Bionic Handling Assistant trunk},
  booktitle     = {2014 International Joint Conference on Neural Networks (IJCNN)},
  year          = {2014},
  pages         = {754-761},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Compact Bionic Handling Assistant (CBHA) is a continuum manipulator, with pneumatic-based actuation and compliant gripper. This bionic arm is attached to a mobile robot named Robotino. Inspired by the elephant's trunk, it can reproduce biological behaviors of trunks, tentacles, or snakes. Unlike rigid link robot manipulators, the development of high performance control algorithm of continuum robot manipulators remains a challenge, particularly due to their complex mechanical design, hyper-redundancy and presence of uncertainties. Numerous studies have been investigated for modeling of such complex systems. Such continuum robots, like the CBHA present a set of nonlinearities and uncertainties, making difficult to build an accurate analytical model, which can be used for control strategies development. Hence, learning approach becomes a suitable tool in such scenarios in order to capture un-modeled nonlinear behaviors of the continuous robots. In this paper, we present a qualitative modeling approach, based on neuronal model of the inverse kinematic of CBHA. A penalty term constraint is added to the inverse objective function into Distal Supervised Learning (DSL) scheme to select one particular inverse model from the redundancy manifold. The inverse kinematic neuronal model is validated by conducting a real-time implementation on a CBHA trunk.},
  doi           = {10.1109/IJCNN.2014.6889947},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {2161-4393},
  keywords      = {biocybernetics;learning (artificial intelligence);manipulator kinematics;mobile robots;pneumatic systems;CBHA;DSL scheme;Robotino;compact bionic handling assistant trunk;compliant gripper;continuum robot manipulators;distal supervised learning;inverse kinematic;inverse kinematic modeling;inverse objective function;learning approach;mobile robot;pneumatic based actuation;qualitative approach;rigid link robot manipulators;unmodeled nonlinear behaviors;Biological neural networks;DSL;Kinematics;Manipulators;Training, rank3},
}

@InProceedings{6645255,
  author        = {D. Asenov and P. Müller},
  title         = {Customizing the visualization and interaction for embedded domain-specific languages in a structured editor},
  booktitle     = {2013 IEEE Symposium on Visual Languages and Human Centric Computing},
  year          = {2013},
  pages         = {127-130},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Large software projects are often based on libraries that provide abstractions for a particular domain such as writing database queries, staging, or constraint solving. The API provided by such a library can be considered a domain-specific language within the implementation language of the library, a so-called internal or embedded domain-specific language (eDSL). Embedding a DSL leverages the tool infrastructure of the host language, but also restricts the syntax and IDE support to that of the host language. This restriction prevents programmers from using convenient specialized notations and, thus, has a negative effect on their productivity. To address this problem, we outline concepts for a structured code editor that enable developers of eDSLs to customize how eDSL code is rendered and what interactions are available. We demonstrate the benefits of our approach by customizing a structured editor for the .NET Code Contracts API. Our prototype shows in particular that we can customize many aspects of visualization and interaction with little effort.},
  doi           = {10.1109/VLHCC.2013.6645255},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1943-6092},
  keywords      = {application program interfaces;embedded systems;programming languages;visual programming;.NET code contracts API;IDE;convenient specialized notations;eDSL code;editor customization;embedded domain-specific languages;internal domain-specific language;large software projects;structured code editor;visual programming;Context;Contracts;DSL;Libraries;Prototypes;Syntactics;Visualization;editor customization;embedded domain-specific languages;human-computer interaction;programming environments;structured editors;visual programming, rank3},
}

@InProceedings{6569869,
  author        = {N. Jindal and V. Lotrich and E. Deumens and B. A. Sanders},
  title         = {SIPMaP: A Tool for Modeling Irregular Parallel Computations in the Super Instruction Architecture},
  booktitle     = {Parallel Distributed Processing (IPDPS), 2013 IEEE 27th International Symposium on},
  year          = {2013},
  pages         = {874-884},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Performance modeling is becoming an increasingly important part of the parallel application development process, particularly for expensive computations that will be run on very high-end systems where resources are scarce. We describe a performance modeling tool SIPMaP (Super Instruction Processor Modeling and Prediction) developed for the Super-Instruction Architecture (SIA). The SIA is designed for applications where the dominant data structures are large multi-dimensional arrays and it comprises a DSL, the Super-Instruction Assembly Language (SIAL) that supports expressing algorithms in terms of blocks (tiles), and its runtime system Super Instruction Processor (SIP) that manages distribution and disk storage of the arrays. SIPMaP generates performance models from the SIAL source code. In comparison with many applications where useful performance models have been developed and reported, these programs are irregular and have other difficult to model characteristics such as extensive overlapping of communication and computation.},
  doi           = {10.1109/IPDPS.2013.35},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1530-2075},
  keywords      = {assembly language;data structures;parallel processing;software performance evaluation;DSL;SIA;SIAL;SIPMaP;data structures;high-end systems;irregular parallel computations;performance modeling;super instruction assembly language;super instruction processor modeling and prediction;super-instruction architecture;Arrays;Computational modeling;Data models;Indexes;Predictive models;Runtime;Servers;Domain Specific Language;High Performance Computing;Performance Modeling, rank3},
}

@InProceedings{7160285,
  author        = {J. Opiła},
  title         = {Prototyping of visualization styles of 3D scalar fields using POV-Ray rendering engine},
  booktitle     = {Information and Communication Technology, Electronics and Microelectronics (MIPRO), 2015 38th International Convention on},
  year          = {2015},
  pages         = {312-317},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {There is a persistent quest for novel methods of visualization in order to get insight into complex phenomena in scientific domains as various as physics, biomedicine or economics. Research teams involved achieved excellent results, however some problems with elaboration of novel visualization styles connected with flexibility of the software used and quality of the final images still persist. In the paper results of inspection of four visualization styles of 3D static scalar field employing POVRay ray-tracing engine are discussed, i.e. equipotential surface method using direct implementation of isosurface{} object, cellular trilinear interpolation approach, application of texture and eventually pseudo-particles design. All styles presented have been tested for hybrid visualizations and compared concerning computing time, informativeness and general appearance. It is shown in the work that Scene Description Language (SDL), domain specific language implemented in POV-Ray is flexible enough to use it as a tool for fast prototyping of novel visualization techniques. Visualizations discussed in the paper were computed using selected components of API of ScPovPlot3D, i.e. templates written in the SDL language.},
  doi           = {10.1109/MIPRO.2015.7160285},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {application program interfaces;data visualisation;rendering (computer graphics);3D static scalar field;API;POV-ray rendering engine;SDL language;ScPovPlot3D;biomedicine;cellular trilinear interpolation approach;complex phenomena;computing time;domain specific language;economics;general appearance;hybrid visualizations;informativeness;inspection;isosurface{} object;physics;pseudo-particles design;scene description language;texture design;visualization styles;Electric potential;Engines;Interpolation;Isosurfaces;Software;Three-dimensional displays;POVRay;ScPovPlot3D;pseudo-particles;scalar field visualization;visual data analysis, rank3},
}

@InProceedings{6698124,
  author        = {F. S. Farias and G. S. Borges and W. B. Monteiro and D. L. L. Silva and J. C. W. A. Costa},
  title         = {Noise estimation in DSL systems using linear regression},
  booktitle     = {2013 International Conference on Advanced Technologies for Communications (ATC 2013)},
  year          = {2013},
  pages         = {291-294},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {The Digital Subscriber Line (DSL) systems performance tightly depends on noise interference. The users (lines) in the binder create mutual interference (crosstalk), therefore decreasing the rates of all users. Crosstalk noise is more predominant in DSL and its major performance bottleneck is to limit high-speed data rate. This study proposes a new real-time monitoring methodology for noise estimation based on Management Information Base (MIB) metrics. Linear regression is used for fitting, in which input parameters are MIBs and the output is the estimated noise power. The results confirm the possibility of estimating noise with a general equation. Moreover, it is showing the result improvement if a Loop Topology Identification tool is used as prior knowledge.},
  doi           = {10.1109/ATC.2013.6698124},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {2162-1020},
  keywords      = {crosstalk;digital subscriber lines;regression analysis;DSL systems;MIB metrics;crosstalk noise;digital subscriber line;linear regression;loop topology identification tool;management information base;mutual interference;noise estimation;noise interference;Crosstalk;DSL;Estimation;Linear regression;Measurement;Noise;Real-time systems;Noise;backhaul;estimation;linear regression;monitoring;network measurement;real time systems, rank3},
}

@InProceedings{6354323,
  author    = {V. Djukić and I. Luković and A. Popović and V. Ivančević},
  title     = {Using action reports for testing meta-models, models, generators and target interpreter in domain-specific modeling},
  booktitle = {Computer Science and Information Systems (FedCSIS), 2012 Federated Conference on},
  year      = {2012},
  pages     = {1365-1372},
  month     = {Sept},
  abstract  = {In this paper, we present an approach to testing of models and generated code as well as of target interpreters that relies on the use of modeling tools and model transformation languages. When compared to the existing Model Driven Development (MDD) approaches and tools supporting Domain Specific Modeling (DSM), contributions of our research include: (i) introduction of action reports, which allow semantic actions on elements of a graphical interface for modeling; (ii) creation of recommendations and of the interface for integrating modeling tools with applications; and (iii) construction of a language for the description of the structure of user controls as well as construction of a component for embedding such controls into modeling and meta-modeling tools. The basic idea behind the approach is to use a transformation language to construct complex objects and applications as well as specify operations on complex objects and the interface. In this manner, we not only generate the target platform code from the select domain-specific graphical language (DSGL) models but also directly use these models and appropriate tools as client applications. The applicability of action reports is demonstrated in the examples concerning validation of document models and their generators.},
  groups    = {IEEEDSL, excluidos},
  keywords  = {graphical user interfaces;program compilers;program interpreters;program testing;program verification;software tools;specification languages;visual languages;DSGL model;action reports;code generation;document model validation;domain-specific graphical language model;domain-specific modeling;graphical interface;meta-modeling tools;model driven development;model testing;model transformation languages;modeling tools;semantic actions;target interpreter;user controls;DSL;Debugging;Generators;Software;Synchronization;Testing;Unified modeling language},
}

@InProceedings{6404251,
  author    = {Pham Van Huong and Nguyen Ngoc Binh},
  title     = {An approach to design embedded systems by multi-objective optimization},
  booktitle = {Advanced Technologies for Communications (ATC), 2012 International Conference on},
  year      = {2012},
  pages     = {165-169},
  month     = {Oct},
  abstract  = {Embedded system design and optimization play an important role in the development trend of embedded technology. This paper presents a new approach to design and optimize embedded systems in the design phase based on Pareto multi-objective optimization. We defined two Domain Specific Languages and developed the framework that is to design the architecture model and the component diagram of embedded systems. And we integrated the code generation technology called Text Template Transformation Toolkit to this framework to generate parameters from models automatically. Then we also do multi-objective optimization to select the best trade-off configuration of the embedded system architecture and the best hardware-software partition based on the Pareto principle and Genetic Algorithm.},
  doi       = {10.1109/ATC.2012.6404251},
  groups    = {IEEEDSML, excluidos},
  issn      = {2162-1020},
  keywords  = {Pareto optimisation;Unified Modeling Language;embedded systems;genetic algorithms;program compilers;software architecture;software tools;text analysis;Pareto multiobjective optimization;Pareto principle;architecture model;code generation technology;design embedded systems;domain specific languages;embedded system architecture;embedded system design;embedded system optimize;embedded technology;genetic algorithm;hardware-software partition;text template transformation toolkit;DSL;Embedded systems;Genetic algorithms;Linear programming;Optimization;Unified modeling language;DSL - Domain Specific Language;Embedded system;GA - Genetic Algorithm;Pareto principle;T4 - Text Template Transformation Toolkit;embedded system design;hardware-software partitioning;multi-objective optimization},
}

@InProceedings{7529871,
  author        = {G. C. Durelli and F. Spada and C. Pilato and M. D. Santambrogio},
  title         = {Scala-Based Domain-Specific Language for Creating Accelerator-Based SoCs},
  booktitle     = {2016 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)},
  year          = {2016},
  pages         = {225-232},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Nowadays, thanks to technology miniaturization and industrial standards, it is possible to create System-on-Chip (SoC) architectures featuring a combination of many components, like processor cores and specialized hardware accelerators. However, designing an SoC to accelerate an embedded application is particularly complex. After decomposing this application into tasks and assigning each of them to a processing element, the designer must create the required hardware components and integrate them into the final system. Currently, this process is not well supported by commercial tool flows and has to be manually performed. This is time consuming and error prone. This paper proposes a Domain-Specific Language (DSL) based on Scala to specify the architecture of accelerator-based SoCs. We leverage this DSL to coordinate commercial High-Level Synthesis (HLS) tools in order to create the corresponding accelerators with proper standard interfaces for system-level integration.},
  doi           = {10.1109/IPDPSW.2016.169},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {high level synthesis;integrated circuit design;specification languages;system-on-chip;DSL;HLS tools;Scala;SoC architectures;SoC design;accelerator-based SoC;embedded application;hardware accelerators;hardware components;high-level synthesis tools;industrial standards;processor cores;scala-based domain-specific language;system-level integration;system-on-chip architectures;technology miniaturization;Acceleration;Computer architecture;DSL;Hardware;Image edge detection;Protocols;Software, rank3},
}

@InProceedings{6845589,
  author    = {Zhai Xiaoshuai and Tong Chonglou},
  title     = {Research of NURBS curve interpolation algorithm},
  booktitle = {Electronics, Computer and Applications, 2014 IEEE Workshop on},
  year      = {2014},
  pages     = {186-189},
  month     = {May},
  abstract  = {This paper presents a real-time interpolation algorithm of three NURBS curve, which is based on simple NURBS curve interpolation algorithm. The paper proposes a simple and fast interpolation algorithm. Using the matrix representation of the NURBS curve, the whole interpolation process is divided into interpolated pretreatment and real-time interpolation. In the interpolated pretreatment, the system will achieve a large amount of calculation and the result of pretreatment directly apply to the real-time interpolation, which makes interpolation algorithm fulfill the real-time of NURBS curve's interpolation. Besides, the necessary contour error control is given. The NURBS curve interpolation achieved the machining velocity adapting the tool path.},
  doi       = {10.1109/IWECA.2014.6845589},
  groups    = {IEEEDSL, excluidos},
  keywords  = {interpolation;matrix algebra;splines (mathematics);NURBS curve interpolation algorithm;contour error control;fast interpolation algorithm;machining velocity;matrix representation;real-time interpolation algorithm;Computer aided manufacturing;DSL;Interpolation;Machining;Splines (mathematics);Surface reconstruction;Surface topography;NURBS curve;error control;interpolated pretreatment;interpolation},
}

@InProceedings{6341588,
  author        = {M. F. Niazi and T. Seceleanu and H. Tenhunen},
  title         = {Towards Reuse-Based Development for the On-chip Distributed SoC Architecture},
  booktitle     = {Computer Software and Applications Conference Workshops (COMPSACW), 2012 IEEE 36th Annual},
  year          = {2012},
  pages         = {278-283},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {The development of a reusable library of components for a multi-core segmented bus platform, the SegBus, is presented. The library is based on a plug-in that we develop and deploy within a modeling tool which eventually used by the SegBus DSL while developing applications targeting the SegBus platform. The steps required in building the library and embed it into a plug-in are discussed together with the certain use of it in our design methodology.},
  doi           = {10.1109/COMPSACW.2012.58},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  keywords      = {multiprocessing systems;system buses;system-on-chip;SegBus DSL;multicore segmented bus platform;on-chip distributed SoC architecture;reusable library;reuse-based development;Analytical models;DSL;Design methodology;Libraries;Solid modeling;Unified modeling language;XML;System-on-Chip;UML;embedded systems;modeling;reusability, rank3},
}

@InProceedings{6892473,
  author    = {S. Foster and A. Miyazawa and J. Woodcock and A. Cavalcanti and J. Fitzgerald and P. G. Larsen},
  title     = {An approach for managing semantic heterogeneity in Systems of Systems Engineering},
  booktitle = {System of Systems Engineering (SOSE), 2014 9th International Conference on},
  year      = {2014},
  pages     = {113-118},
  month     = {June},
  abstract  = {Semantic heterogeneity is a significant challenge to integration in Systems of Systems Engineering (SoSE) due the large variety of languages, domains and tools which are used in their construction. In this paper we envision a strategy for managing this heterogeneity by decomposing domain specific languages into their “building block” theories which can be independently analysed, and used as a basis for linking with similar notations. This provides a systematic approach to building a tool-chain which integrates the different theories, methods and tools used in SoSE. Our approach has been piloted on the development of theories enabling machine-supported analysis of SysML models of SoSs. We conclude that the approach has further potential and identify lines of future research, notably in techniques for handling mixed discrete and continuous behaviour, timebands, mobility and model integration in SoSE.},
  doi       = {10.1109/SYSOSE.2014.6892473},
  groups    = {SCOPUS, excluidos},
  keywords  = {specification languages;systems engineering;theorem proving;SoSE;SoSs;SysML models;building block theory;domain specific languages;machine-supported analysis;semantic heterogeneity;systems of systems engineering;Analytical models;DSL;Mathematical model;Semantics;Unified modeling language;integration;modelling;systems of systems;theorem proving;tool-chain;unifying theories},
}

@InProceedings{7292577,
  author    = {E. Loiseau and P. Laforcade and S. Iksal},
  title     = {A meta-modeling approach for extending the instructional design semantics of Learning Management Systems},
  booktitle = {Software Paradigm Trends (ICSOFT-PT), 2014 9th International Conference on},
  year      = {2014},
  pages     = {72-80},
  month     = {Aug},
  abstract  = {Nowadays Learning Management Systems (LMS) are not restricted to distant learning. Nevertheless, the pedagogical expressiveness of courses designed by teachers is strongly dependent on their knowledge and level of expertise on the LMS they use. The GraphiT project aims to help teachers design pedagogically sound and technically executable learning designs. To this end, we propose to support teachers by providing them with an LMS-specific Visual Instructional Design Language, according to a Domain Specific Modeling approach and tooling. This paper focuses on the abstract syntax of such language. We propose a specific LMS-centered approach for raising the pedagogical expressiveness of their implicit learning design semantics. We discussed how the LMS low-level parameterisations could be abstracted in order to build higher-level building blocks. Based on the Moodle LMS, we present and verify our meta-modeling approach by formalising the abstract syntax of a Moodle-dedicated instructional design language.},
  groups    = {IEEEDSML, excluidos},
  keywords  = {Context;Learning management systems;Least squares approximations;Metamodeling;Semantics;Syntactics;Visualization;Composition;Domain Specific Language;Meta-Modeling},
}

@InProceedings{7490558,
  author    = {S. Jäger and R. Maschotta and T. Jungebloud and A. Wichmann and A. Zimmermann},
  title     = {Creation of domain-specific languages for executable system models with the Eclipse Modeling Project},
  booktitle = {2016 Annual IEEE Systems Conference (SysCon)},
  year      = {2016},
  pages     = {1-8},
  month     = {April},
  abstract  = {Model-based systems engineering is an increasingly accepted method supporting design decisions. System engineers or modelers have the choice between tools and system description languages that are either abstract and generic or specifically adapted to their domain. The latter approach is easier and more efficient but restrictive. The success of this approach strongly relies on the support of domain-specific tools. The design or adaptation of such software tools and their underlying conceptual models is a complex task, which can be supported by a model-based approach on the meta model level itself. This paper proposes a workflow for designing complex systems by using domain-specific models which may combine structural and behavioral aspects. It is loosely based on the Object Management Group's Model Driven Architecture approach. For this purpose we use the Eclipse Modeling Framework and Eclipse Sirius Project, which are part of the Eclipse Modeling Project. The paper describes the complete workflow based on a simple real-life system example to clarify our approach. It covering the design of the domain-specific language, semi-automatic model editor generation, modeling the system, and finally executing a simulation of its behavior.},
  doi       = {10.1109/SYSCON.2016.7490558},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  keywords  = {SysML;software architecture;software tools;specification languages;complex system design;design decisions;domain-specific languages;eclipse Sirius project;eclipse modeling project;executable system models;meta model level;model-based systems engineering;object management group model driven architecture approach;semiautomatic model editor generation;software tools;system description languages;Adaptation models;Analytical models;Biological system modeling;Software;Systems modeling;Unified modeling language;Eclipse Modeling Project;Ecore;Model-based system design;Sirius project;domain-specific language;meta model;simulation},
}

@InProceedings{7158502,
  author        = {A. Caracciolo and M. F. Lungu and O. Nierstrasz},
  title         = {A Unified Approach to Architecture Conformance Checking},
  booktitle     = {Software Architecture (WICSA), 2015 12th Working IEEE/IFIP Conference on},
  year          = {2015},
  pages         = {41-50},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Software erosion can be controlled by periodically checking for consistency between the de facto architecture and its theoretical counterpart. Studies show that this process is often not automated and that developers still rely heavily on manual reviews, despite the availability of a large number of tools. This is partially due to the high cost involved in setting up and maintaining tool-specific and incompatible test specifications that replicate otherwise documented invariants. To reduce this cost, our approach consists in unifying the functionality provided by existing tools under the umbrella of a common business-readable DSL. By using a declarative language, we are able to write tool-agnostic rules that are simple enough to be understood by untrained stakeholders and, at the same time, can be interpreted as a rigorous specification for checking architecture conformance.},
  doi           = {10.1109/WICSA.2015.11},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {program testing;software architecture;architecture conformance checking;common business-readable DSL;de facto architecture;declarative language;domain specific language;software erosion;test specifications;tool-agnostic rules;Computer architecture;Concrete;DSL;Manuals;Mathematical model;Monitoring;Software;architecture;conformance checking;erosion, rank3},
}

@InProceedings{7306135,
  author        = {E. F. d. Prado and D. Lucrédio},
  title         = {A Flexible Model-Driven Game Development Approach},
  booktitle     = {Components, Architectures and Reuse Software (SBCARS), 2015 IX Brazilian Symposium on},
  year          = {2015},
  pages         = {130-139},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Game developers are facing an increasing demand for new games every year. Game development tools can be of great help, but require highly specialized professionals. Also, just as any software development effort, game development has some challenges. Model-Driven Game Development (MDGD) is suggested as a means to solve some of these challenges, but with a loss in flexibility. We propose a MDGD approach that combines multiple domain-specific languages (DSLs) with design patterns to provide flexibility and allow generated code to be integrated with manual code. After experimentation, we observed that, with the approach, less experienced developers can create games faster and more easily, and the product of code generation can be customized with manually written code, providing flexibility. However, with MDGD, developers become less familiar with the code, making manual codification more difficult.},
  doi           = {10.1109/SBCARS.2015.24},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {computer games;program compilers;software engineering;MDGD approach;code generation;flexible model-driven game development approach;game development tool;multiple DSL;multiple domain-specific language;software development;Cameras;DSL;Engines;Games;Prototypes;Software;Vehicles;Code Generation;Model-Driven Game Development, rank3},
}

@InProceedings{7092405,
  author        = {J. Deantoni and I. P. Diallo and C. Teodorov and J. Champeau and B. Combemale},
  title         = {Towards a meta-language for the concurrency concern in DSLs},
  booktitle     = {2015 Design, Automation Test in Europe Conference Exhibition (DATE)},
  year          = {2015},
  pages         = {313-316},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Concurrency is of primary interest in the development of complex software-intensive systems, as well as the deployment on modern platforms. Furthermore, Domain-Specific Languages (DSLs) are increasingly used in industrial processes to separate and abstract the various concerns of complex systems. However, reifying the definition of the DSL concurrency remains a challenge. This not only prevents leveraging the concurrency concern of a particular domain or platform, but it also hinders: a) the development of a complete understanding of the DSL semantics; b) the effectiveness of concurrency-aware analysis techniques; c) the analysis of the deployment on parallel architectures. In this paper, we introduce the key ideas leading toward MoCCML, a dedicated meta-language for formally specifying the concurrency concern within the definition of a DSL. The concurrency constraints can reflect the knowledge in a particular domain, but also the constraints of a particular platform. MoCCML comes with a complete language workbench to help a DSL designer in the definition of the concurrency directly within the concepts of the DSL itself, and a generic workbench to simulate and analyze any model conforming to this DSL. MoCCML is illustrated on the definition of an lightweight extension of SDF (Synchronous Data Flow [1]).},
  doi           = {10.7873/DATE.2015.1052},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1530-1591},
  keywords      = {concurrency (computers);formal specification;parallel architectures;production engineering computing;specification languages;DSL semantics;MoCCML;SDF;complex software-intensive systems;concurrency concern;concurrency constraints;concurrency-aware analysis techniques;dedicated meta-language;domain-specific languages;formal specification;industrial processes;parallel architectures;synchronous data flow;Analytical models;Automata;Computational modeling;Concurrent computing;DSL;Semantics;Syntactics, rank3},
}

@InProceedings{7005348,
  author        = {M. Moser and M. Pfeiffer and J. Pichler},
  title         = {A novel domain-specific language for the robot welding automation domain},
  booktitle     = {Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)},
  year          = {2014},
  pages         = {1-6},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Implementation, fault analysis, and maintenance of robot welding automation solutions are traditionally restricted to professional software developers only. Program code is written in a general purpose programming language and, hence, unmanageable by other stakeholders with limited or no programming skills. To tackle this problem we have implemented a domain-specific language (DSL) specifically designed to the domain of robot welding automation and to be intuitively manageable by all stakeholders. The created DSL supports a textual and visual notation and is embedded within a full featured tool chain which let our customer fully replace the creation and maintenance of welding automation solutions by our DSL-based development approach.},
  doi           = {10.1109/ETFA.2014.7005348},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1946-0740},
  keywords      = {programming languages;robotic welding;DSL-based development approach;domain-specific language;fault analysis;program code;programming language;robot welding automation;stakeholders;Automation;DSL;Programming;Robot control;Visualization;Welding;Domain-Specific Language;Industrial Automation, rank3},
}

@InProceedings{7527746,
  author    = {M. Bar-Sinai and L. Sweeney and M. Crosas},
  title     = {DataTags, Data Handling Policy Spaces and the Tags Language},
  booktitle = {2016 IEEE Security and Privacy Workshops (SPW)},
  year      = {2016},
  pages     = {1-8},
  month     = {May},
  abstract  = {Widespread sharing of scientific datasets holds great promise for new scientific discoveries and great risks for personal privacy. Dataset handling policies play the critical role of balancing privacy risks and scientific value. We propose an extensible, formal, theoretical model for dataset handling policies. We define binary operators for policy composition and for comparing policy strictness, such that propositions like "this policy is stricter than that policy" can be formally phrased. Using this model, The policies are described in a machine-executable and human-readable way. We further present the Tags programming language and toolset, created especially for working with the proposed model. Tags allows composing interactive, friendly questionnaires which, when given a dataset, can suggest a data handling policy that follows legal and technical guidelines. Currently, creating such a policy is a manual process requiring access to legal and technical experts, which are not always available. We present some of Tags' tools, such as interview systems, visualizers, development environment, and questionnaire inspectors. Finally, we discuss methodologies for questionnaire development. Data for this paper include a questionnaire for suggesting a HIPAA compliant data handling policy, and formal description of the set of data tags proposed by the authors in a recent paper.},
  doi       = {10.1109/SPW.2016.11},
  groups    = {IEEEDSL, excluidos},
  keywords  = {data handling;data privacy;programming languages;DataTags;Tags programming language;data handling policy space;privacy risk;Cryptography;Data handling;Data privacy;Interviews;Law;DSL;data handling policy;data repository;datatags;legal modeling},
}

@InProceedings{7207420,
  author        = {O. Günalp and C. Escoffier and P. Lalanda},
  title         = {Rondo: A Tool Suite for Continuous Deployment in Dynamic Environments},
  booktitle     = {Services Computing (SCC), 2015 IEEE International Conference on},
  year          = {2015},
  pages         = {720-727},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Driven by the emergence of new computing environments, dynamically evolving software systems makes it impossible for developers to deploy software with human-centric processes. Instead, there is an increasing need for automation tools that continuously deploy software into execution, in order to push updates or adapt existing software regarding contextual and business changes. Existing solutions fall short on providing fault-tolerant, reproducible deployments that can scale on heterogeneous environments. In this paper we present Rondo, a tool suite that enables continuous deployment for dynamic, service-oriented applications. At the center of these tools, we propose a deterministic and idem potent deployment process. We provide with Rondo a deployment manager that implements this process and capable of conducting deployments and continuously adapting applications according to the changes in the current target platform. The tool suite also includes a domain-specific language for describing deployment requests. We validate our approach in multiple projects, for provisioning the platform as well as for installing applications and continuous reconfigurations.},
  doi           = {10.1109/SCC.2015.102},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {software fault tolerance;software tools;Rondo;application installing;automation tools;computing environments;continuous deployment;deployment requests;deterministic process;domain-specific language;dynamic application;dynamic environments;fault-tolerant deployment;human-centric processes;idem potent deployment process;reproducible deployment;service-oriented application;software systems;tool suite;Assembly;Computer architecture;Context;DSL;Program processors;Runtime;Continuous Deployment;Dynamism;Service-Oriented Computing, rank3},
}

@InProceedings{6903184,
  author        = {N. Tcholtchev and G. Dudeck and M. Wagner and C. Hein and A. Prakash and T. Ritter},
  title         = {Integrating the Modelica DSL into a Platform for Model-Based Tool Interoperability},
  booktitle     = {Computer Software and Applications Conference Workshops (COMPSACW), 2014 IEEE 38th International},
  year          = {2014},
  pages         = {528-534},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Domain Specific Languages (DSL) are an important concept that is used in industry, in order to enable the fast and cost efficient design of specific functions/components, and/or to target particular aspects of the systems' development and operation. In the current paper, we describe our experiences on the integration of the Modelica DSL into a platform that enables the integration and interoperability of model-based tools across the various phases of the system development process. Thereby, we present our approach, compare different tools which were used, in order to efficiently complete the integration, and finally exemplify the outcome on a case study from the automotive domain.},
  doi           = {10.1109/COMPSACW.2014.88},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  keywords      = {open systems;software engineering;specification languages;Modelica DSL;automotive domain;domain specific languages;model-based tool interoperability;model-based tools;system development process;systems development;systems operation;Adaptation models;DSL;Interoperability;Mathematical model;Object oriented modeling;Unified modeling language;DSL;MDE;Model Bus;Modelica;domain specific languages;model driven engineering;modeling;tool interoperability, rank3},
}

@InProceedings{7121747,
  author    = {M. Timmers and D. Eckard},
  title     = {Copper is the new black for ultra broadband networks},
  booktitle = {Optical Fiber Communications Conference and Exhibition (OFC), 2015},
  year      = {2015},
  pages     = {1-3},
  month     = {March},
  abstract  = {G.fast, the newest ITU protocol for copper access, will deliver anywhere from hundreds of Mb/s to close to 1Gb/s. Operators have an additional tool at their disposal to provide fiber like speeds over existing copper.},
  groups    = {IEEEDSML, excluidos},
  keywords  = {broadband networks;optical fibre subscriber loops;protocols;G.fast;ITU protocol;copper access;fiber-to-the-home;ultra broadband networks;Broadband communication;Copper;DSL;Optical fiber cables;Optical fiber devices;Optical fiber networks;Optical fiber subscriber loops},
}

@InProceedings{7577380,
  author    = {N. Kapre and S. Bayliss},
  title     = {Survey of domain-specific languages for FPGA computing},
  booktitle = {2016 26th International Conference on Field Programmable Logic and Applications (FPL)},
  year      = {2016},
  pages     = {1-12},
  month     = {Aug},
  abstract  = {High-performance FPGA programming has typically been the exclusive domain of a small band of specialized hardware developers. They are capable of reasoning about implementation concerns at the register-transfer level (RTL) which is analogous to assembly-level programming in software. Sometimes these developers are required to push further down to manage even lower levels of abstraction closer to physical aspects of the design such as detailed layout to meet critical design constraints. In contrast, software programmers have long since moved away from textual assembly-level programming towards relying on graphical integrated development environments (IDEs), high-level compilers, smart static analysis tools and runtime systems that optimize, manage and assist the program development tasks. Domain-specific languages (DSLs) can bridge this productivity gap by providing higher levels of abstraction in environments close to the domain of application expert. DSLs carefully limit the set of programming constructs to minimize programmer mistakes while also enabling a rich set of domain-specific optimizations and program transformations. With a large number of DSLs to choose from, an inexperienced FPGA user may be confused about how to select an appropriate one for the intended domain. In this paper, we review a combination of legacy and state-of-the-art DSLs available for FPGA development and provide a taxonomy and classification to guide selection and correct use of the framework.},
  doi       = {10.1109/FPL.2016.7577380},
  groups    = {SCOPUS, Inclusos},
  keywords  = {electronic engineering computing;field programmable gate arrays;parallel programming;program compilers;program diagnostics;programming environments;software engineering;DSL;FPGA computing;RTL;domain-specific languages;domain-specific optimizations;graphical IDE;graphical integrated development environments;high-level compilers;high-performance FPGA programming;productivity gap;program transformations;register-transfer level;runtime systems;smart static analysis tools;textual assembly-level programming;DSL;Field programmable gate arrays;Hardware;Hardware design languages;Productivity;Programming;Software},
}

@InProceedings{6240414,
  author    = {M. J. Villanueva},
  title     = {An agile model-driven approach for simplifying the development of genetic analysis tools},
  booktitle = {2012 Sixth International Conference on Research Challenges in Information Science (RCIS)},
  year      = {2012},
  pages     = {1-6},
  month     = {May},
  abstract  = {In the last few years, genetic researchers have started to assemble their own genetic analysis tools by reusing and combining available software. Because software development environments are not widely accepted in the Genetics community, geneticists become software developers, and they are force to integrate different solutions and to face programming issues without the required knowledge. A solution to this issue lives in the simplification of the tailored tool development. Geneticists demand development environments where: 1) the required data can be expressed according to their knowledge, and 2) the most common functionality can be easily integrated without programming skills. This PhD work proposes the use of the model-driven paradigm for addressing both concerns and presents an agile way for developing genetic analysis tools.},
  doi       = {10.1109/RCIS.2012.6240414},
  groups    = {SCOPUS, excluidos},
  issn      = {2151-1349},
  keywords  = {bioinformatics;genetics;programming environments;software prototyping;software reusability;software tools;PhD work;agile model-driven approach;genetic analysis tool development;geneticists;genetics community;model-driven paradigm;programming issues;software development environments;software reusability;tailored tool development;Bioinformatics;DNA;DSL;Genomics;Programming;Software;Bioinformatics;Domain-specific languages;Model-driven development},
}

@Article{6200023,
  author        = {V. Garcia-Diaz and B. C. P. G-Bustelo and O. Sanjuan-Martinez and E. R. Nunez Valdez and J. M. C. Lovelle},
  title         = {MCTest: towards an improvement of match algorithms for models},
  journal       = {IET Software},
  year          = {2012},
  volume        = {6},
  number        = {2},
  pages         = {127-139},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Owing to the increasing importance of model-driven engineering (MDE) and the changes experienced by software systems over their life cycle, the calculation, representation and visualisation of matches and differences between two different versions of the same model are becoming more necessary and useful. This study shows the need for improvement in the algorithms for calculating the relationships between models and presents a tool to test different implementations, thus reducing the effort required to measure, compare or create new algorithms. To demonstrate the need for improvement and the framework developed, the authors have created different models that conform to the metamodel of a domain-specific language. Subsequently, the authors compared these models using the algorithms of the eclipse modelling framework (EMF) Compare tool, part of the eclipse modeling project, which is the framework of reference for MDE. Thus, in the case study, the authors tool is used to measure the quality of the comparisons performed by EMF Compare.},
  doi           = {10.1049/iet-sen.2011.0040},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1751-8806},
  keywords      = {data structures;data visualisation;software engineering;specification languages;EMF Compare tool;MCTest;eclipse modelling framework;match algorithm;match calculation;match representation;match visualisation;model-driven engineering;software system, rank3},
}

@InProceedings{6497134,
  author    = {B. Cole and G. Dubos and P. Banazadeh and J. Reh and K. Case and Y. F. Wang and S. Jones and F. Picha},
  title     = {Domain-specific languages and diagram customization for a concurrent engineering environment},
  booktitle = {Aerospace Conference, 2013 IEEE},
  year      = {2013},
  pages     = {1-12},
  month     = {March},
  abstract  = {A major open question for advocates of Model-Based Systems Engineering (MBSE) is the question of how system and subsystem engineers will work together. The Systems Modeling Language (SysML), like any language intended for a large audience, is in tension between the desires for simplicity and for expressiveness. In order to be more expressive, many specialized language elements may be introduced, which will unfortunately make a complete understanding of the language a more daunting task. While this may be acceptable for systems modelers, it will increase the challenge of including subsystem engineers in the modeling effort. One possible answer to this situation is the use of Domain-Specific Languages (DSL), which are fully supported by the Unified Modeling Language (UML). SysML is in fact a DSL for systems engineering. The expressive power of a DSL can be enhanced through the use of diagram customization. Various domains have already developed their own schematic vocabularies. Within the space engineering community, two excellent examples are the propulsion and telecommunication subsystems. A return to simple box-and-line diagrams (e.g., the SysML Internal Block Diagram) are in many ways a step backward. In order allow subsystem engineers to contribute directly to the model, it is necessary to make a system modeling tool at least approximate in accessibility to drawing tools like Microsoft PowerPoint and Visio. The challenge is made more extreme in a concurrent engineering environment, where designs must often be drafted in an hour or two. In the case of the Jet Propulsion Laboratory's Team X concurrent design team, a subsystem is specified using a combination of PowerPoint for drawing and Excel for calculation. A pilot has been undertaken in order to meld the drawing portion and the production of master equipment lists (MELs) via a SysML authoring tool, MagicDraw. Team X currently interacts with its customers in a process of sharing presentations. There are severa- inefficiencies that arise from this situation. The first is that a customer team must wait two weeks to a month (which is 2-4 times the duration of most Team X studies themselves) for a finalized, detailed design description. Another is that this information must be re-entered by hand into the set of engineering artifacts and design tools that the mission concept team uses after a study is complete. Further, there is no persistent connection to Team X or institutionally shared formulation design tools and data after a given study, again reducing the direct reuse of designs created in a Team X study. This paper presents the underpinnings of subsystem DSLs as they were developed for this pilot. This includes specialized semantics for different domains as well as the process by which major categories of objects were derived in support of defining the DSLs. The feedback given to us by the domain experts on usability, along with a pilot study with the partial inclusion of these tools is also discussed.},
  doi       = {10.1109/AERO.2013.6497134},
  groups    = {IEEEDSML, Inclusos},
  issn      = {1095-323X},
  keywords  = {Unified Modeling Language;aerospace propulsion;concurrent engineering;programming language semantics;systems engineering;DSL;Excel;Jet Propulsion Laboratory;MBSE;MEL;MagicDraw;Microsoft PowerPoint;SysML;Team X concurrent design team;UML;Visio;box-and-line diagrams;concurrent engineering environment;diagram customization;domain-specific languages;engineering artifacts;internal block diagram;master equipment lists;model-based systems engineering;propulsion;space engineering community;specialized language elements;specialized semantics;subsystem engineers;systems modeling language;telecommunication subsystems;unified modeling language;Concurrent engineering;Laboratories;Libraries;Propulsion;Servers;Shape;Tin},
}

@InProceedings{7119032,
  author    = {L. Pomante and S. Candia and E. Incerto},
  title     = {A Model-Driven approach for the development of an IDE for Spacecraft on-board software},
  booktitle = {2015 IEEE Aerospace Conference},
  year      = {2015},
  pages     = {1-17},
  month     = {March},
  abstract  = {This paper presents the application of a Model-Driven Engineering (MDE) approach to the aerospace domain. Specifically, it shows the Model-Driven Development (MDD) of an Integrated Development Environment (IDE) for a Domain-Specific Language (DSL) targeted to the achievement of the so called “Spacecraft on-board software flexibility”. In fact, the goal of the presented work has been to deploy a full-featured IDE to be used for the development of the “On-board Command Procedures” (OBCPs). The OBCPs coding is done by using the “OBCP Definition Language” (ODL), specified by Thales Alenia Space Italy (TASI) on the basis of the requirements stated in the “Space Engineering: Spacecraft On-board Control Procedures” ECSS standard (ECSS-E-ST-70-01, 16 April 2010). This standard does not impose specific language syntax but provides the guidelines for its specification. By following such guidelines and by exploiting some MDE technologies and tools, such as Eclipse Modeling Framework (EMF) and Xtext, it has been possible to realize an Eclipse-based IDE able to provide to the ODL developer the entire features essential in a modern environment for software development. The considered features include the “traditional” ones as syntax-highlighting, code-completion, version-control, on-line error-checking, and also “advanced” ones like syntactic validation, semantic validation, and integrated code compilation. Moreover, by means of the adopted MDE approach, a very large part of the IDE code has been automatically generated starting from the Extended Backus-Naur Form (EBNF) specification of the ODL grammar so allowing for the IDE developers to be more focused on validation issues and on the quality of product than on the coding activity. All this has been obtained by following the paradigm “coding equals modeling”, for which each program represents a behavioral model compl- ant to the meta-model specified by the grammar of the language itself. The obtained result is a professional product that satisfies all the expected requirements, but this would be just a starting point since the ultimate goal of this work is to contribute to fostering the adoption of MDE approaches in the spacecraft software domain.},
  doi       = {10.1109/AERO.2015.7119032},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  issn      = {1095-323X},
  keywords  = {aerospace computing;configuration management;program verification;programming environments;software quality;space vehicles;specification languages;DSL;EBNF specification;ECSS standard;ECSS-E-ST-70-01;EMF;Eclipse modeling framework;Eclipse-based IDE;IDE code;IDE development;MDD;MDE approach;MDE technologies;OBCP definition language;ODL;ODL grammar;TASI;Thales Alenia Space Italy;Xtext;aerospace domain;behavioral model;code-completion;coding activity;domain-specific language;extended Backus-Naur form specification;integrated code compilation;integrated development environment;language grammar;language syntax;model-driven engineering approach;on-board command procedures;on-line error-checking;product quality;semantic validation;software development;space engineering;spacecraft on-board software flexibility;spacecraft onboard control procedures;syntactic validation;version-control;Biographies;DSL;Syntactics;Terminology;Unified modeling language},
}

@InProceedings{7027503,
  author        = {N. Ferry and H. Song and A. Rossini and F. Chauvel and A. Solberg},
  title         = {CloudMF: Applying MDE to Tame the Complexity of Managing Multi-cloud Applications},
  booktitle     = {Utility and Cloud Computing (UCC), 2014 IEEE/ACM 7th International Conference on},
  year          = {2014},
  pages         = {269-277},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {The market of cloud computing encompasses an ever-growing number of cloud providers offering a multitude of infrastructure-as-a-service (IaaS) and platform-as-a-service (PaaS) solutions. The heterogeneity of these solutions hinders the proper exploitation of cloud computing since it prevents interoperability and promotes vendor lock-in, which increases the complexity of executing and managing multi-cloud applications (i.e., Applications that can be deployed across multiple cloud infrastructures and platforms). Providers of multi-cloud applications seek to exploit the peculiarities of each cloud solution and to combine the delivery models of IaaS and PaaS in order to optimise performance, availability, and cost. In this paper, we show how the Cloud Modelling Framework leverages upon model-driven engineering to tame this complexity by providing: (i) a tool-supported domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for enacting the provisioning, deployment, and adaptation of these applications.},
  doi           = {10.1109/UCC.2014.36},
  groups        = {IEEEDSML, Duplicados},
  keywords      = {cloud computing;open systems;IaaS;MDE;PaaS;cloud MF;cloud computing;cloud modelling framework;infrastructure-as-a-service;interoperability;model-driven engineering;multicloud applications;platform-as-a-service;tool-supported domain-specific language;Adaptation models;Biological system modeling;Cloud computing;Containers;Engines;Sensors;Syntactics;Cloud ML;Cloud computing;Model-driven engineering;multi-cloud, rank3},
}

@InProceedings{6735827,
  author    = {C. Liu and B. H. Shen and S. Y. Oh and M. Gerla and J. Palsberg and C. Banner and R. Butler},
  title     = {Agnostic Protocol Translation for Cross-Domain Information Sharing},
  booktitle = {MILCOM 2013 - 2013 IEEE Military Communications Conference},
  year      = {2013},
  pages     = {1447-1452},
  month     = {Nov},
  abstract  = {Network translation gateways can provide seamless interoperability among different airborne, ground and maritime domains. Effective interconnection between waveforms and protocols through the gateways requires manual intensive development and specialized protocol expertise. Therefore, enabling building versatile gateways that can effectively translate those protocols across different network domains is of utmost importance to improve system interoperability. High-level domain specific languages have been utilized to support agnostic protocol interoperability. However, protocol-specific knowledge specification, the core of protocol translation, is still left to protocol experts with manual coding without advanced tools in support of simplification, guidance or verification. Such a manual and unsupervised method of generating translation logic is complex, time-consuming and error-prone. In order to overcome these problems with much more productive gateway development, we present a novel, visual protocol-agnostic translation toolkit in this paper. This toolkit offers three advanced features: 1) simple, intuitive visualized specification of protocol-specific knowledge, 2) graph-based translation logic verification, and 3) automatic gateway generation. The first two features have not been addressed in currently available protocol translation solutions.},
  doi       = {10.1109/MILCOM.2013.245},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  issn      = {2155-7578},
  keywords  = {high level languages;internetworking;open systems;protocols;agnostic protocol interoperability;agnostic protocol translation;airborne domains;automatic gateway generation;cross-domain information sharing;graph-based translation logic verification;ground domains;high-level domain specific languages;maritime domains;network translation gateways;protocol-specific knowledge specification;visual protocol-agnostic translation toolkit;DSL;Grammar;Logic gates;Protocols;Semantics;Syntactics;Visualization;automatic translation;cross domain communication;domain specific language;protocol-agnostic translation;system interoperative;visual specificatin},
}

@InProceedings{7018502,
  author        = {K. Jacek and K. Nowakowski and Ż Kamil},
  title         = {Domain-specific languages as tools for teaching 3D graphics},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {498-508},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {Model-driven engineering is constantly gaining importance, expanding to domains varying from the Web to the 3D graphics. Domain-specific languages besides contributing to the development process can be used in a didactic process conducted not only in schools. Thus this paper introduces new domain-specific language and discusses its usage in teaching construction of shaders and materials while working with 3D graphics. It presents the authors stance regarding the usefulness of domain-specific languages in education of 3D graphics development.},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {computer graphics;computer science education;software engineering;specification languages;teaching;3D graphics development education;3D graphics teaching;didactic process;domain-specific languages;materials;model-driven engineering;shaders;DSL;Education;Games;Graphics;Materials;Solid modeling;Three-dimensional displays;3D Graphics;Domain-specific Languages;Model-Driven Engineering;Modeling Shaders;Teaching, rank3},
}

@InProceedings{6275847,
  author        = {Y. Benchaïb and C. Chaudet},
  title         = {Using VIRMANEL and SILUMOD to study protocol for mobile multihop networks},
  booktitle     = {Sensor, Mesh and Ad Hoc Communications and Networks (SECON), 2012 9th Annual IEEE Communications Society Conference on},
  year          = {2012},
  pages         = {76-78},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {In this demonstration, we show how to use a couple of tools we developed, VIRMANEL and SIMULOD, to study how the true implementation of an ad hoc routing protocol behaves under various mobility scenarios. VIRMANEL is a tool that configure virtual machines connections with respect to mobility. It features a GUI to observe the behavior of mobile nodes. SILUMOD is a domain-specific language that allows to describe mobility models. It defines the positions of the trajectory of moving through the appropriate keywords. These tools, published under the LGPL license, are used here to study the Linux implementation of OLSR.},
  doi           = {10.1109/SECON.2012.6275847},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2155-5486},
  keywords      = {mobile ad hoc networks;routing protocols;GUI;LGPL license;Linux implementation;OLSR;SILUMOD;VIRMANEL;ad hoc routing protocol;domain-specific language;mobile multihop networks;mobile nodes;mobility models;mobility scenarios;virtual machines connections;Ad hoc networks;Mobile computing;Spread spectrum communication, rank3},
}

@InProceedings{7152798,
  author    = {T. Duval and A. Blouin and J. M. Jézéquel},
  title     = {When Model Driven Engineering meets virtual reality: Feedback from application to the Collaviz framework},
  booktitle = {2014 IEEE 7th Workshop on Software Engineering and Architectures for Realtime Interactive Systems (SEARIS)},
  year      = {2014},
  pages     = {27-34},
  month     = {March},
  abstract  = {Despite the increasing use of 3D Collaborative Virtual Environments (3D CVE), their development is still a cumbersome task. The various concerns to consider (distributed system, 3D graphics, etc.) complexify the development as well as the evolution of CVEs. Software engineering recently proposed methods and tools to ease the development process of complex software systems. Among them, Model-Driven Engineering (MDE) considers models as first-class entities. A model is an abstraction of a specific aspect of the system under study for a specific purpose. MDE thus breaks down a complex system into as many models for different purposes, such as: generating code from models; building domain specific programming/modeling languages (DSL); generating tools such as graphical or textual editors. In this paper we leverage MDE for developing 3D CVEs. We show how the Collaviz framework took benefits from a DSL we built. The benefits are multiple: 3D CVE designers can focus on the behavior of their virtual objects without bothering with distributed and graphics features; configuring the content of 3D CVEs and their deployment on various software and hardware platforms can be automated through code generation. We detail the development process we propose and the experiments we conducted on Collaviz.},
  doi       = {10.1109/SEARIS.2014.7152798},
  groups    = {SCOPUS, excluidos},
  issn      = {2328-7772},
  keywords  = {groupware;program compilers;software engineering;specification languages;virtual reality;3D CVE;3D collaborative virtual environments;Collaviz framework;DSL;MDE;code generation;development process;domain specific modeling languages;domain specific programming language;generating tools;graphical editor;model driven engineering;software engineering;textual editor;virtual reality;Collaboration;Compass;Graphics;Hardware;Solid modeling;Three-dimensional displays;Transforms;Collaborative Virtual Environments;Frameworks;Model Driven Engineering;Software Engineering;Virtual Reality},
}

@InProceedings{6229806,
  author    = {S. Karus},
  title     = {XML development with plug-ins as a service},
  booktitle = {2012 Second International Workshop on Developing Tools as Plug-Ins (TOPI)},
  year      = {2012},
  pages     = {25-30},
  month     = {June},
  abstract  = {XML has quickly become a mainstream language in software development. Not only is it used for message and document interchange, it is also used to define application logic and interfaces. However, modern general purpose integrated development environments have rather limited support for XML development. The wide variety of XML based languages makes it a challenge to build tools for comprehensive support of XML development. In this paper, we present a library exposed as an add-in for Microsoft Visual Studio and a command line tool to improve the experience of editing XML files by providing access to subscribable service-based pluggable helper tools. The tools offer developers new means to check their XML against good and bad practices and possibly even automatically fix errors in XML or improve the files conformance with development guidelines.},
  doi       = {10.1109/TOPI.2012.6229806},
  groups    = {IEEEDSL, excluidos},
  issn      = {2327-0748},
  keywords  = {XML;software libraries;Microsoft Visual Studio;XML based language;XML development;XML file editing;application logic;command line tool;document interchange;interface;library;message interchange;plug-in;software development;subscribable service-based pluggable helper tool;DSL;Guidelines;Libraries;Programming;Software;Visualization;XML;IDE;Visual Studio;XML;automation;quality assurance;rules;services},
}

@InProceedings{6861074,
  author    = {M. El Hamlaoui and S. Ebersold and B. Coulette and M. Nassar and A. Anwar},
  title     = {Heterogeneous models matching for consistency management},
  booktitle = {2014 IEEE Eighth International Conference on Research Challenges in Information Science (RCIS)},
  year      = {2014},
  pages     = {1-12},
  month     = {May},
  abstract  = {This work is situated in the context of the application of Model Driven Engineering to complex systems view-based modelling. In fact, view-based models - called also partial models - are manipulated by different actors (designers), and are thus generally heterogeneous, that is, described with different DSLs (Domain Specific Languages). Instead of building a single global model, which is not realistic, we propose to organize the different partial models as a network of related models, which provides a global view of the system through a correspondence model. As models are modelled separately by different designers, they also evolve separately that induces a problem of consistency. To solve it, we propose a semi-automatic process based on the correspondence model allowing detecting changes, calculating their impacts, and proposing modifications to maintain the consistency among them. The approach is supported by a tool chain and illustrated by the example of a Bug Tracking System.},
  doi       = {10.1109/RCIS.2014.6861074},
  groups    = {SCOPUS, excluidos},
  issn      = {2151-1349},
  keywords  = {software engineering;Domain Specific Languages;consistency management;correspondence model;heterogeneous model matching;model driven engineering;Abstracts;Adaptation models;Analytical models;Business;DSL;Information systems;Unified modeling language;Heterogeneous models;change processing;consistency;correspondence model},
}

@InProceedings{6690551,
  author    = {A. Mos and T. Jacquin},
  title     = {Improving Process Robustness through Domain-Specific Model Transformations},
  booktitle = {2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
  year      = {2013},
  pages     = {188-193},
  month     = {Sept},
  abstract  = {Many forward-thinking organizations have adopted domain-specific languages (DSL) as the preferred method for describing business processes. Using DSL-based descriptions helps in removing uncertainty from the semantics of process models. DSLs can evolve in a managed way and with proper versioning of individual processes the original intentions of process designers can be preserved over time. However in collaborative projects, business processes written in different DSLs need to be converted to a common denominator format to facilitate exchange. Due to its widespread adoption, BPMN is ideally placed to serve as the exchange language for complex, cross-domain collaborations. This paper presents an approach for automatic two-way synchronization of domain-specific process models with BPMN diagrams. This approach can be valuable when collaboration between different stakeholders with different expertise is required, as well as when the company wants to leverage its investments in a BPM suite across its process portfolio. In addition, this approach ensures that changes to processes executed through the BPMS are valid with respect to their domain representations, minimizing the potential for runtime problems that are difficult to understand.},
  doi       = {10.1109/EDOCW.2013.28},
  groups    = {IEEEDSML, Duvida},
  issn      = {2325-6583},
  keywords  = {business data processing;investment;specification languages;BPMN diagrams;DSL-based descriptions;business process description;business process model and notation;collaborative projects;domain representations;domain-specific languages;domain-specific model transformations;domain-specific process model;investments;process model semantics;process portfolio;process robustness improvement;stakeholder collaboration;two-way synchronization;DSL;Domain specific languages;Organizations;Semantics;Standards organizations;BPM;BPMN;domain-specific language;modeling;tooling},
}

@InProceedings{6928791,
  author        = {E. Kühn and S. Craß and T. Hamböck},
  title         = {Approaching Coordination in Distributed Embedded Applications with the Peer Model DSL},
  booktitle     = {2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
  year          = {2014},
  pages         = {64-68},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Coordination in distributed embedded systems requires complex synchronization of many concurrent activities. This task becomes especially difficult when network and system failures have to be assumed. The Peer Model is a novel programming model for the design of coordination strategies among multiple nodes, aiming to bridge design and implementation. A major advantage is that designs based on the Peer Model are very flexible regarding changing requirements and policies. The motivating use case is an application in the railway domain where embedded nodes detect approaching trains and route this information over several forwarder nodes to the level crossing. In this paper, we present a Domain Specific Language for the Peer Model which allows to automatically generate a graphical documentation and source code for different embedded platforms. It lays the foundations for an embedded system software development tool chain. We prove the feasibility by implementing an event notification strategy for the level crossing use case.},
  doi           = {10.1109/SEAA.2014.72},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1089-6503},
  keywords      = {concurrency control;distributed processing;embedded systems;railway engineering;software engineering;source code (software);system documentation;approaching train detection;complex synchronization;concurrent activities;distributed embedded systems;domain specific language;embedded nodes;embedded platforms;embedded system software devel- opment toolchain;event notification strategy;forwarder nodes;graphical documentation;level crossing;peer model;programming model;railway domain;source code;system failures;Containers;Documentation;Middleware;Peer-to-peer computing;Unified modeling language;Wiring, rank3},
}

@InProceedings{6511840,
  author        = {A. Bariic and V. Amaral and M. Goulão},
  title         = {Usability Evaluation of Domain-Specific Languages},
  booktitle     = {Quality of Information and Communications Technology (QUATIC), 2012 Eighth International Conference on the},
  year          = {2012},
  pages         = {342-347},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-Specific Languages (DSLs) are claimed to bring important productivity improvements to developers, when compared to General-Purpose Languages (GPLs). The increased Usability is regarded as one of the key benefits of DSLs when compared to GPLs, and has an important impact on the achieved productivity of the DSL users. So, it is essential to build in good usability while developing the DSL. The purpose of this proposal is to contribute to the systematic activity of Software Language Engineering by focusing on the issue of the Usability evaluation of DSLs. Usability evaluation is often skipped, relaxed, or at least omitted from papers reporting development of DSLs. We argue that a systematic approach based on User Interface experimental validation techniques should be used to assess the impact of new DSLs. For that purpose, we propose to merge common Usability evaluation processes with the DSL development process. In order to provide reliable metrics and tools we should reuse and identify good practices that exist in Human-Computer Interaction community.},
  doi           = {10.1109/QUATIC.2012.63},
  groups        = {ACM, SCOPUS, Duplicados},
  keywords      = {human computer interaction;software engineering;specification languages;user interfaces;DSL development process;GPL;domain-specific languages;general-purpose language;human-computer interaction community;software language engineering;systematic approach;usability evaluation;user interface experimental validation techniques;Domain-Specific Languages;Software Language Engineering;Usability Evaluation, rank3},
}

@InProceedings{7436963,
  author        = {R. I. Hadiwijaya and M. M. I. Liem},
  title         = {A domain-specific language for automatic generation of checkers},
  booktitle     = {2015 International Conference on Data and Software Engineering (ICoDSE)},
  year          = {2015},
  pages         = {7-12},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {One of the important modules of a black-box automatic program grader is a "checker". In programming competition environment, a checker is a program written for the purpose to check the output of the contestant's program for a task that has many solutions. Usually, a checker is written manually as needed. In this paper, the idea of the output checker in the programming competition environment is extended to input checker and source code checker as a part of the automatic grader in our programming learning environment. Input checker validates the input coverage. The source code checker is used to validate a set of properties from a source code against the given coding specification. A Domain-Specific Language (DSL) grammar is designed and developed as a specification for the automatic generation of the output, input, and source code checkers. The DSL grammar and the checker generator tool set are used to evaluate source codes in our programming class. By writing the checkers specification in DSL, the specification is automatically documented and can be reused for similar properties.},
  doi           = {10.1109/ICODSE.2015.7436963},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {grammars;program verification;programming languages;source code (software);DSL grammar;black-box automatic program grader;checker generator tool;checkers automatic generation;domain-specific language;input checker;source code checker;DSL;Domain specific languages;Encoding;Generators;Programming;Testing;Domain-Specific Language;automatic program grading;property checker, rank3},
}

@InProceedings{6840036,
  author    = {V. Vujović and M. Maksimović and B. Perišić and V. Milošević},
  title     = {A Graphical Editor for RESTful Sensor Web networks modeling},
  booktitle = {Applied Computational Intelligence and Informatics (SACI), 2014 IEEE 9th International Symposium on},
  year      = {2014},
  pages     = {61-66},
  month     = {May},
  abstract  = {Effectiveness of communication is measured by speed, ease, and accuracy in which the information can be understood. From the cognitive aspect graphical presentations are usually more effective than textual ones, especially when communication between end-users and/or domain practitioners is concerned. Model-Driven Engineering (MDE) graphical tools have become extremely popular concerning the development of applications for a large number of domains. In this paper the emphasis is put on the design and implementation of Graphical Editor for RESTful Sensor Web Network in order to equip designers, with no expert knowledge in specific solution-domain, with a tool that would enable them to easily define tasks, specify network architecture and implement RESTful services. Based on the pilot sensor network design model, the verification, validation and proper functionality of proposed Graphical Editor are performed.},
  doi       = {10.1109/SACI.2014.6840036},
  groups    = {IEEEDSL, excluidos},
  keywords  = {Web services;formal specification;formal verification;software architecture;wireless sensor networks;MDE graphical tools;RESTful sensor Web networks modeling;RESTful services;cognitive aspect;communication effectiveness;graphical editor functionality;graphical editor validation;graphical editor verification;graphical presentations;model-driven engineering graphical tools;network architecture specification;sensor network design model;wireless sensor network;Buildings;Computational modeling;DSL;Internet;Logic gates;Software;Wireless sensor networks},
}

@InProceedings{6909375,
  author    = {V. Viyović and M. Maksimović and B. Perisić},
  title     = {Sirius: A rapid development of DSM graphical editor},
  booktitle = {IEEE 18th International Conference on Intelligent Engineering Systems INES 2014},
  year      = {2014},
  pages     = {233-238},
  month     = {July},
  abstract  = {Looking through the history of software development there are two mutually agreed factors used for software process and product effectiveness measurement: the level of abstraction and the level of reusability. The essential goals, among many, that have to be achieved are: increasing developer's productivity, decreasing cost (in time and money) of software construction while preserving desired quality level and improving software reusability and maintainability. Model Driven Software Development (MDSD), which is generally based on the model-centric approach to software development, appears as a challenging paradigm. MDSD is focused on the creation of semantically rich models concerning problem and solution domains while leaving the execution domain to the model based code generators. Created models are often based on a graphical representation and supported by graphical design tools, which, in the most common case, can't be universal. Depending on problem-domain, and based on Domain-Specific Model (DSM) appropriate graphical editing tool must be created. In this paper the emphasis is put on Sirius framework for developing a DSM Graphical Editor, which simplifies the product specification, reduces design time and rapidly increases the overall productivity. The main advantages of Sirius framework usage have been illustrated by the creation of a RESTful Sensor Web Network Editor.},
  doi       = {10.1109/INES.2014.6909375},
  groups    = {IEEEDSL, Duvida},
  issn      = {1543-9259},
  keywords  = {cost reduction;formal specification;software maintenance;software quality;software reusability;DSM graphical editor development;MDSD;RESTful Sensor Web Network Editor;Sirius;abstraction level;developer productivity;domain-specific model;graphical design tools;graphical representation;model based code generators;model driven software development;model-centric approach;product effectiveness measurement;product specification;quality level;reusability level;software construction cost reduction;software development;software maintainability;software process;software reusability;Buildings;DSL;Java;Object oriented modeling;Semantics;Software;Unified modeling language},
}

@InProceedings{6805441,
  author        = {W. Zhang and B. Møller-Pedersen},
  title         = {Tool Integration Models},
  booktitle     = {2013 20th Asia-Pacific Software Engineering Conference (APSEC)},
  year          = {2013},
  volume        = {1},
  pages         = {485-494},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an extension of a previously presented tool integration approach: tool integration for different scenarios may be specified as integration models, and these integration models can be executed or form the basis of code generation for implementing integration on different platforms. Integration models cover both the data and behavior parts of tool integration. The benefits of separating the details of integration models from the models being integrated through tool integration are illustrated and it is indicated what a DSL for making integration models would be.},
  doi           = {10.1109/APSEC.2013.70},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1530-1362},
  keywords      = {formal specification;program compilers;software tools;DSL;code generation;tool integration models;Adaptation models;IEC standards;Semantics;Software packages;Unified modeling language;Wind turbines;Artifact;Role;integration model;tool integration, rank3},
}

@Article{6840824,
  author   = {S. Erdweg and S. Fehrenbach and K. Ostermann},
  title    = {Evolution of Software Systems with Extensible Languages and DSLs},
  journal  = {IEEE Software},
  year     = {2014},
  volume   = {31},
  number   = {5},
  pages    = {68-75},
  month    = {Sept},
  abstract = {Domain-specific languages (DSLs) provide various advantages regarding the maintainability of software systems. Unfortunately, existing software systems don't exploit DSLs and their maintenance benefits. Based on the extensible programming language SugarJ, the authors present a process for gradually integrating DSLs into existing software systems, report on their experience in integrating three DSLs into two existing software systems, and outline a roadmap for the development of tool support for the integration of DSLs.},
  doi      = {10.1109/MS.2014.99},
  groups   = {SCOPUS, Compendex, Inclusos},
  issn     = {0740-7459},
  keywords = {high level languages;software maintenance;DSL;SugarJ programming language;domain-specific languages;extensible languages;software system evolution;software system maintainability;DSL;Domain specific languages;Embedded systems;Java;Maintenance engineering;Programming;Software systems;Syntactics;SugarJ;domain-specific languages;extensible programming languages;language embedding;legacy applications;software engineering;software evolution;software maintenance},
}

@InProceedings{6710367,
  author    = {E. Tyugu and P. Grigorenko},
  title     = {Components in model-based software development},
  booktitle = {Computer Science and Information Technologies (CSIT), 2013},
  year      = {2013},
  pages     = {1-8},
  month     = {Sept},
  abstract  = {Model-based software development (MBSD) is rapidly gaining popularity. There are two main approaches to MBSD: transformational and compositional approaches. The first has been initiated in nineties by creating UML - a universal modeling language that has become a standard for software specification, and has influenced research in software engineering. One can say that UML has initiated model-driven software engineering (MDSE). The second - compositional approach has grown out of domain-specific language development. It uses visual specifications as input, and is represented by tools like MetaEdit+ and CoCoViLa. We give a survey of these approaches, and discuss in more detail the compositional approach, paying attention at combining compositional and object-oriented software specifications.},
  doi       = {10.1109/CSITechnol.2013.6710367},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {Unified Modeling Language;formal specification;object-oriented programming;CoCoViLa tool;MBSD;MetaEdit+ tool;UML;compositional approach;compositional specifications;domain-specific language development;model-based software development;object-oriented software specifications;software engineering;software specification;transformational approach;universal modeling language;visual specifications;Computational modeling;Java;Mathematical model;Object oriented modeling;Software;Unified modeling language;Visualization;compositional software design;domain-specific modelling;model driven software development;software components;structural synthesis of programs},
}

@InProceedings{6690566,
  author        = {M. Farwick and T. Trojer and M. Breu and S. Ginther and J. Kleinlercher and A. Doblander},
  title         = {A Case Study on Textual Enterprise Architecture Modeling},
  booktitle     = {2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
  year          = {2013},
  pages         = {305-309},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Today's Enterprise Architecture Management (EAM) tools are based on forms and graphical modeling capabilities via web-based applications or desktop clients. However, recent developments in textual modeling tools have not yet been considered for EA modeling in research and practice. In this paper we present a novel EAM-tool approach, called Txture, that consists of a textual modeling environment and a web-application to provide enterprise-wide architecture visualizations for different stakeholder groups. The tool is in production use at a major Austrian data center, where it proofed to be intuitive and provide efficient modeling capabilities compared to traditional approaches. In this paper we present lessons learned from the development of the tool as well as usage it and report on its benefits and drawbacks.},
  doi           = {10.1109/EDOCW.2013.40},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2325-6583},
  keywords      = {Internet;corporate modelling;data visualisation;Austrian data center;EA modeling;EAM tools;Txture;Web based applications;desktop clients;enterprise architecture management;enterprise wide architecture visualizations;graphical modeling;textual enterprise architecture modeling;textual modeling tools;Business;Computational modeling;Computer architecture;DSL;Data visualization;Documentation;Syntactics;DSL;case study;documentation;domain-specific language;enterprise architecture;textual;viewpoint;xtext, rank3},
}

@InProceedings{6881940,
  author        = {F. Rabbi and W. MacCaull},
  title         = {User-Friendly UIs for the Execution of Clinical Practice Guidelines},
  booktitle     = {2014 IEEE 27th International Symposium on Computer-Based Medical Systems},
  year          = {2014},
  pages         = {489-490},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Workflow management systems (WfMS) can be used to manage complex processes, such as those described by Clinical Practise Guidelines (CPG). Such processes involve a variety of stakeholders, however, frequently their interfaces are not suited to the needs of the stakeholders involved. Here we propose that WfMSs be integrated with tools to build a variety of interfaces to meet the needs of different users. Using a CPG for the management of hypertension as a case study, we give examples of user-friendly interfaces which can be built easily using our domain specific language, and which integrate with our WfMS. One interface guides the clinician in the management of the disease, allowing her him the opportunity to view and interact with the process in a more holistic fashion, recording and recalling information relevant to the patient or the task. A second interface is more suited to the patient for the self management of lifestyle parameters, while other interfaces can be used by the patient, the clinician or the manager to represent trends or aggregate data.},
  doi           = {10.1109/CBMS.2014.104},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {1063-7125},
  keywords      = {diseases;graphical user interfaces;human computer interaction;medical computing;workflow management software;CPG execution;WfMS;clinical practice guideline execution;complex process management;disease management;domain specific language;hypertension management;lifestyle parameter self management;user-friendly UI;user-friendly interfaces;workflow management systems;Biomedical monitoring;Diseases;Educational institutions;Guidelines;Hypertension;Monitoring;clinical practice guidelines;domain specific language;user friendly interface;workflow management system, rank3},
}

@InProceedings{7571278,
  author    = {J. R. Pansare and M. Ingle},
  title     = {Vision-based approach for American Sign Language recognition using Edge Orientation Histogram},
  booktitle = {2016 International Conference on Image, Vision and Computing (ICIVC)},
  year      = {2016},
  pages     = {86-90},
  month     = {Aug},
  abstract  = {Hand Gesture Recognition System (HGRS) for detection of American Sign Language (ASL) alphabets has become essential tool for specific end users (i.e. hearing and speech impaired) to interact with general users via computer system. ASL has been proved to be a powerful and conventional augmentative communication tool especially for specific users. ASL consists of 26 primary letters, of which 5 are vowels and 21 are consonants. Proposed Real-time static Alphabet American Sign Language Recognizer- (A-ASLR) is designed for the recognition of ASL alphabets into their translated version in text (i.e. A to Z). The architecture of A-ASLR system is fragmented into six consequent phases namely; image capturing, image pre-processing, region extraction, feature extraction, feature matching and pattern recognition. We have used Edge Orientation Histogram (EOH) in A-ASLR system. The system is developed for detection of ASL alphabets based on Vision-based approach. It works without using colored gloves or expensive sensory gloves on hand. Our A-ASLR system achieves the recognition rate of 88.26% within recognition time of 0.5 second in complex background with mixed lightning condition.},
  doi       = {10.1109/ICIVC.2016.7571278},
  groups    = {IEEEDSL, excluidos},
  keywords  = {computer vision;edge detection;feature extraction;image capture;image matching;natural language processing;sign language recognition;A-ASLR system;EOH;HGRS;alphabet American sign language recognition;edge orientation histogram;feature extraction;feature matching;hand gesture recognition system;image capturing;image preprocessing;pattern recognition;region extraction;vision-based approach;Computers;DSL;Feature extraction;Image recognition;Lighting;Pattern matching;American Sign Language (ASL);Edge Orientation Histogram (EOH);Sim-EOH algorithm;static hand gesture;vision-based approach},
}

@InProceedings{7360009,
  author        = {E. Bautista and N. L. Serna},
  title         = {An MDE-based graphical tool for the validation of MySQL replication models},
  booktitle     = {Computing Conference (CLEI), 2015 Latin American},
  year          = {2015},
  pages         = {1-12},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {At modeling level, diagramming tools such as Microsoft Visio are used to design MySQL replication models. However, this type of tools do not allow validating if the MySQL replication model is free of errors, showing errors if exists. Thus, we can have erroneous documentation of the MySQL replication models. Due to the lack of this feature, this is done manually, which becomes a tedious task, time consuming and error prone. This paper proposes a MDE-based graphical modeling tool under the Eclipse platform for the automatic validation of MySQL replication models. In addition, once a model has been validated, the tool is capable of generating the mysqlreplicate commands of configuration. The results of the experiments for the errors correction of MySQL replication models with 25 servers demonstrate that by using the proposed tool the time is reduced in more than 87% compared with the tool Microsoft Visio 2013.},
  doi           = {10.1109/CLEI.2015.7360009},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {SQL;formal verification;programming environments;relational databases;replicated databases;Eclipse platform;MDE-based graphical modeling tool;Microsoft Visio 2013;MySQL replication models;automatic validation;model driven engineering;Biological system modeling;Computational modeling;DSL;Documentation;Error correction;Software;Unified modeling language;DSL;DSM;MDE;MySQL Replication, rank3},
}

@Article{7483535,
  author   = {S. R. Mello Canovas and C. E. Cugnasca},
  title    = {Extending a Metamodel for Adaptive Programs: Specifying Adaptive Functions},
  journal  = {IEEE Latin America Transactions},
  year     = {2016},
  volume   = {14},
  number   = {4},
  pages    = {1923-1929},
  month    = {April},
  abstract = {Model Driven Engineering (MDE) is a software development approach based on the use of models as essential artifacts. In the ideal scenario, source code is automatically generated from models by steps of transformations defined by mapping functions. A metamodel is a special type of model that describes the syntax of a modeling language. They are important because mapping functions reference their elements to define transformations, allowing the application of MDE. This paper proposes an extension of a metamodel of a domain specific modeling language for adaptive programs. This extension includes metaclasses, properties and constraints for specifying adaptive functions. An existing mapping function, which generates partial source code in BADAL language, was then updated to consider the new metamodel elements, becoming able to generate code for adaptive functions from the model specification. The resulting metamodel and mapping function were used as input to generate a CASE tool for adaptive programs, allowing the use of MDE in a higher level of abstraction than before for this class of application.},
  doi      = {10.1109/TLA.2016.7483535},
  groups   = {IEEEDSML, excluidos},
  issn     = {1548-0992},
  keywords = {formal specification;program compilers;source code (software);BADAL language;CASE tool;MDE;adaptive function specification;adaptive programs;code generation;domain specific modeling language syntax;mapping functions;metamodel elements;model driven engineering;model specification;software development approach;source code;Adaptation models;Computer aided software engineering;Domain specific languages;Model driven engineering;Syntactics;Unified modeling language;Adaptive Programs;Domain Specific Language;Model Driven Engineering;Set Based Meta Modeling},
}

@InProceedings{6337245,
  author        = {T. Holmes},
  title         = {From Business Application Execution to Design Through Model-Based Reporting},
  booktitle     = {Enterprise Distributed Object Computing Conference (EDOC), 2012 IEEE 16th International},
  year          = {2012},
  pages         = {143-153},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Cross-disciplinary models constitute essential instruments to master complexity. Often it is easier to relate to high-level concepts than to deal with low-level technical details. In model-driven engineering (MDE) models are designated a pivotal role from which systems are generated. As such, MDE enables different stakeholders of business applications to participate in the engineering process. Until now however, MDE does not penetrate phases beyond generation and deployment such as monitoring, analysis, and reporting. To display information from runtime and analytics it would be interesting if reporting could utilize models from design time. Therefore, this paper presents model-based reporting (MbR). Bridging the gap between reporting and design, it enables stakeholders to intuitively specify the reporting through a domain-specific language (DSL) while accelerating development cycles. In non-model-driven settings, MbR can help to introduce models as a first step towards MDE.},
  doi           = {10.1109/EDOC.2012.25},
  groups        = {IEEEDSML, Duplicados},
  issn          = {1541-7719},
  keywords      = {business data processing;software engineering;DSL;MDE;MbR;business application execution;cross disciplinary models;domain specific language;engineering process;model based reporting;model driven engineering;Abstracts;Business;Context modeling;Correlation;DSL;Data models;Runtime;business applications;end-to-end;model-based;reporting, rank3},
}

@InProceedings{7382444,
  author    = {M. Sneps-Sneppe and D. Namiot},
  title     = {On web-based domain-specific language for Internet of Things},
  booktitle = {Ultra Modern Telecommunications and Control Systems and Workshops (ICUMT), 2015 7th International Congress on},
  year      = {2015},
  pages     = {287-292},
  month     = {Oct},
  abstract  = {This paper discusses the challenges of the Internet of Things programming. Sensing and data gathering from the various sources are often the key elements of applications for Smart Cities. So, the effective programming models for them are very important. In this article, we discuss system software models and solutions, rather than network related aspects. In our paper, we present the web-based domain-specific language for Internet of Things applications. Our goal is to present the modern models for data processing in Internet of Things and Smart Cities applications. In our view, the use of this kind of tools should seriously reduce the time to develop new applications.},
  doi       = {10.1109/ICUMT.2015.7382444},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  keywords  = {Internet of Things;smart cities;systems software;Internet of Things;Web-based domain-specific language;smart cities;system software models;Computational modeling;Data models;Domain specific languages;Internet of things;Programming;Sensors;Smart cities;actors;domain-specific languages;micro-service;middleware;software standards},
}

@InProceedings{6228998,
  author        = {N. Hallenberg and P. L. Carlsen},
  title         = {Declarative automated test},
  booktitle     = {Automation of Software Test (AST), 2012 7th International Workshop on},
  year          = {2012},
  pages         = {96-102},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Automated tests at the business level can be expensive to develop and maintain. One common approach is to have a domain expert instruct a QA developer to implement what she would do manually in the application. Though there exist record-replay tools specifically developed for this, these tend to scale poorly for more complicated test scenarios. We present a different solution: An Embedded Domain Specific Language (EDSL) in F#, containing the means to model the user interface, and the various manipulations of it. We hope that this DSL will bridge the gap between the business domain and technical domain of applications to such a degree that domain experts may be able to construct automatic tests without depending on QA developers, and that these tests will prove more maintainable.},
  doi           = {10.1109/IWAST.2012.6228998},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {program testing;software quality;user interfaces;F#;QA developer;business level;declarative automated testing;domain expert;embedded domain specific language;record-replay tool;technical domain;user interface;Business;DSL;Documentation;Engines;Phantoms;Testing;User interfaces;Automated Testing;Domain Specific Language;F#;Functional Testing, rank3},
}

@InProceedings{7575079,
  author    = {E. Ruffaldi and I. Kostavelis and D. Giakoumis and D. Tzovaras},
  title     = {ArchGenTool: A system-independent collaborative tool for robotic architecture design},
  booktitle = {2016 21st International Conference on Methods and Models in Automation and Robotics (MMAR)},
  year      = {2016},
  pages     = {7-12},
  month     = {Aug},
  abstract  = {Complex robotic architectures require a collaborative effort in design and adherence to the design in the implementation phse. ArchGentTool is a collaborative architecture generation tool which supports the design of the robotic architecture in a multi-level fashion. It comprises high-level conceptual analysis of the system to be designed, as well as low-level implementation breakdown of its functional components, acting complementary to the ROS framework. The tool facilitates reusability and expandability of the architecture to any robotic system, as it can be adapted to different specifications. A case study with the RAMCIP service robot is presented.},
  doi       = {10.1109/MMAR.2016.7575079},
  groups    = {IEEEDSL, excluidos},
  keywords  = {service robots;ArchGenTool;RAMCIP service robot;ROS framework;collaborative architecture generation tool;complex robotic architectures;high-level conceptual analysis;system-independent collaborative tool;Collaboration;Computer architecture;DSL;Hardware;Robots;Software;Unified modeling language},
}

@Article{6898704,
  author   = {G. H. Wachsmuth and G. D. P. Konat and E. Visser},
  title    = {Language Design with the Spoofax Language Workbench},
  journal  = {IEEE Software},
  year     = {2014},
  volume   = {31},
  number   = {5},
  pages    = {35-43},
  month    = {Sept},
  abstract = {IDEs are essential for programming language developers, and state-of-the-art IDE support is mandatory for programming languages to be successful. Although IDE features for mainstream programming languages are typically implemented manually, this often isn't feasible for programming languages that must be developed with significantly fewer resources. The Spoofax language workbench is a platform for developing textual programming languages with state-of-the-art IDE support. Spoofax is a comprehensive environment that integrates syntax definition, name binding, type analysis, program transformation, code generation, and declarative specification of IDE components. It also provides high-level languages for each of these aspects. These languages are highly declarative, abstracting over the implementation of IDE features and letting engineers focus on language design.},
  doi      = {10.1109/MS.2014.100},
  groups   = {SCOPUS, Compendex, IEEEDSML, Inclusos},
  issn     = {0740-7459},
  keywords = {high level languages;software engineering;IDE support;Spoofax language workbench;high-level languages;language design;textual programming languages;Computer languages;DSL;Design methodology;Production;Programming;Syntactics;IDE;Spoofax;construction tools;design languages;integrated development environments;integrated environments;programming environments;programming languages;software engineering},
}

@InProceedings{7323105,
  author        = {C. Huang and A. Osaka and Y. Kamei and N. Ubayashi},
  title         = {Automated DSL construction based on software product lines},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {1-8},
  month         = {Feb},
  __markedentry = {[Neto:5]},
  abstract      = {DSL (Domain-Specific Language) is one of the important approaches for software abstraction. In the past decades, DSLs have been provided by expert engineers familiar with domain knowledge and programming language processors. It is not easy for ordinary programmers to construct DSLs for their own purposes. To deal with this problem, we propose a language workbench called Argyle that can automatically generate a DSL by only specifying a set of functions needed to the DSL and an execution platform supported by the DSL. Argyle is based on software product lines and consists of the following two steps: 1) development of the core assets for constructing a family of DSLs and 2) DSL configuration using these core assets. To demonstrate the effectiveness of our approach, we developed a prototype DSL for supporting MSR (Mining Software Repositories), the most active research field in software engineering.},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {programming languages;software product lines;Argyle;MSR;automated DSL construction;domain-specific language;mining software repository;programming language processor;software engineering;software product line;DSL;Encoding;Metals;Program processors;Software product lines;Syntactics;Domain-specific Language;Language Workbench;Software Product Line, rank3},
}

@InProceedings{6728120,
  author    = {M. Lethrech and I. Elmagrouni and M. Nassar and A. Kriouile and A. Kenzi},
  title     = {A generic metamodel for adaptable service oriented systems modeling using DSM approach},
  booktitle = {ISKO-Maghreb, 2013 3rd International Symposium},
  year      = {2013},
  pages     = {1-6},
  month     = {Nov},
  abstract  = {CAC (context aware computing) has recently emerged as a new computing paradigm promising adaptable systems development. Context awareness for services oriented systems (SOS) raises many challenges. Particularly, the challenge of engineering such systems which consists of the definition of modeling approaches, processes, techniques and tools to facilitate construction of these systems. In this paper, we propose a generic metamodel for Adaptable, Domain Specific and Service Oriented Systems. Our metamodel aims to facilitate the creation of Domain Specific Language (DSL) for adaptable and service oriented architecture. For a specific domain the language developer must produce their specific service metamodel based on our generic service metamodel.},
  doi       = {10.1109/ISKO-Maghreb.2013.6728120},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {high level languages;service-oriented architecture;systems software;ubiquitous computing;CAC;DSM approach;adaptable domain specific service oriented systems modeling;adaptable service oriented architecture;context aware computing;domain specific language developer;generic service metamodel;Adaptation models;Computational modeling;Context;Context modeling;DSL;Unified modeling language;Adaptability;CAC;DSM;Meta Modeling;SOC},
}

@InProceedings{6975396,
  author        = {T. Holmes},
  title         = {Facilitating Development and Provisioning of Service Topologies through Domain-Specific Languages},
  booktitle     = {2014 IEEE 18th International Enterprise Distributed Object Computing Conference Workshops and Demonstrations},
  year          = {2014},
  pages         = {422-425},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {In a model-driven engineering (MDE) context, the coordination of different roles such as enterprise architects and developers can be supported when dependencies between roles and artifacts are stated. Similarly, provisioning and deployment of service topologies can be facilitated. For specifying dependencies, an editor permits to define roles, artifacts, services, and service topologies in descriptive domain-specific languages (DSLs). Supporting coordination and automation, utilities are generated that synchronize workspaces, produce notifications, prepare the provisioning of service topologies, and perform their deployment. For showcasing the DSL editors and the coordination and automation tools a case study from a machine-to-machine context is taken. Addressing change impact and provisioning issues by minimizing turnaround cycles, the demonstration reveals possibilities of how to support MDE processes in the context of service topologies and shall foster a discussion on the potentials with regard to enterprise applications in general.},
  doi           = {10.1109/EDOCW.2014.72},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {2325-6583},
  keywords      = {DSL;Object oriented modeling;Servers;Software;Synchronization;Topology;Unified modeling language;DSL;MDE;automation;coordination;development;provisioning;service topology, rank3},
}

@InProceedings{6642475,
  author        = {T. Bouabana-Tebibel and S. H. Rubin and K. Habib and S. Mellah and L. Allata},
  title         = {A component-based language specific to complex systems modeling},
  booktitle     = {Information Reuse and Integration (IRI), 2013 IEEE 14th International Conference on},
  year          = {2013},
  pages         = {217-224},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {The modeling and design of complex systems continues to face grand challenges in feedback and control. Existing languages and tools, either textual or graphical, bring some improvement for such purposes, but much remains to be done in order to readily insure scalability. In this paper, we propose a language, which gathers specialization and composition properties. It is our belief that the latter properties bear the necessary capabilities to overcome the difficulties raised when developing these systems. The language is designed, on one hand, in a way to be specific to complex system domains. It supports, on the other hand, a component-based structure that conforms to a user-friendly component assembly. It is conceived in the spirit of SysML concepts. Its' programs generate Internal Block Diagrams. A programming tool is built on the basis of the Eclipse framework.},
  doi           = {10.1109/IRI.2013.6642475},
  groups        = {SCOPUS, IEEEDSML, Duplicados},
  keywords      = {object-oriented programming;specification languages;Eclipse framework;SysML concepts;complex system modeling;component-based language;component-based structure;domain-specific language;internal block diagrams;programming tool;user-friendly component assembly;Assembly;DSL;Grammar;Ports (Computers);Standards;Syntactics;Unified modeling language;Complex Systems;Component-Based Language;Domain-Specific Language;SysML, rank3},
}

@Article{6168851,
  author        = {D. Hrncic and M. Mernik and B. R. Bryant},
  title         = {Improving Grammar Inference by a Memetic Algorithm},
  journal       = {IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
  year          = {2012},
  volume        = {42},
  number        = {5},
  pages         = {692-703},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {A memetic algorithm, a novel approach for solving NP-hard problems, has been applied in this paper for grammatical inference in the field of domain-specific languages (DSLs). DSLs are often designed by domain experts who have no knowledge about the syntax and semantics of programming languages. However, they are able to write sample programs to accomplish their goals and illustrate the features of their language. Grammatical inference is a technique to infer a context-free grammar from a set of positive (and negative) samples. This paper shows that grammatical inference may assist domain experts and software language engineers in developing DSLs by automatically producing a grammar, which describes a set of sample DSL programs. A memetic-algorithm-based tool is developed, which greatly improves results and robustness of the inference process.},
  doi           = {10.1109/TSMCC.2012.2186802},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1094-6977},
  keywords      = {computational complexity;context-free grammars;evolutionary computation;inference mechanisms;programming language semantics;DSL programs;NP-hard problems;context-free grammar;domain-specific languages;grammar inference;grammatical inference;memetic algorithm;programming language semantics;programming language syntax;Domain specific languages;Grammar;Inference algorithms;Machine learning;Memetics;Domain-specific languages (DSLs);grammatical inference;memetic algorithms (MAs), rank3},
}

@InProceedings{7102598,
  author        = {E. Alegroth and G. Bache and E. Bache},
  title         = {On the Industrial Applicability of TextTest: An Empirical Case Study},
  booktitle     = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  year          = {2015},
  pages         = {1-10},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Software systems are becoming more complex, not least in their Graphical User Interfaces (GUIs), which presents challenges for existing testing practices. Pressure to reduce time to market leaves less time for manual testing and increases the importance of test automation. Previous research has identified several generations of automated GUI-based test approaches with different cost-benefit tradeoffs. Whilst test automation provides fast quality feedback it can be associated with high costs and inability to identify defects not explicitly anticipated by the test designer. TextTest is a capture-replay tool for GUI-based testing with a novel approach that overcomes several of the challenges experienced with previous approaches. Firstly the tool supports Approval Testing, an approach where ASCII-art representations of the GUI's visual state are used to verify correct application behavior at the system level. Secondly it records and replays test scripts in a user defined domain specific language (DSL) that is readable by all stakeholders. In this paper we present a three phase industrial case study that aims to identify TextTest's applicability in industrial practice. The paper reports that the tool is associated with (1) low script development costs due to recording functionality, (2) low maintenance costs, on average 7 minutes per test case, (3) better defect finding ability than manual system testing, (4) high test case execution performance (In this case 500 test cases in 20 minutes), (5) high script readability due to DSL defined scripts, and (6) test suites that are robust to change (In this case 93 percent per iteration). However, the tool requires a higher degree of technical skill for customization work, test maintainers need skills in designing regular expressions and the tool's applicability is currently restricted to Java and Python based applications.},
  doi           = {10.1109/ICST.2015.7102598},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {2159-4848},
  keywords      = {Java;graphical user interfaces;program testing;software tools;ASCII-art representations;DSL defined scripts;Java based applications;Python based applications;TextTest;approval testing;automated GUI-based testing;capture-replay tool;graphical user interfaces;software systems;test automation;test case execution performance;user defined domain specific language;Companies;DSL;Data collection;Graphical user interfaces;Maintenance engineering;Manuals;Testing, rank3},
}

@InProceedings{6601288,
  author        = {A. Sarimbekov and Y. Zheng and D. Ansaloni and L. Bulej and L. Marek and W. Binder and P. Tuma and Z. Qi},
  title         = {Productive Development of Dynamic Program Analysis Tools with DiSL},
  booktitle     = {2013 22nd Australian Software Engineering Conference},
  year          = {2013},
  pages         = {11-19},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Dynamic program analysis tools serve many important software engineering tasks such as profiling, debugging, testing, program comprehension, and reverse engineering. Many dynamic analysis tools rely on program instrumentation and are implemented using low-level instrumentation libraries, resulting in tedious and error-prone tool development. The recently released Domain-Specific Language for Instrumentation (DiSL) was designed to boost the productivity of tool developers targeting the Java Virtual Machine, without impairing the performance of the resulting tools. DiSL offers high-level programming abstractions especially designed for development of instrumentation-based dynamic analysis tools. In this paper, we present a controlled experiment aimed at quantifying the impact of the DiSL programming model and high-level abstractions on the development of dynamic program analysis instrumentations. The experiment results show that compared with a prevailing, state-of-the-art instrumentation library, the DiSL users were able to complete instrumentation development tasks faster, and with more correct results.},
  doi           = {10.1109/ASWEC.2013.12},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1530-0803},
  keywords      = {Java;program debugging;reverse engineering;specification languages;system monitoring;virtual machines;DiSL;Java virtual machine;debugging;domain-specific language for instrumentation;error-prone tool development;high-level programming abstractions;instrumentation-based dynamic analysis tools;low-level instrumentation libraries;productive dynamic program analysis tool development;program comprehension;program instrumentation;reverse engineering;software engineering tasks;Context;Instruments;Java;Libraries;Productivity;Programming;Writing;Dynamic program analysis;bytecode instrumentation;controlled experiment;development productivity, rank3},
}

@InProceedings{7203010,
  author    = {R. Abreu and H. Erdogmus and A. Perez},
  title     = {CodeAware: Sensor-Based Fine-Grained Monitoring and Management of Software Artifacts},
  booktitle = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  year      = {2015},
  volume    = {2},
  pages     = {551-554},
  month     = {May},
  abstract  = {Current continuous integration (CI) tools, although extensible, can be limiting in terms of flexibility. In particular, artifact analysis capabilities available through plug in mechanisms are both coarse-grained and centralized. To address this limitation, this paper introduces a new paradigm, Code Aware, for distributed and fine-grained artifact analysis. Code Aware is an ecosystem inspired by sensor networks, consisting of monitors and actuators, aimed at improving code quality and team productivity. Code ware's vision entails (a) the ability to probe software artifacts of any granularity and localization, from variables to classes or files to entire systems, (b) the ability to perform both static and dynamic analyses on these artifacts, and (c) the ability to describe targeted remediation actions, for example to notify interested developers, through automated actuators. We provide motivational examples for the use of Code Aware that leverage current CI solutions, sketch the architecture of its underlying ecosystem, and outline research challenges.},
  doi       = {10.1109/ICSE.2015.192},
  groups    = {IEEEDSL, excluidos},
  issn      = {0270-5257},
  keywords  = {productivity;program diagnostics;software quality;CI tools;CodeAware;artifact analysis capabilities;automated actuators;code quality improvement;continuous integration tools;distributed artifact analysis;dynamic analysis;ecosystem;fine-grained artifact analysis;monitors;plug in mechanisms;sensor-based fine-grained monitoring;software artifact management;static analysis;team productivity improvement;DSL;Ecosystems;Electronic mail;Monitoring;Probes;Software;Software engineering},
}

@InProceedings{6883052,
  author    = {K. Smeltzer},
  title     = {A language for visualization variation and transformation},
  booktitle = {2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
  year      = {2014},
  pages     = {195-196},
  month     = {July},
  abstract  = {Improvements in computer technology have spawned an exponential growth in both the scope and volume of data collection, as well as a corresponding shortage of capable analysts. This applies not just to scientists, but also to consumers who are gaining unprecedented access to data from their cars, homes, phones, and other devices. Meanwhile, visualization has emerged as an effective tool for exploring and gathering insight from large quantities of data. However, constructing effective visualizations is often difficult, and current tools often lack either the flexibility to extend to custom problem domains or else require low-level graphics programming expertise to generate even simple visualizations. Furthermore, most solutions are ad hoc, preventing users from transforming and evolving visualizations, instead forcing them into a rigid, linear workflow. One possible approach to solving these problems is through the definition of a domain-specific language (DSL). This approach offers a number of potential advantages, the most immediate being flexibility. A visualization DSL could support multiple levels of abstraction at once, each of which could be targeted at different user needs and expertise levels. This, in turn, could allow users with varying levels of expertise to make use of the abstraction layers they find most appropriate, and support the creation of simple and common visualizations without sacrificing the option for more detailed control when necessary. This layering could also allow implementation details to be hidden when desired. Pixel position information, for example, could be hidden behind a scalable and unitless environment which would allow the user to place and size visualization components in relation to one another.},
  doi       = {10.1109/VLHCC.2014.6883052},
  groups    = {IEEEDSML, excluidos},
  issn      = {1943-6092},
  keywords  = {program diagnostics;visual languages;abstraction layers;computer technology;domain-specific language;pixel position information;visualization DSL;visualization components;visualization transformation;visualization variation;DSL;Data analysis;Data visualization;Image color analysis;Programming;Visualization},
}

@InProceedings{6696493,
  author    = {N. Yakymets and S. Dhouib and H. Jaber and A. Lanusse},
  title     = {Model-driven safety assessment of robotic systems},
  booktitle = {2013 IEEE/RSJ International Conference on Intelligent Robots and Systems},
  year      = {2013},
  pages     = {1137-1142},
  month     = {Nov},
  abstract  = {Robotic systems (RSs) are often used for performing critical tasks with little or no human intervention. Such RSs must satisfy certain dependability requirements including reliability, availability, security and safety. In this paper, we focus on the safety aspect and propose a methodology and associated framework for safety assessment of RSs in the early phases of development. The methodology relies upon model-driven engineering approach and describes a preliminary safety assessment of safety-critical RSs using fault tree (FT) analysis (FTA). The framework supports a domain specific language for RSs called RobotML and includes facilities (i) to automatically generate or manually construct FTs and perform both qualitative and quantitative FTA, (ii) to make semantic connections with formal verification and FTA tools, (iii) to represent FTA results in the RobotML modeling environment. In the case study, we illustrate the proposed methodology and framework by considering a mobile robot developed in the scope of the Proteus project.},
  doi       = {10.1109/IROS.2013.6696493},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  issn      = {2153-0858},
  keywords  = {control engineering computing;fault trees;formal verification;mobile robots;safety;safety-critical software;FTA tools;Proteus project;RobotML modeling environment;availability;dependability requirements;domain specific language;fault tree analysis;formal verification;mobile robot;model-driven engineering approach;model-driven safety assessment;reliability;robotic systems;safety aspect;safety assessment;safety-critical RS;security;Fault trees;Hazards;Mobile robots;Robot sensing systems;Unified modeling language},
}

@InProceedings{6800525,
  author        = {W. Ecker and M. Velten and L. Zafari and A. Goyal},
  title         = {The metamodeling approach to system level synthesis},
  booktitle     = {2014 Design, Automation Test in Europe Conference Exhibition (DATE)},
  year          = {2014},
  pages         = {1-2},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an industry proven Metamodeling based approach to System-Level-Synthesis which is seen as generic design automation strategy above today's implementation levels RTL (for digital) and Schematic Entry (for analog). The approach follows a new synthesis paradigm: The designer develops a simple domain and/or design specific language and a smart tool synthesizing implementation level models according to its needs. The overhead of making both a tool and a model pays off since the tool building is automated by code generation and reuse, both based on Metamodeling techniques. Also the focus on owns demand keeps development costs low. Finally, specification data is utilized. I.e. the domain specific language simplifies to a document structure as a table. This keeps also modeling effort low since specification content is used and no model need to be built. Furthermore, increases design consistency and thus decreases debug time. Using these concepts, single design steps have been speed up to a factor of 20x and implementations of chips (specification-to-tapeout) have been speed up to a factor of 3x.},
  doi           = {10.7873/DATE.2014.324},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1530-1591},
  keywords      = {electronic design automation;program compilers;specification languages;RTL levels;code generation;design specific language;generic design automation strategy;metamodeling approach;schematic entry;smart tool;system level synthesis;Automation;Buildings;Data models;Engines;Generators;Metamodeling;Synthesizers;code generation;metamodeling;system level synthesis, rank3},
}

@InProceedings{7582769,
  author    = {T. Szabó and S. Erdweg and M. Voelter},
  title     = {IncA: A DSL for the definition of incremental program analyses},
  booktitle = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year      = {2016},
  pages     = {320-331},
  month     = {Sept},
  abstract  = {Program analyses support software developers, for example, through error detection, code-quality assurance, and by enabling compiler optimizations and refactorings. To provide real-time feedback to developers within IDEs, an analysis must run efficiently even if the analyzed code base is large. To achieve this goal, we present a domain-specific language called IncA for the definition of efficient incremental program analyses that update their result as the program changes. IncA compiles analyses into graph patterns and relies on existing incremental matching algorithms. To scale IncA analyses to large programs, we describe optimizations that reduce caching and prune change propagation. Using IncA, we have developed incremental control flow and points-to analysis for C, well-formedness checks for DSLs, and 10 FindBugs checks for Java. Our evaluation demonstrates significant speedups for all analyses compared to their non-incremental counterparts.},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  keywords  = {Java;program diagnostics;software engineering;specification languages;DSL;IncA analysis;Java;domain-specific language;incremental program analysis;software development;static program analysis;DSL;Java;Optimization;Pattern matching;Program processors;Runtime;Domain-specific Language;Incremental Computation;Language Workbench;Static Analysis},
}

@InProceedings{6216638,
  author        = {Y. B. Hlaoui and L. J. Ben Ayed and I. Ben Fradj},
  title         = {A model driven approach to compose and develop Grid service workflow applications},
  booktitle     = {Information Technology and e-Services (ICITeS), 2012 International Conference on},
  year          = {2012},
  pages         = {1-7},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {We use a Domain Specific Language (DSL) based on UML activity diagrams (UML-AD) to specify and compose systematically workflow models from Grid services. To be executed, workflow activity diagram models should be translated into BPEL4WS models which will be executed by the BPEL4WS engine. To reach this objective, we propose a meta-model based transformation from UML activity diagrams to BPEL4WS language. To ensure the correctness and the completion of the transformation, we propose a graph homomorphic mapping between the activity diagram and BPEL4WS language elements. To execute the BPEL4WS provided model, we propose in this paper an execution infrastructure based on The Globus Tool Kit.},
  doi           = {10.1109/ICITeS.2012.6216638},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {Unified Modeling Language;Web services;data models;graph theory;grid computing;meta data;BPEL4WS;Globus tool kit;UML activity diagram;UML-AD;domain specific language;graph homomorphic mapping;grid service workflow;meta model;model driven approach;workflow activity diagram model;Abstracts;Domain specific languages;Engines;Java;Semantics;Transforms;Unified modeling language;BPEL4WS;Grid service workflow;UML activity diagram s;homomorphic mapping;meta-model transformation, rank3},
}

@InProceedings{6502525,
  author        = {M. Valero and S. Uluagac and S. Venkatachalam and K. C. Ramalingam and R. Beyah},
  title         = {The Monitoring Core: A framework for sensor security application development},
  booktitle     = {2012 IEEE 9th International Conference on Mobile Ad-Hoc and Sensor Systems (MASS 2012)},
  year          = {2012},
  pages         = {263-271},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {Wireless sensor networks (WSNs) are used for the monitoring of physical and environmental phenomena, and applicable in a range of different domains (e.g., health care, military, critical infrastructure). When using WSNs in a variety of real-world applications, security is a vital problem that should be considered by developers. As the development of security applications (SAs) for WSNs require meticulous procedures and operations, the software implementation process can be more challenging than regular applications. Hence, in an effort to facilitate the design, development and implementation of WSN security applications, we introduce the Monitoring Core (M-Core). The M-Core is a modular, lightweight, and extensible software layer that gathers necessary data including the internal and the external status of the sensor (e.g., information about ongoing communications, neighbors, and sensing), and provides relevant information for the development of new SAs. Similar to other software development tools, the M-Core was developed to facilitate the design and development of new WSN SAs on different platforms. Moreover, a new user-friendly domain-specific language, the M-Core Control Language (MCL), was developed to further facilitate the use of the M-Core and reduce the developer's coding time. With the MCL, a user can implement new SAs without the overhead of learning the details of the underlying sensor software architecture (e.g., TinyOS). The M-Core has been implemented in TinyOS-2.x and tested on real sensors (Tmote Sky and MicaZ). Using the M-Core architecture, we implemented several SAs to show that the M-Core allows easy and rapid development of security programs efficiently and effectively.},
  doi           = {10.1109/MASS.2012.6502525},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {2155-6806},
  keywords      = {computerised monitoring;human computer interaction;software architecture;telecommunication security;wireless sensor networks;M-core architecture;M-core control language;MCL;SA;TinyOS-2.x;WSN security applications;environmental phenomena;extensible software layer;meticulous procedures;monitoring core;physical phenomena;real sensors;real-world applications;security applications;security programs;sensor external status;sensor internal status;sensor security application development;software implementation process;user-friendly domain-specific language;wireless sensor networks;M-Core Control Language (MCL);Monitoring Core (M-Core);Sensor Security Application Development;Wireless Sensor Network Applications, rank3},
}

@InProceedings{6339417,
  author        = {A. Unutulmaz and G. Dündar and F. V. Fernández},
  title         = {LDS based tools to ease template construction},
  booktitle     = {Synthesis, Modeling, Analysis and Simulation Methods and Applications to Circuit Design (SMACD), 2012 International Conference on},
  year          = {2012},
  pages         = {61-64},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Layout Description Script (LDS) is a domain specific language (DSL) intended to describe analog layouts. This paper introduces an LDS based tool, Capture, and an add-on, LDS Analyzer, for LDS. Capture aims to convert layout images into layout templates. Components of a layout are extracted with this tool and a template is synthesized from the extracted data. LDS Analyzer is an enhanced LDS parser. Analyzer investigates an LDS statement and conducts either simple parsing or enhanced parsing which make use of symbolic variables.},
  doi           = {10.1109/SMACD.2012.6339417},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {analogue circuits;circuit layout;electronic engineering computing;Layout Description Script Analyzer;analog layout;domain specific language;layout template;template construction;Circuit synthesis;Data mining;Design automation;Educational institutions;Layout;Optimization;Routing, rank3},
}

@Article{6654153,
  author   = {F. Jacob and A. Wynne and Y. Liu and J. Gray},
  title    = {Domain-Specific Languages for Developing and Deploying Signature Discovery Workflows},
  journal  = {Computing in Science Engineering},
  year     = {2014},
  volume   = {16},
  number   = {1},
  pages    = {52-64},
  month    = {Jan},
  abstract = {Domain-agnostic signature discovery supports scientific investigation across domains through algorithm reuse. A new software tool defines two simple domain-specific languages that automate processes that support the reuse of existing algorithms in different workflow scenarios. The tool is demonstrated with a signature discovery workflow composed of services that wrap original scripts running high-performance computing tasks.},
  doi      = {10.1109/MCSE.2013.97},
  groups   = {SCOPUS, Compendex, Inclusos},
  issn     = {1521-9615},
  keywords = {parallel processing;software reusability;software tools;specification languages;workflow management software;algorithm reuse;domain-agnostic signature discovery;domain-specific languages;high-performance computing tasks;scientific investigation;scripts;signature discovery workflow;software tool;workflow scenarios;Clustering algorithms;DSL;Domain specific languages;Scientific computing;Software algorithms;Web services;XML;DSL;Taverna;domain-specific languages;scientific computing;signature discovery;workflow},
}

@InProceedings{6984103,
  author    = {A. R. d. Silva and S. Vlajic and S. Lazarevic and I. Antovic and V. Stanojevic and M. Milic},
  title     = {Preliminary Experience Using JetBrains MPS to Implement a Requirements Specification Language},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2014 9th International Conference on the},
  year      = {2014},
  pages     = {134-137},
  month     = {Sept},
  abstract  = {People prefer to use textual specification of requirements, but their representations are not suitable for automatic transformation and reuse. Use case modelling is commonly used to structure and document requirements. The integration of use cases within the Model Driven Development paradigm requires a rigorous definition of the use case specification. In this paper we describe the key part of SilabReq language for requirements specification based on use case and present the main result from our preliminary experience with implementation of the SilabReq language with JetBrains Meta Programming System.},
  doi       = {10.1109/QUATIC.2014.24},
  groups    = {IEEEDSL, Duvida},
  keywords  = {formal specification;programming languages;JetBrains MPS;JetBrains meta programming system;SilabReq language;model driven development paradigm;requirements specification language;textual requirements specification;use case modelling;use case specification;Abstracts;DSL;Natural languages;Programming;Software;Syntactics;Unified modeling language;language workbench;requirements;requirements specification;requirements specification tools;use case},
}

@InProceedings{7515468,
  author        = {M. Bernardino and A. F. Zorzo and E. M. Rodrigues},
  title         = {Canopus: A Domain-Specific Language for Modeling Performance Testing},
  booktitle     = {2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  year          = {2016},
  pages         = {157-167},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Despite all the efforts to reduce the cost of the testing phase in software development, it is still one of the most expensive phases. In order to continue to minimize those costs, in this paper, we propose a Domain-Specific Language (DSL), built on top of MetaEdit+ language workbench, to model performance testing for web applications. Our DSL, called Canopus, was developed in the context of a collaboration1 between our university and a Technology Development Laboratory (TDL) from an Information Technology (IT) company. We present, in this paper, the Canopus metamodels, its domain analysis, a process that integrates Canopus to Model-Based Performance Testing, and applied it to an industrial case study.},
  doi           = {10.1109/ICST.2016.13},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {Internet;program testing;software cost estimation;specification languages;Canopus metamodels;DSL;IT company;MetaEdit+ language workbench;TDL;Web applications;cost minimization;cost reduction;domain-specific language;information technology company;model-based performance testing;performance testing modeling;software development testing;technology development laboratory;Analytical models;Automation;Computational modeling;DSL;Load modeling;Testing;Unified modeling language;domain-specific language;domain-specific modeling;model-based testing;performance testing, rank3},
}

@InProceedings{7306353,
  title     = {Design and Correctness},
  booktitle = {2015 Forum on Specification and Design Languages (FDL)},
  year      = {2015},
  pages     = {1-1},
  month     = {Sept},
  abstract  = {This session presents a domain-specific language for high-level synthesis of hardware for FPGA platforms and describes its memory management for pipelined target architectures. It also presents a methodology to construct test sequences starting from PSL assertions and design under test written in VHDL using VSYML and SyntHorus tools. Finally it presents a top-down design flow to refine an architecture level description of a system into an RTL implementation, while refining operation properties concurrently.},
  issn      = {1636-9874},
  keywords  = {Domain specific languages;Field programmable gate arrays;Hardware;Memory management;Refining;Systems modeling, rank5},
}

@InProceedings{7292575,
  author        = {L. Bettini},
  title         = {Developing user interfaces with EMF parsley},
  booktitle     = {Software Paradigm Trends (ICSOFT-PT), 2014 9th International Conference on},
  year          = {2014},
  pages         = {58-66},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {In this paper we describe the main features of EMF Parsley, a new Eclipse project for implementing applications based on the Eclipse Modeling Framework (EMF). EMF Parsley aims at complementing the EMF reflective mechanisms with respect to rapidly creating user interfaces based on models, without having to deal with internal details and setup code. In particular, EMF Parsley uses injection mechanisms to easily customize all the aspects of such applications. Moreover, it provides a set of reusable user interface components like trees, tables and detail forms that manage the model with the introspective EMF capabilities, together with reusable views, editors and dialogs. Besides project wizards, to easily create projects based on EMF Parsley, the main developing tool is a DSL, implemented with Xtext/Xbase, that provides a rapid customization mechanism.},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {Control systems;DSL;Google;Java;Labeling;Libraries;User interfaces;DSL;EMF;Eclipse;Modeling;User Interface, rank3},
}

@InProceedings{6927454,
  author        = {N. George and H. Lee and D. Novo and T. Rompf and K. J. Brown and A. K. Sujeeth and M. Odersky and K. Olukotun and P. Ienne},
  title         = {Hardware system synthesis from Domain-Specific Languages},
  booktitle     = {2014 24th International Conference on Field Programmable Logic and Applications (FPL)},
  year          = {2014},
  pages         = {1-8},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Field Programmable Gate Arrays (FPGAs) are very versatile devices, but their complicated programming model has stymied their widespread usage. While modern High-Level Synthesis (HLS) tools provide better programming models, the interface they offer is still too low-level. In order to produce good quality hardware designs with these tools, the users are forced to manually perform optimizations that demand detailed knowledge of both the application and the implementation platform. Additionally, many HLS tools only generate isolated hardware modules that the user still needs to integrate into a system design before generating the FPGA bitstream. These problems make HLS tools difficult to use for application developers who have little hardware design knowledge. To address these problems, we propose an automated methodology to generate FPGA bitstreams from high-level programs written in Domain-Specific Languages (DSLs). We leverage the domain-knowledge conveyed by the DSL and its domain-specific semantics to extract application parallelism, perform optimizations and also identify a suitable system-architecture for the implementation, thereby, relieving the user from most of the hardware-level details. We demonstrate the high productivity and high design quality this approach offers by automatically generating hardware systems from applications written in OptiML, a machine-learning DSL. To evaluate our methodology, we use four OptiML applications and show that we can easily generate different solutions which achieve different trade-offs between performance and area. More importantly, the results reveal that our generated hardware achieves much better performance compared to the one obtained from using the HLS tool without platform-specific optimizations.},
  doi           = {10.1109/FPL.2014.6927454},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1946-147X},
  keywords      = {field programmable gate arrays;learning (artificial intelligence);logic design;specification languages;FPGA bitstream;FPGAs;HLS tools;OptiML;application parallelism extraction;complicated programming model;domain-specific languages;domain-specific semantics;field programmable gate arrays;hardware system synthesis;hardware-level details;high-level programs;isolated hardware modules;machine-learning DSL;quality hardware designs;system design;system-architecture;DSL;Data structures;Field programmable gate arrays;Hardware;Kernel;Optimization;Parallel processing, rank3},
}

@InProceedings{6645665,
  author    = {B. Trninić and G. Sladić and G. Milosavljević and B. Milosavljević and Z. Konjović},
  title     = {PolicyDSL: Towards generic access control management based on a policy metamodel},
  booktitle = {Intelligent Software Methodologies, Tools and Techniques (SoMeT), 2013 IEEE 12th International Conference on},
  year      = {2013},
  pages     = {217-223},
  month     = {Sept},
  abstract  = {The paper presents a generic access control management infrastructure suitable for a broad set of systems. The generic infrastructure is based on our policy metamodel (level M2), which is used for the specification of the needed policy model (level M1) such as RBAC, GTRBAC, etc. Having a defined policy model, the abstract and concrete syntaxes of PolicyDSL, our textual DSL for expressing access control policies, are dynamically generated. A security expert is then able to express the actual access control policies (level M0) for the given access control model using the generated DSL. The presented solution can be applied, with no changes, to a number of systems that are based on different access control models or their variants.},
  doi       = {10.1109/SoMeT.2013.6645665},
  groups    = {SCOPUS, Duvida},
  keywords  = {authorisation;computational linguistics;formal specification;specification languages;GTRBAC;PolicyDSL;RBAC;abstract syntaxes;access control policies;concrete syntaxes;domain-specific languages;generic access control management;level M1;level M2;policy metamodel;role based access control;security expert;textual DSL;Access control;Concrete;DSL;Standards;Syntactics;Unified modeling language},
}

@Article{7458761,
  author   = {C. Ebert and G. Gallardo and J. Hernantes and N. Serrano},
  title    = {DevOps},
  journal  = {IEEE Software},
  year     = {2016},
  volume   = {33},
  number   = {3},
  pages    = {94-100},
  month    = {May},
  abstract = {Building on lean and agile practices, DevOps means end-to-end automation in software development and delivery. Hardly anybody will be able to approach it with a cookbook-style approach, but most developers will benefit from better connecting the previously isolated silos of development and operations. Many DevOps tools exist that can help them do this.},
  doi      = {10.1109/MS.2016.68},
  groups   = {IEEEDSL, excluidos},
  issn     = {0740-7459},
  keywords = {software engineering;DevOps;cookbook-style approach;software delivery;software development;Automation;Cloud computing;DSL;Java;Monitoring;Production;AWS;Amazon Web Services;Ansible;Bamboo;Cacti;Chef;DevOps;Gradle;Graylog2;Jenkins;Logging;Loggly;Maven;Nagios;New Relic;Puppet;TeamCity;apache Ant;configuration management;continuous integration;microservices;software development;software engineering},
}

@InProceedings{6337714,
  author        = {G. Edwards and Y. Brun and N. Medvidovic},
  title         = {Automated Analysis and Code Generation for Domain-Specific Models},
  booktitle     = {Software Architecture (WICSA) and European Conference on Software Architecture (ECSA), 2012 Joint Working IEEE/IFIP Conference on},
  year          = {2012},
  pages         = {161-170},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-specific languages (DSLs) concisely express the essential features of system designs. However, using a DSL for automated analysis and code generation requires developing specialized tools. We describe how to create model analysis and code generation tools that can be applied to a large family of DSLs, and show how we created the LIGHT platform, a suite of such tools for the family of software architecture-based DSLs. These tools can be easily reused off-the-shelf with new DSLs, freeing engineers from having to custom-develop them. The key innovation underlying our strategy is to enhance DSL metamodels with additional semantics, and then automatically synthesize configurations and plug-ins for flexible analysis and code generation frameworks. Our evaluation shows that, for a DSL of typical size, using our strategy relieves software engineers of developing approximately 17,500 lines of code, which amounts to several person-months of programming work.},
  doi           = {10.1109/WICSA-ECSA.212.24},
  groups        = {ACM, SCOPUS, Duplicados},
  keywords      = {software architecture;software tools;specification languages;DSL metamodel enhancement;LIGHT platform;architecture-based DSL;automated analysis;automatic configuration synthesis;code generation;domain-specific languages;domain-specific models;model analysis;plug-ins;system designs;Analytical models;Computer architecture;DSL;Generators;Semantics;Software;Unified modeling language, rank3},
}

@InProceedings{6721539,
  author        = {J. Ozik and N. T. Collier and J. T. Murphy and M. J. North},
  title         = {The ReLogo agent-based modeling language},
  booktitle     = {2013 Winter Simulations Conference (WSC)},
  year          = {2013},
  pages         = {1560-1568},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {ReLogo is a new agent-based modeling (ABM) domain specific language (DSL) for developing agent-based models in the free and open source Repast Suite of ABM tools; the Java based Repast Simphony ABM toolkit and the C++ high performance computing Repast HPC toolkit both incorporate ReLogo. The language is geared towards a wide range of modeling and programming expertise, combining the sophisticated and powerful ABM infrastructure and capabilities in the Repast Suite with the ease of use of the Logo programming language and its associated programming idioms. This paper will present how ReLogo combines a number of concepts, including object-oriented programming, simple integration of existing code libraries, statically and dynamically typed languages, domain specific languages, and the use of integrated development environments, to create an ABM tool that is easy to learn yet is also capable of creating large scale ABMs of real world complex systems.},
  doi           = {10.1109/WSC.2013.6721539},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {0891-7736},
  keywords      = {Java;multi-agent systems;parallel processing;public domain software;ABM tools;C++ high performance computing Repast HPC toolkit;DSL;Java based Repast Simphony ABM toolkit;Logo programming language;ReLogo agent-based modeling domain specific language;open source Repast Suite;Computational modeling;DSL;Java;Libraries;Object oriented modeling;Programming, rank3},
}

@InProceedings{7365791,
  author        = {B. Scholz and K. Vorobyov and P. Krishnan and T. Westmann},
  title         = {A Datalog Source-to-Source Translator for Static Program Analysis: An Experience Report},
  booktitle     = {Software Engineering Conference (ASWEC), 2015 24th Australasian},
  year          = {2015},
  pages         = {28-37},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Static program analysis has many applications including bug checking for large scale code that requires a points-to analysis. To express static program analysis frameworks concisely, it is advantageous to employ a domain-specific language. In the last two decades, Data log has emerged as a domain-specific language for static program analysis. However, existing Data log systems have problems solving large scale code with millions of program variables. This work reports on techniques that translate a Data log program to SQL queries, which are executed on a relational database system. The advantage of a relational database system as an execution platform is the effective use of memory and disks. Further, we can also use an off-the shelf tool to execute the SQL queries. In order to achieve performance, we explore some of the design choices for a source-to-source translation from Data log to SQL that implement stratified negations, totally ordered domains, and comparisons. For each design point, we explain how Data log can be efficiently translated to SQL using the semi-naive evaluation approach. We report the results of our experiments using large data-sets including the OpenJDK7-b147 dataset for points-to, which guided us in the design of our translation schemes.},
  doi           = {10.1109/ASWEC.2015.15},
  groups        = {ACM, IEEEDSML, Duplicados},
  issn          = {1530-0803},
  keywords      = {DATALOG;SQL;program debugging;program diagnostics;relational databases;Naıve evaluation approach;OpenJDK7-b147 dataset;SQL query;bug checking;datalog program;datalog source-to-source translator;datalog system;domain-specific language;large scale code;relational database system;source-to-source translation;static program analysis;Australia;Electronic mail;Engines;Relational databases;Resource management;Semantics;Software engineering;Datalog;SQWL;program analysis;source-to-source translation, rank3},
}

@Article{6051438,
  author   = {D. Cassou and J. Bruneau and C. Consel and E. Balland},
  title    = {Toward a Tool-Based Development Methodology for Pervasive Computing Applications},
  journal  = {IEEE Transactions on Software Engineering},
  year     = {2012},
  volume   = {38},
  number   = {6},
  pages    = {1445-1463},
  month    = {Nov},
  abstract = {Despite much progress, developing a pervasive computing application remains a challenge because of a lack of conceptual frameworks and supporting tools. This challenge involves coping with heterogeneous devices, overcoming the intricacies of distributed systems technologies, working out an architecture for the application, encoding it in a program, writing specific code to test the application, and finally deploying it. This paper presents a design language and a tool suite covering the development life-cycle of a pervasive computing application. The design language allows us to define a taxonomy of area-specific building-blocks, abstracting over their heterogeneity. This language also includes a layer to define the architecture of an application, following an architectural pattern commonly used in the pervasive computing domain. Our underlying methodology assigns roles to the stakeholders, providing separation of concerns. Our tool suite includes a compiler that takes design artifacts written in our language as input and generates a programming framework that supports the subsequent development stages, namely, implementation, testing, and deployment. Our methodology has been applied on a wide spectrum of areas. Based on these experiments, we assess our approach through three criteria: expressiveness, usability, and productivity.},
  doi      = {10.1109/TSE.2011.107},
  groups   = {SCOPUS, IEEEDSML, excluidos},
  issn     = {0098-5589},
  keywords = {program compilers;software architecture;ubiquitous computing;architectural pattern;area-specific building-blocks;compiler;design artifacts;development life-cycle;distributed systems technologies;pervasive computing applications;tool-based development methodology;Computational modeling;Computer architecture;Domain specific languages;Pervasive computing;Programming;Software architecture;Taxonomy;Methodology;domain-specific language;generative programming;pervasive computing;programming support;simulation;toolkit},
}

@InProceedings{6890824,
  author        = {A. Rahman and D. Amyot},
  title         = {A DSL for importing models in a requirements management system},
  booktitle     = {Model-Driven Requirements Engineering Workshop (MoDRE), 2014 IEEE 4th International},
  year          = {2014},
  pages         = {37-46},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Requirements are artefacts often described with text and models. It is important to manage traceability between requirements and other software artefacts, including designs and test cases, also often captured with specialized models. Some Requirements Management Systems (RMS) support traceability relationships, between (textual) requirements artefacts in the RMS and model artefacts created outside the RMS, through complex standards or proprietary solutions. This paper proposes a new Domain-Specific Language (DSL) for describing the concepts of a modeling language intended to be traced using an RMS, with tool support handling the import and re-import of models and of their traceability links. The Model Import DSL (MI-DSL) is supported by an Xtext-based editor and the automatic generation of an import library targeting a leading RMS, namely IBM Rational DOORS. The language and the tools are demonstrated for model import and evolution scenarios with two different modeling languages. This work contributes a simple yet reliable mechanism to define and support traceability between requirements and models from different tools.},
  doi           = {10.1109/MoDRE.2014.6890824},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {formal specification;program diagnostics;program testing;software libraries;specification languages;IBM Rational DOORS;MI-DSL;RMS;Xtext-based editor;automatic generation;domain-specific language;import library;model artefacts;model import DSL;modeling language;requirements management system;software artefacts;test cases;textual requirements artefacts;tool support;traceability links;traceability relationships;Analytical models;Biological system modeling;Computational modeling;DSL;Libraries;Software;Unified modeling language;DOORS;DSL;evolution;model;requirements management;traceability, rank3},
}

@InProceedings{7372080,
  author    = {C. Artho and M. Seidl and Q. Gros and E. H. Choi and T. Kitamura and A. Mori and R. Ramler and Y. Yamagata},
  title     = {Model-Based Testing of Stateful APIs with Modbat},
  booktitle = {Automated Software Engineering (ASE), 2015 30th IEEE/ACM International Conference on},
  year      = {2015},
  pages     = {858-863},
  month     = {Nov},
  abstract  = {Modbat makes testing easier by providing a user-friendly modeling language to describe the behavior of systems, from such a model, test cases are generated and executed. Modbat's domain-specific language is based on Scala, its features include probabilistic and non-deterministic transitions, component models with inheritance, and exceptions. We demonstrate the versatility of Modbat by finding a confirmed defect in the currently latest version of Java, and by testing SAT solvers.},
  doi       = {10.1109/ASE.2015.95},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {Java;application program interfaces;computability;program testing;simulation languages;Java;Modbat;SAT solvers;Scala;domain-specific language;model-based testing;nondeterministic transitions;probabilistic transitions;stateful API;user-friendly modeling language;Arrays;DSL;Data models;Java;Libraries;Testing;component-based systems;domain-specific language;exception testing;extended finite-state machines;model-based testing;software test tools},
}

@InProceedings{7483269,
  author        = {M. Lachgar and A. Abdali},
  title         = {DSL and code generator for accelerating iOs apps development},
  booktitle     = {2015 Third World Conference on Complex Systems (WCCS)},
  year          = {2015},
  pages         = {1-8},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {A mobile application has become an important new way to reach customers. The use of smartphones and tablets has also increased, but it's always difficult to create a new application. This requires specific knowledge and experience to successfully operate all features. The heterogeneity development tools and languages in mobile apps makes difficult to develop multi-platform mobile applications. Thus, it requires developers to make a choice on the platform, while ensuring the widest possible dissemination. The strategy "write once, deploy anywhere" is a smart way to develop mobile applications. In fact, it equips developers with what they need to keep ahead of the game. The aim of this work is to define an independent language of the platform then generate native code for iOS applications using an MDA approach. For this, we opt for a specific language (DSL) to increase the productivity of software engineers by abstracting low-level boilerplate code.},
  doi           = {10.1109/ICoCS.2015.7483269},
  groups        = {SCOPUS, IEEEDSML, Duplicados},
  keywords      = {mobile computing;program compilers;smart phones;DSL;MDA approach;code generator;iOs apps development;low-level boilerplate code;multiplatform mobile applications;smartphones;software engineers;Computational modeling;DSL;Data models;Mobile communication;Operating systems;Smart phones;Unified modeling language;Automatic code generation;Domain-Specific Language;Mobile development;Model Driven Architecture;Native Code;iOS Apps, rank3},
}

@InProceedings{6322875,
  author    = {J. M. P. Cardoso},
  title     = {Programming strategies for runtime adaptability},
  booktitle = {Reconfigurable Communication-centric Systems-on-Chip (ReCoSoC), 2012 7th International Workshop on},
  year      = {2012},
  pages     = {1-8},
  month     = {July},
  abstract  = {Future advanced embedded computing systems are expected to dynamically adapt applications' behavior and runtime system according to, e.g., usage contexts, operating environments, resources' availability, and battery energy levels. Besides application's functionalities provided by high-level and/or executable binary codes, code for specifying strategies/policies to extend typical functionalities with adaptability behavior is required. A domain-specific language, able to program this adaptability behavior, will allow developers to specify strategies for adaptation, will improve portability, and will help tools to map those strategies to the target system. This paper presents our recent ideas for programming strategies focused on runtime adaptability. The ideas are exposed using extensions to LARA, an aspect-oriented programming language, agnostic to the target language and system. We show examples of using LARA to specify strategies and we comment on the possible implementations to make viable those strategies.},
  doi       = {10.1109/ReCoSoC.2012.6322875},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {aspect-oriented programming;binary codes;embedded systems;object-oriented languages;program compilers;program diagnostics;software portability;software process improvement;LARA;adaptability behavior;application functionalities;aspect-oriented programming language;domain-specific language;dynamic application behavior adaptation;embedded computing systems;executable binary codes;high-level binary codes;portability improvement;programming strategies;runtime adaptability;runtime system;strategy specification code;Batteries;Context;Energy states;Java;Reactive power;Runtime;Weaving;FPGAs;LARA;aspect-oriented programming;compilers;embedded computing;runtime adaptability},
}

@InProceedings{7349651,
  author        = {P. Li and E. Brunet and F. Trahay and C. Parrot and G. Thomas and R. Namyst},
  title         = {Automatic OpenCL Code Generation for Multi-device Heterogeneous Architectures},
  booktitle     = {Parallel Processing (ICPP), 2015 44th International Conference on},
  year          = {2015},
  pages         = {959-968},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Using multiple accelerators, such as GPUs or Xeon Phis, is attractive to improve the performance of large data parallel applications and to increase the size of their workloads. However, writing an application for multiple accelerators remains today challenging because going from a single accelerator to multiple ones indeed requires to deal with potentially non-uniform domain decomposition, inter-accelerator data movements, and dynamic load balancing. Writing such code manually is time consuming and error-prone. In this paper, we propose a new programming tool called STEPOCL along with a new domain specific language designed to simplify the development of an application for multiple accelerators. We evaluate both the performance and the usefulness of STEPOCL with three applications and show that: (i) the performance of an application written with STEPOCL scales linearly with the number of accelerators, (ii) the performance of an application written using STEPOCL competes with a handwritten version, (iii) larger workloads run on multiple devices that do not fit in the memory of a single device, (iv) thanks to STEPOCL, the number of lines of code required to write an application for multiple accelerators is roughly divided by ten.},
  doi           = {10.1109/ICPP.2015.105},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {0190-3918},
  keywords      = {graphics processing units;parallel processing;program compilers;resource allocation;specification languages;GPU;STEPOCL;Xeon Phis;automatic OpenCL code generation;data parallel applications;domain specific language;dynamic load balancing;interaccelerator data movements;multidevice heterogeneous architectures;programming tool;Arrays;Hardware;Kernel;Performance evaluation;Programming;Synchronization;Writing;Accelerators;Code generation;Heterogeneous architectures;OpenCL, rank3},
}

@InProceedings{6676947,
  author        = {J. v. d. Bos and T. v. d. Storm},
  title         = {TRINITY: An IDE for the Matrix},
  booktitle     = {Software Maintenance (ICSM), 2013 29th IEEE International Conference on},
  year          = {2013},
  pages         = {520-523},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Digital forensics software often has to be changed to cope with new variants and versions of file formats. Developers reverse engineer the actual files, and then change the source code of the analysis tools. This process is error-prone and time consuming because the relation between the newly encountered data and how the source code must be changed is implicit. TRINITY is an integrated debugging environment which makes this relation explicit using the DERRIC DSL for describing file formats. TRINITY consists of three simultaneous views: 1) the runtime state of an analysis, 2) a hex view of the actual data, and 3) the file format description. Cross-view trace ability links allow developers to better understand how the file format description should be modified. TRINITY aims to make the process of adapting digital forensics software more effective and efficient.},
  doi           = {10.1109/ICSM.2013.86},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {1063-6773},
  keywords      = {data flow analysis;digital forensics;program debugging;reverse engineering;software maintenance;DERRIC DSL;IDE;TRINITY;actual data hexview;analysis runtime state;cross-view traceability links;digital forensics software;domain-specific language;file format description;integrated debugging environment;reverse engineering;Debugging;Digital forensics;Layout;Maintenance engineering;Reverse engineering;Runtime;Software;domain-specific language;integrated development environment;model-driven engineering;reverse engineering;software maintenance, rank3},
}

@InProceedings{7020511,
  author    = {G. Kövesdán and M. Asztalos and L. Lengyel},
  title     = {Fast android application development with component modeling},
  booktitle = {Cognitive Infocommunications (CogInfoCom), 2014 5th IEEE Conference on},
  year      = {2014},
  pages     = {515-520},
  month     = {Nov},
  abstract  = {Application of mobile and cyber-physical systems play an important role in cognitive infocommunications, especially in the Socio-Cognitive ICT area, because they are able to facilitate the requested information to users quickly. The Android platform is a good foundation for such systems since it runs on a wide variety of devices and provides some advanced mechanisms for integrating loosely coupled components. These capabilities facilitate efficient component-based development. However, these mechanisms also introduce some difficulties into the development process. On one hand, some functionalities are not encapsulated into a single piece of code but have to be implemented and configured at several distinct source files. On the other hand, it is easy to break the consistency among these artefacts. In this paper, we report on our work in progress tool, which addresses these issues by modeling commonly used functionalities in Android applications and generating a skeleton for the implementation. We also report on the design of this tool. The tool and the experiences of its development will be useful for software developers that aspire to create code generators and cognitive infocommunications related mobile applications based on the Android platform.},
  doi       = {10.1109/CogInfoCom.2014.7020511},
  groups    = {IEEEDSL, excluidos},
  keywords  = {Android (operating system);embedded systems;integrated software;mobile computing;object-oriented programming;program compilers;software development management;Android application development;code generator;cognitive infocommunication;component modeling;component-based development;cyber-physical system;loosely coupled component integration;mobile applications;socio-cognitive ICT;software developers;Androids;DSL;Generators;Humanoid robots;Java;Syntactics;Unified modeling language;Android;Socio-Cognitive ICT;code generation;cognitive infocommunications;cyber-physical system;domain-specific modeling;model transformation;modeling},
}

@InProceedings{7377821,
  author    = {M. Jančár and S. Chodarev},
  title     = {A generative framework for development of CRUD-based Linux desktop applications},
  booktitle = {Scientific Conference on Informatics, 2015 IEEE 13th International},
  year      = {2015},
  pages     = {133-138},
  month     = {Nov},
  abstract  = {CRUD applications, i.e. applications focused on creating, reading, updating and deleting data records, have always been commonly used. Nonetheless, to the authors' knowledge there is no framework or tool targeting this class of applications in the Gnome desktop environment (using GTK+ widget toolkit). This paper describes a framework based on the model-driven development paradigm for generating CRUD desktop applications with a hierarchic layout and bindings between user interface elements from models expressed in YAML and in domain-specific languages embedded in Vala or Genie. It demonstrates a usability of the recent modern programming language - Vala - and also shows how to extend a functionality of its compiler.},
  doi       = {10.1109/Informatics.2015.7377821},
  groups    = {SCOPUS, excluidos},
  keywords  = {Linux;program compilers;programming languages;records management;user interfaces;CRUD-based Linux desktop applications;GTK+ widget toolkit;Genie;Gnome desktop environment;Vala;YAML;compiler functionality;data record creation;data record deletion;data record reading;data record updation;domain-specific languages;model-driven development paradigm;programming language;user interface elements;DSL;Generators;Informatics;Linux;Load modeling;Syntactics},
}

@InProceedings{6605868,
  author        = {A. J. Mooij and J. Hooman and R. Albers},
  title         = {Gaining Industrial Confidence for the Introduction of Domain-Specific Languages},
  booktitle     = {Computer Software and Applications Conference Workshops (COMPSACW), 2013 IEEE 37th Annual},
  year          = {2013},
  pages         = {662-667},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-Specific Languages (DSLs) receive attention as the possible next abstraction step in programming. Despite the benefits of using DSLs, in the industry there is also some reluctance against their introduction in product development. We address a number of issues that are important to gain industrial confidence for the introduction of DSLs. These include the available tools, the quality of generated code, and the incorporation in the industrial workflow. Our observations are based on an industrial study project at Philips Healthcare, especially concerning the development of a DSL for collision prevention. We also relate our experiences to the literature.},
  doi           = {10.1109/COMPSACW.2013.83},
  groups        = {ACM, SCOPUS, Duplicados},
  keywords      = {health care;product development;programming languages;software engineering;DSL;Philips healthcare;domain-specific languages;industrial confidence;product development;Abstracts;Concrete;DSL;Debugging;Generators;Guidelines;Syntactics, rank3},
}

@InProceedings{7245730,
  author    = {M. Schmid and O. Reiche and F. Hannig and J. Teich},
  title     = {Loop coarsening in C-based High-Level Synthesis},
  booktitle = {2015 IEEE 26th International Conference on Application-specific Systems, Architectures and Processors (ASAP)},
  year      = {2015},
  pages     = {166-173},
  month     = {July},
  abstract  = {Current tools for High-Level Synthesis (HLS) excel at exploiting Instruction-Level Parallelism (ILP), the support for Data-Level Parallelism (DLP), one of the key advantages of Field Programmable Gate Arrays (FPGAs), is in contrast very limited. This work examines the exploitation of DLP on FPGAs using code generation for C-based HLS of image filters and streaming pipelines, consisting of point and local operators. In addition to well known loop tiling techniques, we propose loop coarsening, which delivers superior performance and scalability. Loop tiling corresponds to splitting an image into separate regions, which are then processed in parallel by replicated accelerators. For data streaming, this also requires the generation of glue logic for the distribution of image data. Conversely, loop coarsening allows to process multiple pixels in parallel, whereby only the kernel operator is replicated within a single accelerator. We augment the FPGA back end of the heterogeneous Domain-Specific Language (DSL) framework HIPAcc by loop coarsening and compare the resulting FPGA accelerators to highly optimized software implementations for Graphics Processing Units (GPUs), all generated from the exact same code base. Moreover, we demonstrate the advantages of code generation for algorithm development by outlining how design space exploration enabled by HIPAcc can yield a more efficient implementation than hand-coded VHDL.},
  doi       = {10.1109/ASAP.2015.7245730},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  issn      = {1063-6862},
  keywords  = {C language;field programmable gate arrays;graphics processing units;hardware description languages;high level synthesis;image filtering;image segmentation;pipeline processing;program compilers;program control structures;C-based HLS;C-based high-level synthesis;DLP;FPGA accelerator;FPGA back end;GPU;HIPAcc;ILP;VHDL;algorithm development;code generation;data streaming;data-level parallelism;design space exploration;field programmable gate arrays;glue logic generation;graphics processing units;heterogeneous DSL framework;heterogeneous domain-specific language framework;image data distribution;image filter;image splitting;instruction-level parallelism;kernel operator;local operator;loop coarsening;loop tiling technique;parallel multiple pixel processing;point operator;replicated accelerators;streaming pipeline;Algorithm design and analysis;Field programmable gate arrays;Image processing;Kernel;Parallel processing;Pipelines;Streaming media},
}

@Article{6875916,
  author   = {H. Choi and W. Choi and T. M. Quan and D. G. C. Hildebrand and H. Pfister and W. K. Jeong},
  title    = {Vivaldi: A Domain-Specific Language for Volume Processing and Visualization on Distributed Heterogeneous Systems},
  journal  = {IEEE Transactions on Visualization and Computer Graphics},
  year     = {2014},
  volume   = {20},
  number   = {12},
  pages    = {2407-2416},
  month    = {Dec},
  abstract = {As the size of image data from microscopes and telescopes increases, the need for high-throughput processing and visualization of large volumetric data has become more pressing. At the same time, many-core processors and GPU accelerators are commonplace, making high-performance distributed heterogeneous computing systems affordable. However, effectively utilizing GPU clusters is difficult for novice programmers, and even experienced programmers often fail to fully leverage the computing power of new parallel architectures due to their steep learning curve and programming complexity. In this paper, we propose Vivaldi, a new domain-specific language for volume processing and visualization on distributed heterogeneous computing systems. Vivaldi's Python-like grammar and parallel processing abstractions provide flexible programming tools for non-experts to easily write high-performance parallel computing code. Vivaldi provides commonly used functions and numerical operators for customized visualization and high-throughput image processing applications. We demonstrate the performance and usability of Vivaldi on several examples ranging from volume rendering to image segmentation.},
  doi      = {10.1109/TVCG.2014.2346322},
  groups   = {SCOPUS, IEEEDSML, Inclusos},
  issn     = {1077-2626},
  keywords = {data visualisation;image processing;microscopes;parallel processing;rendering (computer graphics);telescopes;visual languages;GPU accelerators;GPU clusters;Vivaldi Python-like grammar;customized visualization;distributed heterogeneous systems;domain-specific language;flexible programming tools;high-performance distributed heterogeneous computing systems;high-performance parallel computing code;high-throughput image processing applications;high-throughput processing;image data;image segmentation;many-core processors;microscopes;numerical operators;parallel architectures;parallel processing abstractions;programming complexity;steep learning curve;telescopes;volume processing;volume rendering;volumetric data visualization;Computational modeling;Data models;Data visualization;Graphics processing units;Image classification;Parallel processing;Rendering (computer graphics);Domain-specific language;GPU computing;distributed heterogeneous systems;volume rendering;0},
}

@InProceedings{6758722,
  author    = {T. Tuunanen and M. Przybilski},
  title     = {Domain Specific Case Tool for ICT-Enabled Service Design},
  booktitle = {2014 47th Hawaii International Conference on System Sciences},
  year      = {2014},
  pages     = {955-964},
  month     = {Jan},
  abstract  = {One major problem in service design is the limited availability of information gathered during the development process. In particular, information on end-user requirements is difficult for designers, developers, and maintainers to access. Here, we provide a mechanism that supports the gathering and modeling of various types of information throughout the service and software development life cycle. As various existing tools focus on a particular part of the life cycle, essential information is not available, or it is more difficult to obtain in later stages. The linkage between information collected in the different stages is often lost. The implemented tool support enables the modeling of requirements; the abstraction of these requirements in the form of the required system functionalities, which can also be modeled; and the connection with component-based software engineering to support the design of ICT-enabled services.},
  doi       = {10.1109/HICSS.2014.126},
  groups    = {IEEEDSL, Duvida},
  issn      = {1530-1605},
  keywords  = {object-oriented methods;object-oriented programming;software tools;ICT-enabled service design;component-based software engineering;development process;domain specific case tool;end-user requirements;information throughout;information-and-communications technology;service life cycle;software development life cycle;system functionalities;Adaptation models;Analytical models;Computational modeling;Computers;Software;Unified modeling language;DSL;ICT;RAD},
}

@InProceedings{6690570,
  author        = {I. Monahov and T. Reschenhofer and F. Matthes},
  title         = {Design and Prototypical Implementation of a Language Empowering Business Users to Define Key Performance Indicators for Enterprise Architecture Management},
  booktitle     = {2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
  year          = {2013},
  pages         = {337-346},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {To measure the achievement of predefined Enterprise Architecture Management (EAM) goals, it is essential to empower business users to define organization-specific Key Performance Indicators (KPIs). However, to support tool-based calculation of such KPIs, a formal model-based query language is required for their definition and calculation. In this paper we first examine existing general-purpose query languages regarding their suitability for the definition of business-user-specific KPIs in a collaborative environment. Thereafter, we justify the demand for a domain-specific query language ensuring a balance between the strengths of existing query languages and the size and purpose of the EAM domain. Based on this, we outline important design details and a prototypical implementation of such a language in a EAM tool. Finally, our language design is being evaluated by the implementation of suggested EAM KPIs from literature on the one hand, and by the development of a prototype for the use in an EU project on the other hand.},
  doi           = {10.1109/EDOCW.2013.44},
  groups        = {SCOPUS, IEEEDSML, Duplicados},
  issn          = {2325-6583},
  keywords      = {business data processing;groupware;query languages;EAM;EU project;business users;business-user-specific KPI;collaborative environment;domain-specific query language;enterprise architecture management;formal model-based query language;general-purpose query languages;language design;organization-specific key performance indicators;tool-based calculation;Business;Collaboration;Computer architecture;DSL;Database languages;Standards;Unified modeling language;Enterprise architecture management;domain specific language;key performance indicators, rank3},
}

@InProceedings{6468530,
  author    = {K. L. Spafford and J. S. Vetter},
  title     = {Aspen: A domain specific language for performance modeling},
  booktitle = {High Performance Computing, Networking, Storage and Analysis (SC), 2012 International Conference for},
  year      = {2012},
  pages     = {1-11},
  month     = {Nov},
  abstract  = {We present a new approach to analytical performance modeling using Aspen, a domain specific langauge. Aspen (Abstract Scalable Performance Engineering Notation) fills an important gap in existing performance modeling techniques and is designed to enable rapid exploration of new algorithms and architectures. It includes a formal specification of an application's performance behavior and an abstract machine model. We provide an overview of Aspen's features and demonstrate how it can be used to express a performance model for a three dimensional Fast Fourier Transform. We then demonstrate the composability and modularity of Aspen by importing and reusing the FFT model in a molecular dynamics model. We have also created a number of tools that allow scientists to balance application and system factors quickly and accurately.},
  doi       = {10.1109/SC.2012.20},
  groups    = {SCOPUS, IEEEDSML, Inclusos},
  issn      = {2167-4329},
  keywords  = {fast Fourier transforms;formal specification;molecular dynamics method;physics computing;specification languages;Aspen language;FFT model;abstract machine model;abstract scalable performance engineering notation;analytical performance modeling;application performance behavior;domain specific language;fast Fourier transform;formal specification;molecular dynamics model;Analytical models;Computational modeling;Computer architecture;Hardware;Kernel;Mathematical model;Predictive models},
}

@InProceedings{6642514,
  author    = {R. Silva and A. Mota and R. R. Starr},
  title     = {Creating GUI-based DSL formal tools},
  booktitle = {Information Reuse and Integration (IRI), 2013 IEEE 14th International Conference on},
  year      = {2013},
  pages     = {520-527},
  month     = {Aug},
  abstract  = {In this paper we propose a rigorous methodology to create GUI-based DSLs formal tools. From a formal specification of a DSL we extract a metamodel and create a user-friendly (GUI) front-end. Then we use a code synthesizer to create a formally verified back-end. At the end we link both parts using a wrapper solution. We aim at providing a productive and trustworthy development methodology to safety critical industries.},
  doi       = {10.1109/IRI.2013.6642514},
  groups    = {SCOPUS, Inclusos},
  keywords  = {formal verification;graphical user interfaces;specification languages;trusted computing;GUI-based DSL formal tools;code synthesizer;formal specification;formally verified back-end;safety critical industries;trustworthy development methodology;user-friendly front-end;wrapper solution;Abstracts;DSL;Graphical user interfaces;Logic gates;Reactive power;Semantics;Syntactics},
}

@InProceedings{6240732,
  author    = {A. Kerner and P. Cota},
  title     = {Analyses and optimisation of ADSL/VDSL lines using ericsson APM system - comparing results of two operators},
  booktitle = {MIPRO, 2012 Proceedings of the 35th International Convention},
  year      = {2012},
  pages     = {681-685},
  month     = {May},
  abstract  = {In this article we explain approach in using Access Performance Manager System (APM) for analyses of ADSL lines in production of broadband (BB) Operator. Results of monitoring and optimization are shown. In our case optimization is done by DAO subsystem. We compare results of two Operators with the same goal to maximize service availability with minimum decrease of service characteristics, specially speed in downstream. APM has purpose for monitoring of all performances of BB system as well as interdependency of lines. APM monitoring and optimization of line parameters is based on changing of End User Profiles and using line testing mechanism integrated in DSLAM devices. APM is designed around a selection of configurable batch jobs that store vital Line Test (SELT and Loop Diagnostic) and DSL-link parameters in the APM database. By selecting the appropriate view, it is possible to follow and understand faulty behaviour in detail. APM is also equipped with a real-time view that is essential when troubleshooting on a per-line basis or when re-configuring a DSL link online. Support for equipment/DSLAM of other vendors than Ericsson is also implemented in APM. APM offers several tools that are designed to solve different problems in a DSL-based network.},
  groups    = {SCOPUS, excluidos},
  keywords  = {digital subscriber lines;ADSL/VDSL lines analyses;ADSL/VDSL lines optimisation;APM monitoring;BB system;DAO subsystem;DSL link online;DSL-based network;DSL-link parameters;DSLAM devices;Ericsson APM system;SELT;access performance manager system;broadband operator;end user profiles;equipment/DSLAM;faulty behaviour;line testing mechanism;loop diagnostic;troubleshooting;vital line test;Broadband communication;DSL;Delay;IPTV;Monitoring;Optimization;Signal to noise ratio},
}

@InProceedings{7385993,
  author    = {M. R. Blackburn and P. O. Denno},
  title     = {Using semantic web technologies to integrate models to analytical tools},
  booktitle = {Complex Systems Engineering (ICCSE), 2015 International Conference on},
  year      = {2015},
  pages     = {1-5},
  month     = {Nov},
  abstract  = {This paper discusses the potential advantages and pitfalls of using semantic web technologies in the process of preparing engineering analyses. Analytical tools are often not designed to be integrated with disparate information sources and general-purpose modeling tools and often do not support the detection of problems across domains. Conversely, modeling tools may not capture and represent explicitly the information needed to leverage the capabilities of analytical tools. The method described uses semantic web technology as the integrating mechanism between domain-specific models (DSM) and analytical tools. We describe a method and tools for representing analytical knowledge through semantic web ontologies that map between the metamodels of both the DSM and analytical tools. We compare an earlier tool chain prototype with a significantly revised prototype to reflect on the benefits of using semantic web technologies as an integrating mechanism. A potential advantage is the ability to explicitly and transparently represent the relationships between modeling and analytical tools.},
  doi       = {10.1109/ComplexSys.2015.7385993},
  groups    = {IEEEDSL, excluidos},
  keywords  = {knowledge representation;semantic Web;DSM;analytical knowledge representation;analytical tools;domain specific models;engineering analyses;general purpose modeling tools;information sources;integrate models;semantic Web technologies;Analytical models;DSL;OWL;Ontologies;Prototypes;Resource description framework;cyber physical systems;domain specific modeling;metamodeling;model-centric engineering;ontologies;semantic web},
}

@InProceedings{6575306,
  author        = {M. Biely and P. Delgado and Z. Milosevic and A. Schiper},
  title         = {Distal: A framework for implementing fault-tolerant distributed algorithms},
  booktitle     = {2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
  year          = {2013},
  pages         = {1-8},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {We introduce Distal, a new framework that simplifies turning pseudocode of fault tolerant distributed algorithms into efficient executable code. Without proper tool support, even small amounts of pseudocode normally ends up in several thousands of non-trivial lines of Java or C++. Distal is implemented as a library in Scala and consists of two main parts: a domain specific language (DSL) in which algorithms are expressed and an efficient messaging layer that deals with low level issues such as connection management, threading and (de)serialization. The DSL is designed such that implementations of distributed algorithms highly resemble the pseudocode found in research papers. By writing code that is close to the protocol description, one can be more convinced that the implemented system really reflects the protocol specification on paper. Distal does not only make it simple and intuitive to implement distributed algorithms but it also leads to efficient implementations.},
  doi           = {10.1109/DSN.2013.6575306},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {1530-0889},
  keywords      = {C++ language;Java;distributed algorithms;protocols;software fault tolerance;software libraries;C++;DSL;Distal;Java;Scala;domain specific language;executable code;fault tolerant distributed algorithms;protocol description;protocol specification;pseudocode turning;Algorithm design and analysis;DSL;Distributed algorithms;Fault tolerance;Fault tolerant systems;Java;Protocols;DSL;Paxos;SMR;fault-tolerant distributed algorithms, rank3},
}

@InProceedings{6227148,
  author        = {M. Song and E. Tilevich},
  title         = {Metadata invariants: Checking and inferring metadata coding conventions},
  booktitle     = {2012 34th International Conference on Software Engineering (ICSE)},
  year          = {2012},
  pages         = {694-704},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {As the prevailing programming model of enterprise applications is becoming more declarative, programmers are spending an increasing amount of their time and efforts writing and maintaining metadata, such as XML or annotations. Although metadata is a cornerstone of modern software, automatic bug finding tools cannot ensure that metadata maintains its correctness during refactoring and enhancement. To address this shortcoming, this paper presents metadata invariants, a new abstraction that codifies various naming and typing relationships between metadata and the main source code of a program. We reify this abstraction as a domain-specific language. We also introduce algorithms to infer likely metadata invariants and to apply them to check metadata correctness in the presence of program evolution. We demonstrate how metadata invariant checking can help ensure that metadata remains consistent and correct during program evolution; it finds metadata-related inconsistencies and recommends how they should be corrected. Similar to static bug finding tools, a metadata invariant checker identifies metadata-related bugs as a program is being refactored and enhanced. Because metadata is omnipresent in modern software applications, our approach can help ensure the overall consistency and correctness of software as it evolves.},
  doi           = {10.1109/ICSE.2012.6227148},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {0270-5257},
  keywords      = {meta data;program debugging;software maintenance;specification languages;domain-specific language;enterprise application programming model;metadata coding convention checking;metadata coding convention inferring;metadata invariant checking;naming relationships;program evolution;program source code;static bug finding tools;typing relationships;Computer bugs;Inference algorithms;Java;Programming;Runtime;Syntactics;XML;bug finding;domain-specific languages;enhancement;frameworks;invariants;metadata;refactoring;software maintenance, rank3},
}

@Article{6676814,
  author        = {S. Schivo and J. Scholma and B. Wanders and R. A. U. Camacho and P. E. van der Vet and M. Karperien and R. Langerak and J. van de Pol and J. N. Post},
  title         = {Modeling Biological Pathway Dynamics With Timed Automata},
  journal       = {IEEE Journal of Biomedical and Health Informatics},
  year          = {2014},
  volume        = {18},
  number        = {3},
  pages         = {832-839},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Living cells are constantly subjected to a plethora of environmental stimuli that require integration into an appropriate cellular response. This integration takes place through signal transduction events that form tightly interconnected networks. The understanding of these networks requires capturing their dynamics through computational support and models. ANIMO (analysis of Networks with Interactive Modeling) is a tool that enables the construction and exploration of executable models of biological networks, helping to derive hypotheses and to plan wet-lab experiments. The tool is based on the formalism of Timed Automata, which can be analyzed via the UPPAAL model checker. Thanks to Timed Automata, we can provide a formal semantics for the domain-specific language used to represent signaling networks. This enforces precision and uniformity in the definition of signaling pathways, contributing to the integration of isolated signaling events into complex network models. We propose an approach to discretization of reaction kinetics that allows us to efficiently use UPPAAL as the computational engine to explore the dynamic behavior of the network of interest. A user-friendly interface hides the use of Timed Automata from the user, while keeping the expressive power intact. Abstraction to single-parameter kinetics speeds up construction of models that remain faithful enough to provide meaningful insight. The resulting dynamic behavior of the network components is displayed graphically, allowing for an intuitive and interactive modeling experience.},
  doi           = {10.1109/JBHI.2013.2292880},
  groups        = {SCOPUS, IEEEDSML, Compendex, Duplicados},
  issn          = {2168-2194},
  keywords      = {cellular biophysics;neurophysiology;ANIMO method;UPPAAL model checker;analysis of Networks with Interactive Modeling;biological pathway dynamics;cellular response;environmental stimuli;living cells;reaction kinetics;signal transduction events;tightly interconnected networks;timed automata;Automata;Biological system modeling;Computational modeling;Data models;Kinetic theory;Mathematical model;Dynamic behavior;Timed Automata;modeling;signaling pathway;0, rank3},
}

@InProceedings{7051890,
  author        = {F. P. Basso and C. M. L. Werner and T. C. Oliveira},
  title         = {Towards facilities to introduce solutions for MDE in development environments with reusable assets},
  booktitle     = {Information Reuse and Integration (IRI), 2014 IEEE 15th International Conference on},
  year          = {2014},
  pages         = {195-202},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Model Driven Engineering (MDE) is a software development paradigm that promotes improvements in productivity through reuse of software model specifications. Although much effort has been dedicated for more than ten years, MDE has not achieved expressive use. In this paper we address the problem of a lack of a knowledge base about MDE-based solutions, a reason that hampers MDE in practice. To surpass it we propose a domain specific language named RAS++ that represents these solutions as reusable assets. Assets are composed by reuse structures and semantics for the execution of technical solutions for Automated Software Engineering, fostering the integration of tasks for MDE in development environments. Facilities are introduced through some supporting tools: one to design reusable assets and other to integrate them in target development environments. Practical experiences have proven to be promising, suggesting that reusable assets promote some benefits not allowed by other approaches, such as the possibility of a distributed base of knowledge for ASE solutions.},
  doi           = {10.1109/IRI.2014.7051890},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {software reusability;specification languages;MDE-based solutions;RAS++;automated software engineering;domain specific language;knowledge base;model driven engineering;reusable asset design;reuse semantics;reuse structures;software development paradigm;software model specifications;Adaptation models;Automation;Context;Object oriented modeling;Proposals;Software;Unified modeling language;Asset Management Specification;Automated Software Engineering;Model Driven Engineering;Reusable Asset Specification;Reuse of Tasks, rank3},
}

@InProceedings{6419547,
  author    = {S. Kartalija and I. Letvenčuk and J. Grahovac and J. Kovacevic},
  title     = {One solution of implementation assembler editor on the Java platform using the Xtext framework},
  booktitle = {Telecommunications Forum (TELFOR), 2012 20th},
  year      = {2012},
  pages     = {1673-1676},
  month     = {Nov},
  abstract  = {In this paper, using the Xtext framework describes the implementation of an assembler editor for the development of assembly code. This editor supports specific assembler instructions. In addition to the editors realized the set of additional tools which substantially facilitate the development and to use assembler editor. User, are available to other settings of the editor, the editor content monitoring, recognizing the same instructions and an automatic assistant to the prediction based on the user provides certain features of the language development. Xtext provides modern API for describing different aspects of DSL programming languages. Language developed in Xtext framework is independent of Eclipse and can be used in any Java environment.},
  doi       = {10.1109/TELFOR.2012.6419547},
  groups    = {IEEEDSL, Duvida},
  keywords  = {Java;application program interfaces;program assemblers;public domain software;API;DSL programming languages;Eclipse;Java environment;Java platform;Xtext framework;assembler editor;assembler instructions;assembly code;editor content monitoring;language development;Conferences;DSL;Digital signal processing;Domain specific languages;Electronic mail;Java;Reduced instruction set computing;DSL;Eclipse;IDE;Java;Xtext okvir;asembler uređivač;gramatika},
}

@InProceedings{6229790,
  author        = {D. Ratiu and B. Schaetz and M. Voelter and B. Kolb},
  title         = {Language engineering as an enabler for incrementally defined formal analyses},
  booktitle     = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012 Formal Methods in},
  year          = {2012},
  pages         = {9-15},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {There is a big semantic gap between today's general purpose programming languages on the one hand and the input languages of formal verification tools on the other hand. This makes integrating formal analyses into the daily development practice artificially complex. In this paper we advocate that the use of language engineering techniques can substantially improve this situation along three dimensions. First, more abstract and thus more analyzable domain specific languages can be defined, avoiding the need for abstraction recovery from programs written in general purpose languages. Second, restrictions on the use of existing languages can be imposed and thereby more analyzable code can be obtained and analyses can be incrementally defined. Third, by expressing verification conditions and the verification results at the domain level, they are easier to define and the results of analyses are easier to interpret by end users. We exemplify our approach with three domain specific language fragments integrated into the C programming language, together with a set of analyses: completeness and consistency of decision tables, model-checking-based analyses for a dialect of state machines and consistency of feature models. The examples are based on the mbeddr stack, an extensible C language and IDE for embedded software development.},
  doi           = {10.1109/FormSERA.2012.6229790},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {C language;decision tables;finite state machines;formal verification;C programming language;abstraction recovery;daily development practice;decision tables completeness;decision tables consistency;domain level;domain specific languages;embedded software development;feature models consistency;formal analysis integration;formal verification tools;incrementally defined formal analysis;language engineering techniques;mbeddr stack;model checking-based analysis;programming languages;semantic gap;state machines;verification conditions;Abstracts;Analytical models;Computer languages;Concrete;DSL;Semantics;Syntactics, rank3},
}

@InProceedings{7306927,
  author    = {F. Pramudianto and C. A. Kamienski and E. Souto and F. Borelli and L. L. Gomes and D. Sadok and M. Jarke},
  title     = {IoT Link: An Internet of Things Prototyping Toolkit},
  booktitle = {Ubiquitous Intelligence and Computing, 2014 IEEE 11th Intl Conf on and IEEE 11th Intl Conf on and Autonomic and Trusted Computing, and IEEE 14th Intl Conf on Scalable Computing and Communications and Its Associated Workshops (UTC-ATC-ScalCom)},
  year      = {2014},
  pages     = {1-9},
  month     = {Dec},
  abstract  = {The Internet of Things (IoT) application development is a complex task that requires a wide range of expertise. Currently, the IoT community lacks a development toolkit that enables inexperienced developers to develop IoT prototypes rapidly. Filling this gap, we propose a development toolkit based on a model-driven approach, called IoT Link. IoT Link allows inexperienced developers to compose mash up applications through a graphical domain-specific language that can be easily configured and wired together to create an IoT application. Through visual components, IoT Link encapsulates the complexity of communicating with devices and services on the internet and abstracts them as virtual objects that are accessible through different communication technologies. Consequently, it solves interoperability between heterogeneous IoT components. Based on the visual model, IoT Link is able to generate a complete Java project including an extendable Java code. In a controlled experiment, IoT Link was 42% faster than using a Java library and able to outperform the Java library's user satisfactions.},
  doi       = {10.1109/UIC-ATC-ScalCom.2014.95},
  groups    = {SCOPUS, IEEEDSML, excluidos},
  keywords  = {Internet of Things;Java;open systems;software prototyping;software tools;Internet of Things;IoT Link;IoT application development;IoT prototyping toolkit;Java code;interoperability;Conferences;Internet of things;Java;Mashups;Object oriented modeling;Unified modeling language;Visualization;Internet of Things;code generation;development tool;mashup;model driven development},
}

@InProceedings{7203102,
  author        = {A. Caracciolo},
  title         = {A Unified Approach to Automatic Testing of Architectural Constraints},
  booktitle     = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  year          = {2015},
  volume        = {2},
  pages         = {871-874},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Architectural decisions are often encoded in the form of constraints and guidelines. Non-functional requirements can be ensured by checking the conformance of the implementation against this kind of invariant. Conformance checking is often a costly and error-prone process that involves the use of multiple tools, differing in effectiveness, complexity and scope of applicability. To reduce the overall effort entailed by this activity, we propose a novel approach that supports verification of human-readable declarative rules through the use of adapted off-the-shelf tools. Our approach consists of a rule specification DSL, called Dicto, and a tool coordination framework, called Probo. The approach has been implemented in a soon to be evaluated prototype.},
  doi           = {10.1109/ICSE.2015.281},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {0270-5257},
  keywords      = {automatic test software;formal specification;program testing;software architecture;Dicto;Probo;architectural decisions;automatic architectural constraint testing;conformance checking;error-prone process;human-readable declarative rule verification;nonfunctional requirements;rule specification DSL;tool coordination framework;unified approach;Computer architecture;DSL;Guidelines;Software;Software architecture;Stakeholders;Testing;architectural constraints;conformance checking;software architecture, rank3},
}

@InProceedings{6195190,
  author    = {R. Dreesen},
  title     = {ViDL: A Versatile ISA Description Language},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2012 IEEE 19th International Conference and Workshops on},
  year      = {2012},
  pages     = {222-231},
  month     = {April},
  abstract  = {Application specific processors as part of systems-on-a-chip (SoCs) have become increasingly popular in recent years. The need for efficient development of such processors raises the demand for simple and reliable tools and respective specification languages. This paper presents the Versatile Instruction Set Architecture Description Language (ViDL), to formally define (application specific) instruction sets. Simulators and processor implementations are then generated from such specifications. The language features functional and domain specific concepts to allow for rapid and simple specification of realistic instruction sets. In contrast to related approaches, ViDL strictly abstracts from micro architectural aspects, such as the instruction pipeline and hazard resolution. These aspects are shifted from the developer to a generator, which greatly simplifies specification and increases reliability. From the very same ViDL specification, we can automatically generate consistent instruction set simulators (40 - 140 MIPS), web-based simulators, and a set of processors with different pipeline structures (2-7 stages, 300-650 MHz). Formalization of instruction sets (ARM, MIPS, Power, SRC, and Core VA) in ViDL has shown to be simple. It took only between 2 month and 90 minutes.},
  doi       = {10.1109/ECBS.2012.49},
  groups    = {SCOPUS, excluidos},
  keywords  = {ASIP;DSL;Generator;ISA;Instruction Set;Language;Processor;Simulator;ViDL},
}

@InProceedings{6340132,
  author        = {O. Dayibas and H. Oguztüzün},
  title         = {Kutulu: A Domain-Specific Language for Feature-Driven Product Derivation},
  booktitle     = {2012 IEEE 36th Annual Computer Software and Applications Conference},
  year          = {2012},
  pages         = {105-110},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Software Product Line Engineering (SPLE) defines processes to facilitate the development of a family of products in a pre-defined market more effectively. Its success depends on implementation of these processes utilizing best practices with proper tool support. This paper describes how to enhance domain design and variation management processes of SPLE with a domain-specific language (DSL), namely "Kutulu". It also introduces novel modeling tools and dependency injection-based realization approach that are well-suited for product derivation in SPL. Our DSL definition, developed tools and their position in the product line context are put forth in this paper.},
  doi           = {10.1109/COMPSAC.2012.20},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {0730-3157},
  keywords      = {configuration management;formal specification;object-oriented languages;object-oriented programming;product development;Kutulu;SPLE;dependency injection-based realization approach;domain design;domain-specific language;feature-component binding;feature-driven product derivation;modeling tool;product development;software product line engineering;tool support;variation management process;Abstracts;Computer aided software engineering;DSL;Generators;Object oriented modeling;Software;Transforms;Dependency Injection;Domain-specific Language;Feature-Component Binding;Software Product Line;Variability Management, rank3},
}

@InProceedings{6274035,
  author    = {Y. Nomura and K. Kimura and H. Kurihara and R. Yamamoto and K. Yamamoto and S. Tokumoto},
  title     = {Massive Event Data Analysis and Processing Service Development Environment Using DFD},
  booktitle = {2012 IEEE Eighth World Congress on Services},
  year      = {2012},
  pages     = {80-87},
  month     = {June},
  abstract  = {In these days, there are a lot of massive event data appeared every day because networked devices such as smartphones and kind of sensors become very common. Every service provider intends to analyze the event data and discovers a new business rule for real time event processing service. We proposed a methodology which integrates such kind of data analysis and service development using DFD (Data Flow Diagram) which is independent from implementations, and we developed its prototype for evaluations. The methodology and the tool separate the concern of a developer and an analyst, moreover, we succeeded to confirm that the prototype tool reduced actual analysis and service development costs dramatically.},
  doi       = {10.1109/SERVICES.2012.46},
  groups    = {IEEEDSL, excluidos},
  issn      = {2378-3818},
  keywords  = {business data processing;data analysis;data flow graphs;real-time systems;DFD;business rule discovery;data flow diagram;massive event data analysis service development;massive event data processing service development environment;networked devices;real-time event processing service;service development costs;service provider;Analytical models;DSL;Data analysis;Data models;Engines;Mathematical model;Real time systems;Analysis;Cloud;Dataflow languages;Event Processing;Productivity;Tools},
}

@InProceedings{7579377,
  author        = {A. Mora Segura and A. Pescador and J. de Lara and M. Wimmer},
  title         = {An Extensible Meta-Modelling Assistant},
  booktitle     = {2016 IEEE 20th International Enterprise Distributed Object Computing Conference (EDOC)},
  year          = {2016},
  pages         = {1-10},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Meta-models play a pivotal role in Model-Driven Engineering (MDE). They are used to create domain-specific models, and to type model management operations like model transformations or code generators. However, even though creating meta-models is a common activity, it is currently mostly a manual activity, which does not profit from existing knowledge. In order to facilitate the meta-modelling task, we propose an extensible meta-modelling assistant. While primarily focussed on helping in the creation of meta- models, it can also help in creating models. The assistant permits the provision of heterogeneous data description sources (like ontologies, RDF data, XML schemas, database schemas and meta-models), and enables their uniform querying. Different kinds of queries are supported, and improved through synonym search. Query results are prioritized through sense disambiguation, can be graphically visualized, and incorporated into the (meta-)model being built. The assistant has been realized within Eclipse, and its architecture has been designed to be independent of the meta-modelling technology used. As a proof- of-concept, we show its integration within DSL-tao, a pattern-based meta-modelling tool built by our group, and two other tools developed by third-parties. The usefulness of the system is illustrated with a running example in the process modelling domain.},
  doi           = {10.1109/EDOC.2016.7579377},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {data description;data visualisation;modelling;natural language processing;query processing;DSL-tao;Eclipse;domain-specific models;extensible metamodelling assistant;graphic visualization;heterogeneous data description sources;metamodels;model management operations;model-driven engineering;pattern-based metamodelling tool;query results;sense disambiguation;uniform data querying;Biological system modeling;DSL;Data models;Ontologies;Organizations;Resource description framework;Unified modeling language, rank3},
}

@InProceedings{6984583,
  author    = {F. Bergenti},
  title     = {An Introduction to the JADEL Programming Language},
  booktitle = {2014 IEEE 26th International Conference on Tools with Artificial Intelligence},
  year      = {2014},
  pages     = {974-978},
  month     = {Nov},
  abstract  = {This paper summarizes the current state of development of JADEL, a novel programming language that eases the implementation of agents and multi-agent systems. First, the introduction of a novel agent programming language is motivated and the approach that was used to design JADEL is presented. Then, the characteristic features of JADEL are described by means of a didactic example. The paper is concluded with a short discussion about current and planned developments of JADEL.},
  doi       = {10.1109/ICTAI.2014.147},
  groups    = {IEEEDSL, excluidos},
  issn      = {1082-3409},
  keywords  = {multi-agent systems;object-oriented languages;object-oriented programming;parallel programming;JADE Language;JADEL programming language;agent programming language;multiagent system;DSL;Java;Multi-agent systems;Ontologies;Programming;Syntactics;JADE;multi-agent systems;programming languages},
}

@InProceedings{6375611,
  author    = {M. Lipaczewski and S. Struck and F. Ortmeier},
  title     = {Using Tool-Supported Model Based Safety Analysis -- Progress and Experiences in SAML Development},
  booktitle = {High-Assurance Systems Engineering (HASE), 2012 IEEE 14th International Symposium on},
  year      = {2012},
  pages     = {159-166},
  month     = {Oct},
  abstract  = {Software controls in technical systems are becoming more and more important and complex. Model based safety analysis can give provably correct and complete results, often in a fully automatic way. These methods can answer both logical and probabilistic questions. In common practice, the needed models must be specified in different input languages of different tools depending on the chosen verification tool for the desired aspect. This is time consuming and error-prone. To cope with this problem we developed the safety analysis modeling language (SAML). In this paper, we present a new tool to intuitively create probabilistic, non-deterministic and deterministic specifications for formal analysis. The goal is to give tool-support during modeling and thus make building a formal model less error-prone. The model is then automatically transformed into the input language of state of the art verification engines. We illustrate the approach on a case-study from nuclear power plant domain.},
  doi       = {10.1109/HASE.2012.34},
  groups    = {IEEEDSML, excluidos},
  issn      = {1530-2059},
  keywords  = {formal languages;formal specification;formal verification;probability;safety-critical software;SAML development;art verification engines;deterministic specifications;formal analysis;formal model;nondeterministic specifications;nuclear power plant domain;probabilistic specifications;safety analysis modeling language;software controls;tool-supported model based safety analysis;verification tool;Analytical models;Generators;Hazards;Probabilistic logic;Switches;S3E;SAML;dependability;domain specific language;eclipse based editor;formal analysis;safety assurance},
}

@InProceedings{6957109,
  author        = {J. A. Akinyele and G. Barthe and B. Grégoire and B. Schmidt and P. Y. Strub},
  title         = {Certified Synthesis of Efficient Batch Verifiers},
  booktitle     = {2014 IEEE 27th Computer Security Foundations Symposium},
  year          = {2014},
  pages         = {153-165},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Many algorithms admit very efficient batch versions that compute simultaneously the output of the algorithms on a set of inputs. Batch algorithms are widely used in cryptography, especially in the setting of pairing-based computations, where they deliver significant speed-ups. AutoBatch is an automated tool that computes highly optimized batch verification algorithms for pairing-based signature schemes. Thanks to finely tuned heuristics, AutoBatch is able to rediscover efficient batch verifiers for several signature schemes of interest, and in some cases to output batch verifiers that outperform the best known verifiers from the literature. However, AutoBatch only provides weak guarantees (in the form of a LaTeX proof) of the correctness of the batch algorithms it outputs. In this paper, we verify the correctness and security of these algorithms using the EasyCrypt framework. To achieve this goal, we define a domain-specific language to describe verification algorithms based on pairings and provide an efficient algorithm for checking (approximate) observational equivalence between expressions of this language. By translating the output of AutoBatch to this language and applying our verification procedure, we obtain machine-checked correctness proofs of the batch verifiers. Moreover, we formalize notions of security for batch verifiers and we provide a generic proof in EasyCrypt that batch verifiers satisfy a security property called screening, provided they are correct and the original signature is unforgeable against chosen-message attacks. We apply our techniques to several well-known pairing-based signature schemes from the literature, and to Groth-Sahai zero-knowledge proofs.},
  doi           = {10.1109/CSF.2014.19},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1063-6900},
  keywords      = {cryptography;digital signatures;formal verification;specification languages;theorem proving;AutoBatch;EasyCrypt framework;Groth-Sahai zero-knowledge proofs;LaTeX correctness proof;automated tool;batch versions;certified synthesis;correctness verification;cryptography;domain-specific language;generic proof;machine-checked correctness proofs;message attacks;observational equivalence checking;optimized batch verification algorithms;pairing-based computations;pairing-based signature schemes;screening;security property;Approximation algorithms;Equations;Optimization;Probabilistic logic;Public key;certified proofs;cryptographic design;cryptography;signature schemes, rank3},
}

@InProceedings{6657075,
  author        = {X. Liu and J. Kubiatowicz},
  title         = {Chisel-Q: Designing quantum circuits with a scala embedded language},
  booktitle     = {2013 IEEE 31st International Conference on Computer Design (ICCD)},
  year          = {2013},
  pages         = {427-434},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {We introduce Chisel-Q, a high-level functional language for generating quantum circuits. Chisel-Q permits quantum computing algorithms to be constructed using the meta-language features of Scala and its embedded DSL Chisel. With Chisel-Q, designers of quantum computing algorithms gain access to high-level, modern language features and abstractions. We describe a synthesis flow that transforms Chisel-Q into an explicit quantum circuit in the Quantum Assembly Language (QASM) format. We also discuss several optimizations to reduce the generated hardware cost. The Chisel-Q tool includes resource and performance estimation which can be used to compare different implementations of the same functionality. We compare the output of the generic Chisel-Q synthesis flow with hand-tuned versions of well-known quantum circuits.},
  doi           = {10.1109/ICCD.2013.6657075},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1063-6404},
  keywords      = {CAD;functional languages;quantum computing;Chisel-Q;DSL Chisel;Scala embedded language;high-level functional language;quantum assembly language;quantum circuits;quantum computing algorithms;Algorithm design and analysis;Hardware;Latches;Logic gates;Optimization;Quantum computing;Syntactics;Computer Aided Design;Quantum Computing, rank3},
}

@InProceedings{6984098,
  author    = {C. Sacramento and A. C. R. Paiva},
  title     = {Web Application Model Generation through Reverse Engineering and UI Pattern Inferring},
  booktitle = {Quality of Information and Communications Technology (QUATIC), 2014 9th International Conference on the},
  year      = {2014},
  pages     = {105-115},
  month     = {Sept},
  abstract  = {A great deal of effort in model-based testing is related to the creation of the model. In addition, the model itself, while a powerful tool of abstraction, can have conceptual errors, introduced by the tester. These problems can be reduced by generating those models automatically. This paper presents a dynamic reverse engineering approach that aims to extract part of the model of an existing web application through the identification of User Interface (UI) patterns. This reverse engineering approach explores automatically any web application, records information related to the interaction, analyses the gathered information, tokenizes it, and infers the existing UI patterns via syntactical analysing. After being complemented with additional information and validated, the model extracted is the input for the Pattern-Based Graphical User Interface Testing (PBGT) approach for testing existing web application under analysis.},
  doi       = {10.1109/QUATIC.2014.20},
  groups    = {IEEEDSL, excluidos},
  keywords  = {Internet;graphical user interfaces;program diagnostics;program testing;PBGT approach;UI pattern inference;Web application model generation;dynamic reverse engineering approach;model-based testing;pattern-based graphical user interface testing;syntactical analysis;user interface;Analytical models;DSL;Data mining;Graphical user interfaces;Reverse engineering;Testing;Reverse Engineering;UI Patterns;Web Application;Web Scraping},
}

@InProceedings{6511821,
  author        = {A. Ribeiro and A. R. da Silva},
  title         = {Survey on Cross-Platforms and Languages for Mobile Apps},
  booktitle     = {Quality of Information and Communications Technology (QUATIC), 2012 Eighth International Conference on the},
  year          = {2012},
  pages         = {255-260},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Nowadays mobile applications are becoming increasingly more present in our daily life, allowing people to perform several tasks through the use of smartphones, tablets or equivalent devices. Despite the great benefits in terms of innovation and in the variety of available solutions, the rapid and continuous growth of the mobile market has resulted in some fragmentation of the platforms that support each mobile device. The existence of different mobile operating systems with different programming languages and development tools can be a problem when someone wants to release an application in as many platforms as possible. The typical approach of simply rewriting the application for each one of those platforms is usually impracticable either in terms of budget or development time, requiring a bigger effort to be made. Therefore, a solution that could generate an application for several platforms (multi or cross-platform) without compromising the overall quality of the application would decrease the time to market of the application and increase enormously the number of potential users. Providentially, during the last years some effort has been conducted to tackle this problem, especially with the emergence of tools and frameworks that facilitate the development of crossplatform mobile applications. This paper focuses on these technologies and attempts to provide a global view of the actual state of this area.},
  doi           = {10.1109/QUATIC.2012.56},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {mobile computing;programming languages;smart phones;software tools;cross-platform mobile application development tools;mobile applications;mobile device;mobile market;mobile operating systems;programming languages;smartphones;tablets;Application;Cross-platform;Domain Specific Language;Mobile;Model-driven development, rank3},
}

@InProceedings{7020125,
  author        = {J. Schützel and D. Peng and A. M. Uhrmacher and L. F. Perrone},
  title         = {Perspectives on languages for specifying simulation experiments},
  booktitle     = {Proceedings of the Winter Simulation Conference 2014},
  year          = {2014},
  pages         = {2836-2847},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Domain specific languages have been used in modeling and simulation as tools for model description. In recent years, the efforts toward enabling simulation reproducibility have motivated the use of domain specific languages also as the means with which to express experiment specifications. In simulation areas ranging from computational biology to computer networks, the emerging trend is to treat the experimentation process as a first class object. Domain specific languages serve to specify individual sub-tasks in this process, such as configuration, observation, analysis, and evaluation of experimental results. Additionally, they can be used in a broader scope, for instance, to describe formally the experiment's goals. The research and development of domain specific languages for experiment specification explores all of these and additional possible applications. In this paper, we discuss various existing approaches for defining this type of domain specific languages and present a critical analysis of our findings.},
  doi           = {10.1109/WSC.2014.7020125},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {0891-7736},
  keywords      = {digital simulation;formal specification;simulation languages;specification languages;domain specific languages;experiment specification;model description;simulation experiments;Analytical models;Computational modeling;DSL;Data collection;Data models;Instruments;Mathematical model, rank3},
}

@InProceedings{6648277,
  author    = {N. Stuban},
  title     = {Operational tests of a wireless fetal pulse oximeter},
  booktitle = {Proceedings of the 36th International Spring Seminar on Electronics Technology},
  year      = {2013},
  pages     = {383-387},
  month     = {May},
  abstract  = {Pulse oximeters are measuring the oxygen level of the arterial blood with a non-invasive method. The paper introduces the working principles and the build-up of modern pulse oximeters. The construction steps of a new kind of diagnostic tool, the wireless fetal pulse oximeter will be described also. Eliminating the catheter from the fetal blood oxygen monitoring system gives the possibility of free movement to the mother in labor. Furthermore, the uncomfortable feeling caused by the catheter can be reduced with this wireless device. With these advantages the wireless fetal pulse oximeter is a promising diagnostic tool for the labor rooms in the future. The radio range, the operation time, and the waterproof capability of the sealing of the prototype were examined in the paper.},
  doi       = {10.1109/ISSE.2013.6648277},
  groups    = {IEEEDSL, excluidos},
  issn      = {2161-2528},
  keywords  = {biomedical equipment;blood;blood vessels;obstetrics;oximetry;patient diagnosis;patient monitoring;arterial blood;diagnostic tool;fetal blood oxygen monitoring system;labor rooms;noninvasive method;operational tests;oxygen level measurement;prototype sealing waterproof capability;radio range;wireless device;wireless fetal pulse oximeter;Antenna measurements;Batteries;Battery charge measurement;Blood;Coatings;DSL;Wireless communication},
}

@InProceedings{7000030,
  author        = {M. T. C. F. Albuquerque and G. L. Ramalho and V. Corruble and A. L. M. Santos and F. Freitas},
  title         = {Helping Developers to Look Deeper inside Game Sessions},
  booktitle     = {2014 Brazilian Symposium on Computer Games and Digital Entertainment},
  year          = {2014},
  pages         = {31-40},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Game design and development activities are increasingly relying on the analysis of gamer's behavior and preferences data. Various tools are available to the developers to track and analyze general data concerning acquisition, retention and monetization aspects of game commercialization. This is good enough to give hints on where problems are, but not to enable a precise diagnosis, which demands fine-grained data. For this kind of data, there is not enough support or guidance to decide which data to capture, to write the code to capture it, to choose the best representation of it and to allow an adequate retrieval and presentation of it. This paper introduces GameGuts (GG), a framework devoted to give further assistance to developers in choosing, representing, accessing and presenting game sessions fine-grained data. As a case study, GG recorded sessions of a game platform with over a hundred thousand users. The logs were analyzed using a Visual Domain Specific Language (as a query language) and an ensemble of rules (as a compliance test). The results are encouraging, since we could - among other results - find bugs and catch cheaters, as well as spot design flaws.},
  doi           = {10.1109/SBGAMES.2014.28},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {2159-6654},
  keywords      = {computer games;data analysis;query languages;visual languages;GameGuts;bugs;catch cheaters;design flaws;game commercialization;game design;game development activities;game platform;game sessions;gamer behavior analysis;general data analysis;general data tracking;preferences data;query language;rule ensemble;visual domain specific language;DSL;Database languages;Games;Measurement;Ontologies;Servers;Visualization;game analytics;game data mining;knowledge representation, rank3},
}

@InProceedings{7139899,
  author        = {A. Nordmann and S. Wrede and J. Steil},
  title         = {Modeling of movement control architectures based on motion primitives using domain-specific languages},
  booktitle     = {2015 IEEE International Conference on Robotics and Automation (ICRA)},
  year          = {2015},
  pages         = {5032-5039},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces a model-driven approach for engineering complex movement control architectures based on motion primitives, which in recent years have been a central development towards adaptive and flexible control of complex and compliant robots. We consider rich motor skills realized through the composition of motion primitives as our domain. In this domain we analyze the control architectures of representative example systems to identify common abstractions. It turns out that the introduced notion of motion primitives implemented as dynamical systems with machine learning capabilities, provide the computational building block for a large class of such control architectures. Building on the identified concepts, we introduce domain-specific languages that allow the compact specification of movement control architectures based on motion primitives and their coordination respectively. Using a proper tool chain, we show how to employ this model-driven approach in a case study for the real world example of automatic laundry grasping with the KUKA LWR-IV, where executable source-code is automatically generated from the domain-specific language specification.},
  doi           = {10.1109/ICRA.2015.7139899},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1050-4729},
  keywords      = {learning (artificial intelligence);motion control;programming languages;robots;time-varying systems;KUKA LWR-IV;domain-specific language specification;dynamical systems;executable source-code;machine learning;motion primitives;movement control architectures;robot;Adaptation models;Adaptive systems;Computer architecture;DSL;Motion control;Robot kinematics, rank3},
}

@InProceedings{6641450,
  author        = {C. Hélène and L. Sébastien},
  title         = {Algorithmic skeleton library for scientific simulations: SkelGIS},
  booktitle     = {High Performance Computing and Simulation (HPCS), 2013 International Conference on},
  year          = {2013},
  pages         = {429-436},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Scientific simulations give rise to complex codes where data size and computation time become very important issues and sometimes a scientific barrier. Therefore, aiding parallelization has become a main topic in computer science. In this paper is introduced a new type of solution to give a totally transparent access to parallel programming for noncomputer scientists. This solution, named SkelGIS, takes place at the crossroads of domain specific languages, domain specific libraries and skeleton libraries, getting advantages of each domain. SkelGIS aims at providing a general solution for simulations in heterogeneous scientific domains. SkelGIS does not require a new language learning, nor to manipulate specific parallel tools, and it ensures a sequential programming style to the user with a totally hidden parallelization. Concepts and technical choices of the library are described in this paper. Furthermore, two very different benchmarks are studied to bring out performances of the library on light and complex simulations.},
  doi           = {10.1109/HPCSim.2013.6641450},
  groups        = {SCOPUS, Duplicados},
  keywords      = {digital libraries;geographic information systems;learning (artificial intelligence);parallel programming;scientific information systems;specification languages;SkelGIS;algorithmic skeleton library;complex codes;complex simulations;computation time;computer science;data size;domain specific languages;domain specific libraries;heterogeneous scientific domains;hidden parallelization;language learning;noncomputer scientists;parallel programming;scientific barrier;scientific simulations;sequential programming style;skeleton libraries;Computational modeling;DSL;Data structures;Libraries;Parallel processing;Programming;Skeleton;Algorithmic skeleton;DSL;scientific simulation, rank3},
}

@InProceedings{6227067,
  author        = {M. Song and E. Tilevich},
  title         = {Detecting metadata bugs on the fly},
  booktitle     = {2012 34th International Conference on Software Engineering (ICSE)},
  year          = {2012},
  pages         = {1455-1456},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Programmers are spending a large and increasing amount of their time writing and modifying metadata, such as Java annotations and XML deployment descriptors. And yet, automatic bug finding tools cannot find metadata-related bugs introduced during program refactoring and enhancement. To address this shortcoming, we have created metadata invariants, a new programming abstraction that expresses naming and typing relationships between metadata and the main source code of a program. A paper that appears in the main technical program of ICSE 2012 describes the idea, concept, and prototype of metadata invariants [4]. The goal of this demo is to supplement that paper with a demonstration of our Eclipse plugin, Metadata Bug Finder (MBF). MBF takes as input a script written in our domain-specific language that describes a set of metadata coding conventions the programmer wishes to enforce. Then after each file save operation, MBF checks the edited codebase for the presence of any violations of the given metadata programming conventions. These violations are immediately reported to the programmer as potential metadata-related bugs. By making the programmer aware of these potential bugs, MBF prevents them from seeping into production, thereby improving the overall correctness of the edited codebase.},
  doi           = {10.1109/ICSE.2012.6227067},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {0270-5257},
  keywords      = {meta data;program debugging;Eclipse plugin;ICSE 2012;Java annotations;MBF;XML deployment descriptors;domain-specific language;main source code;main technical program;metadata bug finder;metadata bugs detection;metadata coding conventions;metadata invariants;metadata programming conventions;program enhancement;program refactoring;programming abstraction;Computer bugs;Encoding;Java;Programming;Software;Testing;XML;bug finding;domain-specific languages;enhancement;frameworks;invariants;metadata;refactoring;software maintenance, rank3},
}

@InProceedings{7018471,
  author    = {J. S. Sottet and A. Vagner},
  title     = {Defining Domain Specific Transformations in Human-Computer interfaces development},
  booktitle = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year      = {2014},
  pages     = {246-253},
  month     = {Jan},
  abstract  = {Early model-based approaches for Human-Computer Interaction (HCI) clearly depicted models and frameworks for generating User Interfaces (UI) but considered model transformations as black-boxes. In the 2000's, these approaches were criticized due to the poor quality of the produced UI. One of the main reasons of this poor quality can be easily observed in state of the art UI transformations: they are the heart of designers' know-how but are maintained by a minority of specialists. Meanwhile, mainstream UI design methods have shown a growing number of heterogeneous stakeholders that collaborate to produce modern and qualitative UI. We claim that these stakeholders must comprehend and interact with transformations and thus we need to make the transformation language affordable to these stakeholders. Indeed, such a simplification should hide transformations complexity and burden for any stakeholder, finally focusing on a specific part of the design domain: a Domain Specific Language (DSL) for transformations or Domain Specific Transformation Language (DSTL). We provide in this paper a method and a supporting tool for systematizing and finally executing DSTL for model-driven UI development. We depict that framework on a proof of concept implementation for an HCI-specific stakeholder: the usability expert.},
  groups    = {SCOPUS, Compendex, IEEEDSML, excluidos},
  keywords  = {Abstracts;Analytical models;Complexity theory;Grammar;Human computer interaction;Usability;Domain Specific Transformation Languages;Human-Computer Interaction;Model Transformation;Model-Driven Development},
}

@InProceedings{7273614,
  author        = {P. A. d. S. Duarte and F. M. Barreto and F. A. d. A. Gomes and W. V. d. Carvalho and F. A. M. Trinta},
  title         = {CRITiCAL: A Configuration Tool for Context Aware and mobiLe Applications},
  booktitle     = {Computer Software and Applications Conference (COMPSAC), 2015 IEEE 39th Annual},
  year          = {2015},
  volume        = {2},
  pages         = {159-168},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an approach for modelling and generating Context-Aware and Mobile (CAM) applications based on (i) Model-Driven Engineering and (ii) context acquisition middleware concepts. Our approach allows software engineers to build CAM applications by modelling contextual information and rule-based behaviour on a visual notation. These graphical models are transformed into an Android-based code, targeted for a context-aware middleware called LoCCAM, which encapsulates device sensors access. An initial user evaluation conducted with a group of fourteen computer science volunteers was implemented and indicates time reduction gains in the middleware configuration process and that the complexity in the writing of contextual behaviour of applications is also decreased.},
  doi           = {10.1109/COMPSAC.2015.91},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {Android (operating system);configuration management;middleware;mobile computing;visual programming;Android-based code;CAM applications;CRITiCAL;LoCCAM;configuration tool;context acquisition middleware concept;context aware applications;context-aware middleware;contextual behaviour writing complexity;contextual information modelling;device sensor access encapsulation;graphical model;middleware configuration process;mobile applications;model-driven engineering;rule-based behaviour;software engineering;time reduction gain;visual notation;Adaptation models;Computer aided manufacturing;Context;Context modeling;DSL;Middleware;Android;Context-Aware;DSL;MDE;Middleware;Self-Adaptation, rank3},
}

@InProceedings{7018464,
  author        = {J. Tatibouët and A. Cuccuru and S. Gérard and F. Terrier},
  title         = {Towards a systematic, tool-independent methodology for defining the execution semantics of UML profiles with fUML},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {182-192},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {The purpose of UML profile mechanism is to design domain specific languages (DSL) based on UML. It exists a wide range of UML profiles: MARTE, ROOM, SysML. Current profile design methodology only considers the syntactic part of the language and keeps informal the execution semantics description. This impairs Model Driven Engineering (MDE) promises which advocates for executable models. This paper presents a systematic approach to formalize the execution semantics of UML profiles using foundational UML (normative specification) which defines a precise semantics for a subset of UML. This approach is integrated into the reference profile design methodology. It is illustrated on a small profile to support Turing machines. It demonstrates capability to execute resulting profiled models through the defined semantics.},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {Abstracts;Computational modeling;Runtime;Semantics;Syntactics;Turing machines;Unified modeling language;Alf;DSML;Execution;MoC;Profile;Semantics;Turing;fUML, rank3},
}

@InProceedings{6511822,
  author        = {V. Amaral and B. Barroca and P. Carreira},
  title         = {Towards a Robust Solution in Building Automation Systems: Supporting Rapid Prototyping and Analysis},
  booktitle     = {Quality of Information and Communications Technology (QUATIC), 2012 Eighth International Conference on the},
  year          = {2012},
  pages         = {261-264},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {It is presently required agile and systematic solutions aiming at streamlining the development, maintenance and configuration of complex Building Automation Systems (BASs) in an energy aware manner. We aim at defining usable Domain Specific Languages (DSLs) using a Software Language Engineering (SLE), as systematic approach for language development, and develop the right tools for specifying the behavior of BASs components along with their energy-related requirements. The goal is to not only assist the systems engineers while rapid-prototyping/developing affordable, high-quality, energy-efficient(EE) BASs, but also to take advantage of high level abstractions, efficient special-purpose verification algorithms and analysis tools for early validation and verification, in order to promote Quality of the generated software products. We are watching to the rise of Model-Driven Development as the pragmatic approach to build them, since this approach is based on the notion of explicit abstractions/models. This is achieved thanks to model transformations that, besides automatically translating any specification of a given language into other execution specifications, also allow us to derive analysis specifications. The problem with the referred types of transformation purposes is that we cannot guarantee quality and coherence between the derived specifications into execution specifications and combine it with analysis specifications unless we can either make use of testing over the execution, with the problems already known, or have mechanisms to study the transformations. While this problem is motivated by the concrete need of developing BASs, we foresee that it can be of general application in SLE. In this position paper we will give a state of the art in Building Automation and we give an overview of a possible solution that uses MDD and model transformations, in the context of a BAS solution, in order to check their correctness in w.r.t. the formal semantics of the lan- uages used in the target platforms (i.e either execution or analysis).},
  doi           = {10.1109/QUATIC.2012.59},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  keywords      = {building management systems;buildings (structures);civil engineering computing;energy conservation;formal specification;formal verification;rapid prototyping (industrial);software quality;BAS configuration;BAS development;BAS maintenance;DSL;SLE;analysis tool;building automation system;domain specific language;energy aware BAS;energy-related requirement;execution specification;explicit abstraction notion;formal semantics;language development;model transformation;model-driven development;rapid prototyping;software language engineering;software product quality;special-purpose verification algorithm;DSLTrans;Model Checking;Model Transformations;Model Transformations Analysis;Quality in MDD;Software Language Engineering, rank3},
}

@InProceedings{7049679,
  author    = {P. Schug and A. Kotlov},
  title     = {Designing CAx-process chains - Model and modeling language for CAx-process chain methodology},
  booktitle = {Informatics in Control, Automation and Robotics (ICINCO), 2014 11th International Conference on},
  year      = {2014},
  volume    = {02},
  pages     = {724-733},
  month     = {Sept},
  abstract  = {Product development and production processes are supported by software systems during the development and planning phases. The usage of these software tools during or prior to and post the different process steps is called CAx-processes. The combination of these CAx-processes form process chains, also known as CAx-process chains (CAx-PCs), which mirror the production processes virtually. The content of this paper introduces a solution for designing the software chains in conformity to the methodology for evaluation, analysis and optimization of CAx-PCs. The solution includes the definition of DSL expressing the model for CAx-PCs and the software prototype “CAx-process chain designer” for deriving the alternatives of CAx-PCs from the expressed model.},
  doi       = {10.5220/0005054507240733},
  groups    = {SCOPUS,, excluidos},
  keywords  = {product development;production engineering computing;production planning;specification languages;CAx-PCs;CAx-process chain designer;CAx-process chains;development phase;modeling language;planning phase;product development;production processes;software chains;software systems;software tools;Adaptation models;Analytical models;Optimization;Product development;Production;Software;Solid modeling;CAx;Chain;DSL;Model;Process},
}

@InProceedings{6692589,
  author        = {J. Schafer and D. Klein},
  title         = {Implementing Situation Awareness for Car-to-X Applications Using Domain Specific Languages},
  booktitle     = {Vehicular Technology Conference (VTC Spring), 2013 IEEE 77th},
  year          = {2013},
  pages         = {1-5},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Car-to-X i.e. Car-to-Anything communication based on standardized IEEE 802.11p radio technology is comprised with wireless communication between cars (Car-to-Car) and between vehicles and the environment (Car-to-Infrastructure). In order to develop Car-to-X applications based on this standard one needs to model parameters such as the vehicle's position, velocity, acceleration etc. and parameters of the vehicle's environment. Typically, the underlying domain models are designed in an ad-hoc manner and the domain rules become hard-coded into the source- code of the application software. In this paper we describe an alternative and more flexible approach. The model is described in almost plain English using a Domain Specific Language (DSL) and translated into target code via parser technology based on the ANTLR tool-chain. This provides more flexibility not only in creating and maintaining the domain rules, but also with regards to generating code for entirely different target languages and technology environments. For instance, we demonstrate to generate Java code for a simulation environment and C-code for the embedded device from the same rule definitions.},
  doi           = {10.1109/VTCSpring.2013.6692589},
  groups        = {SCOPUS, Compendex, IEEEDSML, Duplicados},
  issn          = {1550-2252},
  keywords      = {Java;mobile computing;wireless LAN;ANTLR tool-chain;C-code;Java code;car-to-anything communication;car-to-car communication;car-to-infrastructure communication;car-to-x applications;domain specific languages;model parameters;parser technology;situation awareness;source-code;standardized IEEE 802.11p radio technology;vehicle acceleration;vehicle position;vehicle velocity;wireless communication;Context;DSL;Engines;Grammar;Java;Runtime;Syntactics, rank3},
}

@InProceedings{7018466,
  author        = {E. Tyugu and M. Harf and P. Grigorenko},
  title         = {A case study of combining compositional and object-oriented software development},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {201-208},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {We analyze an approach to software development where object-oriented and compositional software specifications are written in separate languages and are only loosely connected. It supports compositional design of software in a domain-specific language and automatic model-driven construction of code from classes written in Java. We justify our approach by giving examples of development of large simulation programs and services on large models. We present also an example of using our method in general purpose software development - this is bootstrapping the essential part of a software tool CoCoViLa, i.e. synthesizing CoCoViLa in CoCoViLa itself.},
  groups        = {ACM, SCOPUS, Compendex, IEEEDSML, Duplicados},
  keywords      = {Computational modeling;DSL;Java;Mathematical model;Object oriented modeling;Software;Unified modeling language;Compositional Software Design;Domain-specific Modeling;Model Driven Software Development;Structural Synthesis of Programs, rank3},
}

@InProceedings{6955332,
  author    = {C. H. C. Jojoa and O. M. Drews},
  title     = {Domain Specific Language for Handling Modular Ontologies},
  booktitle = {Computing Colombian Conference (9CCC), 2014 9th},
  year      = {2014},
  pages     = {48-53},
  month     = {Sept},
  abstract  = {A Knowledge Object may be characterized in different forms, corresponding to different perspectives of the object. In the same sense, knowledge of a particular domain can be organized in different interconnected ontologies. The research on ontology modularization has advanced in proposing formalisms and tools to extend ontologies with inter-ontology connectors. Tools are needed to manipulate these new connectors. Existing tools are platform dependent, which presents problems of adaptability, portability and reusability. This paper presents the design and implementation of a Specific Domain Language for Handling Modular Ontologies, based on a model driven architecture (MDA).},
  doi       = {10.1109/ColumbianCC.2014.6955332},
  groups    = {IEEEDSML, Inclusos},
  keywords  = {ontologies (artificial intelligence);software architecture;MDA;domain specific language;inter-ontology connectors;knowledge object;model driven architecture;modular ontologies;Adaptation models;Computer architecture;Connectors;Context modeling;Domain specific languages;OWL;Ontologies;Knowledge management;MDA architecture;e-connections;metamodels;modular ontologies},
}

@Article{5766765,
  author        = {D. D. a. V. Devedzic},
  title         = {Incorporating the Ontology Paradigm Into Software Engineering: Enhancing Domain-Driven Programming in Clojure/Java},
  journal       = {IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
  year          = {2012},
  volume        = {42},
  number        = {1},
  pages         = {3-14},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {There is a notable overlap of the challenges with which the semantic technologies and software engineering deal. They can also complement and mutually improve each other. Current efforts mostly focus on improving software tools around the resource description framework (RDF) and Web Ontology Language (OWL) Web-oriented ecosystem that helps ontology engineers but is alien to software engineers. This paper presents an opposite approach taken from the software developer's viewpoint - an incorporation of the ontology paradigm into a general-purpose programming language, in a simple and agile way, on a small scale, and in an unpretentious manner. The objective is to help programmers write simple domain-driven code with richer semantics. The means to achieve this objective relies on metaprogramming to internalize the ontology modeling paradigm into a mainstream programming environment based on the Java ecosystem, in a lightweight manner suitable for small teams. An embedded meta domain-specific language (DSL), which is called Magic Potion, is implemented in Clojure and blends ontology, functional, object-oriented, and concurrent paradigms. An example from the technology enhanced learning (TEL) domain is used to illustrate Magic Potion in action.},
  doi           = {10.1109/TSMCC.2011.2140316},
  groups        = {ACM, SCOPUS, IEEEDSML, Duplicados},
  issn          = {1094-6977},
  keywords      = {Java;functional programming;object-oriented programming;ontologies (artificial intelligence);semantic Web;software engineering;Clojure;Java ecosystem;Magic Potion;Web ontology language;Web oriented ecosystem;concurrent paradigms;domain driven code;domain driven programming;embedded meta domain specific language;functional paradigms;general purpose programming language;object oriented paradigms;ontology engineers;ontology modeling paradigm;resource description framework;semantic technologies;software engineering;technology enhanced learning domain;DSL;OWL;Object oriented modeling;Ontologies;Programming;Software;Clojure;domain-specific languages;modeling spaces;multiparadigm programming;ontologies;programming languages;semantic technologies;software engineering, rank3},
}

@InProceedings{6969396,
  author        = {C. B. d. Oliveira and J. M. P. Cardoso and E. Marques},
  title         = {High-Level Synthesis from C vs. a DSL-Based Approach},
  booktitle     = {Parallel Distributed Processing Symposium Workshops (IPDPSW), 2014 IEEE International},
  year          = {2014},
  pages         = {257-262},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Field-Programmable Gate Arrays (FPGAs) are able to provide hardware accelerators still maintaining the required programmability. However, the advantages of using FPGAs still depend on the expertise of developers and their knowledge of Hardware Description Languages (HDLs). Although High-level Synthesis (HLS) tools have been developed in order to minimize this problem, they commonly present solutions considered many times inefficient when compared to the ones achieved by a specialized hardware designer. Domain-specific languages (DSLs) can provide alternative solutions to program FPGAs. They can provide higher abstraction levels than HDLs and they may allow the programmer to tune implementations whenever HLS tools are unable to generate efficient designs. In this paper we compare a DSL, named LALP (Language for Aggressive Loop Pipelining), with two typical HLS approaches and show the experimental results achieved in each case. The results show that the use of LALP provides superior performance than the achieved by the HLS tools in most cases.},
  doi           = {10.1109/IPDPSW.2014.34},
  groups        = {ACM, SCOPUS, Duplicados},
  keywords      = {C language;field programmable gate arrays;hardware description languages;high level synthesis;C language;DSL;FPGA;HDL;HLS;LALP;domain-specific languages;field-programmable gate arrays;hardware description languages;high-level synthesis;language for aggressive loop pipelining;Benchmark testing;Clocks;Field programmable gate arrays;Hardware;Pipeline processing;Radiation detectors;Domain-Specific Languages;FPGA;Hardware Accelerators;High-Level Synthesis;Loop Pipelining, rank3},
}

@InProceedings{Mori2015,
  author        = {J. Y. Mori and C. H. Llanos and M. Hüebner},
  title         = {A Framework to the Design and Programming of Many-Core Focal-Plane Vision Processors},
  booktitle     = {Embedded and Ubiquitous Computing (EUC), 2015 IEEE 13th International Conference on},
  year          = {2015},
  pages         = {193-198},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {The Focal-Plane Image Processing area aims to bring processing elements as near as possible to the pixels and to the camera's focal-plane. Most of the works reported in the literature uses only simple processing elements, in general analog ones, with few flexibility. With the technology advances, a new generation of Vision Processors is emerging. It is expected that multi/many-core systems will be integrated to the pixel sensors, offering several opportunities for parallelism exploration, resulting in high performance and flexible processing systems. The programmability is one of the main problems in this area, since most programmers are not able to create parallel algorithms and applications. In this work, we propose a methodology to the design and programming of many-core focal-plane vision processors. The application is described using a Domain Specific Language, from which the parallelism characteristics are extracted. Afterwards, a new abstract model is derived using techniques such as Program Slicing (PS) and Task-Graph Clustering (TGC). The abstract model is then transformed in a SystemC/TLM2.0 description, in order to allow for different timing accuracy simulations. The results of the simulations are used together with an ASIP design tool in order to determine both the microarchitecture of processing elements and the communication structure of the new system. Finally, from the model derived before, a new source code is generated and programmed into the new platform. In this context, the main concepts and ideas are described in this work, as well as some partial results.},
  doi           = {10.1109/EUC.2015.24},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {graph theory;image processing;image sensors;multiprocessing systems;program slicing;ASIP design tool;SystemC/TLM2.0;domain specific language;focal-plane image processing;many-core focal-plane vision processor;multicore system;pixel sensor;program slicing;task-graph clustering;Analytical models;Arrays;Image processing;Parallel processing;Program processors;Programming;Real-Time;computer vision;embedded computing;focal-plane image processing;many-core architecture, rank3},
}

@InProceedings{Oliveira2015,
  author        = {C. B. De Oliveira and R. Menotti and J. M. P. Cardoso and E. Marques},
  title         = {A special-purpose language for implementing pipelined FPGA-based accelerators},
  booktitle     = {2015 Forum on Specification and Design Languages (FDL)},
  year          = {2015},
  pages         = {1-8},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {A common use for Field-Programmable Gate Arrays (FPGAs) is the implementation of hardware accelerators. A way of doing so is to specify the internal logic of such accelerators by using Hardware Description Languages (HDLs). However, HDLs rely on the expertise of developers and their knowledge about hardware development with FPGAs. Regarding this, efforts have been focused on developing High-level Synthesis (HLS) tools in an attempt to increase the overall abstraction level required for using FPGAs. However, the solutions presented by such tools are commonly considered inefficient in comparison to the ones achieved by a specialized hardware designer. An alternative solution to program FPGAs is the use of Domain- Specific Languages (DSLs), as they can provide higher abstraction levels than HDLs still allowing the developers to deal with specific issues leading to more efficient designs and not always covered by HLS tools. In this paper we present our recent work on a DSL named LALP (Language for Aggressive Loop Pipelining), which has been developed focusing on the development of FPGAbased, aggressively pipelined, hardware accelerators. We present the recent LALP extensions and the challenges we are facing regarding to the compilation of LALP to FPGAs.},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  issn          = {1636-9874},
  keywords      = {field programmable gate arrays;hardware description languages;pipeline processing;DSL;HDL;HLS tool;LALP;domain-specific language;field-programmable gate array;hardware description language;high-level synthesis tool;language for aggressive loop pipelining;pipelined FPGA-based accelerator;special-purpose language;Arrays;Clocks;Delays;Field programmable gate arrays;Hardware;Pipeline processing;Radiation detectors, rank3},
}

@InProceedings{7427807,
  author    = {B. Hoisl and S. Sobernig},
  title     = {Open-Source Development Tools for Domain-Specific Modeling: Results from a Systematic Literature Review},
  booktitle = {2016 49th Hawaii International Conference on System Sciences (HICSS)},
  year      = {2016},
  pages     = {5001-5010},
  month     = {Jan},
  abstract  = {Domain-specific modeling languages (DSMLs) are key to empowering organizational experts in interacting with business information systems. For this task, developing DSMLs based on the Unified Modeling Language (UML) has become a popular option. However, a number of design decisions must be considered when developing UML-based DSMLs. In this paper, we extend a systematic literature review (SLR) to cover decisions with respect to model-driven development (MDD) tooling. We extract tooling information from the selected SLR papers and classify these software tools supporting DSML development. Using this classification, we report on usage frequencies for MDD-based tools as well as on their corresponding open-and closed-source license models. Results indicate that closed-source tools are mostly employed as editors for the language model and the diagrammatic syntax of a DSML only. For DSML development aspects other than these, primarily open-source tools are utilized (e.g., for constraint evaluation, model transformation).},
  doi       = {10.1109/HICSS.2016.620},
  groups    = {SCOPUS, Duvida},
  issn      = {1530-1605},
  keywords  = {Unified Modeling Language;management information systems;public domain software;software tools;DSML development;MDD-based tools;SLR;UML-based DSML;Unified Modeling Language;business information systems;closed-source license models;domain-specific modeling languages;model-driven development tooling;open-source development tools;open-source license models;organizational experts;primarily open-source tools;software tool classification;systematic literature review;Business;Concrete;Information systems;Software;Syntactics;Systematics;Unified modeling language},
}

@InProceedings{6758697,
  author    = {D. Breuker},
  title     = {Towards Model-Driven Engineering for Big Data Analytics -- An Exploratory Analysis of Domain-Specific Languages for Machine Learning},
  booktitle = {2014 47th Hawaii International Conference on System Sciences},
  year      = {2014},
  pages     = {758-767},
  month     = {Jan},
  abstract  = {Graphical models and general purpose inference algorithms are powerful tools for moving from imperative towards declarative specification of machine learning problems. Although graphical models define the principle information necessary to adapt inference algorithms to specific probabilistic models, entirely model-driven development is not yet possible. However, generating executable code from graphical models could have several advantages. It could reduce the skills necessary to implement probabilistic models and may speed up development processes. Both advantages address pressing industry needs. They come along with increased supply of data scientist labor, the demand of which cannot be fulfilled at the moment. To explore the opportunities of model-driven big data analytics, I review the main modeling languages used in machine learning as well as inference algorithms and corresponding software implementations. Gaps hampering direct code generation from graphical models are identified and closed by proposing an initial conceptualization of a domain-specific modeling language.},
  doi       = {10.1109/HICSS.2014.101},
  groups    = {IEEE DSML, Inclusos},
  issn      = {1530-1605},
  keywords  = {Big Data;computer graphics;data analysis;inference mechanisms;learning (artificial intelligence);program compilers;specification languages;big data analytics;direct code generation;domain-specific languages;domain-specific modeling language;general purpose inference algorithms;graphical models;machine learning problems;model-driven development;model-driven engineering;modeling languages;probabilistic models;Adaptation models;Computational modeling;Data models;Graphical models;Inference algorithms;Random variables;Unified modeling language;Graphical Models;Machine Learning;Model-driven Engineering},
}

@InProceedings{Roussev2015,
  author        = {V. Roussev},
  title         = {Building a Forensic Computing Language},
  booktitle     = {System Sciences (HICSS), 2015 48th Hawaii International Conference on},
  year          = {2015},
  pages         = {5228-5233},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {The primary goal of this discussion is to motivate the need for the development of a domain-specific language (DSL) focused on the requirements of forensic and security analysis. We argue that, at present, there is no adequate mechanism that a) allows analysts to specify the forensic computation as a tool-agnostic, logical sequence of steps, b) provides a formal specification for tool developers, and c) seamlessly integrates different available tools to provides a complete and extensible solution. We present an initial design sketch for a forensic DSL called nugget, and use it to illustrate the ideas behind our approach.},
  doi           = {10.1109/HICSS.2015.617},
  groups        = {SCOPUS, ACM, Compendex, IEEE DSL, Duplicados},
  issn          = {1530-1605},
  keywords      = {digital forensics;formal specification;specification languages;domain-specific language;forensic DSL;forensic computing language;formal specification;nugget;security analysis;Abstracts;Computers;DSL;Forensics;Runtime;digital forensics;dsl;nugget forensic computing language, rank3},
}

@InProceedings{Senbalci2013,
  author        = {C. Şenbalcı and S. Altuntaş and Z. Bozkus and T. Arsan},
  title         = {Big data platform development with a domain specific language for telecom industries},
  booktitle     = {2013 High Capacity Optical Networks and Emerging/Enabling Technologies},
  year          = {2013},
  pages         = {116-120},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces a system that offer a special big data analysis platform with Domain Specific Language for telecom industries. This platform has three main parts that suggests a new kind of domain specific system for processing and visualization of large data files for telecom organizations. These parts are Domain Specific Language (DSL), Parallel Processing/Analyzing Platform for Big Data and an Integrated Result Viewer. In addition to these main parts, Distributed File Descriptor (DFD) is designed for passing information between these modules and organizing communication. To find out benefits of this domain specific solution, standard framework of big data concept is examined carefully. Big data concept has special infrastructure and tools to perform for data storing, processing, analyzing operations. This infrastructure can be grouped as four different parts, these are infrastructure, programming models, high performance schema free databases, and processing-analyzing. Although there are lots of advantages of Big Data concept, it is still very difficult to manage these systems for many enterprises. Therefore, this study suggest a new higher level language, called as DSL which helps enterprises to process big data without writing any complex low level traditional parallel processing codes, a new kind of result viewer and this paper also presents a Big Data solution system that is called Petaminer.},
  doi           = {10.1109/HONET.2013.6729768},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  issn          = {1949-4092},
  keywords      = {data analysis;parallel databases;parallel languages;telecommunication computing;DFD;DSL;Domain Specific Language;big data platform development;data analyzing operations;data processing;data storing operation;distributed file descriptor;higher level language;parallel processing codes;parallel processing/analyzing platform;telecom industry;DSL;Data handling;Data storage systems;Information management;Telecommunications;Web sites;Writing;Big Data Analysis;Domain Specific Language;Parallel Processing and Analyzing, rank3},
}

@InProceedings{Adolf2012,
  author        = {D. Adolf and E. Ferranti and S. Koch},
  title         = {SmartScript - a domain-specific language for appliance control in Smart Grids},
  booktitle     = {Smart Grid Communications (SmartGridComm), 2012 IEEE Third International Conference on},
  year          = {2012},
  pages         = {465-470},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {This paper describes an auto-configuring agent based software architecture connecting appliances, smart meters, solar panels, and a KNX building automation system, resulting in a complete demand-side smart grid. The agents are responsible for providing access to all datapoints in the system as well as sending commands to the active components. To control the system, a domain-specific language (DSL) called SmartScript was developed, whose benefits are twofold. The first one is to provide users, experts in electrical engineering and/or building automation but not in software systems, with a high level tool which they can use to control a demand-side smart grid. The second benefit is to provide a layer to implement and test quickly and effectively energy-aware algorithms without having to deal with all the underlying connections. Finally, some demo applications created using SmartScript (i.e., smartphone interface, voice-controlled building automation system) are presented in this work, in order to give an example of how SmartScript can be used.},
  doi           = {10.1109/SmartGridComm.2012.6486028},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {building management systems;demand side management;home automation;smart meters;smart phones;smart power grids;software agents;software architecture;solar cells;specification languages;DSL;KNX building automation system;SmartScript;appliance control;autoconfiguring agent-based software architecture;demand side smart grid control;domain-specific language;electrical engineering;energy-aware algorithms;smart meters;smartphone interface;solar panels;voice-controlled building automation system;Automation;Buildings;Home appliances;Protocols;Smart grids;Software;Software architecture, rank3},
}

@InProceedings{Schivo2012,
  author        = {S. Schivo and J. Scholma and B. Wanders and R. A. U. Camacho and P. E. van der Vet and M. Karperien and R. Langerak and J. van de Pol and J. N. Post},
  title         = {Modelling biological pathway dynamics with Timed Automata},
  booktitle     = {Bioinformatics Bioengineering (BIBE), 2012 IEEE 12th International Conference on},
  year          = {2012},
  pages         = {447-453},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {When analysing complex interaction networks occurring in biological cells, a biologist needs computational support in order to understand the effects of signalling molecules (e.g. growth factors, drugs). ANIMO (Analysis of Networks with Interactive MOdelling) is a tool that allows the user to create and explore executable models of biological networks, helping to derive hypotheses and to plan wet-lab experiments. The tool is based on the formalism of Timed Automata, which can be analysed via the UPPAAL model checker. Thanks to Timed Automata, we can provide a formal semantics for the domain-specific language used to represent signalling networks. This enforces precision and uniformity in the definition of signalling pathways, contributing to the integration of signalling event models into complex, crosstalk-driven networks. We propose an approach to discretization of reaction kinetics that allows us to efficiently use UPPAAL as the computational engine to explore the dynamic cell behaviour. A user friendly interface makes the use of Timed Automata completely transparent to the biologist, while keeping the expressive power intact. This allows to define relatively simple, yet faithful models of complex biological interactions. The resulting timed behaviour is displayed graphically, allowing for an intuitive and interactive modelling experience.},
  doi           = {10.1109/BIBE.2012.6399719},
  groups        = {IEEE DSL, SCOPUS, Compendex, Duplicados},
  keywords      = {bioinformatics;cellular biophysics;complex networks;drugs;finite automata;formal languages;formal verification;human computer interaction;molecular biophysics;reaction kinetics;ANIMO;UPPAAL model checker;analysis of networks with interactive modelling;biological cells;biological pathway dynamic modelling;complex biological interaction network analysis;computational engine;crosstalk-driven networks;domain-specific language;drugs;dynamic cell behaviour;formal semantics;growth factors;reaction kinetic discretization;signalling event model;signalling molecules;signalling network representation;signalling pathway;timed automata formalism;user friendly interface;wet-lab experiments;Analytical models;Automata;Biological system modeling;Computational modeling;Data models;Kinetic theory;dynamic behaviour;modelling;signalling pathway;timed automata, rank3},
}

@InProceedings{Toersel2013,
  author        = {A. M. Törsel},
  title         = {A Testing Tool for Web Applications Using a Domain-Specific Modelling Language and the NuSMV Model Checker},
  booktitle     = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
  year          = {2013},
  pages         = {383-390},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Test case generation from formal models using model checking software is an established method. This paper presents a model-based testing approach for web applications based on a domain-specific language model. It is shown how the domain-specific language is transformed into the input language of the NuSMV model checker and how the resulting traces are converted into executable test scripts for various test automation tools. The presented approach has been implemented with comprehensive automation in a research tool which architecture is outlined.},
  doi           = {10.1109/ICST.2013.54},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {2159-4848},
  keywords      = {Internet;automatic programming;formal verification;program testing;specification languages;NuSMV model checker software;Web applications;domain-specific modelling language;executable test scripts;model-based testing approach;test automation tools;test case generation;Adaptation models;Automation;DSL;Model checking;Software;Web pages;model checking;model-based testing;test automation;web applications, rank3},
}

@InProceedings{Butzin2014a,
  author        = {B. Butzin and F. Golatowski and C. Niedermeier and N. Vicari and E. Wuchner},
  title         = {A model based development approach for building automation systems},
  booktitle     = {Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)},
  year          = {2014},
  pages         = {1-6},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {As of today, building automation systems are present in almost any commercial building. They perform climate control, lightning control, access control, surveillance, and quite a few other tasks. As a result of their evolutionary development, building automation systems are divided into separate silos of disciplines that are not well integrated with each other. As of today, a variety of communication protocols, data models and engineering approaches are used by different vendors. Existing standardized building automation protocols as BACnet or KNX allow integration of some disciplines on the communication level but fail to provide means for common description of devices, services and data on the semantic level. This means that building automation applications that span multiple disciplines require a high effort for development, engineering and maintenance. If devices from multiple vendors are integrated in one installation, a set of different engineering tools and vendor-specific knowledge is required. In the ITEA “Building as a Service” (BaaS) project we try to overcome these deficiencies and define a common way to develop, engineer, commission, operate and maintain building automation systems following a service oriented approach. The whole process will be supported by semantic models to reduce costs and time-to-market, which is a quite new approach. In this paper we will present the current state of the work with special regard to domain modeling and model driven processes that are currently being specified for the BaaS platform.},
  doi           = {10.1109/ETFA.2014.7005365},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  issn          = {1946-0740},
  keywords      = {authorisation;building management systems;data models;lightning;protocols;service-oriented architecture;BACnet;BaaS platform;ITEA BaaS project;KNX;access control;building as a service;building automation applications;building automation systems;climate control;commercial building;communication protocols;data models;evolutionary development;lightning control;model based development approach;standardized building automation protocols;surveillance;Building automation;Data models;Domain specific languages;Ontologies;Protocols;Semantics;building automation;data model;domain specific language;semantic model;service oriented architecture, rank3},
}

@InProceedings{Creff2012,
  author        = {S. Creff and J. Champeau and A. Monégier and J. M. Jézéquel},
  title         = {Relationships Formalization for Model-Based Product Lines},
  booktitle     = {2012 19th Asia-Pacific Software Engineering Conference},
  year          = {2012},
  volume        = {1},
  pages         = {158-163},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Model-Based Engineering (MBE) and Product Line Engineering (PLE) have been combined, to handle new system development constraints like: increasing complexity, higher product quality and cost reduction. Many authors have pointed out the need of modularization in the variability and in the core assets space. Existing approaches focus on separating and delimiting concerns or providing generic composition mechanisms. In Model-Based Product Lines, with an increasing number of models to manage, organizing the modeling space becomes central to support product line consistency, maintenance and product derivation process. To organize the modeling space, we propose to precisely describe the dependencies among modeling artifacts and clarify their use. Thus, we introduce the Product Line Modeling Space (PLiMoS) language that specializes relationships, based on an intentional framework, for the product line domain. The Domain Specific Language (DSL) provides a solution to model the modeling space and preserves independence with the product line tooling.},
  doi           = {10.1109/APSEC.2012.127},
  groups        = {ACM, IEEE DSL, Duplicados},
  issn          = {1530-1362},
  keywords      = {cost reduction;product development;software cost estimation;software maintenance;software quality;software reusability;specification languages;DSL;Domain Specific Language;MBE;PLE;PLiMoS language;cost reduction;generic composition mechanism;maintenance;model-based engineering;model-based product lines;modeling artifact;product derivation process;product line consistency;product line domain;product line engineering;product line modeling space;product line tooling;product quality;relationships formalization;system development constraint;Abstracts;Complexity theory;Context;Context modeling;Principal component analysis;Software;Unified modeling language;DSL;Feature Models;Intentional Relations;MBE;Modeling Space;PLE;Relationships, rank3},
}

@InProceedings{6417293,
  author    = {J. Eichler and A. Fuchs and N. Lincke},
  title     = {Supporting Security Engineering at Design Time with Adequate Tooling},
  booktitle = {Computational Science and Engineering (CSE), 2012 IEEE 15th International Conference on},
  year      = {2012},
  pages     = {194-201},
  month     = {Dec},
  abstract  = {Security engineering is considered to be a challenging task in order to build systems that remain dependable in the face of malice, error, or mischance. Recent approaches propose the application of domain specific modeling languages (DSMLs) in order to facilitate security engineering activities. To support the development and application of adequate DSMLs, agile approaches and frameworks to provide appropriate tooling are needed. In this paper, we document our experiences developing modeling tools for two different DSMLs in the domain of security engineering. We sketch the language and implementation requirements for our modeling tools, design and implementation considerations, and report on pitfalls and remaining issues with regard to the development of modeling tools based on our experiences.},
  doi       = {10.1109/ICCSE.2012.34},
  groups    = {SCOPUS, excluidos},
  keywords  = {programming languages;security of data;software tools;DSML;design time;domain specific modeling languages;modeling tool development;security engineering activities;tooling;Adaptation models;Analytical models;Biological system modeling;Concrete;Security;Syntactics;Unified modeling language;MDD tools;model-driven development;security engineering},
}

@InProceedings{Visic2015,
  author        = {N. Visic and H. G. Fill and R. A. Buchmann and D. Karagiannis},
  title         = {A domain-specific language for modeling method definition: From requirements to grammar},
  booktitle     = {2015 IEEE 9th International Conference on Research Challenges in Information Science (RCIS)},
  year          = {2015},
  pages         = {286-297},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {The core process a modeling method engineer needs to accomplish starts with the acquisition of domain knowledge and requirements, and ends with the deployment of a usable modeling tool. In between, a key intermediate deliverable of this process is the modeling method specification which, ideally, should be platform independent. On one hand, it takes input from a structured understanding of the application domain and scenarios; on the other hand, it provides sufficiently structured input to support the implementation of tool support for modeling activities. It is quite common that such modeling methods are domain-specific, in the sense that they provide concepts from the domain as “first-class modeling citizens”. However, for the purposes of this paper, we raise the level of abstraction for “domain specificity” and consider “modeling method engineering” as the application domain. Consequently, we raise several research questions - whether a domain-specific language can support this domain, and what would be its requirements, properties, constructs and grammar. We propose an initial draft of such a language - one that abstracts away from meta-modeling platforms by establishing a meta2 layer of abstraction where a modeling method can be defined in a declarative manner, then the final modeling tool is generated by automated compilation of the method definition for the meta-modeling environment of choice.},
  doi           = {10.1109/RCIS.2015.7128889},
  groups        = {Compendex, SCOPUS, IEEE DSL, Duplicados},
  issn          = {2151-1349},
  keywords      = {formal specification;grammars;knowledge based systems;domain knowledge;domain specificity;domain-specific language;grammar;metamodeling platform;modeling method engineering;modeling method specification;Analytical models;Computational modeling;DSL;Domain specific languages;Metamodeling;Semantics;Unified modeling language;domain-specific language;meta-modeling;modeling method;modeling tool, rank3},
}

@InProceedings{Ma2016,
  author        = {S. Ma and Z. Aklah and D. Andrews},
  title         = {Run time interpretation for creating custom accelerators},
  booktitle     = {2016 Design, Automation Test in Europe Conference Exhibition (DATE)},
  year          = {2016},
  pages         = {900-905},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Despite the significant advancements that have been made in High Level Synthesis, the reconfigurable computing community has not yet managed to achieve a wide-spread use of Field Programmable Gate Arrays (FPGAs) by programmers. Existing barriers that prevent programmers from using FPGAs include the need to work within vendor specific CAD tools, knowledge of hardware programming models, and the requirement to pass each design through a very time-consuming synthesis, place and route process. In this paper we present a new approach that takes these barriers out of the design flows for programmers. We move synthesis out of the programmers path and instead rely on composing pre-synthesized building blocks using a domain-specific language that supports programming patterns tailored to FPGA accelerators. Our results show that the achieved performance of run time assembling accelerators is equivalent to synthesizing a custom block of hardware using automated HLS tools.},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {field programmable gate arrays;high level synthesis;specification languages;CAD tool;FPGA;HLS;building block synthesis;custom accelerator;design flow;domain-specific language;field programmable gate array;high level synthesis;run time interpretation;DSL;Field programmable gate arrays;Hardware;Integrated circuit interconnections;Program processors;Programming;Switches, rank3},
}

@InProceedings{Deantoni2016,
  author        = {J. Deantoni},
  title         = {Modeling the Behavioral Semantics of Heterogeneous Languages and their Coordination},
  booktitle     = {2016 Architecture-Centric Virtual Integration (ACVI)},
  year          = {2016},
  pages         = {12-18},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {In the software and system modeling community, research on domain-specific modeling languages (DSMLs) is focused on providing technologies for developing languages and tools that allow domain experts to develop system solutions efficiently. Unfortunately, the current lack of support for explicitly relating concepts expressed in different DSMLs makes it very difficult for software and system engineers to reason about information spread across models describing different system aspects. As a particular challenge, we present in this paper how we dealt with relationships between heterogeneous behavioral models to support their concurrent and coordinated execution. This was achieved by providing dedicated meta-language to define the behavioral semantics of DSMLs and their coordination. The approach made explicit a formal model of the control flow (MoCC); domain-specific actions (DSA) and a well-defined protocol between them (incl., mapping, feedback and callback) reified through explicit domain-specific events (DSE). The protocol is then used to infer a relevant behavioral language interface for specifying coordination patterns to be applied on conforming executable models. As a result, heterogeneous languages and their relationships can be developed in the GEMOC studio, which provides extensive support to run and debug heterogeneous models. This is outlined in the paper on the definition of the Marked Graph language and its coordination with a scenario language.},
  doi           = {10.1109/ACVI.2016.9},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {formal verification;programming language semantics;DSA;DSE;DSML;GEMOC studio;behavioral language interface;behavioral semantics;callback task;concurrent execution;coordinated execution;coordination patterns;domain-specific modeling languages;domain-specifications;explicit domain-specific events;feedback task;formal MoCC;formal model-of-the-control flow;heterogeneous behavioral semantics modeling;heterogeneous languages;heterogeneous model debugging;heterogeneous model run;mapping task;marked graph language;meta-language;system modeling community;Concurrent computing;Context;DSL;Metamodeling;Semantics;Software;Syntactics;behavioral semantics;concurrency theory;coordination;heterogeneous modeling;model of computation;simulation, rank3},
}

@InProceedings{Falkner2013a,
  author        = {K. Falkner and V. Chiprianov and N. Falkner and C. Szabo and G. Puddy},
  title         = {Modeling scenarios for the performance prediction of distributed real-time embedded systems},
  booktitle     = {Military Communications and Information Systems Conference (MilCIS), 2013},
  year          = {2013},
  pages         = {1-6},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Autonomous defence systems are typically characterized by hard constraints on space, weight and power. These constraints have a strong impact on the non-functional properties and especially performance of the final system. System execution modelling tools permit early prediction of the performance of model driven systems; however they are intended for one shot analysis, not for repeatable, interactive use. In this paper we propose a Domain Specific Language for describing scenarios to repeatedly test a system execution model within a Synthetic Environment. We exemplify it by describing and executing a scenario involving an UAV and a CMS.},
  doi           = {10.1109/MilCIS.2013.6694495},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {autonomous aerial vehicles;defence industry;distributed programming;embedded systems;military computing;CMS;UAV;autonomous defence systems;distributed real-time embedded systems;domain specific language;model driven systems;system execution modelling;Analytical models;Data models;Engines;Hardware;Middleware;Predictive models;Unified modeling language;formatting;insert;style;styling, rank3},
}

@InProceedings{Ouedraogo2014a,
  author        = {G. S. Ouedraogo and M. Gautier and O. Sentieys},
  title         = {Frame-based modeling for automatic synthesis of FPGA-Software Defined Radio},
  booktitle     = {2014 9th International Conference on Cognitive Radio Oriented Wireless Networks and Communications (CROWNCOM)},
  year          = {2014},
  pages         = {341-346},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Software Defined Radio (SDR) is now becoming a ubiquitous concept to describe and implement Physical Layers (PHYs) of wireless systems. Moreover, even though the FPGA is expected to play a key role in SDR, describing a PHY at the Register-Transfer-Level (RTL) requires tremendous efforts. This paper introduces a novel methodology to rapidly implement PHYs for SDR. The work relies upon High-Level Synthesis tools and dataflow modeling in order to infer an efficient RTL control unit for the application. The proposed software-based over-layer partly handles the complexity of programming an FPGA and integrates reconfigurable features. It consists essentially of a Domain-Specific Language (DSL) combined to a DSL-Compiler. An IEEE 802.11a transceiver has been explored via this approach in order to show the flexibility features.},
  doi           = {10.4108/icst.crowncom.2014.255289},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  issn          = {2166-5370},
  keywords      = {field programmable gate arrays;program compilers;radio transceivers;software radio;specification languages;wireless LAN;DSL-compiler;FPGA-software defined radio;IEEE 802.11a transceiver;PHY;RTL control unit;SDR;dataflow modeling;domain-specific language;frame-based modeling;high-level synthesis tools;physical layers;register-transfer-level;DSL;Encoding;Field programmable gate arrays;Physical layer;Receivers;Software;Synchronization, rank3},
}

@InProceedings{Barateiro2012,
  author        = {J. Barateiro and J. Borbinha},
  title         = {Managing risk data: From spreadsheets to information systems},
  booktitle     = {2012 16th IEEE Mediterranean Electrotechnical Conference},
  year          = {2012},
  pages         = {673-676},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {The goal of Risk Management is to define prevention and control mechanisms to address the risks attached to specific activities and valuable assets. Many Risk Management efforts operate in silos with narrowly focused, functionally driven, and disjointed activities. That fact leads to a fragmented view of risks, where each activity uses its own language, customs and metrics. That limits an organization-wide perception of risks, where interdependent risks are not anticipated, controlled or managed. The lack of integrated solutions to manage risk information, lead the experts to use spreadsheets as their main tool, impeding collaboration, communication and reuse of risk information. In order to address these issues, this paper presents a solution that integrates a Risk Management framework, including a XML-based Domain Specific Language for Risk Management. The proposed framework is supported by an information system to manage the definition or risks.},
  doi           = {10.1109/MELCON.2012.6196521},
  groups        = {SCOPUS, Compendex, IEEE DSL, Duplicados},
  issn          = {2158-8473},
  keywords      = {XML;management information systems;risk management;spreadsheet programs;XML-based domain specific language;information systems;interdependent risks;risk control mechanisms;risk data management;risk information reusage;risk prevention mechanisms;silos;spreadsheets;Computer architecture;Information systems;Organizations;Risk management;Unified modeling language;XML, rank3},
}

@InProceedings{Opila2016,
  author        = {J. Opiła},
  title         = {Prototyping of visualization designs of 3D vector fields using POVRay rendering engine},
  booktitle     = {2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO)},
  year          = {2016},
  pages         = {343-348},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {There is a persistent quest for novel methods of visualization in order to get insight into complex phenomena in variety of scientific domains. Researchers, ex. VTK team, achieved excellent results; however, some problems connected with implementation of new techniques and quality of the final images still persist. Results of inspection of number of visualization styles of 3D vector field employing POVRay ray-tracing engine are discussed, i.e. hedgehogs, oriented glyphs, streamlines, isosurface component approach and texturing design. All styles presented have been tested using water molecule model and compared concerning computing time, informativeness and general appearance. It is shown in the work that Scene Description Language (SDL), domain specific language implemented in POVRay is flexible enough to use it as a tool for fast prototyping of novel and exploratory visualization techniques. Visualizations discussed in the paper were computed using selected components of API of ScPovPlot3D, i.e. templates written in the SDL language. Results are compared to designs already implemented in VTK.},
  doi           = {10.1109/MIPRO.2016.7522164},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {data visualisation;ray tracing;rendering (computer graphics);vectors;3D vector field;API;POVRay rendering engine;ScPovPlot3D;domain specific language;exploratory visualization;hedgehogs;isosurface component approach;oriented glyph;ray-tracing engine;scene description language;streamlines;texturing design;visualization design prototyping;Data visualization;Electrostatics;Engines;Extraterrestrial measurements;Libraries;Three-dimensional displays;Visualization;POVRay;ScPovPlot3D;VTK;vector field visualization;visual data analysis, rank3},
}

@InProceedings{Lopes2016,
  author        = {F. A. Lopes and L. Lima and M. Santos and R. Fidalgo and S. Fernandes},
  title         = {High-level modeling and application validation for SDN},
  booktitle     = {NOMS 2016 - 2016 IEEE/IFIP Network Operations and Management Symposium},
  year          = {2016},
  pages         = {197-205},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Software-Defined Networking (SDN) enables applications running on its control plane. The Northbound API allows programmers to develop SDN applications for a number of policy-based network management tasks. However, there is still a clear need for supporting the development of controller-agnostic modeled applications. In this paper, we show how the Model-Driven Networking (MDN), a framework composed of CASE tool and Domain-Specific Modeling Language (DSML), can be a feasible solution to create applications independent from controllers and to enable proper verification of SDN applications. Our evaluation demonstrates that MDN framework is viable for using in real scenarios and independent from SDN controllers. Moreover, our performance tests show that: (i) MDN's code generation is two times faster than other approaches; and (ii) it can validate several constraints and complex topologies at millisecond-timescale.},
  doi           = {10.1109/NOMS.2016.7502813},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {programming languages;software defined networking;CASE tool;DSML;MDN;SDN application;application validation;controller-agnostic modeled application;domain-specific modeling language;high-level modeling;model-driven networking;network topology;northbound API;policy-based network management task;software-defined networking;Computer aided software engineering;Computer languages;DSL;Network topology;Programming;Software;Topology;CASE;Domain-Specific Modeling Language;MDN;Software-Defined Networking;application;framework, rank3},
}

@InProceedings{Calvagna2013,
  author        = {A. Calvagna and A. Gargantini and P. Vavassori},
  title         = {Combinatorial Interaction Testing with CITLAB},
  booktitle     = {2013 IEEE Sixth International Conference on Software Testing, Verification and Validation},
  year          = {2013},
  pages         = {376-382},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {In this paper the CITLAB tool for Combinatorial Interaction Testing is presented. The tool allows importing/exporting models of combinatorial problems from/to different application domains, by means of a common interchange syntax notation and a corresponding interoperable semantic metamodel. Moreover, the tool is a framework allowing embedding and transparent invocation of multiple, different implementations of combinatorial algorithms. CITLAB has been designed tightly integrated with the Eclipse IDE framework, by means of its plug-in extension mechanism. It is intended to easy the spread of CIT testing both in industrial practice and in academic research, by allowing users and researchers to apply multiple test suite generation algorithms, each with its peculiarities, on the same problem models, and let them compare the results in order to select the one that best fits their needs, while alleviating from the pain of knowing all the different details and notations of the underlying CIT tools.},
  doi           = {10.1109/ICST.2013.53},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  issn          = {2159-4848},
  keywords      = {combinatorial mathematics;interactive systems;open systems;testing;CITLAB tool;Eclipse IDE framework;combinatorial interaction testing;importing/exporting models;interchange syntax notation;interoperable semantic metamodel;multiple test suite generation algorithms;transparent invocation;Algorithm design and analysis;Biological system modeling;Generators;Grammar;Semantics;Syntactics;Testing;Combinatorial testing model;Eclipse;XTEXT;domain-specific language, rank3},
}

@InProceedings{Bettini2015,
  author    = {L. Bettini and P. Crescenzi},
  title     = {Java-meets eclipse: An IDE for teaching Java following the object-later approach},
  booktitle = {2015 10th International Joint Conference on Software Technologies (ICSOFT)},
  year      = {2015},
  volume    = {2},
  pages     = {1-12},
  month     = {July},
  abstract  = {In this paper, we introduce a new Eclipse-based IDE for teaching Java following the object-later approach. In particular, this IDE allows the programmer to write code in Java-, a smaller version of the Java language that does not include object-oriented features. For the implementation of this language we used Xtext, an Eclipse framework for implementing Domain Specific Languages; besides the compiler mechanisms, Xtext also allows to easily implement all the IDE tooling mechanisms in Eclipse. By using Xtext we were able to provide an implementation of Java - with all the powerful features available when using an IDE like Eclipse (including debugging, automatic building, and project wizards). With our implementation, it is also straightforward to create self-assessment exercises for students, which are integrated in Eclipse and JUnit.},
  groups    = {IEEE DSL, excluidos},
  keywords  = {Java;computer aided instruction;computer science education;Eclipse-based IDE;JUnit;Java language;Java teaching;Xtext;compiler mechanism;domain specific language;object-later approach;Complexity theory;Education;Graphical user interfaces;Java;Programming profession;Syntactics;DSL;EMF;Eclipse;IDE;Java;Xtext},
}

@InProceedings{Krasts2012,
  author        = {O. Krasts and A. Kleins and A. Teilans},
  title         = {Domain specific language for securities settlement systems},
  booktitle     = {Digital Information Processing and Communications (ICDIPC), 2012 Second International Conference on},
  year          = {2012},
  pages         = {80-83},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Actual problems during design, implementation and maintenance of securities settlement systems software are achieving complementarity of several different, connected, asynchronously communicating settlement systems and verification of this complementarity. The aim of this paper is to create domain specific language for modeling of settlement systems and their interactions. Then use models to calculate settlement systems behavior. Specific of settlement systems requires that they perform accordingly to business rules in any situation. This makes use of model checking a very desirable step in development process of settlement systems. Defining a domain specific language and creating editor supporting it is a first step to enable use of model checking techniques. Created models also can be used as input for other analysis methods and tools, for example, basis path testing, simulation and as base for deriving test cases.},
  doi           = {10.1109/ICDIPC.2012.6257291},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {financial data processing;formal verification;securities trading;specification languages;asynchronously communicating settlement systems;business rules;domain specific language;model checking;securities settlement systems software;settlement systems behavior;Analytical models;Biological system modeling;Business;Computational modeling;Domain specific languages;Educational institutions;Unified modeling language;modeling;validatioan;verification, rank3},
}

@InProceedings{George2013,
  author        = {N. George and D. Novo and T. Rompf and M. Odersky and P. Ienne},
  title         = {Making domain-specific hardware synthesis tools cost-efficient},
  booktitle     = {Field-Programmable Technology (FPT), 2013 International Conference on},
  year          = {2013},
  pages         = {120-127},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Tools to design hardware at a high level of abstraction promise software-like productivity for hardware designs. Among them, tools like Spiral, HDL Coder, Optimus and MMAlpha target specific application domains and produce highly efficient implementations from high-level input specifications in a Domain Specific Language (DSL). But, developing similar domain-specific High-Level Synthesis (HLS) tools need enormous effort, which might offset their many advantages. In this paper, we propose a novel, cost-effective approach to develop domain-specific HLS tools. We develop the HLS tool by embedding its input DSL in Scala and using Lightweight Modular Staging (LMS), a compiler framework written in Scala, to perform optimizations at different abstraction levels. For example, to optimize computation on matrices, some optimizations are more effective when the program is represented at the level of matrices while others are better applied at the level of individual matrix elements. To illustrate the proposed approach, we create an HLS flow to automatically generate efficient hardware implementations of matrix expressions described in our own high-level specification language. Although a simple example, it shows how easy it is to reuse modules across different HLS flows and to integrate our flow with existing tools like LegUp, a C-to-RTL compiler, and FloPoCo, an arithmetic core generator. The results reveal that our approach can simultaneously achieve high productivity and design quality with a very reasonable tool development effort.},
  doi           = {10.1109/FPT.2013.6718341},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {circuit CAD;digital arithmetic;field programmable gate arrays;high level synthesis;matrix algebra;program compilers;specification languages;C-to-RTL compiler;DSL;FPGA;FloPoCo;HDL coder;HLS;LMS;LegUp;MMAlpha;Optimus;Scala;Spiral;arithmetic core generator;compiler framework;cost-efficiency;design quality;domain specific language;domain-specific hardware synthesis tools;domain-specific high-level synthesis tools;hardware design;hardware designs;high abstraction level;high-level specification language;lightweight modular staging;matrix computation optimizations;matrix expressions;software-like productivity;Adders;DSL;Generators;Hardware;Least squares approximations;Matrices;Optimization, rank3},
}

@InProceedings{Watney2014,
  author        = {G. Watney and L. J. Reder and T. Canham},
  title         = {Modeling for Partitioned and Multi-core Flight Software Systems: (Instrument Software Framework)},
  booktitle     = {Space Mission Challenges for Information Technology (SMC-IT), 2014 IEEE International Conference on},
  year          = {2014},
  pages         = {54-61},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an approach for modeling component based flight software systems that can be deployed to a wide variety of hardware and operating system configurations. Our focus is deployment to multiple ARINC653 partitions, however, the technique is effective across multiple processors as well. The modeling technique presented is two tiered: first software components are represented in System Modeling Language (SysML) utilizing an off-the-shelf Magic Draw Computer Aided Software Engineering (CASE) tool. A custom plug in is used to produce domain specific XML. Secondly, a Python code generator is used to map the domain specific XML to implementation C++ code. To facilitate the technique a new lite-weight component framework called the Instrument Software Framework (ISF) was developed. Component based software architectures have been shown to improve the quality of flight software systems. The modeling approach using SysML, XML and the ISF is explained. Separation of concerns of the deployment target environment from the component implementation are demonstrated by our technique. The ISF architecture will be described along with an essential Hub Component Design Pattern that enables swappable communication mediums between computing elements.},
  doi           = {10.1109/SMC-IT.2014.15},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {C++ language;XML;aerospace computing;computer aided software engineering;multiprocessing systems;operating systems (computers);program compilers;software quality;ARINC653 partitions;C++ code;CASE tool;ISF architecture;Instrument Software Framework;MagicDraw computer aided software engineering tool;Python code generator;SysML;component based flight software systems;component based software architectures;component implementation;custom plugin;domain specific XML;flight software systems;hardware system configurations;hub component design pattern;lite-weight component framework;multicore flight software systems;multiple processors;operating system configurations;swappable communication mediums;system modeling language;target environment;Computational modeling;Instruments;Message systems;Ports (Computers);Software;Topology;XML;Domain Specific Language;Instrument Software Framework (ISF);SysML;flight software;modeling;partitions, rank3},
}

@InProceedings{7338247,
  author        = {A. Pescador and A. Garmendia and E. Guerra and J. Sánchez Cuadrado and J. de Lara},
  title         = {Pattern-based development of Domain-Specific Modelling Languages},
  booktitle     = {Model Driven Engineering Languages and Systems (MODELS), 2015 ACM/IEEE 18th International Conference on},
  year          = {2015},
  pages         = {166-175},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Model-Driven Engineering (MDE) promotes the use of models to conduct all phases of software development in an automated way. Models are frequently defined using Domain- Specific Modelling Languages (DSMLs), which many times need to be developed for the domain at hand. However, while constructing DSMLs is a recurring activity in MDE, there is scarce support for gathering, reusing and enacting knowledge for their design and implementation. This forces the development of every new DSML to start from scratch. To alleviate this problem, we propose the construction of DSMLs and their modelling environments aided by patterns which gather knowledge of specific domains, design alternatives, concrete syntax, dynamic semantics and functionality for the modelling environment. They may have associated services, realized via components. Our approach is supported by a tool that enables the construction of DSMLs through the application of patterns, and synthesizes a graphical modelling environment according to them.},
  doi           = {10.1109/MODELS.2015.7338247},
  groups        = {Compendex, SCOPUS, Duplicados},
  keywords      = {software engineering;specification languages;DSML;MDE;associated service;concrete syntax;design alternative;domain-specific modelling language;dynamic semantics;graphical modelling environment;model-driven engineering;pattern-based development;scarce support;software development;Complexity theory;Concrete;Productivity;Semantics;Software;Syntactics;Taxonomy;Domain-Specific Modelling Languages;Meta-Modelling;Meta-Modelling Patterns;Modelling Environments, rank3},
}

@InProceedings{Chanti2015a,
  author        = {H. Chanti and L. Thiry and M. Hassenforder and E. Blanchard and P. Fromy},
  title         = {Fire safety DSL based algebra},
  booktitle     = {Control, Engineering Information Technology (CEIT), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {1-6},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {A complex system as the one evaluating the fire safety level, generally need the intervention of several specialists. Each one uses his own languages and own tools. To model such a system, several specific languages are needed and must be formalized and then integrated. This kind of systems can have irreversible consequences because of the human involving. To make a system sure - by the proof - the specification and composition of models/languages must be formally described and based on mathematical foundations. In this context, the paper proposes to use a formal approach based on algebraic specifications to model, formalize and compose the specific languages needed to evaluate the fire safety level in buildings.},
  doi           = {10.1109/CEIT.2015.7233083},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  keywords      = {algebraic specification;civil engineering computing;fires;safety;specification languages;Domain Specific Language;algebraic specifications;buildings;fire safety DSL;fire safety level;formal approach;Algebra;DSL;Mathematical model;Safety;Semantics;Transforms;Unified modeling language;Domain Specific Language (DSL);algebra;fire safety;formal languages, rank3},
}

@InProceedings{Nakamura2012,
  author        = {H. Nakamura and R. Nagano and K. Hisazumi and Y. Kamei and N. Ubayashi and A. Fukuda},
  title         = {QORAL: An External Domain-Specific Language for Mining Software Repositories},
  booktitle     = {Empirical Software Engineering in Practice (IWESEP), 2012 Fourth International Workshop on},
  year          = {2012},
  pages         = {23-29},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {The mining software repositories (MSR) field integrates and analyzes data stored in repositories such as source control and bug repositories to provide support to practitioners. In order to provide useful information to practitioners, MSR researchers need to perform tasks iteratively, these tasks include extracting data from repositories, transforming them into specific data formats, and loading them into the statistical analysis tool. These tasks require a significant amount of man hours to implement and execute according to the requirements of the researchers. This paper proposes an external domain-specific language (DSL) called QORAL to facilitate the performance of multiple iterations and environment development. The results from a questionnaire used to evaluate QORAL indicate that it is easy to understand and modify source code.},
  doi           = {10.1109/IWESEP.2012.20},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {configuration management;data analysis;data mining;program debugging;software engineering;DSL;MSR;QORAL;bug repository;bug tracking system;data analysis;data extraction;data format;data integration;environment development;external domain-specific language;multiple iteration;software repository mining;source code modification;source control;statistical analysis tool;version control system;DSL;Data mining;Grammar;Libraries;Loading;Measurement;Software;DSL;MSR;QORAL, rank3},
}

@InProceedings{Vinogradov2015,
  author        = {S. Vinogradov and A. Ozhigin and D. Ratiu},
  title         = {Modern model-based development approach for embedded systems practical experience},
  booktitle     = {Systems Engineering (ISSE), 2015 IEEE International Symposium on},
  year          = {2015},
  pages         = {56-59},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Control functionality of modern rail vehicles is getting more and more complex. It contains several modules such as the traction control unit or the central control unit, as well as input and output stations, such as driver's cab terminals and process I/Os. A plethora of devices are connected to the vehicle and train bus and are able to communicate. The functions of the vehicle control and traction systems are configured by using function blocks from which loadable programs are generated. The languages used to program the control units are well established in the field. However, one-size-fits-all approach cannot adequately address the increased complexity of the software in modern trains. In this paper we describe our preliminary experience with using the multi-paradigm modeling tool “mbeddr” in the railway domain. The following aspects have been in focus during the work: (a) matching the application requirements and domain specific language used for implementation; (b) integration of model-based approach into traditional product lifecycle; (c) reengineering existing functionality using modeling and code generation capabilities of mbeddr. The system example we chose was the application logic of automated train driving system implemented in development environment of Siemens process automation framework.},
  doi           = {10.1109/SysEng.2015.7302512},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {embedded systems;rail traffic control;traction;I/O process;Siemens process automation framework;application logic;application requirements;automated train driving system;central control unit;code generation capabilities;domain specific language;driver cab terminals;embedded systems;function blocks;input stations;loadable programs;mbeddr tool;model-based approach;model-based development approach;modeling capabilities;multiparadigm modeling tool;output stations;product lifecycle;rail vehicle control functionality;railway domain;reengineering;traction control unit;traction systems;train bus;vehicle bus;Complexity theory;Control systems;Domain specific languages;Formal verification;Mathematical model;Rail transportation;Software;language engineering;model based development, rank3},
}

@InProceedings{Guenalp2015,
  author        = {O. Günalp and C. Escoffier and P. Lalanda},
  title         = {Demo abstract: Reproducible deployment of pervasive applications},
  booktitle     = {Pervasive Computing and Communication Workshops (PerCom Workshops), 2015 IEEE International Conference on},
  year          = {2015},
  pages         = {211-213},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Pervasive systems present stringent requirements that make software deployment especially challenging. The unknown and fluctuating environment in which pervasive applications are executed discards traditional approaches. As a result, there is an increasing need for a reproducible and dynamic deployment process. In last years, we developed several industrial pervasive platforms and applications. Based on these experiences we propose Rondo, a tool suite for deploying pervasive applications. Rondo includes a domain-specific language for declaratively describing applications, a deployment manager that can dynamically apply these descriptions and development tools for helping the description of applications. In this paper we present this tool suite and a set of deployment scenarios in which we validated our approach, including a web framework and a home automation platform.},
  doi           = {10.1109/PERCOMW.2015.7134025},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {Internet;home automation;software tools;ubiquitous computing;Rondo;Web framework;domain-specific language;home automation platform;industrial pervasive applications;industrial pervasive platforms;pervasive systems;reproducible dynamic deployment process;software deployment;tool suite;Assembly;Conferences;Context;DSL;Monitoring;Pervasive computing;Software, rank3},
}

@Article{6839148,
  author   = {B. Combemale and J. DeAntoni and B. Baudry and R. B. France and J. M. Jézéquel and J. Gray},
  title    = {Globalizing Modeling Languages},
  journal  = {Computer},
  year     = {2014},
  volume   = {47},
  number   = {6},
  pages    = {68-71},
  month    = {June},
  abstract = {In the software and systems modeling community, domain-specific modeling language (DSML) research is focused on providing technologies for developing languages and tools that allow domain experts to develop system solutions efficiently. Unfortunately, it's very difficult for software and systems engineers to reason about information spread across models describing different system aspects because of the current lack of support for explicitly relating concepts expressed in different DSMLs. Here, we describe a research initiative that broadens the DSML research focus beyond independent DSML development to one that supports globalized DSMLs-that is, DSMLs that facilitate coordination of work across different domains of expertise. Coordinating domain-specific modeling languages provides support for language heterogeneity in software-intensive systems' development and runtime management.},
  doi      = {10.1109/MC.2014.147},
  groups   = {IEEE DSML, excluidos},
  issn     = {0018-9162},
  keywords = {software development management;specification languages;domain-specific modeling language;globalized DSMLs;independent DSML development;language heterogeneity;runtime management;software-intensive systems development;Adaptation models;Analytical models;Computational modeling;Computer languages;Domain specific languages;Globalization;Software development;model-driven engineering;modeling language;software engineering;software language engineering},
}

@InProceedings{Franchi2012,
  author        = {E. Franchi},
  title         = {A Domain Specific Language Approach for Agent-Based Social Network Modeling},
  booktitle     = {Advances in Social Networks Analysis and Mining (ASONAM), 2012 IEEE/ACM International Conference on},
  year          = {2012},
  pages         = {607-612},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Although in the past twenty years agent-based modeling has been widely adopted as a research tool in the fields of social and political sciences, there is lack of software instruments specifically created for social network simulations. Restricting the field of interest specifically to social network models and simulations instead of supporting general agent-based ones, allows for the creation of easier to use, more focused tools. In this work, we propose PyNetSYM, an agent-based modeling framework designed to be friendly to programmers and non-programmers alike. PyNetSYM provides a domain-specific language to specify social network simulations expressed as agent-based models. PyNetSYM was created to deal with large simulations and to work effortlessly with other social network analysis toolkits.},
  doi           = {10.1109/ASONAM.2012.102},
  groups        = {Compendex, ACM, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {social networking (online);social sciences;software agents;PyNetSYM;agent-based social network modeling;domain specific language approach;political science;social science;Analytical models;Concurrent computing;DSL;Libraries;Message systems;Object oriented modeling;Social network services;Agent Based Modeling;Social Network Analysis, rank3},
}

@InProceedings{Gargantini2012,
  author        = {A. Gargantini and P. Vavassori},
  title         = {CITLAB: A Laboratory for Combinatorial Interaction Testing},
  booktitle     = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  year          = {2012},
  pages         = {559-568},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Although the research community around combinatorial interaction testing has been very active for several years, it has failed to find common solutions on some issues. First of all, there is not a common abstract nor concrete language to express combinatorial problems. Combinatorial testing generator tools are strongly decoupled making difficult their interoperability and the exchange of models and data. In this paper, we propose an abstract and concrete specific language for combinatorial problems. It features and formally defines the concepts of parameters and types, constraints, seeds, and test goals. The language is defined by means of XTEXT, a framework for the definition of domain-specific languages. XTEXT is used to derive a powerful editor integrated with eclipse and with all the expected features of a modern editor. Eclipse is also used to build an extensible framework in which test generators, importers, and exporters can be easily added as plugins.},
  doi           = {10.1109/ICST.2012.141},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  issn          = {2159-4848},
  keywords      = {Java;open systems;program testing;software tools;specification languages;CITLAB;XTEXT;abstract specific language;combinatorial interaction testing;combinatorial testing generator tool;concrete specific language;domain specific language;eclipse;interoperability;modern editor;Cameras;DSL;Generators;Grammar;Java;Syntactics;Testing;XTEXT;combinatorial testing;domain specific languages;eclipse;xtext, rank3},
}

@InProceedings{Ciraci2014,
  author        = {S. Ciraci and J. C. Fuller and J. Daily and A. Makhmalbaf and D. Callahan},
  title         = {A Runtime Verification Framework for Control System Simulation},
  booktitle     = {Computer Software and Applications Conference (COMPSAC), 2014 IEEE 38th Annual},
  year          = {2014},
  pages         = {75-84},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {In a standard workflow for the validation of a control system, the control system is implemented as an extension to a simulator. Such simulators are complex software systems, and engineers may unknowingly violate constraints a simulator places on extensions. As such, errors may be introduced in the implementation of either the control system or the simulator leading to invalid simulation results. This paper presents a novel runtime verification approach for verifying control system implementations within simulators. The major contribution of the approach is the two-tier specification process. In the first tier, engineers model constraints using a domain-specific language tailored to modeling a controller's response to changes in its input. The language is high-level and effectively hides the implementation details of the simulator, allowing engineers to specify design-level constraints independent of low-level simulator interfaces. In the second tier, simulator developers provide mapping rules for mapping design-level constraints to the implementation of the simulator. Using the rules, an automated tool transforms the design-level specifications into simulator-specific runtime verification specifications and generates monitoring code which is injected into the implementation of the simulator. During simulation, these monitors observe the input and output variables of the control system and report changes to the verifier. The verifier checks whether these changes follow the constraints of the control system. We describe application of this approach to the verification of the constraints of an HVAC control system implemented with the power grid simulator Grid LAB-D.},
  doi           = {10.1109/COMPSAC.2014.14},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {control engineering computing;formal specification;formal verification;control system simulation;design-level specification;domain-specific language;low-level simulator interface;mapping design-level constraint;monitoring code;simulator-specific runtime verification specification;two-tier specification process;Automata;Control systems;Monitoring;Object oriented modeling;Runtime;Software systems;Time factors;control system;runtime verification;simulation;timed automata, rank3},
}

@InProceedings{6901554,
  author    = {D. Wang and Y. Miao and H. U. Hoppe and M. Samaka},
  title     = {A Domain-Specific Modeling Language Approach to Support Various Forms of Online PBL},
  booktitle = {2014 IEEE 14th International Conference on Advanced Learning Technologies},
  year      = {2014},
  pages     = {611-613},
  month     = {July},
  abstract  = {Problem-based learning (PBL) can be organized and conducted in a variety of forms. By adopting a Domain-Specific Modeling Language (DSML) approach we have developed a PBL scripting language, which provides natural concepts that teachers can understand and use in practical PBL. Based on this PBL scripting language, a web-based PBL authoring tool has been developed, which enables teachers to develop their own PBL strategies as PBL scripts.},
  doi       = {10.1109/ICALT.2014.178},
  groups    = {Compendex, SCOPUS, Inclusos},
  issn      = {2161-3761},
  keywords  = {Internet;authoring languages;computer aided instruction;DSML;PBL scripting language;PBL scripts;PBL strategies;Web-based PBL authoring tool;domain-specific modeling language approach;online PBL;problem-based learning;Abstracts;Brain modeling;Conferences;Educational institutions;Electronic mail;Organizations;User interfaces;DSML;PBL;PBL authoring tool;PBL script;PBL scripting language},
}

@InProceedings{Akhundov2016a,
  author        = {J. Akhundov and M. Werner and V. Schaus and A. Gerndt},
  title         = {Using timed automata to check space mission feasibility in the early design phases},
  booktitle     = {2016 IEEE Aerospace Conference},
  year          = {2016},
  pages         = {1-9},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {According to the model-based systems engineering paradigm, all engineers contribute to a single centralized data model of the system. The German Aerospace Center (DLR) develops a software tool Virtual Satellite which enables the engineers to store, exchange and alter their corresponding subsystem data on base of a distributed system model and thus contribute to the overall mission design during concurrent engineering (CE) sessions. Each engineer has their own scope of responsibilities, e.g. satellite trajectory, communication, or thermal analysis. Tracking implications of design changes on the whole system and feasibility aspects of the design is not trivial. Having an automated feasibility checking mechanism as a part of CE which would run iteratively after each design change provides a useful feedback mechanism for engineers and for the spacecraft client. For the purpose of mission feasibility checking a domain specific language (DSL) has been implemented using the Xtext Java framework. The extended parametric data model defined in the DSL serves as an executable representation of the spacecraft mission. The idea to use such an executable model to create a preliminary mission plan and hence confirm missions feasibility during conceptual study has already been introduced by Schaus et al. at the DLR. However, the vector of values of system variables was assumed to be equivalent with the currently active component, implying that component activities are mutually exclusive. This led to over-constraining of the execution model. Our work argues that concurrency considerations are critical from the earliest design phases. Since satellite is coupled with its environment and concurrency is an intrinsic property of the physical nature, considering concurrency allows for more realistic mission plans. The contributions of this paper are the introduction of concurrency considerations at the early space mission design phases and the use of timed automata tool (UPPAAL) for the - ission feasibility check during concurrent engineering sessions. As a result, with almost no overhead, the planned mission can be analyzed in a more realistic way. Furthermore, the run-times of the feasibility check amount to 10-100 milliseconds or less, which is also a significant improvement with respect to the previous work. This allows for more precision and fine granular modeling, and is a promising basis for model refinements in the consecutive mission design phases.},
  doi           = {10.1109/AERO.2016.7500572},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {aerospace computing;artificial satellites;automata theory;concurrent engineering;CE;DLR;DSL;German Aerospace Center;UPPAAL;Xtext Java framework;automated feasibility checking mechanism;concurrent engineering sessions;domain specific language;early design phases;extended parametric data model;software tool;space mission feasibility;spacecraft client;timed automata tool;virtual satellite;Automata;Concurrent computing;DSL;Modeling;Satellites;Space missions;Synchronization, rank3},
}

@InProceedings{7018448,
  author        = {A. Koshima and V. Englebert},
  title         = {Collaborative editing of EMF/Ecore meta-models and models conflict detection, reconciliation, and merging in DiCoMEF},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {55-66},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {Despite the fact that Domain Specific Modeling tools become very powerful and more frequently used, the support for their cooperation has not reached its full strength and demand for model management is growing. In cooperative work, the decision agents are semi-autonomous and therefore a solution for reconciliating DSM after a concurrent evolution is needed. Conflict detection and reconciliation are important steps for merging of concurrently evolved (meta)models in order to ensure collaboration. In this work, we present a conflict detection, reconciliation and merging framework for concurrently evolved meta-models and models. Besides, we formally specify the EMF Ecore meta-model into set constructs that help to analyze the (meta)model and operations performed on it.},
  groups        = {Science Direct, SCOPUS, Duplicados},
  keywords      = {groupware;object-oriented methods;specification languages;DiCoMEF;EMF metamodel;Ecore metamodels;collaborative editing;conflict detection model;conflict merging model;conflict reconciliation model;domain specific modeling;model management;Adaptation models;Biological system modeling;Collaboration;Erbium;History;Semantics;Unified modeling language;Collaborative Modeling;Conflict Detection;DSML;EMF;Merging, rank3},
}

@InProceedings{Thiery2014,
  author        = {A. Thiery and T. Cerqueus and C. Thorpe and G. Sunyé and J. Murphy},
  title         = {A DSL for Deployment and Testing in the Cloud},
  booktitle     = {Software Testing, Verification and Validation Workshops (ICSTW), 2014 IEEE Seventh International Conference on},
  year          = {2014},
  pages         = {376-382},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {Cloud computing is becoming increasingly prevalent, more and more software providers are offering their applications as Software-as-a-Service solutions rather than traditional on-premises installations. In order to ensure the efficacy of the testing phase, it is critical to create a test environment that sufficiently emulates the production environment. Thus, Cloud applications should be tested in the Cloud. Cloud providers offer command-line tools for interacting with their platforms. However, writing custom low-level scripts using the provider's tool can become very complex to maintain and manage when variability (in terms of providers and platforms) is introduced. The contributions in this paper include: the development of a high level Domain Specific Language for the abstract definition of the application deployment process, and resource requirements, and a generation process that transforms these definitions to automatically produce deployment and instantiation scripts for a variety of providers and platforms. These contributions significantly simplify and accelerate the testing process for Cloud applications.},
  doi           = {10.1109/ICSTW.2014.43},
  groups        = {ACM, SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {cloud computing;program testing;specification languages;DSL;application deployment process;cloud applications;cloud computing;cloud providers;command-line tools;custom low-level scripts;domain specific language;instantiation scripts;on-premises installations;resource requirements;software providers;software-as-a-service solutions;test environment;Context;DSL;Educational institutions;Grammar;Random access memory;Software;Testing;Cloud;DSL;Deployment;Testing in the Cloud, rank3},
}

@InProceedings{Lopes2015,
  author        = {F. A. Lopes and M. Santos and R. Fidalgo and S. Fernandes},
  title         = {Model-driven networking: A novel approach for SDN applications development},
  booktitle     = {2015 IFIP/IEEE International Symposium on Integrated Network Management (IM)},
  year          = {2015},
  pages         = {770-773},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Software-Defined Networking (SDN) has been receiving a great deal of attention from both academic and industry communities. One reason to this interest is that SDN enables the network programmability, through an external controller, which supports applications and policies built from SDN programming languages, thus breaking the traditional bind between control and data plane. Nevertheless, the application development in this context is still complex for such recent technology. Moreover, there is a strong need for methodologies and tools that explore the abstraction levels potentials supported by SDN. This paper presents a new approach based on the Model-Driven Engineering (MDE) paradigm, called Model-Driven Networking (MDN). MDN relies on a Domain-Specific Modelling Language (DSML) to create SDN applications. We argue that MDN raises the level of abstraction on development, thus reducing the complexity to implement SDN applications and avoiding inconsistent policies. In order to show the relevance and the technological viability of our proposal, we have specified a DSML and have built a tool for creating SDN applications using the MDN approach.},
  doi           = {10.1109/INM.2015.7140372},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1573-0077},
  keywords      = {software defined networking;specification languages;DSML;MDE paradigm;MDN;SDN applications development;SDN programming languages;domain-specific modelling language;external controller;model-driven engineering paradigm;model-driven networking;network programmability;software-defined networking;Biological system modeling;Complexity theory;Computational modeling;DSL;Proposals;Semantics;Syntactics;Domain-Specific Modeling Language;Model-Driven Engineering;Software-Defined Networking, rank3},
}

@InProceedings{Perez2013,
  author        = {F. Pérez and P. Valderas and J. Fons},
  title         = {A domain-specific language for enabling doctors to specify biomechanical protocols},
  booktitle     = {2013 IEEE Symposium on Visual Languages and Human Centric Computing},
  year          = {2013},
  pages         = {99-102},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {New technologies are entering medical practice at an astounding pace. However, these technologies often cause to doctors learn and use difficulties. Then, doctors require assistance of a biomedical engineer. This is currently happening in a local hospital that has new technology to analyze biomechanical protocols in patients. Protocols are used to measure performances and identify changes in human body movements and muscles. Doctors are neither familiar with the concepts nor tools used, so biomedical engineers carry out descriptions of protocols rather than doctors. In this paper, we present the design of a domain-specific language that enables doctors to specify biomechanical protocols by addressing learning barriers (using design patterns). We also make doctors' descriptions compatible with the existing tools, and we also support legacy biomedical descriptions (combining meta-modeling and model transformations).},
  doi           = {10.1109/VLHCC.2013.6645251},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  issn          = {1943-6092},
  keywords      = {biomechanics;biomedical engineering;hospitals;protocols;specification languages;biomechanical protocols;biomedical engineer;design patterns;doctors;domain-specific language;hospital;human body movements;learning barriers;legacy biomedical descriptions;medical practice;meta-modeling;model transformations;muscles;patients;Biomechanics;Catalogs;DSL;Medical services;Motion measurement;Muscles;Protocols, rank3},
}

@InProceedings{McDaniel2013,
  author        = {J. McDaniel and C. Curtis and P. Brisk},
  title         = {Automatic synthesis of microfluidic large scale integration chips from a domain-specific language},
  booktitle     = {2013 IEEE Biomedical Circuits and Systems Conference (BioCAS)},
  year          = {2013},
  pages         = {101-104},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {BioCoder is a domain-specific language by which chemists and biologists can express experimental protocols in a manner that is unambiguous and clearly repeatable. This paper presents a software toolchain that converts a protocol specified in a restricted subset of BioCoder to a technology-specific description of the protocol, targeting flow-based microfluidic large-scale integration (mLSI) chips. The technology-specific description can then be used to either: (1) execute the protocol on a capable chip; or (2) to derive the architecture of a new mLSI chip that can execute the protocol.},
  doi           = {10.1109/BioCAS.2013.6679649},
  groups        = {IEEE DSL, Duplicados},
  issn          = {2163-4025},
  keywords      = {bioMEMS;biology computing;lab-on-a-chip;microfluidics;programming languages;software tools;BioCoder;domain specific language;experimental protocols;flow based microfluidic large scale integration;mLSI chip automatic synthesis;microfluidic large scale integration chips;software toolchain;technology specific protocol description;Assembly;Biology;Computer architecture;Fluids;Heating;Microfluidics;Protocols;domain-specific language;microfluidic Large Scale Integration (mLSI), rank3},
}

@Article{Rosique2012,
  author        = {F. Rosique and M. Jimenez and A. Iborra},
  title         = {A Graphical Modeling Language for Home Automation},
  journal       = {IEEE Latin America Transactions},
  year          = {2012},
  volume        = {10},
  number        = {6},
  pages         = {2249-2255},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Home automation systems have emerged as one of the most attractive fields in engineering, thanks to the burgeoning demand from society for information systems. Today, the development of these systems is confined to the immediate context of the solution and is platform-dependent. This has intensified the need for suitable tools to tackle their development while enhancing quality and productivity. On one hand, domain specific languages allow the description of the system by means of graphic models easily and intuitively, using domain concepts. On the other hand, the model driven development approach stands out as a good option for solving the problems of the existing methods, as well as contributing tools that pioneer the development of domain specific languages. The present article proposes an alternative methodology and tools for the development of home automation applications following the model driven approach together with the use of a domain specific language.},
  doi           = {10.1109/TLA.2012.6418129},
  groups        = {IEEE DSL, Duplicados},
  issn          = {1548-0992},
  keywords      = {formal specification;home automation;information systems;software tools;specification languages;domain concepts;domain specific languages;graphic models;graphical modeling language;home automation applications;home automation systems;information systems;model driven approach;model driven development approach;Computational modeling;Computer integrated manufacturing;DSL;Domain specific languages;Home automation;Software;Visualization;home automation;model driven engineering, rank3},
}

@InProceedings{Miyajima2012,
  author        = {T. Miyajima and D. Thomas and H. Amano},
  title         = {A Domain Specific Language and Toolchain for OpenCV Runtime Binary Acceleration Using GPU},
  booktitle     = {Networking and Computing (ICNC), 2012 Third International Conference on},
  year          = {2012},
  pages         = {175-181},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Computationally intensive applications, such as OpenCV, can be off-loaded to accelerators to reduce execution time. However, developing an accelerated system requires a significant amount of time, requiring the developer to first choose an accelerator and which parts to off-load, then to port and the offloaded kernels to the accelerator using many accelerator-specific tools. In addition to the low-level parallelism of the accelerator, the developer also needs to extract and utilize system-level parallelism found within the application, while making sure that the application still executes correctly. This paper presents Courier, a tool chain and a domain specific language for Runtime Binary Acceleration, designed to simplify many of the steps involved in accelerating an application. The Courier tool chain can extract dataflow from a running software binary file, explore the off-loaded execution time on an accelerator, and then actually accelerate the original binary. By utilizing Courier, both expert and non-expert users can easily extract system-level parallelism and decide which part should be off-loaded to accelerators in a mixed software-hardware environment, without special knowledge on the target application source code and accelerator architecture. In a case study an OpenCV application is accelerated by 2.06 times using Courier, without requiring the application source code or any re-compilation of the application.},
  doi           = {10.1109/ICNC.2012.34},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {computer vision;data flow computing;graphics processing units;operating system kernels;program compilers;specification languages;Courier tool chain;GPU;OpenCV runtime binary acceleration;accelerated system;accelerator architecture;accelerator-specific tools;accelerators;computationally intensive applications;dataflow;domain specific language;low-level parallelism;mixed software-hardware environment;off-loaded execution time;offloaded kernels;software binary file;system-level parallelism;target application source code;toolchain;Acceleration;Data transfer;Field programmable gate arrays;Graphics processing units;Parallel processing;Runtime;Domain Spefic Language;Dynamic Off-loading;GPU;OpenCV;Runtime Binary Acceleration, rank3},
}

@InProceedings{6665300,
  author    = {F. Van Broeckhoven and O. De Troyer},
  title     = {ATTAC-L: A modeling language for educational virtual scenarios in the context of preventing cyber bullying},
  booktitle = {Serious Games and Applications for Health (SeGAH), 2013 IEEE 2nd International Conference on},
  year      = {2013},
  pages     = {1-8},
  month     = {May},
  abstract  = {Cyber bullying (bullying via electronic communication tools) is a relatively recent phenomenon that especially occurs among early adolescents. As cyber bullying may have a serious impact on the mental (and physical) well-being of victims, it is important to develop effective evidence-based interventions against cyber bullying. The “Friendly ATTAC”-project has the aim to develop so-called virtual interactive scenarios (i.e. digital games) to modify behavior patterns associated with cyber bullying among youngsters. The scenarios will be developed during brainstorming sessions involving people from the different disciplines and with different backgrounds, but specialized in the domain of cyber bullying. To allow this non-technical people to specify the virtual interactive scenarios that should be developed, we have developed a domain specific modeling language that allow them to do so in an intuitive and close to natural language way. This paper presents this language in an informal way.},
  doi       = {10.1109/SeGAH.2013.6665300},
  groups    = {SCOPUS, Duvida},
  keywords  = {Games;Lifting equipment;cyber bullying;domain specific modeling languages;serious games},
}

@InProceedings{Iliasov2012,
  author        = {A. Iliasov and A. Romanovsky},
  title         = {SafeCap Domain Language for Reasoning about Safety and Capacity},
  booktitle     = {Dependable Transportation Systems/Recent Advances in Software Dependability (WDTS-RASD), 2012 Workshop on},
  year          = {2012},
  pages         = {1-10},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {The on-going UK SAFECAP project develops modeling techniques and tools for improving railway capacity while ensuring that safety standards are maintained. This paper reports recent SAFECAP results on designing a Domain Specific Language (DSL) that will allow engineers to improve the node and junction capacity while guaranteeing operational safety. The SAFECAP DSL is introduced to define railway topology, its logical structure and signalling rules. The formal semantics of this graphical DSL, defined as part of our work, allows us to reason about system safety. The tooling environment, the SAFECAP Platform, offers graphical editing of railway schemas and an interface to a range of verification for ensuring railway operational safety. The work on extending the environment and its deployment in the railway sector continues with our SAFECAP partners: Invensys Rail and Swansea University.},
  doi           = {10.1109/WDTS-RASD.2012.11},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {inference mechanisms;railway safety;specification languages;SAFECAP domain language;Swansea university;UK SAFECAP project;domain specific language;graphical DSL;invensys rail;modelling techniques;railway capacity;railway operational safety;railway topology;reasoning;safety standards;domain language;formal verification;railway modelling;route-based signalling;safety, rank3},
}

@InProceedings{6226010,
  author        = {H. Cho and J. Gray and E. Syriani},
  title         = {Creating visual Domain-Specific Modeling Languages from end-user demonstration},
  booktitle     = {2012 4th International Workshop on Modeling in Software Engineering (MISE)},
  year          = {2012},
  pages         = {22-28},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Domain-Specific Modeling Languages (DSMLs) have received recent interest due to their conciseness and rich expressiveness for modeling a specific domain. However, DSML adoption has several challenges because development of a new DSML requires both domain knowledge and language development expertise (e.g., defining abstract/concrete syntax and specifying semantics). Abstract syntax is generally defined in the form of a metamodel, with semantics associated to the metamodel. Thus, designing a metamodel is a core DSML development activity. Furthermore, DSMLs are often developed incrementally by iterating across complex language development tasks. An iterative and incremental approach is often preferred because the approach encourages end-user involvement to assist with verifying the DSML correctness and feedback on new requirements. However, if there is no tool support, iterative and incremental DSML development can be mundane and error-prone work. To resolve issues related to DSML development, we introduce a new approach to create DSMLs from a set of domain model examples provided by an end-user. The approach focuses on (1) the identification of concrete syntax, (2) inducing abstract syntax in the form of a metamodel, and (3) inferring static semantics from a set of domain model examples. In order to generate a DSML from user-supplied examples, our approach uses graph theory and metamodel design patterns.},
  doi           = {10.1109/MISE.2012.6226010},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {2156-7883},
  keywords      = {graph theory;specification languages;DSML adoption;DSML development;abstract syntax;domain knowledge;end-user demonstration;graph theory;incremental approach;iterative approach;language development expertise;metamodel design patterns;visual domain-specific modeling languages;Abstracts;Concrete;Engines;Semantics;Syntactics;Unified modeling language;Visualization;Domain-Specific Modeling Languages;Graph Theory;Metamodel;Metamodel Design Patterns;Metamodel Inference;Semantic Inference, rank3},
}

@InProceedings{Karakoidas2015,
  author        = {V. Karakoidas and D. Mitropoulos and P. Louridas and G. Gousios and D. Spinellis},
  title         = {Generating the Blueprints of the Java Ecosystem},
  booktitle     = {2015 IEEE/ACM 12th Working Conference on Mining Software Repositories},
  year          = {2015},
  pages         = {510-513},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Examining a large number of software artifacts can provide the research community with data regarding quality and design. We present a dataset obtained by statically analyzing 22730 jar files taken from the Maven central archive, which is the de-facto application library repository for the Java ecosystem. For our analysis we used three popular static analysis tools that calculate metrics regarding object-oriented design, program size, and package design. The dataset contains the metrics results that every tool reports for every selected jar of the ecosystem. Our dataset can be used to produce interesting research results, such as measure the domain-specific language usage.},
  doi           = {10.1109/MSR.2015.76},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {2160-1852},
  keywords      = {Java;information retrieval systems;libraries;object-oriented programming;program diagnostics;software metrics;software packages;Java ecosystem;Maven central archive;blueprints;de-facto application library repository;jar files;object-oriented design;package design;software artifacts;software metrics;static analysis tools;DSL;Databases;Java;Libraries;Measurement;Software;XML;Chidamber and Kemerer;Java;Maven;Software Metrics, rank3},
}

@InProceedings{Beckmann2015,
  author        = {K. Beckmann},
  title         = {Integrating existing proprietary system models into a model-driven test process for an industrial automation scenario},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {255-262},
  month         = {Feb},
  __markedentry = {[Neto:5]},
  abstract      = {The introduction of modern model-driven software development methodologies into the industrial practise still proves to be a challenge. Especially small or medium-sized enterprises (SMEs) need an incremental and continuous modernisation process, which incorporates existing projects, is customised and cost-effective. Particularly, suitable solutions for model-based or -driven testing with test automation to increase the efficiency are in demand. This paper presents an approach for integrating existing proprietary system models of an SME partner for describing industrial automation processes into a model-driven test process, utilising a domain-specific language for the test specification. The test objectives focuses on the correct implementation of the communication and synchronisation of distributed state machines. The presented approach is integrated into a test framework, which is based on the Eclipse Modelling Framework (EMF) and the Eclipse Test and Performance Tools Platform Project (TPTP) framework. To separate the possibly changeable system and DSL-specific models from the implementation of the test framework, a stable and more generic test meta model was defined.},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {factory automation;program testing;small-to-medium enterprises;software engineering;EMF;SME;domain-specific language;eclipse modelling framework;eclipse test and performance tools platform project;generic test meta model;industrial automation;model-driven test process;modern model-driven software development;proprietary system model;small or medium-sized enterprises;test specification;Adaptation models;Automation;Biological system modeling;DSL;Object oriented modeling;Software;Unified modeling language;DSL;MDSD;MDT;Metamodelling;Model-driven Testing;Testing, rank3},
}

@InProceedings{Barnett2015,
  author        = {S. Barnett and R. Vasa and J. Grundy},
  title         = {Bootstrapping Mobile App Development},
  booktitle     = {2015 IEEE/ACM 37th IEEE International Conference on Software Engineering},
  year          = {2015},
  volume        = {2},
  pages         = {657-660},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Modern IDEs provide limited support for developers when starting a new data-driven mobile app. App developers are currently required to write copious amounts of boilerplate code, scripts, organise complex directories, and author actual functionality. Although this scenario is ripe for automation, current tools are yet to address it adequately. In this paper we present RAPPT, a tool that generates the scaffolding of a mobile app based on a high level description specified in a Domain Specific Language (DSL). We demonstrate the feasibility of our approach by an example case study and feedback from a professional development team. Demo at: https://www.youtube.com/watch?v=ffquVgBYpLM.},
  doi           = {10.1109/ICSE.2015.216},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {0270-5257},
  keywords      = {application program interfaces;mobile computing;specification languages;DSL;IDE;RAPPT tool;data-driven mobile app;domain specific language;integrated development environment;mobile application development;Androids;DSL;Humanoid robots;Mobile communication;Motion pictures;Productivity;Software engineering;Code Generation;Mobile App Prototyping;Model Driven Development, rank3},
}

@InProceedings{6912082,
  author    = {Q. Ma and S. Schmit and C. Glodt and P. Kelsen},
  title     = {Combining Models with Code: A Tale of Two Languages},
  booktitle = {2014 IEEE International Conference on Global Software Engineeering Workshops},
  year      = {2014},
  pages     = {27-32},
  month     = {Aug},
  abstract  = {In the pure model-driven view of software engineering, models are the sole artifacts to be created and maintained and executable source code is entirely generated from the models. However, due to the variety of modern platforms and the complexity of capturing them correctly in models, this vision has not yet been fully realized. In this paper, we propose an approach that allows combining high-level models with low-level code into an executable system. The approach is based on two modeling languages, one presenting a common abstraction of modeling and programming languages, and the other allowing to express the bridge between the model and code. We illustrate our approach using a running example of an invoicing system for which the business logic requirements are captured by an executable model and the requirements on the graphical user interface are directly mocked up using a GUI designer tool that generates Java code.},
  doi       = {10.1109/ICGSEW.2014.9},
  groups    = {SCOPUS, excluidos},
  issn      = {2329-6305},
  keywords  = {graphical user interfaces;object-oriented methods;software engineering;GUI designer tool;Java code generation;business logic requirements;graphical user interface;invoicing system;modeling languages;programming languages;software artifacts;software engineering;Adaptation models;Bridges;Business;Graphical user interfaces;Java;Object oriented modeling;Unified modeling language;Domain-Specific Modeling Language;Event-Driven Communication;Heterogeneous Model Integration;Model-Driven Software Development},
}

@InProceedings{Mesz´ros2012,
  author        = {T. Mesz´ros and T. Levendovszky},
  title         = {Verified Operational Patterns with Graph Transformation},
  booktitle     = {2012 IEEE Fifth International Conference on Software Testing, Verification and Validation},
  year          = {2012},
  pages         = {954-961},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Using object-oriented patterns such as design patterns, architectural patterns, and refactoring operations has considerably simplified the design process of software systems. With the proliferation of Domain-Specific Languages, the generalization of OO patterns is a natural demand. A straightforward idea is to adapt OO patterns with automated tool support to the practice of Domain-Specific Modeling as well. A possible solution for that is using graph transformations to formalize and realize such patterns. One may expect, however, that the patterns are realized in a way that they are correct and do exactly what we expect them to. In this paper, we present how one can precisely define the requirements for a domain-specific model pattern, and how to verify the requirements on the implemented patterns. The presented concept is motivated and illustrated with a case study from the state chart domain.},
  doi           = {10.1109/ICST.2012.201},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  issn          = {2159-4848},
  keywords      = {graph grammars;object-oriented methods;pattern classification;software architecture;software maintenance;software tools;OO patterns;architectural patterns;automated tool support;domain-specific language proliferation;domain-specific model pattern;graph transformation;object-oriented patterns;refactoring operations;software system design process;state chart domain;verified operational patterns;Adaptation models;Containers;Joining processes;Object oriented modeling;Semantics;Software systems;Unified modeling language;Active Model Patterns;Graph Transformation;Transformation Verification, rank3},
}

@InProceedings{Szabo2016,
  author        = {T. Szabó and S. Alperovich and S. Erdweg and M. Voelter},
  title         = {An extensible framework for variable-precision data-flow analyses in MPS},
  booktitle     = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year          = {2016},
  pages         = {870-875},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Data-flow analyses are used as part of many software engineering tasks: they are the foundations of program understanding, refactorings and optimized code generation. Similar to general-purpose languages (GPLs), state-of-the-art domain-specific languages (DSLs) also require sophisticated data-flow analyses. However, as a consequence of the different economies of DSL development and their typically relatively fast evolution, the effort for developing and evolving such analyses must be lowered compared to GPLs. This tension can be resolved with dedicated support for data-flow analyses in language workbenches. In this tool paper we present MPS-DF, which is the component in the MPS language workbench that supports the definition of data-flow analyses for DSLs. Language developers can define data-flow graph builders declaratively as part of a language definition and compute analysis results efficiently based on these data-flow graphs. MPS-DF is extensible such that it does not compromise the support for language composition in MPS. Additionally, clients of MPS-DF analyses can run the analyses with variable precision thus trading off precision for performance. This allows clients to tailor an analysis to a particular use case.},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {data flow analysis;data flow graphs;program compilers;software maintenance;specification languages;DSL;GPL;MPS-DF analysis;code generation;data flow analysis;data flow graph;domain-specific language;extensible framework;general-purpose language;software engineering;software refactoring;Algorithm design and analysis;DSL;Encoding;Lattices;Software;Switches;Syntactics;Data-flow Analysis;Domain-specific Language;Inter-procedural Analysis;Language Workbench, rank3},
}

@InProceedings{7250222,
  author    = {M. Allison and S. Turner and A. A. Allen},
  title     = {Towards interpreting models to orchestrate IaaS multi-cloud infrastructures},
  booktitle = {Computer Science Education (ICCSE), 2015 10th International Conference on},
  year      = {2015},
  pages     = {80-85},
  month     = {July},
  abstract  = {One challenge to the cloud computing paradigm is the task complexity associated with designing and managing multi-cloud solutions based on operational objectives. Heterogeneous vendor interfaces and a lack of standardization compounds this complexity and may eventually lead to vendor lock-in. In this article we present a model driven approach to allowing network administrators to intuitively describe and rapidly realize non-trivial IaaS behavior in realtime. We have developed iCloudML, an interpreted domain-specific modeling language and its interpreter as tooling support for the domain.},
  doi       = {10.1109/ICCSE.2015.7250222},
  groups    = {IEEE DSML, excluidos},
  keywords  = {cloud computing;specification languages;IaaS multicloud infrastructures;cloud computing;iCloudML;infrastructure as a service;interpreted domain-specific modeling language;model driven approach;task complexity;Biological system modeling;Cloud computing;Data models;Object oriented modeling;Quality of service;Runtime;Syntactics},
}

@InProceedings{Deneke2013,
  author        = {W. Deneke and W. N. Li and C. Thompson},
  title         = {Automatic Composition of ETL Workflows from Business Intents},
  booktitle     = {2013 IEEE 16th International Conference on Computational Science and Engineering},
  year          = {2013},
  pages         = {1036-1042},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {Extract-Transform-Load (ETL) tools have provided organizations with the ability to build and maintain workflows (consisting of graphs of data transformation tasks) that can process the flood of digital age data. Currently, however, the specification of ETL workflows is largely manual, human time intensive, and error prone. As requirements become increasingly complex, users must have considerable technical expertise and domain knowledge to build and maintain these workflows. This paper describes a domain-specific modeling approach to automate the composition of data processing workflows. A high-level domain-specific language is used to assertion ally express the desired results of a workflow, from which the composition of the procedural workflow satisfying these goal statements can be generated. This problem solving approach results in an intuitive interface that is usable even by casual users for the rapid composition of workflows that are accurate and error free.},
  doi           = {10.1109/CSE.2013.151},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {business data processing;data handling;graph theory;high level languages;ETL tools;ETL workflows;automatic composition;business intents;data processing workflows;data transformation tasks;digital age data flood;domain knowledge;domain-specific modeling approach;extract-transform-load tools;high-level domain-specific language;human time intensive;technical expertise;Data models;Data processing;Distributed databases;Organizations;Semantics;Standards organizations;content type;domain-specific language;domain-specific modeling;extract-transform-load (ETL);semantic annotation;workflows, rank3},
}

@InProceedings{Thomas2013,
  author        = {U. Thomas and G. Hirzinger and B. Rumpe and C. Schulze and A. Wortmann},
  title         = {A new skill based robot programming language using UML/P Statecharts},
  booktitle     = {Robotics and Automation (ICRA), 2013 IEEE International Conference on},
  year          = {2013},
  pages         = {461-466},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces the new robot programming language LightRocks(Light Weight Robot Coding for Skills), a domain specific language (DSL) for robot programming. The language offers three different level of abstraction for robot programming. On lowest level skills are coded by domain experts. On a more abstract level these skills are supposed to be combined by shop floor workers or technicians to define tasks. The language is designed to allow as much flexibility as necessary on the lowest level of abstraction and is kept as simple as possible with the more abstract layers. A Statechart like model is used to describe the different levels of detail. For this we apply the UML/P and the language workbench MontiCore. To this end we are able to generate code while hiding controller specific implementation details. In addition the development in LightRocks is supported by a generic graphical editor implemented as an Eclipse plugin.},
  doi           = {10.1109/ICRA.2013.6630615},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1050-4729},
  keywords      = {Unified Modeling Language;formal specification;program compilers;robot programming;DSL;Eclipse plugin;Light Weight Robot Coding for Skills;LightRocks;MontiCore language workbench;UML/P Statecharts;abstract layer;abstraction;code generation;controller specific implementation detail hiding;domain specific language;generic graphical editor;shop floor workers;skill based robot programming language;task definition;technicians;DSL;Robot programming;Robot sensing systems;Unified modeling language, rank3},
}

@InProceedings{Sun2015,
  author        = {W. T. Sun and A. Girault and G. Delaval},
  title         = {A formal approach for the synthesis and implementation of fault-tolerant industrial embedded systems},
  booktitle     = {10th IEEE International Symposium on Industrial Embedded Systems (SIES)},
  year          = {2015},
  pages         = {1-9},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {We demonstrate the feasibility of a complete workflow to synthesize and implement correct-by-construction fault tolerant distributed embedded systems consisting of real-time periodic tasks. Correct-by-construction is provided by the use of discrete controller synthesis (DCS), a formal method thanks to which we are able to guarantee that the synthesized controlled system guarantees the functionality of its tasks even in the presence of processor failures. For this step, our workflow uses the Heptagon domain specific language and the Sigali DCS tool. The correct implementation of the resulting distributed system is a challenge, all the more since the controller itself must be tolerant to the processor failures. We achieve this step thanks to the libDGALS realtime library (1) to generate the glue code that will migrate the tasks upon processor failures, maintaining their internal state through migration, and (2) to make the synthesized controller itself fault-tolerant.},
  doi           = {10.1109/SIES.2015.7185068},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  issn          = {2150-3109},
  keywords      = {embedded systems;fault tolerant computing;multiprocessing systems;HEPTAGON;SIGALI DCS tool;correct-by-construction embedded systems;discrete controller synthesis;domain specific language;fault tolerant distributed embedded systems;fault-tolerant controller;fault-tolerant industrial embedded systems;formal method;glue code;libDGALS real-time library;migration;multiprocessor distributed system;multitask distributed system;processor failures;real-time periodic tasks;Contracts;Control systems;Energy consumption;Fault tolerance;Fault tolerant systems;Integrated circuit modeling;Process control, rank3},
}

@InProceedings{Diaz2013,
  author        = {O. Díaz and C. Arellano},
  title         = {Integrating Microblogging Into Domain Specific Language Editors},
  booktitle     = {Cloud and Green Computing (CGC), 2013 Third International Conference on},
  year          = {2013},
  pages         = {219-225},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Micro logging is emerging as a suitable means for question-answering in working settings. This leads to different efforts to seamlessly integrate microblogging into the daily-used tools. Specifically, microblogging is being regarded as particularly useful during software development, akin to the tradition of Q&A forums. This paper looks at a particular kind of software: the one being developed by domain experts through the use of Domain Specific Languages (DSLs). We believe this setting is specially amenable to benefit from Q&A microblogging due to inherent limitations of the target audience. This brings the twist of domain specific ness into microblogging, i.e. the Q&A process is now framed by the semantics of the DSL constructs. This permits the introduction of editing assistants that embed domain knowledge about the kind of questions that can be posed, and the way answers can be selected. This opens an opportunity for more focused and assisted microblogging. This paper introduces Crowd Call, an in place microblogging mediator for DSL editors. The aim is to make microblogging a natural gesture during the conception of the DSL expressions, making transparent the interplay between the DSL editor and the Social Networking Services. In addition, Crowd Call can be configured to the constructs and resolution strategies of the DSL at hand so that questions and answers are framed by the semantics of the DSL. The approach is illustrated for three DSLs: the Google Spreadsheets formula language, SQL and Sticklet. We show how Crowd Call-mediated microblogging is tuned for the semantics of each DSL.},
  doi           = {10.1109/CGC.2013.42},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {SQL;question answering (information retrieval);social networking (online);specification languages;text editing;CrowdCall-mediated microblogging;DSL constructs;DSL editors;DSL expressions;DSL semantics;Google Spreadsheets formula language;Q and A microblogging;Q and A process;SQL;Sticklet;domain experts;domain knowledge;domain specific language editors;inplace microblogging mediator;question answering;resolution strategies;social networking services;software development;Communities;Computer languages;DSL;Google;Semantics;Social network services;Software;Domain Specific Languages;Microblogging;Social Networking Services, rank3},
}

@InProceedings{Mayer2013,
  author        = {P. Mayer and A. Schroeder},
  title         = {Patterns of cross-language linking in java frameworks},
  booktitle     = {2013 21st International Conference on Program Comprehension (ICPC)},
  year          = {2013},
  pages         = {113-122},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {The term Cross-Language Linking refers to the ability to specify, locate, navigate, and keep intact the connections between artifacts defined in different programming languages used for building one software application. Although understanding cross-language links and keeping them intact during development and maintenance activities is an important productivity issue, there has been little research on understanding the characteristics of such connections. We have thus built a theory from case studies, specifically, three theory-selected Java cross-language frameworks, each of which links artifacts written in the Java programming language to artifacts written in a declarative, framework-specific domain specific language. Our main contribution is to identify, from these experiences, common patterns of cross-language linking in the domain of Java frameworks with DSLs, which besides their informative nature can also be seen as requirements for designing and building a linking language and tooling infrastructure.},
  doi           = {10.1109/ICPC.2013.6613839},
  groups        = {IEEE DSL, Duplicados},
  issn          = {1092-8138},
  keywords      = {Java;software maintenance;DSL;Java frameworks;cross-language linking;programming languages;software application;software development;software maintenance;Atmospheric modeling;Frequency control;Springs;Cross-language;artifact linking;case study;language design;patterns;semantic models, rank3},
}

@InProceedings{Asenov2013,
  author        = {D. Asenov and P. Müller},
  title         = {Customizing the visualization and interaction for embedded domain-specific languages in a structured editor},
  booktitle     = {2013 IEEE Symposium on Visual Languages and Human Centric Computing},
  year          = {2013},
  pages         = {127-130},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Large software projects are often based on libraries that provide abstractions for a particular domain such as writing database queries, staging, or constraint solving. The API provided by such a library can be considered a domain-specific language within the implementation language of the library, a so-called internal or embedded domain-specific language (eDSL). Embedding a DSL leverages the tool infrastructure of the host language, but also restricts the syntax and IDE support to that of the host language. This restriction prevents programmers from using convenient specialized notations and, thus, has a negative effect on their productivity. To address this problem, we outline concepts for a structured code editor that enable developers of eDSLs to customize how eDSL code is rendered and what interactions are available. We demonstrate the benefits of our approach by customizing a structured editor for the .NET Code Contracts API. Our prototype shows in particular that we can customize many aspects of visualization and interaction with little effort.},
  doi           = {10.1109/VLHCC.2013.6645255},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1943-6092},
  keywords      = {application program interfaces;embedded systems;programming languages;visual programming;.NET code contracts API;IDE;convenient specialized notations;eDSL code;editor customization;embedded domain-specific languages;internal domain-specific language;large software projects;structured code editor;visual programming;Context;Contracts;DSL;Libraries;Prototypes;Syntactics;Visualization;editor customization;embedded domain-specific languages;human-computer interaction;programming environments;structured editors;visual programming, rank3},
}

@InProceedings{Jindal2013,
  author        = {N. Jindal and V. Lotrich and E. Deumens and B. A. Sanders},
  title         = {SIPMaP: A Tool for Modeling Irregular Parallel Computations in the Super Instruction Architecture},
  booktitle     = {Parallel Distributed Processing (IPDPS), 2013 IEEE 27th International Symposium on},
  year          = {2013},
  pages         = {874-884},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Performance modeling is becoming an increasingly important part of the parallel application development process, particularly for expensive computations that will be run on very high-end systems where resources are scarce. We describe a performance modeling tool SIPMaP (Super Instruction Processor Modeling and Prediction) developed for the Super-Instruction Architecture (SIA). The SIA is designed for applications where the dominant data structures are large multi-dimensional arrays and it comprises a DSL, the Super-Instruction Assembly Language (SIAL) that supports expressing algorithms in terms of blocks (tiles), and its runtime system Super Instruction Processor (SIP) that manages distribution and disk storage of the arrays. SIPMaP generates performance models from the SIAL source code. In comparison with many applications where useful performance models have been developed and reported, these programs are irregular and have other difficult to model characteristics such as extensive overlapping of communication and computation.},
  doi           = {10.1109/IPDPS.2013.35},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1530-2075},
  keywords      = {assembly language;data structures;parallel processing;software performance evaluation;DSL;SIA;SIAL;SIPMaP;data structures;high-end systems;irregular parallel computations;performance modeling;super instruction assembly language;super instruction processor modeling and prediction;super-instruction architecture;Arrays;Computational modeling;Data models;Indexes;Predictive models;Runtime;Servers;Domain Specific Language;High Performance Computing;Performance Modeling, rank3},
}

@InProceedings{Opila2015,
  author        = {J. Opiła},
  title         = {Prototyping of visualization styles of 3D scalar fields using POV-Ray rendering engine},
  booktitle     = {Information and Communication Technology, Electronics and Microelectronics (MIPRO), 2015 38th International Convention on},
  year          = {2015},
  pages         = {312-317},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {There is a persistent quest for novel methods of visualization in order to get insight into complex phenomena in scientific domains as various as physics, biomedicine or economics. Research teams involved achieved excellent results, however some problems with elaboration of novel visualization styles connected with flexibility of the software used and quality of the final images still persist. In the paper results of inspection of four visualization styles of 3D static scalar field employing POVRay ray-tracing engine are discussed, i.e. equipotential surface method using direct implementation of isosurface{} object, cellular trilinear interpolation approach, application of texture and eventually pseudo-particles design. All styles presented have been tested for hybrid visualizations and compared concerning computing time, informativeness and general appearance. It is shown in the work that Scene Description Language (SDL), domain specific language implemented in POV-Ray is flexible enough to use it as a tool for fast prototyping of novel visualization techniques. Visualizations discussed in the paper were computed using selected components of API of ScPovPlot3D, i.e. templates written in the SDL language.},
  doi           = {10.1109/MIPRO.2015.7160285},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {application program interfaces;data visualisation;rendering (computer graphics);3D static scalar field;API;POV-ray rendering engine;SDL language;ScPovPlot3D;biomedicine;cellular trilinear interpolation approach;complex phenomena;computing time;domain specific language;economics;general appearance;hybrid visualizations;informativeness;inspection;isosurface{} object;physics;pseudo-particles design;scene description language;texture design;visualization styles;Electric potential;Engines;Interpolation;Isosurfaces;Software;Three-dimensional displays;POVRay;ScPovPlot3D;pseudo-particles;scalar field visualization;visual data analysis, rank3},
}

@InProceedings{Huong2012,
  author        = {Pham Van Huong and Nguyen Ngoc Binh},
  title         = {An approach to design embedded systems by multi-objective optimization},
  booktitle     = {Advanced Technologies for Communications (ATC), 2012 International Conference on},
  year          = {2012},
  pages         = {165-169},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {Embedded system design and optimization play an important role in the development trend of embedded technology. This paper presents a new approach to design and optimize embedded systems in the design phase based on Pareto multi-objective optimization. We defined two Domain Specific Languages and developed the framework that is to design the architecture model and the component diagram of embedded systems. And we integrated the code generation technology called Text Template Transformation Toolkit to this framework to generate parameters from models automatically. Then we also do multi-objective optimization to select the best trade-off configuration of the embedded system architecture and the best hardware-software partition based on the Pareto principle and Genetic Algorithm.},
  doi           = {10.1109/ATC.2012.6404251},
  groups        = {IEEE DSL, Duplicados},
  issn          = {2162-1020},
  keywords      = {Pareto optimisation;Unified Modeling Language;embedded systems;genetic algorithms;program compilers;software architecture;software tools;text analysis;Pareto multiobjective optimization;Pareto principle;architecture model;code generation technology;design embedded systems;domain specific languages;embedded system architecture;embedded system design;embedded system optimize;embedded technology;genetic algorithm;hardware-software partition;text template transformation toolkit;DSL;Embedded systems;Genetic algorithms;Linear programming;Optimization;Unified modeling language;DSL - Domain Specific Language;Embedded system;GA - Genetic Algorithm;Pareto principle;T4 - Text Template Transformation Toolkit;embedded system design;hardware-software partitioning;multi-objective optimization, rank3},
}

@InProceedings{Durelli2016,
  author        = {G. C. Durelli and F. Spada and C. Pilato and M. D. Santambrogio},
  title         = {Scala-Based Domain-Specific Language for Creating Accelerator-Based SoCs},
  booktitle     = {2016 IEEE International Parallel and Distributed Processing Symposium Workshops (IPDPSW)},
  year          = {2016},
  pages         = {225-232},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Nowadays, thanks to technology miniaturization and industrial standards, it is possible to create System-on-Chip (SoC) architectures featuring a combination of many components, like processor cores and specialized hardware accelerators. However, designing an SoC to accelerate an embedded application is particularly complex. After decomposing this application into tasks and assigning each of them to a processing element, the designer must create the required hardware components and integrate them into the final system. Currently, this process is not well supported by commercial tool flows and has to be manually performed. This is time consuming and error prone. This paper proposes a Domain-Specific Language (DSL) based on Scala to specify the architecture of accelerator-based SoCs. We leverage this DSL to coordinate commercial High-Level Synthesis (HLS) tools in order to create the corresponding accelerators with proper standard interfaces for system-level integration.},
  doi           = {10.1109/IPDPSW.2016.169},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {high level synthesis;integrated circuit design;specification languages;system-on-chip;DSL;HLS tools;Scala;SoC architectures;SoC design;accelerator-based SoC;embedded application;hardware accelerators;hardware components;high-level synthesis tools;industrial standards;processor cores;scala-based domain-specific language;system-level integration;system-on-chip architectures;technology miniaturization;Acceleration;Computer architecture;DSL;Hardware;Image edge detection;Protocols;Software, rank3},
}

@InProceedings{Loiseau2014,
  author        = {E. Loiseau and P. Laforcade and S. Iksal},
  title         = {A meta-modeling approach for extending the instructional design semantics of Learning Management Systems},
  booktitle     = {Software Paradigm Trends (ICSOFT-PT), 2014 9th International Conference on},
  year          = {2014},
  pages         = {72-80},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Nowadays Learning Management Systems (LMS) are not restricted to distant learning. Nevertheless, the pedagogical expressiveness of courses designed by teachers is strongly dependent on their knowledge and level of expertise on the LMS they use. The GraphiT project aims to help teachers design pedagogically sound and technically executable learning designs. To this end, we propose to support teachers by providing them with an LMS-specific Visual Instructional Design Language, according to a Domain Specific Modeling approach and tooling. This paper focuses on the abstract syntax of such language. We propose a specific LMS-centered approach for raising the pedagogical expressiveness of their implicit learning design semantics. We discussed how the LMS low-level parameterisations could be abstracted in order to build higher-level building blocks. Based on the Moodle LMS, we present and verify our meta-modeling approach by formalising the abstract syntax of a Moodle-dedicated instructional design language.},
  groups        = {IEEE DSL, Duplicados},
  keywords      = {Context;Learning management systems;Least squares approximations;Metamodeling;Semantics;Syntactics;Visualization;Composition;Domain Specific Language;Meta-Modeling, rank3},
}

@InProceedings{Jaeger2016,
  author        = {S. Jäger and R. Maschotta and T. Jungebloud and A. Wichmann and A. Zimmermann},
  title         = {Creation of domain-specific languages for executable system models with the Eclipse Modeling Project},
  booktitle     = {2016 Annual IEEE Systems Conference (SysCon)},
  year          = {2016},
  pages         = {1-8},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Model-based systems engineering is an increasingly accepted method supporting design decisions. System engineers or modelers have the choice between tools and system description languages that are either abstract and generic or specifically adapted to their domain. The latter approach is easier and more efficient but restrictive. The success of this approach strongly relies on the support of domain-specific tools. The design or adaptation of such software tools and their underlying conceptual models is a complex task, which can be supported by a model-based approach on the meta model level itself. This paper proposes a workflow for designing complex systems by using domain-specific models which may combine structural and behavioral aspects. It is loosely based on the Object Management Group's Model Driven Architecture approach. For this purpose we use the Eclipse Modeling Framework and Eclipse Sirius Project, which are part of the Eclipse Modeling Project. The paper describes the complete workflow based on a simple real-life system example to clarify our approach. It covering the design of the domain-specific language, semi-automatic model editor generation, modeling the system, and finally executing a simulation of its behavior.},
  doi           = {10.1109/SYSCON.2016.7490558},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {SysML;software architecture;software tools;specification languages;complex system design;design decisions;domain-specific languages;eclipse Sirius project;eclipse modeling project;executable system models;meta model level;model-based systems engineering;object management group model driven architecture approach;semiautomatic model editor generation;software tools;system description languages;Adaptation models;Analytical models;Biological system modeling;Software;Systems modeling;Unified modeling language;Eclipse Modeling Project;Ecore;Model-based system design;Sirius project;domain-specific language;meta model;simulation, rank3},
}

@InProceedings{Caracciolo2015,
  author        = {A. Caracciolo and M. F. Lungu and O. Nierstrasz},
  title         = {A Unified Approach to Architecture Conformance Checking},
  booktitle     = {Software Architecture (WICSA), 2015 12th Working IEEE/IFIP Conference on},
  year          = {2015},
  pages         = {41-50},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Software erosion can be controlled by periodically checking for consistency between the de facto architecture and its theoretical counterpart. Studies show that this process is often not automated and that developers still rely heavily on manual reviews, despite the availability of a large number of tools. This is partially due to the high cost involved in setting up and maintaining tool-specific and incompatible test specifications that replicate otherwise documented invariants. To reduce this cost, our approach consists in unifying the functionality provided by existing tools under the umbrella of a common business-readable DSL. By using a declarative language, we are able to write tool-agnostic rules that are simple enough to be understood by untrained stakeholders and, at the same time, can be interpreted as a rigorous specification for checking architecture conformance.},
  doi           = {10.1109/WICSA.2015.11},
  groups        = {ACM, SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {program testing;software architecture;architecture conformance checking;common business-readable DSL;de facto architecture;declarative language;domain specific language;software erosion;test specifications;tool-agnostic rules;Computer architecture;Concrete;DSL;Manuals;Mathematical model;Monitoring;Software;architecture;conformance checking;erosion, rank3},
}

@InProceedings{Prado2015,
  author        = {E. F. d. Prado and D. Lucrédio},
  title         = {A Flexible Model-Driven Game Development Approach},
  booktitle     = {Components, Architectures and Reuse Software (SBCARS), 2015 IX Brazilian Symposium on},
  year          = {2015},
  pages         = {130-139},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Game developers are facing an increasing demand for new games every year. Game development tools can be of great help, but require highly specialized professionals. Also, just as any software development effort, game development has some challenges. Model-Driven Game Development (MDGD) is suggested as a means to solve some of these challenges, but with a loss in flexibility. We propose a MDGD approach that combines multiple domain-specific languages (DSLs) with design patterns to provide flexibility and allow generated code to be integrated with manual code. After experimentation, we observed that, with the approach, less experienced developers can create games faster and more easily, and the product of code generation can be customized with manually written code, providing flexibility. However, with MDGD, developers become less familiar with the code, making manual codification more difficult.},
  doi           = {10.1109/SBCARS.2015.24},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {computer games;program compilers;software engineering;MDGD approach;code generation;flexible model-driven game development approach;game development tool;multiple DSL;multiple domain-specific language;software development;Cameras;DSL;Engines;Games;Prototypes;Software;Vehicles;Code Generation;Model-Driven Game Development, rank3},
}

@InProceedings{Moser2014a,
  author        = {M. Moser and M. Pfeiffer and J. Pichler},
  title         = {A novel domain-specific language for the robot welding automation domain},
  booktitle     = {Proceedings of the 2014 IEEE Emerging Technology and Factory Automation (ETFA)},
  year          = {2014},
  pages         = {1-6},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Implementation, fault analysis, and maintenance of robot welding automation solutions are traditionally restricted to professional software developers only. Program code is written in a general purpose programming language and, hence, unmanageable by other stakeholders with limited or no programming skills. To tackle this problem we have implemented a domain-specific language (DSL) specifically designed to the domain of robot welding automation and to be intuitively manageable by all stakeholders. The created DSL supports a textual and visual notation and is embedded within a full featured tool chain which let our customer fully replace the creation and maintenance of welding automation solutions by our DSL-based development approach.},
  doi           = {10.1109/ETFA.2014.7005348},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1946-0740},
  keywords      = {programming languages;robotic welding;DSL-based development approach;domain-specific language;fault analysis;program code;programming language;robot welding automation;stakeholders;Automation;DSL;Programming;Robot control;Visualization;Welding;Domain-Specific Language;Industrial Automation, rank3},
}

@Book{6813569,
  title     = {Model-Driven Software Engineering in Practice},
  publisher = {Morgan \& Claypool},
  year      = {2012},
  author    = {Marco Brambilla and Jordi Cabot and Manuel Wimmer},
  abstract  = {This book discusses how model-based approaches can improve the daily practice of software professionals. This is known as Model-Driven Software Engineering (MDSE) or, simply, Model-Driven Engineering (MDE). MDSE practices have proved to increase efficiency and effectiveness in software development, as demonstrated by various quantitative and qualitative studies. MDSE adoption in the software industry is foreseen to grow exponentially in the near future, e.g., due to the convergence of software development and business analysis. The aim of this book is to provide you with an agile and flexible tool to introduce you to the MDSE world, thus allowing you to quickly understand its basic principles and techniques and to choose the right set of MDSE instruments for your needs so that you can start to benefit from MDSE right away. The book is organized into two main parts. The first part discusses the foundations of MDSE in terms of basic concepts (i.e., models and transformations), driving p inciples, application scenarios and current standards, like the well-known MDA initiative proposed by OMG (Object Management Group) as well as the practices on how to integrate MDSE in existing development processes. The second part deals with the technical aspects of MDSE, spanning from the basics on when and how to build a domain-specific modeling language, to the description of Model-to-Text and Model-to-Model transformations, and the tools that support the management of MDSE projects. The book is targeted to a diverse set of readers, spanning: professionals, CTOs, CIOs, and team managers that need to have a bird's eye vision on the matter, so as to take the appropriate decisions when it comes to choosing the best development techniques for their company or team; software analysts, developers, or designers that expect to use MDSE for improving everyday work productivity, either by applying the basic modeling techniques and notations or by defining new domain-specific modeling lang ages and applying end-to-end MDSE practices in the software factory; and academic teachers and students to address undergrad and postgrad courses on MDSE. In addition to the contents of the book, more resources are provided on the book's website, including the examples presented in the book. Table of Contents: Introduction / MDSE Principles / MDSE Use Cases / Model-Driven Architecture (MDA) / Integration of MDSE in your Development Process / Modeling Languages at a Glance / Developing your Own Modeling Language / Model-to-Model Transformations / Model-to-Text Transformations / Managing Models / Summary},
  booktitle = {Model-Driven Software Engineering in Practice},
  doi       = {10.2200/S00441ED1V01Y201208SWE001},
  groups    = {IEEE DSML, excluidos},
  isbn      = {9781608458837},
  pages     = {182-},
  url       = {http://ieeexplore.ieee.org/xpl/articleDetails.jsp?arnumber=6813569},
}

@InProceedings{Guenalp2015a,
  author        = {O. Günalp and C. Escoffier and P. Lalanda},
  title         = {Rondo: A Tool Suite for Continuous Deployment in Dynamic Environments},
  booktitle     = {Services Computing (SCC), 2015 IEEE International Conference on},
  year          = {2015},
  pages         = {720-727},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Driven by the emergence of new computing environments, dynamically evolving software systems makes it impossible for developers to deploy software with human-centric processes. Instead, there is an increasing need for automation tools that continuously deploy software into execution, in order to push updates or adapt existing software regarding contextual and business changes. Existing solutions fall short on providing fault-tolerant, reproducible deployments that can scale on heterogeneous environments. In this paper we present Rondo, a tool suite that enables continuous deployment for dynamic, service-oriented applications. At the center of these tools, we propose a deterministic and idem potent deployment process. We provide with Rondo a deployment manager that implements this process and capable of conducting deployments and continuously adapting applications according to the changes in the current target platform. The tool suite also includes a domain-specific language for describing deployment requests. We validate our approach in multiple projects, for provisioning the platform as well as for installing applications and continuous reconfigurations.},
  doi           = {10.1109/SCC.2015.102},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {software fault tolerance;software tools;Rondo;application installing;automation tools;computing environments;continuous deployment;deployment requests;deterministic process;domain-specific language;dynamic application;dynamic environments;fault-tolerant deployment;human-centric processes;idem potent deployment process;reproducible deployment;service-oriented application;software systems;tool suite;Assembly;Computer architecture;Context;DSL;Program processors;Runtime;Continuous Deployment;Dynamism;Service-Oriented Computing, rank3},
}

@InProceedings{7033645,
  author    = {I. Alloush and C. G. Aoun and Y. Kermarrec and S. Rouvrais},
  title     = {A Domain-Specific Framework for Creating Early Trusted Underwater Systems Relying on Enterprise Architecture},
  booktitle = {2014 IEEE 22nd International Symposium on Modelling, Analysis Simulation of Computer and Telecommunication Systems},
  year      = {2014},
  pages     = {120-125},
  month     = {Sept},
  abstract  = {Service Creation Environments facilitate the creation of complex services and play a major role in the software industry. In this context, we aim at developing a domain-specific framework (networking domain) that uses a chain of existing "off-the-shelf" tools that are integrated together from the design phase to the verification activities. In this paper, we propose a new meta-model that extends ArchiMate to provide a domain-specific modeling language concerning the Deep Sea Observatories (DSO). We instantiate, as a case study, DSO model with identification and localization functions from this language, and apply it to our framework that relies on an IMS platform to evaluate the service model. These functions can be orchestrated with other services (e.g. military or civil reaction) or interconnected with other SO Systems. On the one hand, this illustrates our approach in relying on Enterprise Architecture (EA) framework that respects: multiple-views, perspectives of stakeholders, and domain specificities. On the other hand, it shows the reusability of our framework by changing applications from different domains: Video Conference as a Telecom Service, and Localizations for DSO.},
  doi       = {10.1109/MASCOTS.2014.23},
  groups    = {SCOPUS, excluidos},
  issn      = {1526-7539},
  keywords  = {DP industry;marine engineering;service-oriented architecture;software houses;ArchiMate;DSO;complex services;deep sea observatories;domain-specific modeling language;early trusted underwater systems;enterprise architecture;identification and localization functions;off-the-shelf tools;service creation environments;software industry;telecom service;video conference;Analytical models;Business;Computer architecture;Context;Data models;Sensors;Syntactics;Data Fusion;Deep Sea Observatories;Distributed Systems;Enterprise Architecture;MeDON;Model Driven Engineering;Network Simulation;Object Localization},
}

@Article{Garcia-Diaz2012,
  author        = {V. Garcia-Diaz and B. C. P. G-Bustelo and O. Sanjuan-Martinez and E. R. Nunez Valdez and J. M. C. Lovelle},
  title         = {MCTest: towards an improvement of match algorithms for models},
  journal       = {IET Software},
  year          = {2012},
  volume        = {6},
  number        = {2},
  pages         = {127-139},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Owing to the increasing importance of model-driven engineering (MDE) and the changes experienced by software systems over their life cycle, the calculation, representation and visualisation of matches and differences between two different versions of the same model are becoming more necessary and useful. This study shows the need for improvement in the algorithms for calculating the relationships between models and presents a tool to test different implementations, thus reducing the effort required to measure, compare or create new algorithms. To demonstrate the need for improvement and the framework developed, the authors have created different models that conform to the metamodel of a domain-specific language. Subsequently, the authors compared these models using the algorithms of the eclipse modelling framework (EMF) Compare tool, part of the eclipse modeling project, which is the framework of reference for MDE. Thus, in the case study, the authors tool is used to measure the quality of the comparisons performed by EMF Compare.},
  doi           = {10.1049/iet-sen.2011.0040},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  issn          = {1751-8806},
  keywords      = {data structures;data visualisation;software engineering;specification languages;EMF Compare tool;MCTest;eclipse modelling framework;match algorithm;match calculation;match representation;match visualisation;model-driven engineering;software system, rank3},
}

@InProceedings{7404633,
  author    = {C. G. Aoun and I. Alloush and Y. kermarrec and J. Champeau and O. K. Zein},
  title     = {A mapping approach for Marine Observatory relying on enterprise architecture},
  booktitle = {OCEANS 2015 - MTS/IEEE Washington},
  year      = {2015},
  pages     = {1-10},
  month     = {Oct},
  abstract  = {UnderWater Sensor Networks (UW-SNs) performs collaborative monitoring tasks over an underwater determined area. These tasks could be underwater or deep sea observatories. Acoustic sensors (Hydrophones) are responsible to acquire the data underwater then transfer it to components/devices. Marine Observatory (MO) is the scenario of data exchanged between the different components/devices of the Underwater Acoustic Sensor Networks (UW-ASNs). Hence, the MO infrastructure could be based on an (UW-ASNs). This observation should take into consideration the environmental constraints since it may require specific tools, materials and devices (marines cables, specific servers and routers, etc.). The logical and physical components that are used in these observatories supply interchange procedures between the various devices of the environment (Smart Sensors, Data Fusion Servers). These components provide new services due to the long period running of the network. In this paper, we present our extended MetaModel that is used to generate a new design tool (ArchiMO). Thus, we propose a mapping approach between the layers of the enterprise architecture standard. This approach throws instantly domain-specific concepts and constraints in layers on run-time design activity according to a satisfaction of a certain criteria/constraints. We illustrate our proposal with an underwater object localization example from the MO domain. Additionally, we generate the corresponding simulation code for a standard network simulator using our self-developed domain-specific model compiler. Our approach helps to manage the complexity, and to reduce the time of the entire development life cycle of an MO information system. It supplies in the MO context, a way to share the different viewpoints of the designers.},
  groups    = {SCOPUS, excluidos},
  keywords  = {environmental monitoring (geophysics);hydrophones;oceanographic techniques;underwater acoustic communication;wireless sensor networks;ArchiMO design tool;MO information system;MetaModel;UW-ASN;acoustic sensors;collaborative monitoring tasks;deep sea observatories;enterprise architecture;hydrophones;marine observatory;self-developed domain-specific model compiler;underwater acoustic sensor networks;underwater object localization;underwater observatories;Complexity theory;Context;Design tools;Information systems;Observatories;Servers;Software;ArchiMate;Data Fusion;Domain Specific Modeling Language;Enterprise Architecture;Marine Observatory;Meta-Model;Model Driven Engineers;Models;Simulation;Smart Sensors;Underwater Object Localization},
}

@InProceedings{Pomante2015a,
  author        = {L. Pomante and S. Candia and E. Incerto},
  title         = {A Model-Driven approach for the development of an IDE for Spacecraft on-board software},
  booktitle     = {2015 IEEE Aerospace Conference},
  year          = {2015},
  pages         = {1-17},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents the application of a Model-Driven Engineering (MDE) approach to the aerospace domain. Specifically, it shows the Model-Driven Development (MDD) of an Integrated Development Environment (IDE) for a Domain-Specific Language (DSL) targeted to the achievement of the so called “Spacecraft on-board software flexibility”. In fact, the goal of the presented work has been to deploy a full-featured IDE to be used for the development of the “On-board Command Procedures” (OBCPs). The OBCPs coding is done by using the “OBCP Definition Language” (ODL), specified by Thales Alenia Space Italy (TASI) on the basis of the requirements stated in the “Space Engineering: Spacecraft On-board Control Procedures” ECSS standard (ECSS-E-ST-70-01, 16 April 2010). This standard does not impose specific language syntax but provides the guidelines for its specification. By following such guidelines and by exploiting some MDE technologies and tools, such as Eclipse Modeling Framework (EMF) and Xtext, it has been possible to realize an Eclipse-based IDE able to provide to the ODL developer the entire features essential in a modern environment for software development. The considered features include the “traditional” ones as syntax-highlighting, code-completion, version-control, on-line error-checking, and also “advanced” ones like syntactic validation, semantic validation, and integrated code compilation. Moreover, by means of the adopted MDE approach, a very large part of the IDE code has been automatically generated starting from the Extended Backus-Naur Form (EBNF) specification of the ODL grammar so allowing for the IDE developers to be more focused on validation issues and on the quality of product than on the coding activity. All this has been obtained by following the paradigm “coding equals modeling”, for which each program represents a behavioral model compl- ant to the meta-model specified by the grammar of the language itself. The obtained result is a professional product that satisfies all the expected requirements, but this would be just a starting point since the ultimate goal of this work is to contribute to fostering the adoption of MDE approaches in the spacecraft software domain.},
  doi           = {10.1109/AERO.2015.7119032},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  issn          = {1095-323X},
  keywords      = {aerospace computing;configuration management;program verification;programming environments;software quality;space vehicles;specification languages;DSL;EBNF specification;ECSS standard;ECSS-E-ST-70-01;EMF;Eclipse modeling framework;Eclipse-based IDE;IDE code;IDE development;MDD;MDE approach;MDE technologies;OBCP definition language;ODL;ODL grammar;TASI;Thales Alenia Space Italy;Xtext;aerospace domain;behavioral model;code-completion;coding activity;domain-specific language;extended Backus-Naur form specification;integrated code compilation;integrated development environment;language grammar;language syntax;model-driven engineering approach;on-board command procedures;on-line error-checking;product quality;semantic validation;software development;space engineering;spacecraft on-board software flexibility;spacecraft onboard control procedures;syntactic validation;version-control;Biographies;DSL;Syntactics;Terminology;Unified modeling language, rank3},
}

@InProceedings{6654481,
  author        = {Y. Miao and M. Samaka and J. Impagliazzo},
  title         = {Facilitating teachers in developing online PBL courses},
  booktitle     = {Teaching, Assessment and Learning for Engineering (TALE), 2013 IEEE International Conference on},
  year          = {2013},
  pages         = {454-459},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Developing a sound online problem-based learning (PBL) course plan is difficult because teachers need comprehensive PBL and technical knowledge. This paper proposes a model-driven approach to develop a PBL authoring tool that helps teachers create and customize online PBL course plans in a cost-effective and flexible manner. A pilot study was conducted to assess teacher acceptance of the tool. The results reveal that after a short training session, teachers understood the authoring tool and thought the tool was easy to use to develop online PBL course plans.},
  doi           = {10.1109/TALE.2013.6654481},
  groups        = {SCOPUS, Compendex, Duplicados},
  keywords      = {authoring systems;computer aided instruction;PBL authoring tool;model-driven approach;online PBL courses development;short training session;sound online problem-based learning course plan;Collaboration;Computational modeling;Computers;Conferences;Educational institutions;Unified modeling language;IMS-LD;PBL;course authoring;domain-specific modeling language;learning deisgn;model-driven architecture, rank3},
}

@InProceedings{6597186,
  author    = {L. Montrieux and Y. Yu and M. Wermelinger},
  title     = {Developing a domain-specific plug-in for a modelling platform: The good, the bad, the ugly},
  booktitle = {Developing Tools as Plug-ins (TOPI), 2013 3rd International Workshop on},
  year      = {2013},
  pages     = {1-6},
  month     = {May},
  abstract  = {Domain-Specific Modelling Languages (DSML) allow software engineers to use the techniques and tools of Model-Driven Engineering (MDE) to express, represent and analyse a particular domain. By defining DSMLs as UML profiles, i.e. domain-specific extensions of the UML metamodel, development time for DSMLs can be greatly reduced by extending existing UML tools. In this paper, we reflect on our own experience in building rbacUML, a DSML for Role-Based Access Control modelling and analysis, as a plugin for a UML modelling platform. We describe what motivated our choice, and discuss the advantages and drawbacks of using an existing platform to develop a DSML on top of UML and additional analysis tooling.},
  doi       = {10.1109/TOPI.2013.6597186},
  groups    = {SCOPUS, Duvida},
  issn      = {2327-0748},
  keywords  = {Unified Modeling Language;authorisation;simulation languages;software engineering;DSML development time;MDE;UML metamodel;UML profiles;domain-specific modelling languages;domain-specific plug-in development;model-driven engineering;rbacUML;role-based access control analysis;role-based access control modelling;Access control;Biological system modeling;Engines;Generators;Software;Standards;Unified modeling language;Eclipse;MDE;Modelling;OCL;Plugin;RBAC},
}

@InProceedings{7302461,
  author        = {I. Malavolta and H. Muccini and M. Sebastiani},
  title         = {Automatically Bridging UML Profiles to MOF Metamodels},
  booktitle     = {2015 41st Euromicro Conference on Software Engineering and Advanced Applications},
  year          = {2015},
  pages         = {259-266},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {In Model-Driven Engineering, UML profiles and MOF-based Domain Specific Modeling Languages (DSMLs) are the most used approaches for describing domain specific applications. The choice of the right approach depends on several aspects, such as tool support, expressivity, complexity of models, company policies. In general, profiled UML models are very much used since they are intuitive for designers and model editors already exist, however they are intrinsically complex for model manipulation (e.g., Transformation, analysis), conversely, domain specific models are more concise and easy to be manipulated, but they require an initial effort in terms of designers training and model editors development. In this paper we propose an approach that allows getting the best of the two worlds: on one side designers can use UML profiles familiar to them, on the other side DSML models (automatically generated from profiled UML models) enable a better model manipulation. Our approach is based on an automatic bridge between UML profiles and MOF metamodels (which are the main artifacts of MOF-based DSMLs). The bridge is transparent to the user since it autonomously operates both on UML profiles and all the involved models. The bridge is realized through model transformation techniques in the Eclipse platform. In this paper we show its application on a case study based on SysML.},
  doi           = {10.1109/SEAA.2015.64},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {1089-6503},
  keywords      = {Unified Modeling Language;software tools;DSMLs;Eclipse platform;MOF metamodels;MOF-based domain specific modeling languages;SysML;UML profiles;automatic bridge;company policies;designers training;domain specific applications;domain specific models;model complexity;model editors development;model manipulation;model transformation techniques;model-driven engineering;tool support;Adaptation models;Analytical models;Bridges;Complexity theory;Metamodeling;Unified modeling language;Model-driven engineering;UML;metamodeling;model transformation, rank3},
}

@InProceedings{Ferry2014,
  author        = {N. Ferry and H. Song and A. Rossini and F. Chauvel and A. Solberg},
  title         = {CloudMF: Applying MDE to Tame the Complexity of Managing Multi-cloud Applications},
  booktitle     = {Utility and Cloud Computing (UCC), 2014 IEEE/ACM 7th International Conference on},
  year          = {2014},
  pages         = {269-277},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {The market of cloud computing encompasses an ever-growing number of cloud providers offering a multitude of infrastructure-as-a-service (IaaS) and platform-as-a-service (PaaS) solutions. The heterogeneity of these solutions hinders the proper exploitation of cloud computing since it prevents interoperability and promotes vendor lock-in, which increases the complexity of executing and managing multi-cloud applications (i.e., Applications that can be deployed across multiple cloud infrastructures and platforms). Providers of multi-cloud applications seek to exploit the peculiarities of each cloud solution and to combine the delivery models of IaaS and PaaS in order to optimise performance, availability, and cost. In this paper, we show how the Cloud Modelling Framework leverages upon model-driven engineering to tame this complexity by providing: (i) a tool-supported domain-specific language for specifying the provisioning and deployment of multi-cloud applications, and (ii) a models@run-time environment for enacting the provisioning, deployment, and adaptation of these applications.},
  doi           = {10.1109/UCC.2014.36},
  groups        = {IEEE DSL, Duplicados},
  keywords      = {cloud computing;open systems;IaaS;MDE;PaaS;cloud MF;cloud computing;cloud modelling framework;infrastructure-as-a-service;interoperability;model-driven engineering;multicloud applications;platform-as-a-service;tool-supported domain-specific language;Adaptation models;Biological system modeling;Cloud computing;Containers;Engines;Sensors;Syntactics;Cloud ML;Cloud computing;Model-driven engineering;multi-cloud, rank3},
}

@InProceedings{Liu2013,
  author        = {C. Liu and B. H. Shen and S. Y. Oh and M. Gerla and J. Palsberg and C. Banner and R. Butler},
  title         = {Agnostic Protocol Translation for Cross-Domain Information Sharing},
  booktitle     = {MILCOM 2013 - 2013 IEEE Military Communications Conference},
  year          = {2013},
  pages         = {1447-1452},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Network translation gateways can provide seamless interoperability among different airborne, ground and maritime domains. Effective interconnection between waveforms and protocols through the gateways requires manual intensive development and specialized protocol expertise. Therefore, enabling building versatile gateways that can effectively translate those protocols across different network domains is of utmost importance to improve system interoperability. High-level domain specific languages have been utilized to support agnostic protocol interoperability. However, protocol-specific knowledge specification, the core of protocol translation, is still left to protocol experts with manual coding without advanced tools in support of simplification, guidance or verification. Such a manual and unsupervised method of generating translation logic is complex, time-consuming and error-prone. In order to overcome these problems with much more productive gateway development, we present a novel, visual protocol-agnostic translation toolkit in this paper. This toolkit offers three advanced features: 1) simple, intuitive visualized specification of protocol-specific knowledge, 2) graph-based translation logic verification, and 3) automatic gateway generation. The first two features have not been addressed in currently available protocol translation solutions.},
  doi           = {10.1109/MILCOM.2013.245},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  issn          = {2155-7578},
  keywords      = {high level languages;internetworking;open systems;protocols;agnostic protocol interoperability;agnostic protocol translation;airborne domains;automatic gateway generation;cross-domain information sharing;graph-based translation logic verification;ground domains;high-level domain specific languages;maritime domains;network translation gateways;protocol-specific knowledge specification;visual protocol-agnostic translation toolkit;DSL;Grammar;Logic gates;Protocols;Semantics;Syntactics;Visualization;automatic translation;cross domain communication;domain specific language;protocol-agnostic translation;system interoperative;visual specificatin, rank3},
}

@InProceedings{Jacek2014,
  author        = {K. Jacek and K. Nowakowski and Ż Kamil},
  title         = {Domain-specific languages as tools for teaching 3D graphics},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {498-508},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {Model-driven engineering is constantly gaining importance, expanding to domains varying from the Web to the 3D graphics. Domain-specific languages besides contributing to the development process can be used in a didactic process conducted not only in schools. Thus this paper introduces new domain-specific language and discusses its usage in teaching construction of shaders and materials while working with 3D graphics. It presents the authors stance regarding the usefulness of domain-specific languages in education of 3D graphics development.},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {computer graphics;computer science education;software engineering;specification languages;teaching;3D graphics development education;3D graphics teaching;didactic process;domain-specific languages;materials;model-driven engineering;shaders;DSL;Education;Games;Graphics;Materials;Solid modeling;Three-dimensional displays;3D Graphics;Domain-specific Languages;Model-Driven Engineering;Modeling Shaders;Teaching, rank3},
}

@InProceedings{6619498,
  author    = {D. D. Ruscio and L. Iovino and A. Pierantonio},
  title     = {Managing the Coupled Evolution of Metamodels and Textual Concrete Syntax Specifications},
  booktitle = {2013 39th Euromicro Conference on Software Engineering and Advanced Applications},
  year      = {2013},
  pages     = {114-121},
  month     = {Sept},
  abstract  = {In the context of Model Driven Engineering (MDE) the definition of a Domain Specific Modeling Language (DSML) consists of a set of coordinated artifacts specifying the abstract and concrete syntax of the language, and possibly further aspects related to semantics. Concerning the specification of concrete syntaxes a number of tools are available. They typically permit to associate syntactic elements to metamodel (abstract syntax) of the modeling language being developed and to generate a number of supporting tools (e.g., parsers, pretty printers, and editors). Currently, tools for the specification of textual concrete syntaxes lack support for propagating metamodel changes to the corresponding concrete syntax specifications. In this paper, we analyze such a co-evolution problem, and provide an approach able to automate the propagation of metamodel changes to textual concrete specifications given by means of the TCS tool. The approach relies on model-to-model transformations which are applied according to difference models which represent the occurred metamodel changes.},
  doi       = {10.1109/SEAA.2013.22},
  groups    = {SCOPUS, Compendex, excluidos},
  issn      = {1089-6503},
  keywords  = {computational linguistics;formal specification;simulation languages;software maintenance;DSML;Domain Specific Modeling Language;TCS tool;abstract syntax;co-evolution problem;difference models;metamodel changes propagation automation;metamodel evolution management;model driven engineering;model-to-model transformations;textual concrete syntax specifications evolution management;Abstracts;Adaptation models;Concrete;Context;Context modeling;Semantics;Syntactics;MDE;coupled evolution;metamodeling;textual concrete syntaxes},
}

@InProceedings{Benchaib2012,
  author        = {Y. Benchaïb and C. Chaudet},
  title         = {Using VIRMANEL and SILUMOD to study protocol for mobile multihop networks},
  booktitle     = {Sensor, Mesh and Ad Hoc Communications and Networks (SECON), 2012 9th Annual IEEE Communications Society Conference on},
  year          = {2012},
  pages         = {76-78},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {In this demonstration, we show how to use a couple of tools we developed, VIRMANEL and SIMULOD, to study how the true implementation of an ad hoc routing protocol behaves under various mobility scenarios. VIRMANEL is a tool that configure virtual machines connections with respect to mobility. It features a GUI to observe the behavior of mobile nodes. SILUMOD is a domain-specific language that allows to describe mobility models. It defines the positions of the trajectory of moving through the appropriate keywords. These tools, published under the LGPL license, are used here to study the Linux implementation of OLSR.},
  doi           = {10.1109/SECON.2012.6275847},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  issn          = {2155-5486},
  keywords      = {mobile ad hoc networks;routing protocols;GUI;LGPL license;Linux implementation;OLSR;SILUMOD;VIRMANEL;ad hoc routing protocol;domain-specific language;mobile multihop networks;mobile nodes;mobility models;mobility scenarios;virtual machines connections;Ad hoc networks;Mobile computing;Spread spectrum communication, rank3},
}

@InProceedings{Mos2013,
  author        = {A. Mos and T. Jacquin},
  title         = {Improving Process Robustness through Domain-Specific Model Transformations},
  booktitle     = {2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
  year          = {2013},
  pages         = {188-193},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Many forward-thinking organizations have adopted domain-specific languages (DSL) as the preferred method for describing business processes. Using DSL-based descriptions helps in removing uncertainty from the semantics of process models. DSLs can evolve in a managed way and with proper versioning of individual processes the original intentions of process designers can be preserved over time. However in collaborative projects, business processes written in different DSLs need to be converted to a common denominator format to facilitate exchange. Due to its widespread adoption, BPMN is ideally placed to serve as the exchange language for complex, cross-domain collaborations. This paper presents an approach for automatic two-way synchronization of domain-specific process models with BPMN diagrams. This approach can be valuable when collaboration between different stakeholders with different expertise is required, as well as when the company wants to leverage its investments in a BPM suite across its process portfolio. In addition, this approach ensures that changes to processes executed through the BPMS are valid with respect to their domain representations, minimizing the potential for runtime problems that are difficult to understand.},
  doi           = {10.1109/EDOCW.2013.28},
  groups        = {IEEE DSL, Duplicados},
  issn          = {2325-6583},
  keywords      = {business data processing;investment;specification languages;BPMN diagrams;DSL-based descriptions;business process description;business process model and notation;collaborative projects;domain representations;domain-specific languages;domain-specific model transformations;domain-specific process model;investments;process model semantics;process portfolio;process robustness improvement;stakeholder collaboration;two-way synchronization;DSL;Domain specific languages;Organizations;Semantics;Standards organizations;BPM;BPMN;domain-specific language;modeling;tooling, rank3},
}

@InProceedings{6601569,
  author    = {D. Lindecker and G. Simko and I. Madari and T. Levendovszky and J. Sztipanovits},
  title     = {Multi-way Semantic Specification of Domain-Specific Modeling Languages},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2013 20th IEEE International Conference and Workshops on the},
  year      = {2013},
  pages     = {20-29},
  month     = {April},
  abstract  = {Increased emphasis on the use of model-based design methods, particularly for developing Cyber-Physical Systems (CPS), has created challenges in the area of developing domain-specific modeling languages (DSML). To meet the increased demand for DSMLs, rapid development tools and techniques are needed. While tools such as the Generic Modeling Environment (GME) for the specification of the syntactic structure of DSMLs are well established, proper techniques for the specification of semantics and methods for integrating the semantic specifications with the language design tool suite remain interesting challenges. Current efforts in semantic specification of DSMLs focus solely on operational semantics. In this paper we show how the specification of multiple types of semantics can bring added benefit. We also emphasize the use of FORMULA, a formal modeling and analysis language, and show how it can be used to specify the semantics of a DSML in a way that integrates with DSML development tools. As a case study, we consider the operational and denotational semantics of a Statecharts-like language and show that the two semantic specifications can be used for complementary applications.},
  doi       = {10.1109/ECBS.2013.29},
  groups    = {SCOPUS, Compendex, Inclusos},
  keywords  = {formal specification;simulation languages;CPS development;DSML;FORMULA language;GME tool;cyber-physical system;denotational semantics;domain-specific modeling language;generic modeling environment;multiway semantic specification;operational semantics;semantics specification;statecharts-like language;Abstracts;Analytical models;Data models;Gears;Semantics;Syntactics;Unified modeling language},
}

@InProceedings{Kuehn2014,
  author        = {E. Kühn and S. Craß and T. Hamböck},
  title         = {Approaching Coordination in Distributed Embedded Applications with the Peer Model DSL},
  booktitle     = {2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications},
  year          = {2014},
  pages         = {64-68},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Coordination in distributed embedded systems requires complex synchronization of many concurrent activities. This task becomes especially difficult when network and system failures have to be assumed. The Peer Model is a novel programming model for the design of coordination strategies among multiple nodes, aiming to bridge design and implementation. A major advantage is that designs based on the Peer Model are very flexible regarding changing requirements and policies. The motivating use case is an application in the railway domain where embedded nodes detect approaching trains and route this information over several forwarder nodes to the level crossing. In this paper, we present a Domain Specific Language for the Peer Model which allows to automatically generate a graphical documentation and source code for different embedded platforms. It lays the foundations for an embedded system software development tool chain. We prove the feasibility by implementing an event notification strategy for the level crossing use case.},
  doi           = {10.1109/SEAA.2014.72},
  groups        = {IEEE DSL, Compendex, SCOPUS, ACM, Duplicados},
  issn          = {1089-6503},
  keywords      = {concurrency control;distributed processing;embedded systems;railway engineering;software engineering;source code (software);system documentation;approaching train detection;complex synchronization;concurrent activities;distributed embedded systems;domain specific language;embedded nodes;embedded platforms;embedded system software devel- opment toolchain;event notification strategy;forwarder nodes;graphical documentation;level crossing;peer model;programming model;railway domain;source code;system failures;Containers;Documentation;Middleware;Peer-to-peer computing;Unified modeling language;Wiring, rank3},
}

@InProceedings{Hadiwijaya2015,
  author        = {R. I. Hadiwijaya and M. M. I. Liem},
  title         = {A domain-specific language for automatic generation of checkers},
  booktitle     = {2015 International Conference on Data and Software Engineering (ICoDSE)},
  year          = {2015},
  pages         = {7-12},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {One of the important modules of a black-box automatic program grader is a "checker". In programming competition environment, a checker is a program written for the purpose to check the output of the contestant's program for a task that has many solutions. Usually, a checker is written manually as needed. In this paper, the idea of the output checker in the programming competition environment is extended to input checker and source code checker as a part of the automatic grader in our programming learning environment. Input checker validates the input coverage. The source code checker is used to validate a set of properties from a source code against the given coding specification. A Domain-Specific Language (DSL) grammar is designed and developed as a specification for the automatic generation of the output, input, and source code checkers. The DSL grammar and the checker generator tool set are used to evaluate source codes in our programming class. By writing the checkers specification in DSL, the specification is automatically documented and can be reused for similar properties.},
  doi           = {10.1109/ICODSE.2015.7436963},
  groups        = {Compendex, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {grammars;program verification;programming languages;source code (software);DSL grammar;black-box automatic program grader;checker generator tool;checkers automatic generation;domain-specific language;input checker;source code checker;DSL;Domain specific languages;Encoding;Generators;Programming;Testing;Domain-Specific Language;automatic program grading;property checker, rank3},
}

@InProceedings{Tyugu2013a,
  author        = {E. Tyugu and P. Grigorenko},
  title         = {Components in model-based software development},
  booktitle     = {Computer Science and Information Technologies (CSIT), 2013},
  year          = {2013},
  pages         = {1-8},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Model-based software development (MBSD) is rapidly gaining popularity. There are two main approaches to MBSD: transformational and compositional approaches. The first has been initiated in nineties by creating UML - a universal modeling language that has become a standard for software specification, and has influenced research in software engineering. One can say that UML has initiated model-driven software engineering (MDSE). The second - compositional approach has grown out of domain-specific language development. It uses visual specifications as input, and is represented by tools like MetaEdit+ and CoCoViLa. We give a survey of these approaches, and discuss in more detail the compositional approach, paying attention at combining compositional and object-oriented software specifications.},
  doi           = {10.1109/CSITechnol.2013.6710367},
  groups        = {SCOPUS, Duplicados},
  keywords      = {Unified Modeling Language;formal specification;object-oriented programming;CoCoViLa tool;MBSD;MetaEdit+ tool;UML;compositional approach;compositional specifications;domain-specific language development;model-based software development;object-oriented software specifications;software engineering;software specification;transformational approach;universal modeling language;visual specifications;Computational modeling;Java;Mathematical model;Object oriented modeling;Software;Unified modeling language;Visualization;compositional software design;domain-specific modelling;model driven software development;software components;structural synthesis of programs, rank3},
}

@InProceedings{Farwick2013,
  author    = {M. Farwick and T. Trojer and M. Breu and S. Ginther and J. Kleinlercher and A. Doblander},
  title     = {A Case Study on Textual Enterprise Architecture Modeling},
  booktitle = {2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
  year      = {2013},
  pages     = {305-309},
  month     = {Sept},
  abstract  = {Today's Enterprise Architecture Management (EAM) tools are based on forms and graphical modeling capabilities via web-based applications or desktop clients. However, recent developments in textual modeling tools have not yet been considered for EA modeling in research and practice. In this paper we present a novel EAM-tool approach, called Txture, that consists of a textual modeling environment and a web-application to provide enterprise-wide architecture visualizations for different stakeholder groups. The tool is in production use at a major Austrian data center, where it proofed to be intuitive and provide efficient modeling capabilities compared to traditional approaches. In this paper we present lessons learned from the development of the tool as well as usage it and report on its benefits and drawbacks.},
  doi       = {10.1109/EDOCW.2013.40},
  groups    = {SCOPUS, IEEE DSL, Compendex, excluidos},
  issn      = {2325-6583},
  keywords  = {Internet;corporate modelling;data visualisation;Austrian data center;EA modeling;EAM tools;Txture;Web based applications;desktop clients;enterprise architecture management;enterprise wide architecture visualizations;graphical modeling;textual enterprise architecture modeling;textual modeling tools;Business;Computational modeling;Computer architecture;DSL;Data visualization;Documentation;Syntactics;DSL;case study;documentation;domain-specific language;enterprise architecture;textual;viewpoint;xtext},
}

@InProceedings{Rabbi2014,
  author        = {F. Rabbi and W. MacCaull},
  title         = {User-Friendly UIs for the Execution of Clinical Practice Guidelines},
  booktitle     = {2014 IEEE 27th International Symposium on Computer-Based Medical Systems},
  year          = {2014},
  pages         = {489-490},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {Workflow management systems (WfMS) can be used to manage complex processes, such as those described by Clinical Practise Guidelines (CPG). Such processes involve a variety of stakeholders, however, frequently their interfaces are not suited to the needs of the stakeholders involved. Here we propose that WfMSs be integrated with tools to build a variety of interfaces to meet the needs of different users. Using a CPG for the management of hypertension as a case study, we give examples of user-friendly interfaces which can be built easily using our domain specific language, and which integrate with our WfMS. One interface guides the clinician in the management of the disease, allowing her him the opportunity to view and interact with the process in a more holistic fashion, recording and recalling information relevant to the patient or the task. A second interface is more suited to the patient for the self management of lifestyle parameters, while other interfaces can be used by the patient, the clinician or the manager to represent trends or aggregate data.},
  doi           = {10.1109/CBMS.2014.104},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  issn          = {1063-7125},
  keywords      = {diseases;graphical user interfaces;human computer interaction;medical computing;workflow management software;CPG execution;WfMS;clinical practice guideline execution;complex process management;disease management;domain specific language;hypertension management;lifestyle parameter self management;user-friendly UI;user-friendly interfaces;workflow management systems;Biomedical monitoring;Diseases;Educational institutions;Guidelines;Hypertension;Monitoring;clinical practice guidelines;domain specific language;user friendly interface;workflow management system, rank3},
}

@Article{Canovas2016,
  author        = {S. R. Mello Canovas and C. E. Cugnasca},
  title         = {Extending a Metamodel for Adaptive Programs: Specifying Adaptive Functions},
  journal       = {IEEE Latin America Transactions},
  year          = {2016},
  volume        = {14},
  number        = {4},
  pages         = {1923-1929},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Model Driven Engineering (MDE) is a software development approach based on the use of models as essential artifacts. In the ideal scenario, source code is automatically generated from models by steps of transformations defined by mapping functions. A metamodel is a special type of model that describes the syntax of a modeling language. They are important because mapping functions reference their elements to define transformations, allowing the application of MDE. This paper proposes an extension of a metamodel of a domain specific modeling language for adaptive programs. This extension includes metaclasses, properties and constraints for specifying adaptive functions. An existing mapping function, which generates partial source code in BADAL language, was then updated to consider the new metamodel elements, becoming able to generate code for adaptive functions from the model specification. The resulting metamodel and mapping function were used as input to generate a CASE tool for adaptive programs, allowing the use of MDE in a higher level of abstraction than before for this class of application.},
  doi           = {10.1109/TLA.2016.7483535},
  groups        = {IEEE DSL, Duplicados},
  issn          = {1548-0992},
  keywords      = {formal specification;program compilers;source code (software);BADAL language;CASE tool;MDE;adaptive function specification;adaptive programs;code generation;domain specific modeling language syntax;mapping functions;metamodel elements;model driven engineering;model specification;software development approach;source code;Adaptation models;Computer aided software engineering;Domain specific languages;Model driven engineering;Syntactics;Unified modeling language;Adaptive Programs;Domain Specific Language;Model Driven Engineering;Set Based Meta Modeling, rank3},
}

@InProceedings{Holmes2012,
  author    = {T. Holmes},
  title     = {From Business Application Execution to Design Through Model-Based Reporting},
  booktitle = {Enterprise Distributed Object Computing Conference (EDOC), 2012 IEEE 16th International},
  year      = {2012},
  pages     = {143-153},
  month     = {Sept},
  abstract  = {Cross-disciplinary models constitute essential instruments to master complexity. Often it is easier to relate to high-level concepts than to deal with low-level technical details. In model-driven engineering (MDE) models are designated a pivotal role from which systems are generated. As such, MDE enables different stakeholders of business applications to participate in the engineering process. Until now however, MDE does not penetrate phases beyond generation and deployment such as monitoring, analysis, and reporting. To display information from runtime and analytics it would be interesting if reporting could utilize models from design time. Therefore, this paper presents model-based reporting (MbR). Bridging the gap between reporting and design, it enables stakeholders to intuitively specify the reporting through a domain-specific language (DSL) while accelerating development cycles. In non-model-driven settings, MbR can help to introduce models as a first step towards MDE.},
  doi       = {10.1109/EDOC.2012.25},
  groups    = {IEEE DSL, excluidos},
  issn      = {1541-7719},
  keywords  = {business data processing;software engineering;DSL;MDE;MbR;business application execution;cross disciplinary models;domain specific language;engineering process;model based reporting;model driven engineering;Abstracts;Business;Context modeling;Correlation;DSL;Data models;Runtime;business applications;end-to-end;model-based;reporting},
}

@InProceedings{Sneps-Sneppe2015,
  author        = {M. Sneps-Sneppe and D. Namiot},
  title         = {On web-based domain-specific language for Internet of Things},
  booktitle     = {Ultra Modern Telecommunications and Control Systems and Workshops (ICUMT), 2015 7th International Congress on},
  year          = {2015},
  pages         = {287-292},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {This paper discusses the challenges of the Internet of Things programming. Sensing and data gathering from the various sources are often the key elements of applications for Smart Cities. So, the effective programming models for them are very important. In this article, we discuss system software models and solutions, rather than network related aspects. In our paper, we present the web-based domain-specific language for Internet of Things applications. Our goal is to present the modern models for data processing in Internet of Things and Smart Cities applications. In our view, the use of this kind of tools should seriously reduce the time to develop new applications.},
  doi           = {10.1109/ICUMT.2015.7382444},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {Internet of Things;smart cities;systems software;Internet of Things;Web-based domain-specific language;smart cities;system software models;Computational modeling;Data models;Domain specific languages;Internet of things;Programming;Sensors;Smart cities;actors;domain-specific languages;micro-service;middleware;software standards, rank3},
}

@InProceedings{Hallenberg2012,
  author        = {N. Hallenberg and P. L. Carlsen},
  title         = {Declarative automated test},
  booktitle     = {Automation of Software Test (AST), 2012 7th International Workshop on},
  year          = {2012},
  pages         = {96-102},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Automated tests at the business level can be expensive to develop and maintain. One common approach is to have a domain expert instruct a QA developer to implement what she would do manually in the application. Though there exist record-replay tools specifically developed for this, these tend to scale poorly for more complicated test scenarios. We present a different solution: An Embedded Domain Specific Language (EDSL) in F#, containing the means to model the user interface, and the various manipulations of it. We hope that this DSL will bridge the gap between the business domain and technical domain of applications to such a degree that domain experts may be able to construct automatic tests without depending on QA developers, and that these tests will prove more maintainable.},
  doi           = {10.1109/IWAST.2012.6228998},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {program testing;software quality;user interfaces;F#;QA developer;business level;declarative automated testing;domain expert;embedded domain specific language;record-replay tool;technical domain;user interface;Business;DSL;Documentation;Engines;Phantoms;Testing;User interfaces;Automated Testing;Domain Specific Language;F#;Functional Testing, rank3},
}

@InProceedings{7336975,
  author    = {A. Maarouf and M. E. Hamlaoui and A. Marzouk and A. Haqiq},
  title     = {Combining multi-agent systems and MDE approach for monitoring SLA violations in the Cloud Computing},
  booktitle = {Cloud Technologies and Applications (CloudTech), 2015 International Conference on},
  year      = {2015},
  pages     = {1-6},
  month     = {June},
  abstract  = {A Service Level Agreement (SLA) is a legal contract between parties to ensure the Quality of Service (QoS). It specifies one or more service level objectives (SLO), to ensure that the QoS delivered has met customer expectations. However, It becomes hard to guarantee QoS levels and detect SLA violations. Therefore, we propose to use MDE (Model Driven Engineering) to express the SLA contract requirements. This latter, created with a specific modeling language (DSML), will be used harmonically with a Multi-agent systems (MASs) in order to monitor SLA violations in real-time. Indeed, MASs are suitable tools for self-detection of failures and self-monitoring of cloud operations and services, QoS negotiation and SLA management. They are designed to operate in a dynamically changing environment. Our main motivation is firstly to use MDE technology for the creation of the SLA contract and then to integrate MASs in order to control the quality of service contract and guarantee transparency and symmetry with respect to the SLA contract between prospective signatories.},
  doi       = {10.1109/CloudTech.2015.7336975},
  groups    = {SCOPUS, excluidos},
  keywords  = {cloud computing;contracts;multi-agent systems;quality of service;DSML;MAS;MDE approach;QoS negotiation;SLA contract;SLA management;SLA violations;SLO;cloud computing;cloud operations;cloud services;legal contract;model driven engineering;modeling language;multiagent systems;prospective signatories;quality of service;service level agreement;service level objectives;Cloud computing;Computational modeling;Contracts;Monitoring;Multi-agent systems;Quality of service;Real-time systems;Cloud Computing;MDE;Multi-agent systems;SLA Monitoring;Service Level Agreements},
}

@InProceedings{Huang2015,
  author        = {C. Huang and A. Osaka and Y. Kamei and N. Ubayashi},
  title         = {Automated DSL construction based on software product lines},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2015 3rd International Conference on},
  year          = {2015},
  pages         = {1-8},
  month         = {Feb},
  __markedentry = {[Neto:5]},
  abstract      = {DSL (Domain-Specific Language) is one of the important approaches for software abstraction. In the past decades, DSLs have been provided by expert engineers familiar with domain knowledge and programming language processors. It is not easy for ordinary programmers to construct DSLs for their own purposes. To deal with this problem, we propose a language workbench called Argyle that can automatically generate a DSL by only specifying a set of functions needed to the DSL and an execution platform supported by the DSL. Argyle is based on software product lines and consists of the following two steps: 1) development of the core assets for constructing a family of DSLs and 2) DSL configuration using these core assets. To demonstrate the effectiveness of our approach, we developed a prototype DSL for supporting MSR (Mining Software Repositories), the most active research field in software engineering.},
  groups        = {ACM, Compendex, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {programming languages;software product lines;Argyle;MSR;automated DSL construction;domain-specific language;mining software repository;programming language processor;software engineering;software product line;DSL;Encoding;Metals;Program processors;Software product lines;Syntactics;Domain-specific Language;Language Workbench;Software Product Line, rank3},
}

@InProceedings{Lethrech2013a,
  author        = {M. Lethrech and I. Elmagrouni and M. Nassar and A. Kriouile and A. Kenzi},
  title         = {A generic metamodel for adaptable service oriented systems modeling using DSM approach},
  booktitle     = {ISKO-Maghreb, 2013 3rd International Symposium},
  year          = {2013},
  pages         = {1-6},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {CAC (context aware computing) has recently emerged as a new computing paradigm promising adaptable systems development. Context awareness for services oriented systems (SOS) raises many challenges. Particularly, the challenge of engineering such systems which consists of the definition of modeling approaches, processes, techniques and tools to facilitate construction of these systems. In this paper, we propose a generic metamodel for Adaptable, Domain Specific and Service Oriented Systems. Our metamodel aims to facilitate the creation of Domain Specific Language (DSL) for adaptable and service oriented architecture. For a specific domain the language developer must produce their specific service metamodel based on our generic service metamodel.},
  doi           = {10.1109/ISKO-Maghreb.2013.6728120},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {high level languages;service-oriented architecture;systems software;ubiquitous computing;CAC;DSM approach;adaptable domain specific service oriented systems modeling;adaptable service oriented architecture;context aware computing;domain specific language developer;generic service metamodel;Adaptation models;Computational modeling;Context;Context modeling;DSL;Unified modeling language;Adaptability;CAC;DSM;Meta Modeling;SOC, rank3},
}

@InProceedings{Bouabana-Tebibel2013,
  author        = {T. Bouabana-Tebibel and S. H. Rubin and K. Habib and S. Mellah and L. Allata},
  title         = {A component-based language specific to complex systems modeling},
  booktitle     = {Information Reuse and Integration (IRI), 2013 IEEE 14th International Conference on},
  year          = {2013},
  pages         = {217-224},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {The modeling and design of complex systems continues to face grand challenges in feedback and control. Existing languages and tools, either textual or graphical, bring some improvement for such purposes, but much remains to be done in order to readily insure scalability. In this paper, we propose a language, which gathers specialization and composition properties. It is our belief that the latter properties bear the necessary capabilities to overcome the difficulties raised when developing these systems. The language is designed, on one hand, in a way to be specific to complex system domains. It supports, on the other hand, a component-based structure that conforms to a user-friendly component assembly. It is conceived in the spirit of SysML concepts. Its' programs generate Internal Block Diagrams. A programming tool is built on the basis of the Eclipse framework.},
  doi           = {10.1109/IRI.2013.6642475},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  keywords      = {object-oriented programming;specification languages;Eclipse framework;SysML concepts;complex system modeling;component-based language;component-based structure;domain-specific language;internal block diagrams;programming tool;user-friendly component assembly;Assembly;DSL;Grammar;Ports (Computers);Standards;Syntactics;Unified modeling language;Complex Systems;Component-Based Language;Domain-Specific Language;SysML, rank3},
}

@InProceedings{Alegroth2015,
  author        = {E. Alegroth and G. Bache and E. Bache},
  title         = {On the Industrial Applicability of TextTest: An Empirical Case Study},
  booktitle     = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST)},
  year          = {2015},
  pages         = {1-10},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Software systems are becoming more complex, not least in their Graphical User Interfaces (GUIs), which presents challenges for existing testing practices. Pressure to reduce time to market leaves less time for manual testing and increases the importance of test automation. Previous research has identified several generations of automated GUI-based test approaches with different cost-benefit tradeoffs. Whilst test automation provides fast quality feedback it can be associated with high costs and inability to identify defects not explicitly anticipated by the test designer. TextTest is a capture-replay tool for GUI-based testing with a novel approach that overcomes several of the challenges experienced with previous approaches. Firstly the tool supports Approval Testing, an approach where ASCII-art representations of the GUI's visual state are used to verify correct application behavior at the system level. Secondly it records and replays test scripts in a user defined domain specific language (DSL) that is readable by all stakeholders. In this paper we present a three phase industrial case study that aims to identify TextTest's applicability in industrial practice. The paper reports that the tool is associated with (1) low script development costs due to recording functionality, (2) low maintenance costs, on average 7 minutes per test case, (3) better defect finding ability than manual system testing, (4) high test case execution performance (In this case 500 test cases in 20 minutes), (5) high script readability due to DSL defined scripts, and (6) test suites that are robust to change (In this case 93 percent per iteration). However, the tool requires a higher degree of technical skill for customization work, test maintainers need skills in designing regular expressions and the tool's applicability is currently restricted to Java and Python based applications.},
  doi           = {10.1109/ICST.2015.7102598},
  groups        = {IEEE DSL, SCOPUS, Compendex, Duplicados},
  issn          = {2159-4848},
  keywords      = {Java;graphical user interfaces;program testing;software tools;ASCII-art representations;DSL defined scripts;Java based applications;Python based applications;TextTest;approval testing;automated GUI-based testing;capture-replay tool;graphical user interfaces;software systems;test automation;test case execution performance;user defined domain specific language;Companies;DSL;Data collection;Graphical user interfaces;Maintenance engineering;Manuals;Testing, rank3},
}

@InProceedings{Sarimbekov2013,
  author        = {A. Sarimbekov and Y. Zheng and D. Ansaloni and L. Bulej and L. Marek and W. Binder and P. Tuma and Z. Qi},
  title         = {Productive Development of Dynamic Program Analysis Tools with DiSL},
  booktitle     = {2013 22nd Australian Software Engineering Conference},
  year          = {2013},
  pages         = {11-19},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Dynamic program analysis tools serve many important software engineering tasks such as profiling, debugging, testing, program comprehension, and reverse engineering. Many dynamic analysis tools rely on program instrumentation and are implemented using low-level instrumentation libraries, resulting in tedious and error-prone tool development. The recently released Domain-Specific Language for Instrumentation (DiSL) was designed to boost the productivity of tool developers targeting the Java Virtual Machine, without impairing the performance of the resulting tools. DiSL offers high-level programming abstractions especially designed for development of instrumentation-based dynamic analysis tools. In this paper, we present a controlled experiment aimed at quantifying the impact of the DiSL programming model and high-level abstractions on the development of dynamic program analysis instrumentations. The experiment results show that compared with a prevailing, state-of-the-art instrumentation library, the DiSL users were able to complete instrumentation development tasks faster, and with more correct results.},
  doi           = {10.1109/ASWEC.2013.12},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1530-0803},
  keywords      = {Java;program debugging;reverse engineering;specification languages;system monitoring;virtual machines;DiSL;Java virtual machine;debugging;domain-specific language for instrumentation;error-prone tool development;high-level programming abstractions;instrumentation-based dynamic analysis tools;low-level instrumentation libraries;productive dynamic program analysis tool development;program comprehension;program instrumentation;reverse engineering;software engineering tasks;Context;Instruments;Java;Libraries;Productivity;Programming;Writing;Dynamic program analysis;bytecode instrumentation;controlled experiment;development productivity, rank3},
}

@InProceedings{Smeltzer2014,
  author        = {K. Smeltzer},
  title         = {A language for visualization variation and transformation},
  booktitle     = {2014 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC)},
  year          = {2014},
  pages         = {195-196},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Improvements in computer technology have spawned an exponential growth in both the scope and volume of data collection, as well as a corresponding shortage of capable analysts. This applies not just to scientists, but also to consumers who are gaining unprecedented access to data from their cars, homes, phones, and other devices. Meanwhile, visualization has emerged as an effective tool for exploring and gathering insight from large quantities of data. However, constructing effective visualizations is often difficult, and current tools often lack either the flexibility to extend to custom problem domains or else require low-level graphics programming expertise to generate even simple visualizations. Furthermore, most solutions are ad hoc, preventing users from transforming and evolving visualizations, instead forcing them into a rigid, linear workflow. One possible approach to solving these problems is through the definition of a domain-specific language (DSL). This approach offers a number of potential advantages, the most immediate being flexibility. A visualization DSL could support multiple levels of abstraction at once, each of which could be targeted at different user needs and expertise levels. This, in turn, could allow users with varying levels of expertise to make use of the abstraction layers they find most appropriate, and support the creation of simple and common visualizations without sacrificing the option for more detailed control when necessary. This layering could also allow implementation details to be hidden when desired. Pixel position information, for example, could be hidden behind a scalable and unitless environment which would allow the user to place and size visualization components in relation to one another.},
  doi           = {10.1109/VLHCC.2014.6883052},
  groups        = {IEEE DSL, Duplicados},
  issn          = {1943-6092},
  keywords      = {program diagnostics;visual languages;abstraction layers;computer technology;domain-specific language;pixel position information;visualization DSL;visualization components;visualization transformation;visualization variation;DSL;Data analysis;Data visualization;Image color analysis;Programming;Visualization, rank3},
}

@InProceedings{Yakymets2013,
  author        = {N. Yakymets and S. Dhouib and H. Jaber and A. Lanusse},
  title         = {Model-driven safety assessment of robotic systems},
  booktitle     = {2013 IEEE/RSJ International Conference on Intelligent Robots and Systems},
  year          = {2013},
  pages         = {1137-1142},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Robotic systems (RSs) are often used for performing critical tasks with little or no human intervention. Such RSs must satisfy certain dependability requirements including reliability, availability, security and safety. In this paper, we focus on the safety aspect and propose a methodology and associated framework for safety assessment of RSs in the early phases of development. The methodology relies upon model-driven engineering approach and describes a preliminary safety assessment of safety-critical RSs using fault tree (FT) analysis (FTA). The framework supports a domain specific language for RSs called RobotML and includes facilities (i) to automatically generate or manually construct FTs and perform both qualitative and quantitative FTA, (ii) to make semantic connections with formal verification and FTA tools, (iii) to represent FTA results in the RobotML modeling environment. In the case study, we illustrate the proposed methodology and framework by considering a mobile robot developed in the scope of the Proteus project.},
  doi           = {10.1109/IROS.2013.6696493},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  issn          = {2153-0858},
  keywords      = {control engineering computing;fault trees;formal verification;mobile robots;safety;safety-critical software;FTA tools;Proteus project;RobotML modeling environment;availability;dependability requirements;domain specific language;fault tree analysis;formal verification;mobile robot;model-driven engineering approach;model-driven safety assessment;reliability;robotic systems;safety aspect;safety assessment;safety-critical RS;security;Fault trees;Hazards;Mobile robots;Robot sensing systems;Unified modeling language, rank3},
}

@InProceedings{6197397,
  author    = {M. U. Tariq and H. A. Nasir and A. Muhammad and M. Wolf},
  title     = {Model-Driven Performance Analysis of Large Scale Irrigation Networks},
  booktitle = {Cyber-Physical Systems (ICCPS), 2012 IEEE/ACM Third International Conference on},
  year      = {2012},
  pages     = {151-160},
  month     = {April},
  abstract  = {Irrigation networks play a fundamental part in the agriculture system of various countries. In the wake of global environmental challenges and economic competition, efficient use of water resources has become extremely important. This can only be achieved by developing smarter control infrastructures for irrigation networks, via the incorporation of communication and computation technologies. Thus, future irrigation networks represent a prime example of cyber physical systems. Effective operation of these complex cyber physical systems is not possible with conventional methods and requires unprecedented levels of automation and decision-support tools. We argue that these cyber physical systems will require a complete model-driven toolset for effective operation. As a first step towards that tool flow, we have developed a model-driven simulation infrastructure for irrigation networks. In the future, we propose to complete the toolset by developing a model-driven configuration infrastructure. Our contributions in this paper include the development of a domain-specific modeling language (DSML) for irrigation networks, implementation of this DSML in Generic Modeling Environment (GME), and automatic simulator M-file generation capability from the DSML-based case diagram of an arbitrary irrigation network. Moreover, we present case studies of water distribution and flood management to show the utility as well as the effectiveness of our approach. We also present the performance of our toolset for the realistic scenario of irrigation networks in Pakistan.},
  doi       = {10.1109/ICCPS.2012.23},
  groups    = {Compendex, SCOPUS, excluidos},
  keywords  = {decision support systems;floods;irrigation;water resources;water supply;Pakistan;agriculture system;automatic simulator M-file generation;cyber physical systems;decision support tools;domain specific modeling language;flood management;generic modeling environment;large scale irrigation networks;model driven performance analysis;model driven simulation infrastructures;water distribution;water resources;Analytical models;Engines;Irrigation;Logic gates;Mathematical model;Numerical models;Unified modeling language;Cyber Physical Systems;Domain Specific Modeling Languages;Irrigation Networks;Model Transformation;Model-Driven Software Development;Modeling and Simulation},
}

@InProceedings{Ecker2014a,
  author        = {W. Ecker and M. Velten and L. Zafari and A. Goyal},
  title         = {The metamodeling approach to system level synthesis},
  booktitle     = {2014 Design, Automation Test in Europe Conference Exhibition (DATE)},
  year          = {2014},
  pages         = {1-2},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {This paper presents an industry proven Metamodeling based approach to System-Level-Synthesis which is seen as generic design automation strategy above today's implementation levels RTL (for digital) and Schematic Entry (for analog). The approach follows a new synthesis paradigm: The designer develops a simple domain and/or design specific language and a smart tool synthesizing implementation level models according to its needs. The overhead of making both a tool and a model pays off since the tool building is automated by code generation and reuse, both based on Metamodeling techniques. Also the focus on owns demand keeps development costs low. Finally, specification data is utilized. I.e. the domain specific language simplifies to a document structure as a table. This keeps also modeling effort low since specification content is used and no model need to be built. Furthermore, increases design consistency and thus decreases debug time. Using these concepts, single design steps have been speed up to a factor of 20x and implementations of chips (specification-to-tapeout) have been speed up to a factor of 3x.},
  doi           = {10.7873/DATE.2014.324},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1530-1591},
  keywords      = {electronic design automation;program compilers;specification languages;RTL levels;code generation;design specific language;generic design automation strategy;metamodeling approach;schematic entry;smart tool;system level synthesis;Automation;Buildings;Data models;Engines;Generators;Metamodeling;Synthesizers;code generation;metamodeling;system level synthesis, rank3},
}

@InProceedings{Szabo2016a,
  author        = {T. Szabó and S. Erdweg and M. Voelter},
  title         = {IncA: A DSL for the definition of incremental program analyses},
  booktitle     = {2016 31st IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  year          = {2016},
  pages         = {320-331},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Program analyses support software developers, for example, through error detection, code-quality assurance, and by enabling compiler optimizations and refactorings. To provide real-time feedback to developers within IDEs, an analysis must run efficiently even if the analyzed code base is large. To achieve this goal, we present a domain-specific language called IncA for the definition of efficient incremental program analyses that update their result as the program changes. IncA compiles analyses into graph patterns and relies on existing incremental matching algorithms. To scale IncA analyses to large programs, we describe optimizations that reduce caching and prune change propagation. Using IncA, we have developed incremental control flow and points-to analysis for C, well-formedness checks for DSLs, and 10 FindBugs checks for Java. Our evaluation demonstrates significant speedups for all analyses compared to their non-incremental counterparts.},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  keywords      = {Java;program diagnostics;software engineering;specification languages;DSL;IncA analysis;Java;domain-specific language;incremental program analysis;software development;static program analysis;DSL;Java;Optimization;Pattern matching;Program processors;Runtime;Domain-specific Language;Incremental Computation;Language Workbench;Static Analysis, rank3},
}

@InProceedings{Hlaoui2012a,
  author        = {Y. B. Hlaoui and L. J. Ben Ayed and I. Ben Fradj},
  title         = {A model driven approach to compose and develop Grid service workflow applications},
  booktitle     = {Information Technology and e-Services (ICITeS), 2012 International Conference on},
  year          = {2012},
  pages         = {1-7},
  month         = {March},
  __markedentry = {[Neto:5]},
  abstract      = {We use a Domain Specific Language (DSL) based on UML activity diagrams (UML-AD) to specify and compose systematically workflow models from Grid services. To be executed, workflow activity diagram models should be translated into BPEL4WS models which will be executed by the BPEL4WS engine. To reach this objective, we propose a meta-model based transformation from UML activity diagrams to BPEL4WS language. To ensure the correctness and the completion of the transformation, we propose a graph homomorphic mapping between the activity diagram and BPEL4WS language elements. To execute the BPEL4WS provided model, we propose in this paper an execution infrastructure based on The Globus Tool Kit.},
  doi           = {10.1109/ICITeS.2012.6216638},
  groups        = {IEEE DSL, SCOPUS, Compendex, Duplicados},
  keywords      = {Unified Modeling Language;Web services;data models;graph theory;grid computing;meta data;BPEL4WS;Globus tool kit;UML activity diagram;UML-AD;domain specific language;graph homomorphic mapping;grid service workflow;meta model;model driven approach;workflow activity diagram model;Abstracts;Domain specific languages;Engines;Java;Semantics;Transforms;Unified modeling language;BPEL4WS;Grid service workflow;UML activity diagram s;homomorphic mapping;meta-model transformation, rank3},
}

@InProceedings{7037727,
  author    = {R. P. Mohamad and D. S. Kolovos and R. F. Paige},
  title     = {Resource Requirement Analysis for Web Applications Running in a Virtualised Environment},
  booktitle = {Cloud Computing Technology and Science (CloudCom), 2014 IEEE 6th International Conference on},
  year      = {2014},
  pages     = {632-637},
  month     = {Dec},
  abstract  = {Analysis of resource usage and precise correlation with the workload that triggered it is essential in order to conduct capacity planning in computing environments. Virtualisation enables resource optimisation and is widely used in grid, cluster and cloud computing. We present an automated approach for resource usage analysis in a virtualised environment that can support capacity planning for web applications. The approach uses Domain Specific Modelling Languages (DSMLs) and model management techniques, which support tool interoperation and provide precise ways for describing resource and request logs and requirements, and automatically generate different outputs that feed into the capacity planning process. The approach is demonstrated using a proof-of-concept example involving a media streaming web application, and the results of the analysis are presented and discussed.},
  doi       = {10.1109/CloudCom.2014.134},
  groups    = {SCOPUS, excluidos},
  keywords  = {Internet;open systems;resource allocation;specification languages;virtualisation;DSML;capacity planning process;cloud computing;cluster computing;computing environments;domain specific modelling languages;grid computing;media streaming Web application;model management techniques;request logs;resource logs;resource optimisation;resource requirement analysis;resource usage analysis;tool interoperation;virtualisation;virtualised environment;Analytical models;Capacity planning;Computational modeling;Monitoring;Virtual machining;Web servers;application workload;capacity planning;domain specific modelling;resource monitoring;virtualisation},
}

@InProceedings{Valero2012,
  author        = {M. Valero and S. Uluagac and S. Venkatachalam and K. C. Ramalingam and R. Beyah},
  title         = {The Monitoring Core: A framework for sensor security application development},
  booktitle     = {2012 IEEE 9th International Conference on Mobile Ad-Hoc and Sensor Systems (MASS 2012)},
  year          = {2012},
  pages         = {263-271},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {Wireless sensor networks (WSNs) are used for the monitoring of physical and environmental phenomena, and applicable in a range of different domains (e.g., health care, military, critical infrastructure). When using WSNs in a variety of real-world applications, security is a vital problem that should be considered by developers. As the development of security applications (SAs) for WSNs require meticulous procedures and operations, the software implementation process can be more challenging than regular applications. Hence, in an effort to facilitate the design, development and implementation of WSN security applications, we introduce the Monitoring Core (M-Core). The M-Core is a modular, lightweight, and extensible software layer that gathers necessary data including the internal and the external status of the sensor (e.g., information about ongoing communications, neighbors, and sensing), and provides relevant information for the development of new SAs. Similar to other software development tools, the M-Core was developed to facilitate the design and development of new WSN SAs on different platforms. Moreover, a new user-friendly domain-specific language, the M-Core Control Language (MCL), was developed to further facilitate the use of the M-Core and reduce the developer's coding time. With the MCL, a user can implement new SAs without the overhead of learning the details of the underlying sensor software architecture (e.g., TinyOS). The M-Core has been implemented in TinyOS-2.x and tested on real sensors (Tmote Sky and MicaZ). Using the M-Core architecture, we implemented several SAs to show that the M-Core allows easy and rapid development of security programs efficiently and effectively.},
  doi           = {10.1109/MASS.2012.6502525},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  issn          = {2155-6806},
  keywords      = {computerised monitoring;human computer interaction;software architecture;telecommunication security;wireless sensor networks;M-core architecture;M-core control language;MCL;SA;TinyOS-2.x;WSN security applications;environmental phenomena;extensible software layer;meticulous procedures;monitoring core;physical phenomena;real sensors;real-world applications;security applications;security programs;sensor external status;sensor internal status;sensor security application development;software implementation process;user-friendly domain-specific language;wireless sensor networks;M-Core Control Language (MCL);Monitoring Core (M-Core);Sensor Security Application Development;Wireless Sensor Network Applications, rank3},
}

@InProceedings{Unutulmaz2012,
  author        = {A. Unutulmaz and G. Dündar and F. V. Fernández},
  title         = {LDS based tools to ease template construction},
  booktitle     = {Synthesis, Modeling, Analysis and Simulation Methods and Applications to Circuit Design (SMACD), 2012 International Conference on},
  year          = {2012},
  pages         = {61-64},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Layout Description Script (LDS) is a domain specific language (DSL) intended to describe analog layouts. This paper introduces an LDS based tool, Capture, and an add-on, LDS Analyzer, for LDS. Capture aims to convert layout images into layout templates. Components of a layout are extracted with this tool and a template is synthesized from the extracted data. LDS Analyzer is an enhanced LDS parser. Analyzer investigates an LDS statement and conducts either simple parsing or enhanced parsing which make use of symbolic variables.},
  doi           = {10.1109/SMACD.2012.6339417},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {analogue circuits;circuit layout;electronic engineering computing;Layout Description Script Analyzer;analog layout;domain specific language;layout template;template construction;Circuit synthesis;Data mining;Design automation;Educational institutions;Layout;Optimization;Routing, rank3},
}

@InProceedings{7490559,
  author    = {S. Bonnet and J. L. Voirin and D. Exertier and V. Normand},
  title     = {Not (strictly) relying on SysML for MBSE: Language, tooling and development perspectives: The Arcadia/Capella rationale},
  booktitle = {2016 Annual IEEE Systems Conference (SysCon)},
  year      = {2016},
  pages     = {1-6},
  month     = {April},
  abstract  = {Using the Arcadia/Capella solution as an example, this paper explores why standard UML/SysML languages are not necessarily the unique or best alternatives for implementation of a model-based systems engineering solution (MBSE). The Thales experience is used to elicit MBSE language and tooling requirements. This paper analyzes various implementation alternatives and justifies structuring choices made regarding Capella to efficiently support the Arcadia engineering method.},
  doi       = {10.1109/SYSCON.2016.7490559},
  groups    = {SCOPUS, excluidos},
  keywords  = {Adaptation models;Analytical models;Computer architecture;Object oriented modeling;Unified modeling language;Arcadia;Capella;dsml;mbse;method;sysml;tool},
}

@InProceedings{Bernardino2016,
  author        = {M. Bernardino and A. F. Zorzo and E. M. Rodrigues},
  title         = {Canopus: A Domain-Specific Language for Modeling Performance Testing},
  booktitle     = {2016 IEEE International Conference on Software Testing, Verification and Validation (ICST)},
  year          = {2016},
  pages         = {157-167},
  month         = {April},
  __markedentry = {[Neto:5]},
  abstract      = {Despite all the efforts to reduce the cost of the testing phase in software development, it is still one of the most expensive phases. In order to continue to minimize those costs, in this paper, we propose a Domain-Specific Language (DSL), built on top of MetaEdit+ language workbench, to model performance testing for web applications. Our DSL, called Canopus, was developed in the context of a collaboration1 between our university and a Technology Development Laboratory (TDL) from an Information Technology (IT) company. We present, in this paper, the Canopus metamodels, its domain analysis, a process that integrates Canopus to Model-Based Performance Testing, and applied it to an industrial case study.},
  doi           = {10.1109/ICST.2016.13},
  groups        = {SCOPUS, Compendex, IEEE DSL, Duplicados},
  keywords      = {Internet;program testing;software cost estimation;specification languages;Canopus metamodels;DSL;IT company;MetaEdit+ language workbench;TDL;Web applications;cost minimization;cost reduction;domain-specific language;information technology company;model-based performance testing;performance testing modeling;software development testing;technology development laboratory;Analytical models;Automation;Computational modeling;DSL;Load modeling;Testing;Unified modeling language;domain-specific language;domain-specific modeling;model-based testing;performance testing, rank3},
}

@InProceedings{2015g,
  title         = {Design and Correctness},
  booktitle     = {2015 Forum on Specification and Design Languages (FDL)},
  year          = {2015},
  pages         = {1-1},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {This session presents a domain-specific language for high-level synthesis of hardware for FPGA platforms and describes its memory management for pipelined target architectures. It also presents a methodology to construct test sequences starting from PSL assertions and design under test written in VHDL using VSYML and SyntHorus tools. Finally it presents a top-down design flow to refine an architecture level description of a system into an RTL implementation, while refining operation properties concurrently.},
  groups        = {Duplicados},
  issn          = {1636-9874},
  keywords      = {Domain specific languages;Field programmable gate arrays;Hardware;Memory management;Refining;Systems modeling, rank3},
}

@InProceedings{7295780,
  author        = {F. Van Broeckhoven and J. Vlieghe and O. De Troyer},
  title         = {Mapping between Pedagogical Design Strategies and Serious Game Narratives},
  booktitle     = {2015 7th International Conference on Games and Virtual Worlds for Serious Applications (VS-Games)},
  year          = {2015},
  pages         = {1-8},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Successful serious games include a compelling narrative context and empirically validated pedagogical intervention methods. In order to create such games, design teams must consist of a multidisciplinary group of technical and pedagogical experts. In this paper, the authors show how the domain specific modeling language ATTAC-L facilitates communication between designers with different expertise, thus enabling and stimulating multidisciplinary collaboration. As a serious game design tool, ATTAC-L creates a link between the processes of pedagogical design and narrative modeling through its elaborate annotation system. As such, this modeling language enables designers to concentrate on aspects related to their field of expertise without losing oversight of the serious game as a whole. To support these tentative claims, the author present illustrations of how ATTAC-L is used in combination with a specific pedagogical design strategy (i.e. the Intervention Mapping Protocol) for the development of a serious game against cyber-bullying.},
  doi           = {10.1109/VS-GAMES.2015.7295780},
  groups        = {Compendex, SCOPUS, Duplicados},
  keywords      = {serious games (computing);specification languages;annotation system;domain specific modeling language ATTAC-L;intervention mapping protocol;multidisciplinary collaboration;pedagogical design strategy;pedagogical intervention methods;serious game design tool;serious game narratives;Adaptation models;Context;Games;Guidelines;Planning;Protocols;Unified modeling language, rank3},
}

@InProceedings{Ozik2013,
  author        = {J. Ozik and N. T. Collier and J. T. Murphy and M. J. North},
  title         = {The ReLogo agent-based modeling language},
  booktitle     = {2013 Winter Simulations Conference (WSC)},
  year          = {2013},
  pages         = {1560-1568},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {ReLogo is a new agent-based modeling (ABM) domain specific language (DSL) for developing agent-based models in the free and open source Repast Suite of ABM tools; the Java based Repast Simphony ABM toolkit and the C++ high performance computing Repast HPC toolkit both incorporate ReLogo. The language is geared towards a wide range of modeling and programming expertise, combining the sophisticated and powerful ABM infrastructure and capabilities in the Repast Suite with the ease of use of the Logo programming language and its associated programming idioms. This paper will present how ReLogo combines a number of concepts, including object-oriented programming, simple integration of existing code libraries, statically and dynamically typed languages, domain specific languages, and the use of integrated development environments, to create an ABM tool that is easy to learn yet is also capable of creating large scale ABMs of real world complex systems.},
  doi           = {10.1109/WSC.2013.6721539},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {0891-7736},
  keywords      = {Java;multi-agent systems;parallel processing;public domain software;ABM tools;C++ high performance computing Repast HPC toolkit;DSL;Java based Repast Simphony ABM toolkit;Logo programming language;ReLogo agent-based modeling domain specific language;open source Repast Suite;Computational modeling;DSL;Java;Libraries;Object oriented modeling;Programming, rank3},
}

@InProceedings{Scholz2015,
  author    = {B. Scholz and K. Vorobyov and P. Krishnan and T. Westmann},
  title     = {A Datalog Source-to-Source Translator for Static Program Analysis: An Experience Report},
  booktitle = {Software Engineering Conference (ASWEC), 2015 24th Australasian},
  year      = {2015},
  pages     = {28-37},
  month     = {Sept},
  abstract  = {Static program analysis has many applications including bug checking for large scale code that requires a points-to analysis. To express static program analysis frameworks concisely, it is advantageous to employ a domain-specific language. In the last two decades, Data log has emerged as a domain-specific language for static program analysis. However, existing Data log systems have problems solving large scale code with millions of program variables. This work reports on techniques that translate a Data log program to SQL queries, which are executed on a relational database system. The advantage of a relational database system as an execution platform is the effective use of memory and disks. Further, we can also use an off-the shelf tool to execute the SQL queries. In order to achieve performance, we explore some of the design choices for a source-to-source translation from Data log to SQL that implement stratified negations, totally ordered domains, and comparisons. For each design point, we explain how Data log can be efficiently translated to SQL using the semi-naive evaluation approach. We report the results of our experiments using large data-sets including the OpenJDK7-b147 dataset for points-to, which guided us in the design of our translation schemes.},
  doi       = {10.1109/ASWEC.2015.15},
  groups    = {IEEE DSL, ACM, excluidos},
  issn      = {1530-0803},
  keywords  = {DATALOG;SQL;program debugging;program diagnostics;relational databases;Naıve evaluation approach;OpenJDK7-b147 dataset;SQL query;bug checking;datalog program;datalog source-to-source translator;datalog system;domain-specific language;large scale code;relational database system;source-to-source translation;static program analysis;Australia;Electronic mail;Engines;Relational databases;Resource management;Semantics;Software engineering;Datalog;SQWL;program analysis;source-to-source translation},
}

@Article{Cassou2012,
  author        = {D. Cassou and J. Bruneau and C. Consel and E. Balland},
  title         = {Toward a Tool-Based Development Methodology for Pervasive Computing Applications},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2012},
  volume        = {38},
  number        = {6},
  pages         = {1445-1463},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Despite much progress, developing a pervasive computing application remains a challenge because of a lack of conceptual frameworks and supporting tools. This challenge involves coping with heterogeneous devices, overcoming the intricacies of distributed systems technologies, working out an architecture for the application, encoding it in a program, writing specific code to test the application, and finally deploying it. This paper presents a design language and a tool suite covering the development life-cycle of a pervasive computing application. The design language allows us to define a taxonomy of area-specific building-blocks, abstracting over their heterogeneity. This language also includes a layer to define the architecture of an application, following an architectural pattern commonly used in the pervasive computing domain. Our underlying methodology assigns roles to the stakeholders, providing separation of concerns. Our tool suite includes a compiler that takes design artifacts written in our language as input and generates a programming framework that supports the subsequent development stages, namely, implementation, testing, and deployment. Our methodology has been applied on a wide spectrum of areas. Based on these experiments, we assess our approach through three criteria: expressiveness, usability, and productivity.},
  doi           = {10.1109/TSE.2011.107},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  issn          = {0098-5589},
  keywords      = {program compilers;software architecture;ubiquitous computing;architectural pattern;area-specific building-blocks;compiler;design artifacts;development life-cycle;distributed systems technologies;pervasive computing applications;tool-based development methodology;Computational modeling;Computer architecture;Domain specific languages;Pervasive computing;Programming;Software architecture;Taxonomy;Methodology;domain-specific language;generative programming;pervasive computing;programming support;simulation;toolkit, rank3},
}

@InProceedings{Rahman2014,
  author        = {A. Rahman and D. Amyot},
  title         = {A DSL for importing models in a requirements management system},
  booktitle     = {Model-Driven Requirements Engineering Workshop (MoDRE), 2014 IEEE 4th International},
  year          = {2014},
  pages         = {37-46},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Requirements are artefacts often described with text and models. It is important to manage traceability between requirements and other software artefacts, including designs and test cases, also often captured with specialized models. Some Requirements Management Systems (RMS) support traceability relationships, between (textual) requirements artefacts in the RMS and model artefacts created outside the RMS, through complex standards or proprietary solutions. This paper proposes a new Domain-Specific Language (DSL) for describing the concepts of a modeling language intended to be traced using an RMS, with tool support handling the import and re-import of models and of their traceability links. The Model Import DSL (MI-DSL) is supported by an Xtext-based editor and the automatic generation of an import library targeting a leading RMS, namely IBM Rational DOORS. The language and the tools are demonstrated for model import and evolution scenarios with two different modeling languages. This work contributes a simple yet reliable mechanism to define and support traceability between requirements and models from different tools.},
  doi           = {10.1109/MoDRE.2014.6890824},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {formal specification;program diagnostics;program testing;software libraries;specification languages;IBM Rational DOORS;MI-DSL;RMS;Xtext-based editor;automatic generation;domain-specific language;import library;model artefacts;model import DSL;modeling language;requirements management system;software artefacts;test cases;textual requirements artefacts;tool support;traceability links;traceability relationships;Analytical models;Biological system modeling;Computational modeling;DSL;Libraries;Software;Unified modeling language;DOORS;DSL;evolution;model;requirements management;traceability, rank3},
}

@InProceedings{7153814,
  author    = {E. Doma and B. Selic and D. Levy},
  title     = {Exploring Situation Theory Using InfonLab},
  booktitle = {2015 IEEE 18th International Symposium on Real-Time Distributed Computing},
  year      = {2015},
  pages     = {260-267},
  month     = {April},
  abstract  = {Complex software systems often suffer from flaws arising either during the design or the development stages. In many cases due to the lack of formal underpinning it is difficult to assuredly define the model from which the system is generated. In our work, we investigated the suitability of mathematical situation theory as a formal foundation for a computer modelling language. This paper describes our empirical evaluation of this thesis in the real-time domain using Infon Lab, a tool based upon situation theory.},
  doi       = {10.1109/ISORC.2015.20},
  groups    = {SCOPUS, excluidos},
  issn      = {1555-0885},
  keywords  = {formal specification;formal verification;Infon Lab;InfonLab;complex software systems;computer modelling language;exploring situation theory;formal foundation;formal methods;formal underpinning;mathematical situation;real-time domain;situation theory;Computational modeling;Computers;Context modeling;Mathematical model;Object oriented modeling;Semantics;Software;domain-specific modeling language;model-based software engineering;situation theory},
}

@InProceedings{6462664,
  author    = {B. Combemale and X. Crégut and M. Pantel},
  title     = {A Design Pattern to Build Executable DSMLs and Associated V \& V Tools},
  booktitle = {2012 19th Asia-Pacific Software Engineering Conference},
  year      = {2012},
  volume    = {1},
  pages     = {282-287},
  month     = {Dec},
  abstract  = {Model executability is now a key concern in model-driven engineering, mainly to support early validation and verification (V&V). Some approaches allow to weave executability into metamodels, defining executable domain-specific modeling languages (DSMLs). Model validation can then be achieved by simulation and graphical animation through direct interpretation of the conforming models. Other approaches address model executability by model compilation, allowing to reuse the virtual machines or V&V tools existing in the target domain. Nevertheless, systematic methods are currently not available to help the language designer in the definition of such an execution semantics and related tools. For instance, simulators are mostly hand-crafted in a tool specific manner for each DSML. In this paper, we propose to reify the elements commonly used to support state-based execution in a DSML. We infer a design pattern (called Executable DSML pattern) providing a general reusable solution for the expression of the executability concerns in DSMLs. It favors flexibility and improves reusability in the definition of semantics-based tools for DSMLs. We illustrate how this pattern can be applied to ease the development of V&V tools.},
  doi       = {10.1109/APSEC.2012.79},
  groups    = {Compendex, SCOPUS, Inclusos},
  issn      = {1530-1362},
  keywords  = {simulation languages;software reusability;virtual machines;V&V tools;design pattern;domain-specific modeling languages;early validation and verification;executable DSML;metamodels;model compilation;model executability;model-driven engineering;state-based execution;virtual machine reuse;Abstracts;Animation;Computational modeling;Concrete;Runtime;Semantics;Unified modeling language;Model Driven Engineering;Software Language Engineering;Validation &amp; Verification},
}

@InProceedings{Artho2015,
  author        = {C. Artho and M. Seidl and Q. Gros and E. H. Choi and T. Kitamura and A. Mori and R. Ramler and Y. Yamagata},
  title         = {Model-Based Testing of Stateful APIs with Modbat},
  booktitle     = {Automated Software Engineering (ASE), 2015 30th IEEE/ACM International Conference on},
  year          = {2015},
  pages         = {858-863},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Modbat makes testing easier by providing a user-friendly modeling language to describe the behavior of systems, from such a model, test cases are generated and executed. Modbat's domain-specific language is based on Scala, its features include probabilistic and non-deterministic transitions, component models with inheritance, and exceptions. We demonstrate the versatility of Modbat by finding a confirmed defect in the currently latest version of Java, and by testing SAT solvers.},
  doi           = {10.1109/ASE.2015.95},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {Java;application program interfaces;computability;program testing;simulation languages;Java;Modbat;SAT solvers;Scala;domain-specific language;model-based testing;nondeterministic transitions;probabilistic transitions;stateful API;user-friendly modeling language;Arrays;DSL;Data models;Java;Libraries;Testing;component-based systems;domain-specific language;exception testing;extended finite-state machines;model-based testing;software test tools, rank3},
}

@InProceedings{Lachgar2015,
  author        = {M. Lachgar and A. Abdali},
  title         = {DSL and code generator for accelerating iOs apps development},
  booktitle     = {2015 Third World Conference on Complex Systems (WCCS)},
  year          = {2015},
  pages         = {1-8},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {A mobile application has become an important new way to reach customers. The use of smartphones and tablets has also increased, but it's always difficult to create a new application. This requires specific knowledge and experience to successfully operate all features. The heterogeneity development tools and languages in mobile apps makes difficult to develop multi-platform mobile applications. Thus, it requires developers to make a choice on the platform, while ensuring the widest possible dissemination. The strategy "write once, deploy anywhere" is a smart way to develop mobile applications. In fact, it equips developers with what they need to keep ahead of the game. The aim of this work is to define an independent language of the platform then generate native code for iOS applications using an MDA approach. For this, we opt for a specific language (DSL) to increase the productivity of software engineers by abstracting low-level boilerplate code.},
  doi           = {10.1109/ICoCS.2015.7483269},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {mobile computing;program compilers;smart phones;DSL;MDA approach;code generator;iOs apps development;low-level boilerplate code;multiplatform mobile applications;smartphones;software engineers;Computational modeling;DSL;Data models;Mobile communication;Operating systems;Smart phones;Unified modeling language;Automatic code generation;Domain-Specific Language;Mobile development;Model Driven Architecture;Native Code;iOS Apps, rank3},
}

@InProceedings{6899124,
  author    = {G. Karsai and D. Balasubramanian and A. Dubey and W. R. Otte},
  title     = {Distributed and Managed: Research Challenges and Opportunities of the Next Generation Cyber-Physical Systems},
  booktitle = {2014 IEEE 17th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing},
  year      = {2014},
  pages     = {1-8},
  month     = {June},
  abstract  = {Cyber-physical systems increasingly rely on distributed computing platforms where sensing, computing, actuation, and communication resources are shared by a multitude of applications. Such 'cyber-physical cloud computing platforms' present novel challenges because the system is built from mobile embedded devices, is inherently distributed, and typically suffers from highly fluctuating connectivity among the modules. Architecting software for these systems raises many challenges not present in traditional cloud computing. Effective management of constrained resources and application isolation without adversely affecting performance are necessary. Autonomous fault management and real-time performance requirements must be met in a verifiable manner. It is also both critical and challenging to support multiple end-users whose diverse software applications have changing demands for computational and communication resources, while operating on different levels and in separate domains of security. The solution presented in this paper is based on a layered architecture consisting of a novel operating system, a middleware layer, and component-structured applications. The component model facilitates the construction of software applications from modular and reusable components that are deployed in the distributed system and interact only through well-defined mechanisms. The complexity of creating applications and performing system integration is mitigated through the use of a domain-specific model-driven development process that relies on a domain-specific modeling language and its accompanying graphical modeling tools, software generators for synthesizing infrastructure code, and the extensive use of model-based analysis for verification and validation.},
  doi       = {10.1109/ISORC.2014.36},
  groups    = {SCOPUS, excluidos},
  issn      = {1555-0885},
  keywords  = {cloud computing;embedded systems;fault diagnosis;formal verification;mobile computing;program verification;resource allocation;security of data;software architecture;specification languages;application isolation;autonomous fault management;communication resources;component-structured applications;computational resources;constrained resource management;cyber-physical cloud computing platform;distributed computing platforms;domain-specific model-driven development process;domain-specific modeling language;graphical modeling tools;infrastructure code synthesis;middleware layer;mobile embedded devices;model-based analysis;modular components;next generation cyber-physical systems;operating system;real-time performance requirements;reusable components;security;software architecture;software generators;validation;verification;Computational modeling;Computer architecture;Kernel;Real-time systems;Security;Unified modeling language;cyber-physical systems;distributed systems},
}

@InProceedings{Cardoso2012a,
  author        = {J. M. P. Cardoso},
  title         = {Programming strategies for runtime adaptability},
  booktitle     = {Reconfigurable Communication-centric Systems-on-Chip (ReCoSoC), 2012 7th International Workshop on},
  year          = {2012},
  pages         = {1-8},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Future advanced embedded computing systems are expected to dynamically adapt applications' behavior and runtime system according to, e.g., usage contexts, operating environments, resources' availability, and battery energy levels. Besides application's functionalities provided by high-level and/or executable binary codes, code for specifying strategies/policies to extend typical functionalities with adaptability behavior is required. A domain-specific language, able to program this adaptability behavior, will allow developers to specify strategies for adaptation, will improve portability, and will help tools to map those strategies to the target system. This paper presents our recent ideas for programming strategies focused on runtime adaptability. The ideas are exposed using extensions to LARA, an aspect-oriented programming language, agnostic to the target language and system. We show examples of using LARA to specify strategies and we comment on the possible implementations to make viable those strategies.},
  doi           = {10.1109/ReCoSoC.2012.6322875},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  keywords      = {aspect-oriented programming;binary codes;embedded systems;object-oriented languages;program compilers;program diagnostics;software portability;software process improvement;LARA;adaptability behavior;application functionalities;aspect-oriented programming language;domain-specific language;dynamic application behavior adaptation;embedded computing systems;executable binary codes;high-level binary codes;portability improvement;programming strategies;runtime adaptability;runtime system;strategy specification code;Batteries;Context;Energy states;Java;Reactive power;Runtime;Weaving;FPGAs;LARA;aspect-oriented programming;compilers;embedded computing;runtime adaptability, rank3},
}

@InProceedings{6462730,
  author    = {H. Cho and J. Gray and E. Syriani},
  title     = {Syntax Map: A Modeling Language for Capturing Requirements of Graphical DSML},
  booktitle = {2012 19th Asia-Pacific Software Engineering Conference},
  year      = {2012},
  volume    = {1},
  pages     = {705-708},
  month     = {Dec},
  abstract  = {Domain-specific modeling languages (DSMLs) are designed to model particular domains of interest using graphical, textual, or mixed syntax. Although most metamodeling tools offer an environment that automates several language development tasks, there is still a lack of support for aiding the domain expert to capture the requirements of a graphical DSML. We introduce the Syntax Map as an approach to address the challenges of graphical DSML requirements specification. It is designed to aid domain experts in describing a first-class graphical DSML requirement using a set of graphical notations. In addition, the Syntax Map can be used to generate a metamodel by means of model transformations. This short paper motivates the need for the Syntax Map, provides several brief examples, and discusses lessons learned in our investigation of this approach.},
  doi       = {10.1109/APSEC.2012.20},
  groups    = {SCOPUS, Inclusos},
  issn      = {1530-1362},
  keywords  = {software tools;specification languages;domain-specific modeling languages;graphical DSML requirement specification;graphical syntax;language development task;metamodeling tool;mixed syntax;requirement capturing;syntax map;textual syntax;Abstracts;Computational modeling;Concrete;Doped fiber amplifiers;Semantics;Syntactics;Unified modeling language;Abstract Syntax;Concrete Syntax;Domain-Specific Modeling Languages;General-Purpose Modeling Languages;Requirements Specification;Semantics},
}

@InProceedings{Li2015,
  author        = {P. Li and E. Brunet and F. Trahay and C. Parrot and G. Thomas and R. Namyst},
  title         = {Automatic OpenCL Code Generation for Multi-device Heterogeneous Architectures},
  booktitle     = {Parallel Processing (ICPP), 2015 44th International Conference on},
  year          = {2015},
  pages         = {959-968},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Using multiple accelerators, such as GPUs or Xeon Phis, is attractive to improve the performance of large data parallel applications and to increase the size of their workloads. However, writing an application for multiple accelerators remains today challenging because going from a single accelerator to multiple ones indeed requires to deal with potentially non-uniform domain decomposition, inter-accelerator data movements, and dynamic load balancing. Writing such code manually is time consuming and error-prone. In this paper, we propose a new programming tool called STEPOCL along with a new domain specific language designed to simplify the development of an application for multiple accelerators. We evaluate both the performance and the usefulness of STEPOCL with three applications and show that: (i) the performance of an application written with STEPOCL scales linearly with the number of accelerators, (ii) the performance of an application written using STEPOCL competes with a handwritten version, (iii) larger workloads run on multiple devices that do not fit in the memory of a single device, (iv) thanks to STEPOCL, the number of lines of code required to write an application for multiple accelerators is roughly divided by ten.},
  doi           = {10.1109/ICPP.2015.105},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {0190-3918},
  keywords      = {graphics processing units;parallel processing;program compilers;resource allocation;specification languages;GPU;STEPOCL;Xeon Phis;automatic OpenCL code generation;data parallel applications;domain specific language;dynamic load balancing;interaccelerator data movements;multidevice heterogeneous architectures;programming tool;Arrays;Hardware;Kernel;Performance evaluation;Programming;Synchronization;Writing;Accelerators;Code generation;Heterogeneous architectures;OpenCL, rank3},
}

@InProceedings{6195167,
  author    = {J. H. Hill},
  title     = {Using Parameterized Attributes to Improve Testing Capabilities with Domain-Specific Modeling Languages},
  booktitle = {Engineering of Computer Based Systems (ECBS), 2012 IEEE 19th International Conference and Workshops on},
  year      = {2012},
  pages     = {43-51},
  month     = {April},
  abstract  = {Domain-specific modeling languages (DSMLs) show promise in improving model-based testing and experimentation (T&E) capabilities for software systems. This is because its intuitive graphical languages reduce complexities associated with error-prone, tedious, and time-consuming tasks. Despite the benefits of using DSMLs to facilitate model-based T&E, it is hard for testers to capture many variations of similar tests without manually duplicating modeling effort. This paper therefore presents a method called parameterized attributes that is used to capture points-of-variation in models. It also shows how parameterized attributes is realized in an open-source tool named the Generic Modeling Environment (GME) Template Engine. Finally, this paper quantitatively evaluates applying parameterized attributes to T&E of a representative distributed software system. Experience and results so show that parameterized attributes can reduce modeling effort after an initial model (or design) is constructed.},
  doi       = {10.1109/ECBS.2012.47},
  groups    = {SCOPUS, Compendex, Inclusos},
  keywords  = {domain-specific modeling language;parameterized attributes},
}

@InProceedings{Bos2013,
  author        = {J. v. d. Bos and T. v. d. Storm},
  title         = {TRINITY: An IDE for the Matrix},
  booktitle     = {Software Maintenance (ICSM), 2013 29th IEEE International Conference on},
  year          = {2013},
  pages         = {520-523},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Digital forensics software often has to be changed to cope with new variants and versions of file formats. Developers reverse engineer the actual files, and then change the source code of the analysis tools. This process is error-prone and time consuming because the relation between the newly encountered data and how the source code must be changed is implicit. TRINITY is an integrated debugging environment which makes this relation explicit using the DERRIC DSL for describing file formats. TRINITY consists of three simultaneous views: 1) the runtime state of an analysis, 2) a hex view of the actual data, and 3) the file format description. Cross-view trace ability links allow developers to better understand how the file format description should be modified. TRINITY aims to make the process of adapting digital forensics software more effective and efficient.},
  doi           = {10.1109/ICSM.2013.86},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  issn          = {1063-6773},
  keywords      = {data flow analysis;digital forensics;program debugging;reverse engineering;software maintenance;DERRIC DSL;IDE;TRINITY;actual data hexview;analysis runtime state;cross-view traceability links;digital forensics software;domain-specific language;file format description;integrated debugging environment;reverse engineering;Debugging;Digital forensics;Layout;Maintenance engineering;Reverse engineering;Runtime;Software;domain-specific language;integrated development environment;model-driven engineering;reverse engineering;software maintenance, rank3},
}

@InProceedings{Schmid2015,
  author        = {M. Schmid and O. Reiche and F. Hannig and J. Teich},
  title         = {Loop coarsening in C-based High-Level Synthesis},
  booktitle     = {2015 IEEE 26th International Conference on Application-specific Systems, Architectures and Processors (ASAP)},
  year          = {2015},
  pages         = {166-173},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Current tools for High-Level Synthesis (HLS) excel at exploiting Instruction-Level Parallelism (ILP), the support for Data-Level Parallelism (DLP), one of the key advantages of Field Programmable Gate Arrays (FPGAs), is in contrast very limited. This work examines the exploitation of DLP on FPGAs using code generation for C-based HLS of image filters and streaming pipelines, consisting of point and local operators. In addition to well known loop tiling techniques, we propose loop coarsening, which delivers superior performance and scalability. Loop tiling corresponds to splitting an image into separate regions, which are then processed in parallel by replicated accelerators. For data streaming, this also requires the generation of glue logic for the distribution of image data. Conversely, loop coarsening allows to process multiple pixels in parallel, whereby only the kernel operator is replicated within a single accelerator. We augment the FPGA back end of the heterogeneous Domain-Specific Language (DSL) framework HIPAcc by loop coarsening and compare the resulting FPGA accelerators to highly optimized software implementations for Graphics Processing Units (GPUs), all generated from the exact same code base. Moreover, we demonstrate the advantages of code generation for algorithm development by outlining how design space exploration enabled by HIPAcc can yield a more efficient implementation than hand-coded VHDL.},
  doi           = {10.1109/ASAP.2015.7245730},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  issn          = {1063-6862},
  keywords      = {C language;field programmable gate arrays;graphics processing units;hardware description languages;high level synthesis;image filtering;image segmentation;pipeline processing;program compilers;program control structures;C-based HLS;C-based high-level synthesis;DLP;FPGA accelerator;FPGA back end;GPU;HIPAcc;ILP;VHDL;algorithm development;code generation;data streaming;data-level parallelism;design space exploration;field programmable gate arrays;glue logic generation;graphics processing units;heterogeneous DSL framework;heterogeneous domain-specific language framework;image data distribution;image filter;image splitting;instruction-level parallelism;kernel operator;local operator;loop coarsening;loop tiling technique;parallel multiple pixel processing;point operator;replicated accelerators;streaming pipeline;Algorithm design and analysis;Field programmable gate arrays;Image processing;Kernel;Parallel processing;Pipelines;Streaming media, rank3},
}

@InProceedings{6645275,
  author    = {R. Deshayes},
  title     = {A domain-specific modeling approach for gestural interaction},
  booktitle = {2013 IEEE Symposium on Visual Languages and Human Centric Computing},
  year      = {2013},
  pages     = {181-182},
  month     = {Sept},
  abstract  = {Natural interaction is gaining widespread use, but more tools and techniques are required to fully support the takeup of gestural interaction. This research focus on providing an expressive an extensible framework and an executable domain-specific modeling language for specifying gestural interaction with real or virtual objects. The main targeted domains are virtual reality for gaming applications and home automation.},
  doi       = {10.1109/VLHCC.2013.6645275},
  groups    = {IEEE DSML, excluidos},
  issn      = {1943-6092},
  keywords  = {computer games;gesture recognition;home automation;specification languages;virtual reality;executable domain-specific modeling language;gaming applications;gestural interaction;home automation;natural interaction;virtual reality;Adaptation models;Computational modeling;Computers;Context;Solid modeling;Three-dimensional displays;Visualization},
}

@Article{Choi2014,
  author        = {H. Choi and W. Choi and T. M. Quan and D. G. C. Hildebrand and H. Pfister and W. K. Jeong},
  title         = {Vivaldi: A Domain-Specific Language for Volume Processing and Visualization on Distributed Heterogeneous Systems},
  journal       = {IEEE Transactions on Visualization and Computer Graphics},
  year          = {2014},
  volume        = {20},
  number        = {12},
  pages         = {2407-2416},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {As the size of image data from microscopes and telescopes increases, the need for high-throughput processing and visualization of large volumetric data has become more pressing. At the same time, many-core processors and GPU accelerators are commonplace, making high-performance distributed heterogeneous computing systems affordable. However, effectively utilizing GPU clusters is difficult for novice programmers, and even experienced programmers often fail to fully leverage the computing power of new parallel architectures due to their steep learning curve and programming complexity. In this paper, we propose Vivaldi, a new domain-specific language for volume processing and visualization on distributed heterogeneous computing systems. Vivaldi's Python-like grammar and parallel processing abstractions provide flexible programming tools for non-experts to easily write high-performance parallel computing code. Vivaldi provides commonly used functions and numerical operators for customized visualization and high-throughput image processing applications. We demonstrate the performance and usability of Vivaldi on several examples ranging from volume rendering to image segmentation.},
  doi           = {10.1109/TVCG.2014.2346322},
  groups        = {IEEE DSL, Duplicados},
  issn          = {1077-2626},
  keywords      = {data visualisation;image processing;microscopes;parallel processing;rendering (computer graphics);telescopes;visual languages;GPU accelerators;GPU clusters;Vivaldi Python-like grammar;customized visualization;distributed heterogeneous systems;domain-specific language;flexible programming tools;high-performance distributed heterogeneous computing systems;high-performance parallel computing code;high-throughput image processing applications;high-throughput processing;image data;image segmentation;many-core processors;microscopes;numerical operators;parallel architectures;parallel processing abstractions;programming complexity;steep learning curve;telescopes;volume processing;volume rendering;volumetric data visualization;Computational modeling;Data models;Data visualization;Graphics processing units;Image classification;Parallel processing;Rendering (computer graphics);Domain-specific language;GPU computing;distributed heterogeneous systems;volume rendering;0, rank3},
}

@InProceedings{Monahov2013,
  author    = {I. Monahov and T. Reschenhofer and F. Matthes},
  title     = {Design and Prototypical Implementation of a Language Empowering Business Users to Define Key Performance Indicators for Enterprise Architecture Management},
  booktitle = {2013 17th IEEE International Enterprise Distributed Object Computing Conference Workshops},
  year      = {2013},
  pages     = {337-346},
  month     = {Sept},
  abstract  = {To measure the achievement of predefined Enterprise Architecture Management (EAM) goals, it is essential to empower business users to define organization-specific Key Performance Indicators (KPIs). However, to support tool-based calculation of such KPIs, a formal model-based query language is required for their definition and calculation. In this paper we first examine existing general-purpose query languages regarding their suitability for the definition of business-user-specific KPIs in a collaborative environment. Thereafter, we justify the demand for a domain-specific query language ensuring a balance between the strengths of existing query languages and the size and purpose of the EAM domain. Based on this, we outline important design details and a prototypical implementation of such a language in a EAM tool. Finally, our language design is being evaluated by the implementation of suggested EAM KPIs from literature on the one hand, and by the development of a prototype for the use in an EU project on the other hand.},
  doi       = {10.1109/EDOCW.2013.44},
  groups    = {IEEE DSL, SCOPUS, excluidos},
  issn      = {2325-6583},
  keywords  = {business data processing;groupware;query languages;EAM;EU project;business users;business-user-specific KPI;collaborative environment;domain-specific query language;enterprise architecture management;formal model-based query language;general-purpose query languages;language design;organization-specific key performance indicators;tool-based calculation;Business;Collaboration;Computer architecture;DSL;Database languages;Standards;Unified modeling language;Enterprise architecture management;domain specific language;key performance indicators},
}

@InProceedings{Spafford2012a,
  author        = {K. L. Spafford and J. S. Vetter},
  title         = {Aspen: A domain specific language for performance modeling},
  booktitle     = {High Performance Computing, Networking, Storage and Analysis (SC), 2012 International Conference for},
  year          = {2012},
  pages         = {1-11},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {We present a new approach to analytical performance modeling using Aspen, a domain specific langauge. Aspen (Abstract Scalable Performance Engineering Notation) fills an important gap in existing performance modeling techniques and is designed to enable rapid exploration of new algorithms and architectures. It includes a formal specification of an application's performance behavior and an abstract machine model. We provide an overview of Aspen's features and demonstrate how it can be used to express a performance model for a three dimensional Fast Fourier Transform. We then demonstrate the composability and modularity of Aspen by importing and reusing the FFT model in a molecular dynamics model. We have also created a number of tools that allow scientists to balance application and system factors quickly and accurately.},
  doi           = {10.1109/SC.2012.20},
  groups        = {IEEE DSL, SCOPUS, Duplicados},
  issn          = {2167-4329},
  keywords      = {fast Fourier transforms;formal specification;molecular dynamics method;physics computing;specification languages;Aspen language;FFT model;abstract machine model;abstract scalable performance engineering notation;analytical performance modeling;application performance behavior;domain specific language;fast Fourier transform;formal specification;molecular dynamics model;Analytical models;Computational modeling;Computer architecture;Hardware;Kernel;Mathematical model;Predictive models, rank3},
}

@InProceedings{Biely2013a,
  author        = {M. Biely and P. Delgado and Z. Milosevic and A. Schiper},
  title         = {Distal: A framework for implementing fault-tolerant distributed algorithms},
  booktitle     = {2013 43rd Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN)},
  year          = {2013},
  pages         = {1-8},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {We introduce Distal, a new framework that simplifies turning pseudocode of fault tolerant distributed algorithms into efficient executable code. Without proper tool support, even small amounts of pseudocode normally ends up in several thousands of non-trivial lines of Java or C++. Distal is implemented as a library in Scala and consists of two main parts: a domain specific language (DSL) in which algorithms are expressed and an efficient messaging layer that deals with low level issues such as connection management, threading and (de)serialization. The DSL is designed such that implementations of distributed algorithms highly resemble the pseudocode found in research papers. By writing code that is close to the protocol description, one can be more convinced that the implemented system really reflects the protocol specification on paper. Distal does not only make it simple and intuitive to implement distributed algorithms but it also leads to efficient implementations.},
  doi           = {10.1109/DSN.2013.6575306},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1530-0889},
  keywords      = {C++ language;Java;distributed algorithms;protocols;software fault tolerance;software libraries;C++;DSL;Distal;Java;Scala;domain specific language;executable code;fault tolerant distributed algorithms;protocol description;protocol specification;pseudocode turning;Algorithm design and analysis;DSL;Distributed algorithms;Fault tolerance;Fault tolerant systems;Java;Protocols;DSL;Paxos;SMR;fault-tolerant distributed algorithms, rank3},
}

@InProceedings{Song2012,
  author        = {M. Song and E. Tilevich},
  title         = {Metadata invariants: Checking and inferring metadata coding conventions},
  booktitle     = {2012 34th International Conference on Software Engineering (ICSE)},
  year          = {2012},
  pages         = {694-704},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {As the prevailing programming model of enterprise applications is becoming more declarative, programmers are spending an increasing amount of their time and efforts writing and maintaining metadata, such as XML or annotations. Although metadata is a cornerstone of modern software, automatic bug finding tools cannot ensure that metadata maintains its correctness during refactoring and enhancement. To address this shortcoming, this paper presents metadata invariants, a new abstraction that codifies various naming and typing relationships between metadata and the main source code of a program. We reify this abstraction as a domain-specific language. We also introduce algorithms to infer likely metadata invariants and to apply them to check metadata correctness in the presence of program evolution. We demonstrate how metadata invariant checking can help ensure that metadata remains consistent and correct during program evolution; it finds metadata-related inconsistencies and recommends how they should be corrected. Similar to static bug finding tools, a metadata invariant checker identifies metadata-related bugs as a program is being refactored and enhanced. Because metadata is omnipresent in modern software applications, our approach can help ensure the overall consistency and correctness of software as it evolves.},
  doi           = {10.1109/ICSE.2012.6227148},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  issn          = {0270-5257},
  keywords      = {meta data;program debugging;software maintenance;specification languages;domain-specific language;enterprise application programming model;metadata coding convention checking;metadata coding convention inferring;metadata invariant checking;naming relationships;program evolution;program source code;static bug finding tools;typing relationships;Computer bugs;Inference algorithms;Java;Programming;Runtime;Syntactics;XML;bug finding;domain-specific languages;enhancement;frameworks;invariants;metadata;refactoring;software maintenance, rank3},
}

@Article{Schivo2014,
  author   = {S. Schivo and J. Scholma and B. Wanders and R. A. U. Camacho and P. E. van der Vet and M. Karperien and R. Langerak and J. van de Pol and J. N. Post},
  title    = {Modeling Biological Pathway Dynamics With Timed Automata},
  journal  = {IEEE Journal of Biomedical and Health Informatics},
  year     = {2014},
  volume   = {18},
  number   = {3},
  pages    = {832-839},
  month    = {May},
  abstract = {Living cells are constantly subjected to a plethora of environmental stimuli that require integration into an appropriate cellular response. This integration takes place through signal transduction events that form tightly interconnected networks. The understanding of these networks requires capturing their dynamics through computational support and models. ANIMO (analysis of Networks with Interactive Modeling) is a tool that enables the construction and exploration of executable models of biological networks, helping to derive hypotheses and to plan wet-lab experiments. The tool is based on the formalism of Timed Automata, which can be analyzed via the UPPAAL model checker. Thanks to Timed Automata, we can provide a formal semantics for the domain-specific language used to represent signaling networks. This enforces precision and uniformity in the definition of signaling pathways, contributing to the integration of isolated signaling events into complex network models. We propose an approach to discretization of reaction kinetics that allows us to efficiently use UPPAAL as the computational engine to explore the dynamic behavior of the network of interest. A user-friendly interface hides the use of Timed Automata from the user, while keeping the expressive power intact. Abstraction to single-parameter kinetics speeds up construction of models that remain faithful enough to provide meaningful insight. The resulting dynamic behavior of the network components is displayed graphically, allowing for an intuitive and interactive modeling experience.},
  doi      = {10.1109/JBHI.2013.2292880},
  groups   = {ACM, Compendex, IEEE DSL, SCOPUS, excluidos},
  issn     = {2168-2194},
  keywords = {cellular biophysics;neurophysiology;ANIMO method;UPPAAL model checker;analysis of Networks with Interactive Modeling;biological pathway dynamics;cellular response;environmental stimuli;living cells;reaction kinetics;signal transduction events;tightly interconnected networks;timed automata;Automata;Biological system modeling;Computational modeling;Data models;Kinetic theory;Mathematical model;Dynamic behavior;Timed Automata;modeling;signaling pathway;0},
}

@InProceedings{Basso2014,
  author        = {F. P. Basso and C. M. L. Werner and T. C. Oliveira},
  title         = {Towards facilities to introduce solutions for MDE in development environments with reusable assets},
  booktitle     = {Information Reuse and Integration (IRI), 2014 IEEE 15th International Conference on},
  year          = {2014},
  pages         = {195-202},
  month         = {Aug},
  __markedentry = {[Neto:5]},
  abstract      = {Model Driven Engineering (MDE) is a software development paradigm that promotes improvements in productivity through reuse of software model specifications. Although much effort has been dedicated for more than ten years, MDE has not achieved expressive use. In this paper we address the problem of a lack of a knowledge base about MDE-based solutions, a reason that hampers MDE in practice. To surpass it we propose a domain specific language named RAS++ that represents these solutions as reusable assets. Assets are composed by reuse structures and semantics for the execution of technical solutions for Automated Software Engineering, fostering the integration of tasks for MDE in development environments. Facilities are introduced through some supporting tools: one to design reusable assets and other to integrate them in target development environments. Practical experiences have proven to be promising, suggesting that reusable assets promote some benefits not allowed by other approaches, such as the possibility of a distributed base of knowledge for ASE solutions.},
  doi           = {10.1109/IRI.2014.7051890},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {software reusability;specification languages;MDE-based solutions;RAS++;automated software engineering;domain specific language;knowledge base;model driven engineering;reusable asset design;reuse semantics;reuse structures;software development paradigm;software model specifications;Adaptation models;Automation;Context;Object oriented modeling;Proposals;Software;Unified modeling language;Asset Management Specification;Automated Software Engineering;Model Driven Engineering;Reusable Asset Specification;Reuse of Tasks, rank3},
}

@InProceedings{Ratiu2012,
  author        = {D. Ratiu and B. Schaetz and M. Voelter and B. Kolb},
  title         = {Language engineering as an enabler for incrementally defined formal analyses},
  booktitle     = {Software Engineering: Rigorous and Agile Approaches (FormSERA), 2012 Formal Methods in},
  year          = {2012},
  pages         = {9-15},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {There is a big semantic gap between today's general purpose programming languages on the one hand and the input languages of formal verification tools on the other hand. This makes integrating formal analyses into the daily development practice artificially complex. In this paper we advocate that the use of language engineering techniques can substantially improve this situation along three dimensions. First, more abstract and thus more analyzable domain specific languages can be defined, avoiding the need for abstraction recovery from programs written in general purpose languages. Second, restrictions on the use of existing languages can be imposed and thereby more analyzable code can be obtained and analyses can be incrementally defined. Third, by expressing verification conditions and the verification results at the domain level, they are easier to define and the results of analyses are easier to interpret by end users. We exemplify our approach with three domain specific language fragments integrated into the C programming language, together with a set of analyses: completeness and consistency of decision tables, model-checking-based analyses for a dialect of state machines and consistency of feature models. The examples are based on the mbeddr stack, an extensible C language and IDE for embedded software development.},
  doi           = {10.1109/FormSERA.2012.6229790},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {C language;decision tables;finite state machines;formal verification;C programming language;abstraction recovery;daily development practice;decision tables completeness;decision tables consistency;domain level;domain specific languages;embedded software development;feature models consistency;formal analysis integration;formal verification tools;incrementally defined formal analysis;language engineering techniques;mbeddr stack;model checking-based analysis;programming languages;semantic gap;state machines;verification conditions;Abstracts;Analytical models;Computer languages;Concrete;DSL;Semantics;Syntactics, rank3},
}

@InProceedings{Pramudianto2014,
  author        = {F. Pramudianto and C. A. Kamienski and E. Souto and F. Borelli and L. L. Gomes and D. Sadok and M. Jarke},
  title         = {IoT Link: An Internet of Things Prototyping Toolkit},
  booktitle     = {Ubiquitous Intelligence and Computing, 2014 IEEE 11th Intl Conf on and IEEE 11th Intl Conf on and Autonomic and Trusted Computing, and IEEE 14th Intl Conf on Scalable Computing and Communications and Its Associated Workshops (UTC-ATC-ScalCom)},
  year          = {2014},
  pages         = {1-9},
  month         = {Dec},
  __markedentry = {[Neto:5]},
  abstract      = {The Internet of Things (IoT) application development is a complex task that requires a wide range of expertise. Currently, the IoT community lacks a development toolkit that enables inexperienced developers to develop IoT prototypes rapidly. Filling this gap, we propose a development toolkit based on a model-driven approach, called IoT Link. IoT Link allows inexperienced developers to compose mash up applications through a graphical domain-specific language that can be easily configured and wired together to create an IoT application. Through visual components, IoT Link encapsulates the complexity of communicating with devices and services on the internet and abstracts them as virtual objects that are accessible through different communication technologies. Consequently, it solves interoperability between heterogeneous IoT components. Based on the visual model, IoT Link is able to generate a complete Java project including an extendable Java code. In a controlled experiment, IoT Link was 42% faster than using a Java library and able to outperform the Java library's user satisfactions.},
  doi           = {10.1109/UIC-ATC-ScalCom.2014.95},
  groups        = {SCOPUS, IEEE DSL, Duplicados},
  keywords      = {Internet of Things;Java;open systems;software prototyping;software tools;Internet of Things;IoT Link;IoT application development;IoT prototyping toolkit;Java code;interoperability;Conferences;Internet of things;Java;Mashups;Object oriented modeling;Unified modeling language;Visualization;Internet of Things;code generation;development tool;mashup;model driven development, rank3},
}

@InProceedings{Dayibas2012,
  author        = {O. Dayibas and H. Oguztüzün},
  title         = {Kutulu: A Domain-Specific Language for Feature-Driven Product Derivation},
  booktitle     = {2012 IEEE 36th Annual Computer Software and Applications Conference},
  year          = {2012},
  pages         = {105-110},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Software Product Line Engineering (SPLE) defines processes to facilitate the development of a family of products in a pre-defined market more effectively. Its success depends on implementation of these processes utilizing best practices with proper tool support. This paper describes how to enhance domain design and variation management processes of SPLE with a domain-specific language (DSL), namely "Kutulu". It also introduces novel modeling tools and dependency injection-based realization approach that are well-suited for product derivation in SPL. Our DSL definition, developed tools and their position in the product line context are put forth in this paper.},
  doi           = {10.1109/COMPSAC.2012.20},
  groups        = {ACM, IEEE DSL, Compendex, SCOPUS, Duplicados},
  issn          = {0730-3157},
  keywords      = {configuration management;formal specification;object-oriented languages;object-oriented programming;product development;Kutulu;SPLE;dependency injection-based realization approach;domain design;domain-specific language;feature-component binding;feature-driven product derivation;modeling tool;product development;software product line engineering;tool support;variation management process;Abstracts;Computer aided software engineering;DSL;Generators;Object oriented modeling;Software;Transforms;Dependency Injection;Domain-specific Language;Feature-Component Binding;Software Product Line;Variability Management, rank3},
}

@InProceedings{Lipaczewski2012,
  author        = {M. Lipaczewski and S. Struck and F. Ortmeier},
  title         = {Using Tool-Supported Model Based Safety Analysis -- Progress and Experiences in SAML Development},
  booktitle     = {High-Assurance Systems Engineering (HASE), 2012 IEEE 14th International Symposium on},
  year          = {2012},
  pages         = {159-166},
  month         = {Oct},
  __markedentry = {[Neto:5]},
  abstract      = {Software controls in technical systems are becoming more and more important and complex. Model based safety analysis can give provably correct and complete results, often in a fully automatic way. These methods can answer both logical and probabilistic questions. In common practice, the needed models must be specified in different input languages of different tools depending on the chosen verification tool for the desired aspect. This is time consuming and error-prone. To cope with this problem we developed the safety analysis modeling language (SAML). In this paper, we present a new tool to intuitively create probabilistic, non-deterministic and deterministic specifications for formal analysis. The goal is to give tool-support during modeling and thus make building a formal model less error-prone. The model is then automatically transformed into the input language of state of the art verification engines. We illustrate the approach on a case-study from nuclear power plant domain.},
  doi           = {10.1109/HASE.2012.34},
  groups        = {IEEE DSL, Duplicados},
  issn          = {1530-2059},
  keywords      = {formal languages;formal specification;formal verification;probability;safety-critical software;SAML development;art verification engines;deterministic specifications;formal analysis;formal model;nondeterministic specifications;nuclear power plant domain;probabilistic specifications;safety analysis modeling language;software controls;tool-supported model based safety analysis;verification tool;Analytical models;Generators;Hazards;Probabilistic logic;Switches;S3E;SAML;dependability;domain specific language;eclipse based editor;formal analysis;safety assurance, rank3},
}

@InProceedings{Akinyele2014,
  author        = {J. A. Akinyele and G. Barthe and B. Grégoire and B. Schmidt and P. Y. Strub},
  title         = {Certified Synthesis of Efficient Batch Verifiers},
  booktitle     = {2014 IEEE 27th Computer Security Foundations Symposium},
  year          = {2014},
  pages         = {153-165},
  month         = {July},
  __markedentry = {[Neto:5]},
  abstract      = {Many algorithms admit very efficient batch versions that compute simultaneously the output of the algorithms on a set of inputs. Batch algorithms are widely used in cryptography, especially in the setting of pairing-based computations, where they deliver significant speed-ups. AutoBatch is an automated tool that computes highly optimized batch verification algorithms for pairing-based signature schemes. Thanks to finely tuned heuristics, AutoBatch is able to rediscover efficient batch verifiers for several signature schemes of interest, and in some cases to output batch verifiers that outperform the best known verifiers from the literature. However, AutoBatch only provides weak guarantees (in the form of a LaTeX proof) of the correctness of the batch algorithms it outputs. In this paper, we verify the correctness and security of these algorithms using the EasyCrypt framework. To achieve this goal, we define a domain-specific language to describe verification algorithms based on pairings and provide an efficient algorithm for checking (approximate) observational equivalence between expressions of this language. By translating the output of AutoBatch to this language and applying our verification procedure, we obtain machine-checked correctness proofs of the batch verifiers. Moreover, we formalize notions of security for batch verifiers and we provide a generic proof in EasyCrypt that batch verifiers satisfy a security property called screening, provided they are correct and the original signature is unforgeable against chosen-message attacks. We apply our techniques to several well-known pairing-based signature schemes from the literature, and to Groth-Sahai zero-knowledge proofs.},
  doi           = {10.1109/CSF.2014.19},
  groups        = {ACM, Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1063-6900},
  keywords      = {cryptography;digital signatures;formal verification;specification languages;theorem proving;AutoBatch;EasyCrypt framework;Groth-Sahai zero-knowledge proofs;LaTeX correctness proof;automated tool;batch versions;certified synthesis;correctness verification;cryptography;domain-specific language;generic proof;machine-checked correctness proofs;message attacks;observational equivalence checking;optimized batch verification algorithms;pairing-based computations;pairing-based signature schemes;screening;security property;Approximation algorithms;Equations;Optimization;Probabilistic logic;Public key;certified proofs;cryptographic design;cryptography;signature schemes, rank3},
}

@InProceedings{Ribeiro2012,
  author        = {A. Ribeiro and A. R. da Silva},
  title         = {Survey on Cross-Platforms and Languages for Mobile Apps},
  booktitle     = {Quality of Information and Communications Technology (QUATIC), 2012 Eighth International Conference on the},
  year          = {2012},
  pages         = {255-260},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {Nowadays mobile applications are becoming increasingly more present in our daily life, allowing people to perform several tasks through the use of smartphones, tablets or equivalent devices. Despite the great benefits in terms of innovation and in the variety of available solutions, the rapid and continuous growth of the mobile market has resulted in some fragmentation of the platforms that support each mobile device. The existence of different mobile operating systems with different programming languages and development tools can be a problem when someone wants to release an application in as many platforms as possible. The typical approach of simply rewriting the application for each one of those platforms is usually impracticable either in terms of budget or development time, requiring a bigger effort to be made. Therefore, a solution that could generate an application for several platforms (multi or cross-platform) without compromising the overall quality of the application would decrease the time to market of the application and increase enormously the number of potential users. Providentially, during the last years some effort has been conducted to tackle this problem, especially with the emergence of tools and frameworks that facilitate the development of crossplatform mobile applications. This paper focuses on these technologies and attempts to provide a global view of the actual state of this area.},
  doi           = {10.1109/QUATIC.2012.56},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {mobile computing;programming languages;smart phones;software tools;cross-platform mobile application development tools;mobile applications;mobile device;mobile market;mobile operating systems;programming languages;smartphones;tablets;Application;Cross-platform;Domain Specific Language;Mobile;Model-driven development, rank3},
}

@InProceedings{6800185,
  author    = {M. Viana and R. Penteado and A. D. Prado and R. Durelli},
  title     = {F3T: From Features to Frameworks Tool},
  booktitle = {Software Engineering (SBES), 2013 27th Brazilian Symposium on},
  year      = {2013},
  pages     = {89-98},
  month     = {Oct},
  abstract  = {Frameworks are used to enhance the quality of applications and the productivity of development process, since applications can be designed and implemented by reusing framework classes. However, frameworks are hard to develop, learn and reuse, due to their adaptive nature. In this paper we present the From Features to Framework Tool (F3T), which supports framework development in two steps: Domain Modeling, in which the features of the framework domain are modeled, and Framework Construction, in which the source-code and the Domain-Specific Modeling Language (DSML) of the framework are generated from the features. In addition, the F3T also supports the use of the framework DSML to model applications and generate their source-code. The F3T has been evaluated in a experiment that is also presented in this paper.},
  doi       = {10.1109/SBES.2013.15},
  groups    = {SCOPUS, Compendex, excluidos},
  keywords  = {software reusability;source code (software);specification languages;DSML;F3T;From Features to Framework Tool;development process productivity;domain modeling;domain-specific modeling language;framework construction;framework development;source-code;Abstracts;Context;Frequency modulation;Generators;Java;Software;Unified modeling language},
}

@InProceedings{Albuquerque2014,
  author        = {M. T. C. F. Albuquerque and G. L. Ramalho and V. Corruble and A. L. M. Santos and F. Freitas},
  title         = {Helping Developers to Look Deeper inside Game Sessions},
  booktitle     = {2014 Brazilian Symposium on Computer Games and Digital Entertainment},
  year          = {2014},
  pages         = {31-40},
  month         = {Nov},
  __markedentry = {[Neto:5]},
  abstract      = {Game design and development activities are increasingly relying on the analysis of gamer's behavior and preferences data. Various tools are available to the developers to track and analyze general data concerning acquisition, retention and monetization aspects of game commercialization. This is good enough to give hints on where problems are, but not to enable a precise diagnosis, which demands fine-grained data. For this kind of data, there is not enough support or guidance to decide which data to capture, to write the code to capture it, to choose the best representation of it and to allow an adequate retrieval and presentation of it. This paper introduces GameGuts (GG), a framework devoted to give further assistance to developers in choosing, representing, accessing and presenting game sessions fine-grained data. As a case study, GG recorded sessions of a game platform with over a hundred thousand users. The logs were analyzed using a Visual Domain Specific Language (as a query language) and an ensemble of rules (as a compliance test). The results are encouraging, since we could - among other results - find bugs and catch cheaters, as well as spot design flaws.},
  doi           = {10.1109/SBGAMES.2014.28},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  issn          = {2159-6654},
  keywords      = {computer games;data analysis;query languages;visual languages;GameGuts;bugs;catch cheaters;design flaws;game commercialization;game design;game development activities;game platform;game sessions;gamer behavior analysis;general data analysis;general data tracking;preferences data;query language;rule ensemble;visual domain specific language;DSL;Database languages;Games;Measurement;Ontologies;Servers;Visualization;game analytics;game data mining;knowledge representation, rank3},
}

@InProceedings{Nordmann2015,
  author        = {A. Nordmann and S. Wrede and J. Steil},
  title         = {Modeling of movement control architectures based on motion primitives using domain-specific languages},
  booktitle     = {2015 IEEE International Conference on Robotics and Automation (ICRA)},
  year          = {2015},
  pages         = {5032-5039},
  month         = {May},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces a model-driven approach for engineering complex movement control architectures based on motion primitives, which in recent years have been a central development towards adaptive and flexible control of complex and compliant robots. We consider rich motor skills realized through the composition of motion primitives as our domain. In this domain we analyze the control architectures of representative example systems to identify common abstractions. It turns out that the introduced notion of motion primitives implemented as dynamical systems with machine learning capabilities, provide the computational building block for a large class of such control architectures. Building on the identified concepts, we introduce domain-specific languages that allow the compact specification of movement control architectures based on motion primitives and their coordination respectively. Using a proper tool chain, we show how to employ this model-driven approach in a case study for the real world example of automatic laundry grasping with the KUKA LWR-IV, where executable source-code is automatically generated from the domain-specific language specification.},
  doi           = {10.1109/ICRA.2015.7139899},
  groups        = {SCOPUS, Compendex, IEEE DSL, Duplicados},
  issn          = {1050-4729},
  keywords      = {learning (artificial intelligence);motion control;programming languages;robots;time-varying systems;KUKA LWR-IV;domain-specific language specification;dynamical systems;executable source-code;machine learning;motion primitives;movement control architectures;robot;Adaptation models;Adaptive systems;Computer architecture;DSL;Motion control;Robot kinematics, rank3},
}

@InProceedings{Song2012a,
  author        = {M. Song and E. Tilevich},
  title         = {Detecting metadata bugs on the fly},
  booktitle     = {2012 34th International Conference on Software Engineering (ICSE)},
  year          = {2012},
  pages         = {1455-1456},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Programmers are spending a large and increasing amount of their time writing and modifying metadata, such as Java annotations and XML deployment descriptors. And yet, automatic bug finding tools cannot find metadata-related bugs introduced during program refactoring and enhancement. To address this shortcoming, we have created metadata invariants, a new programming abstraction that expresses naming and typing relationships between metadata and the main source code of a program. A paper that appears in the main technical program of ICSE 2012 describes the idea, concept, and prototype of metadata invariants [4]. The goal of this demo is to supplement that paper with a demonstration of our Eclipse plugin, Metadata Bug Finder (MBF). MBF takes as input a script written in our domain-specific language that describes a set of metadata coding conventions the programmer wishes to enforce. Then after each file save operation, MBF checks the edited codebase for the presence of any violations of the given metadata programming conventions. These violations are immediately reported to the programmer as potential metadata-related bugs. By making the programmer aware of these potential bugs, MBF prevents them from seeping into production, thereby improving the overall correctness of the edited codebase.},
  doi           = {10.1109/ICSE.2012.6227067},
  groups        = {ACM, SCOPUS, IEEE DSL, Duplicados},
  issn          = {0270-5257},
  keywords      = {meta data;program debugging;Eclipse plugin;ICSE 2012;Java annotations;MBF;XML deployment descriptors;domain-specific language;main source code;main technical program;metadata bug finder;metadata bugs detection;metadata coding conventions;metadata invariants;metadata programming conventions;program enhancement;program refactoring;programming abstraction;Computer bugs;Encoding;Java;Programming;Software;Testing;XML;bug finding;domain-specific languages;enhancement;frameworks;invariants;metadata;refactoring;software maintenance, rank3},
}

@InProceedings{Sottet2014,
  author        = {J. S. Sottet and A. Vagner},
  title         = {Defining Domain Specific Transformations in Human-Computer interfaces development},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {246-253},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {Early model-based approaches for Human-Computer Interaction (HCI) clearly depicted models and frameworks for generating User Interfaces (UI) but considered model transformations as black-boxes. In the 2000's, these approaches were criticized due to the poor quality of the produced UI. One of the main reasons of this poor quality can be easily observed in state of the art UI transformations: they are the heart of designers' know-how but are maintained by a minority of specialists. Meanwhile, mainstream UI design methods have shown a growing number of heterogeneous stakeholders that collaborate to produce modern and qualitative UI. We claim that these stakeholders must comprehend and interact with transformations and thus we need to make the transformation language affordable to these stakeholders. Indeed, such a simplification should hide transformations complexity and burden for any stakeholder, finally focusing on a specific part of the design domain: a Domain Specific Language (DSL) for transformations or Domain Specific Transformation Language (DSTL). We provide in this paper a method and a supporting tool for systematizing and finally executing DSTL for model-driven UI development. We depict that framework on a proof of concept implementation for an HCI-specific stakeholder: the usability expert.},
  groups        = {SCOPUS, IEEE DSL, Compendex, Duplicados},
  keywords      = {Abstracts;Analytical models;Complexity theory;Grammar;Human computer interaction;Usability;Domain Specific Transformation Languages;Human-Computer Interaction;Model Transformation;Model-Driven Development, rank3},
}

@InProceedings{Tatibouet2014,
  author        = {J. Tatibouët and A. Cuccuru and S. Gérard and F. Terrier},
  title         = {Towards a systematic, tool-independent methodology for defining the execution semantics of UML profiles with fUML},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {182-192},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {The purpose of UML profile mechanism is to design domain specific languages (DSL) based on UML. It exists a wide range of UML profiles: MARTE, ROOM, SysML. Current profile design methodology only considers the syntactic part of the language and keeps informal the execution semantics description. This impairs Model Driven Engineering (MDE) promises which advocates for executable models. This paper presents a systematic approach to formalize the execution semantics of UML profiles using foundational UML (normative specification) which defines a precise semantics for a subset of UML. This approach is integrated into the reference profile design methodology. It is illustrated on a small profile to support Turing machines. It demonstrates capability to execute resulting profiled models through the defined semantics.},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {Abstracts;Computational modeling;Runtime;Semantics;Syntactics;Turing machines;Unified modeling language;Alf;DSML;Execution;MoC;Profile;Semantics;Turing;fUML, rank3},
}

@InProceedings{Amaral2012,
  author        = {V. Amaral and B. Barroca and P. Carreira},
  title         = {Towards a Robust Solution in Building Automation Systems: Supporting Rapid Prototyping and Analysis},
  booktitle     = {Quality of Information and Communications Technology (QUATIC), 2012 Eighth International Conference on the},
  year          = {2012},
  pages         = {261-264},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {It is presently required agile and systematic solutions aiming at streamlining the development, maintenance and configuration of complex Building Automation Systems (BASs) in an energy aware manner. We aim at defining usable Domain Specific Languages (DSLs) using a Software Language Engineering (SLE), as systematic approach for language development, and develop the right tools for specifying the behavior of BASs components along with their energy-related requirements. The goal is to not only assist the systems engineers while rapid-prototyping/developing affordable, high-quality, energy-efficient(EE) BASs, but also to take advantage of high level abstractions, efficient special-purpose verification algorithms and analysis tools for early validation and verification, in order to promote Quality of the generated software products. We are watching to the rise of Model-Driven Development as the pragmatic approach to build them, since this approach is based on the notion of explicit abstractions/models. This is achieved thanks to model transformations that, besides automatically translating any specification of a given language into other execution specifications, also allow us to derive analysis specifications. The problem with the referred types of transformation purposes is that we cannot guarantee quality and coherence between the derived specifications into execution specifications and combine it with analysis specifications unless we can either make use of testing over the execution, with the problems already known, or have mechanisms to study the transformations. While this problem is motivated by the concrete need of developing BASs, we foresee that it can be of general application in SLE. In this position paper we will give a state of the art in Building Automation and we give an overview of a possible solution that uses MDD and model transformations, in the context of a BAS solution, in order to check their correctness in w.r.t. the formal semantics of the lan- uages used in the target platforms (i.e either execution or analysis).},
  doi           = {10.1109/QUATIC.2012.59},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  keywords      = {building management systems;buildings (structures);civil engineering computing;energy conservation;formal specification;formal verification;rapid prototyping (industrial);software quality;BAS configuration;BAS development;BAS maintenance;DSL;SLE;analysis tool;building automation system;domain specific language;energy aware BAS;energy-related requirement;execution specification;explicit abstraction notion;formal semantics;language development;model transformation;model-driven development;rapid prototyping;software language engineering;software product quality;special-purpose verification algorithm;DSLTrans;Model Checking;Model Transformations;Model Transformations Analysis;Quality in MDD;Software Language Engineering, rank3},
}

@InProceedings{Schafer2013,
  author        = {J. Schafer and D. Klein},
  title         = {Implementing Situation Awareness for Car-to-X Applications Using Domain Specific Languages},
  booktitle     = {Vehicular Technology Conference (VTC Spring), 2013 IEEE 77th},
  year          = {2013},
  pages         = {1-5},
  month         = {June},
  __markedentry = {[Neto:5]},
  abstract      = {Car-to-X i.e. Car-to-Anything communication based on standardized IEEE 802.11p radio technology is comprised with wireless communication between cars (Car-to-Car) and between vehicles and the environment (Car-to-Infrastructure). In order to develop Car-to-X applications based on this standard one needs to model parameters such as the vehicle's position, velocity, acceleration etc. and parameters of the vehicle's environment. Typically, the underlying domain models are designed in an ad-hoc manner and the domain rules become hard-coded into the source- code of the application software. In this paper we describe an alternative and more flexible approach. The model is described in almost plain English using a Domain Specific Language (DSL) and translated into target code via parser technology based on the ANTLR tool-chain. This provides more flexibility not only in creating and maintaining the domain rules, but also with regards to generating code for entirely different target languages and technology environments. For instance, we demonstrate to generate Java code for a simulation environment and C-code for the embedded device from the same rule definitions.},
  doi           = {10.1109/VTCSpring.2013.6692589},
  groups        = {Compendex, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1550-2252},
  keywords      = {Java;mobile computing;wireless LAN;ANTLR tool-chain;C-code;Java code;car-to-anything communication;car-to-car communication;car-to-infrastructure communication;car-to-x applications;domain specific languages;model parameters;parser technology;situation awareness;source-code;standardized IEEE 802.11p radio technology;vehicle acceleration;vehicle position;vehicle velocity;wireless communication;Context;DSL;Engines;Grammar;Java;Runtime;Syntactics, rank3},
}

@InProceedings{Tyugu2014,
  author        = {E. Tyugu and M. Harf and P. Grigorenko},
  title         = {A case study of combining compositional and object-oriented software development},
  booktitle     = {Model-Driven Engineering and Software Development (MODELSWARD), 2014 2nd International Conference on},
  year          = {2014},
  pages         = {201-208},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {We analyze an approach to software development where object-oriented and compositional software specifications are written in separate languages and are only loosely connected. It supports compositional design of software in a domain-specific language and automatic model-driven construction of code from classes written in Java. We justify our approach by giving examples of development of large simulation programs and services on large models. We present also an example of using our method in general purpose software development - this is bootstrapping the essential part of a software tool CoCoViLa, i.e. synthesizing CoCoViLa in CoCoViLa itself.},
  groups        = {Compendex, ACM, SCOPUS, IEEE DSL, Duplicados},
  keywords      = {Computational modeling;DSL;Java;Mathematical model;Object oriented modeling;Software;Unified modeling language;Compositional Software Design;Domain-specific Modeling;Model Driven Software Development;Structural Synthesis of Programs, rank3},
}

@InProceedings{Jojoa2014,
  author        = {C. H. C. Jojoa and O. M. Drews},
  title         = {Domain Specific Language for Handling Modular Ontologies},
  booktitle     = {Computing Colombian Conference (9CCC), 2014 9th},
  year          = {2014},
  pages         = {48-53},
  month         = {Sept},
  __markedentry = {[Neto:5]},
  abstract      = {A Knowledge Object may be characterized in different forms, corresponding to different perspectives of the object. In the same sense, knowledge of a particular domain can be organized in different interconnected ontologies. The research on ontology modularization has advanced in proposing formalisms and tools to extend ontologies with inter-ontology connectors. Tools are needed to manipulate these new connectors. Existing tools are platform dependent, which presents problems of adaptability, portability and reusability. This paper presents the design and implementation of a Specific Domain Language for Handling Modular Ontologies, based on a model driven architecture (MDA).},
  doi           = {10.1109/ColumbianCC.2014.6955332},
  groups        = {IEEE DSL, Duplicados},
  keywords      = {ontologies (artificial intelligence);software architecture;MDA;domain specific language;inter-ontology connectors;knowledge object;model driven architecture;modular ontologies;Adaptation models;Computer architecture;Connectors;Context modeling;Domain specific languages;OWL;Ontologies;Knowledge management;MDA architecture;e-connections;metamodels;modular ontologies, rank3},
}

@Article{V.Devedzic2012,
  author        = {D. D. a. V. Devedzic},
  title         = {Incorporating the Ontology Paradigm Into Software Engineering: Enhancing Domain-Driven Programming in Clojure/Java},
  journal       = {IEEE Transactions on Systems, Man, and Cybernetics, Part C (Applications and Reviews)},
  year          = {2012},
  volume        = {42},
  number        = {1},
  pages         = {3-14},
  month         = {Jan},
  __markedentry = {[Neto:5]},
  abstract      = {There is a notable overlap of the challenges with which the semantic technologies and software engineering deal. They can also complement and mutually improve each other. Current efforts mostly focus on improving software tools around the resource description framework (RDF) and Web Ontology Language (OWL) Web-oriented ecosystem that helps ontology engineers but is alien to software engineers. This paper presents an opposite approach taken from the software developer's viewpoint - an incorporation of the ontology paradigm into a general-purpose programming language, in a simple and agile way, on a small scale, and in an unpretentious manner. The objective is to help programmers write simple domain-driven code with richer semantics. The means to achieve this objective relies on metaprogramming to internalize the ontology modeling paradigm into a mainstream programming environment based on the Java ecosystem, in a lightweight manner suitable for small teams. An embedded meta domain-specific language (DSL), which is called Magic Potion, is implemented in Clojure and blends ontology, functional, object-oriented, and concurrent paradigms. An example from the technology enhanced learning (TEL) domain is used to illustrate Magic Potion in action.},
  doi           = {10.1109/TSMCC.2011.2140316},
  groups        = {ACM, IEEE DSL, SCOPUS, Duplicados},
  issn          = {1094-6977},
  keywords      = {Java;functional programming;object-oriented programming;ontologies (artificial intelligence);semantic Web;software engineering;Clojure;Java ecosystem;Magic Potion;Web ontology language;Web oriented ecosystem;concurrent paradigms;domain driven code;domain driven programming;embedded meta domain specific language;functional paradigms;general purpose programming language;object oriented paradigms;ontology engineers;ontology modeling paradigm;resource description framework;semantic technologies;software engineering;technology enhanced learning domain;DSL;OWL;Object oriented modeling;Ontologies;Programming;Software;Clojure;domain-specific languages;modeling spaces;multiparadigm programming;ontologies;programming languages;semantic technologies;software engineering, rank3},
}

@Article{Dejanović2016,
  author   = {I. Dejanović and R. Vaderna and G. Milosavljević and Ž. Vuković},
  title    = {TextX: A Python tool for Domain-Specific Languages implementation},
  journal  = {Knowledge-Based Systems},
  year     = {2016},
  pages    = {-},
  abstract = {Abstract TextX is a meta-language and a tool for building Domain-Specific Languages in Python. It’s built on top of the Arpeggio \{PEG\} parser and takes away the burden of converting parse trees to abstract representations from language designers. From a single grammar description, textX constructs Arpeggio parser and a meta-model in run-time. The meta-model contains all the information about the language and a set of Python classes inferred from grammar rules. The parser will parse programs/models written in the new language and construct Python object graph a.k.a. the model conforming to the meta-model. The textX tool has support for error reporting, debugging, and meta-model and model visualization. It is used in industrial environments and teaching Domain-Specific Languages course at the Faculty of Technical Sciences in Novi Sad. It is a free and open-source software available at GitHub under the \{MIT\} license. },
  doi      = {http://dx.doi.org/10.1016/j.knosys.2016.10.023},
  groups   = {ScienceDirect, Inclusos},
  issn     = {0950-7051},
  keywords = {Domain-Specific Language, Meta-model, Model, Model-Driven software development, Parser, Python },
  url      = {http://www.sciencedirect.com/science/article/pii/S0950705116304178},
}

@Article{Kokash2015308,
  author   = {Natallia Kokash and Stuart L. Moodie and Mike K. Smith and Nick Holford},
  title    = {Implementing a Domain-specific Language for Model-based Drug Development},
  journal  = {Procedia Computer Science},
  year     = {2015},
  volume   = {63},
  pages    = {308 - 316},
  note     = {The 6th International Conference on Emerging Ubiquitous Systems and Pervasive Networks (EUSPN 2015)/ The 5th International Conference on Current and Future Trends of Information and Communication Technologies in Healthcare (ICTH-2015)/ Affiliated Workshops},
  abstract = {Abstract In this paper, we present the implementation of a novel domain-specific language (DSL) for pharmacometric modeling called the Modelling Description Language (MDL). \{MDL\} is a modular, declarative language with block structures that allows users to abstract data, processes and mathematical models from auxiliary code, and hence, improves model readability, reusability and opportunities for collaborative research. The main aim of this \{DSL\} is interoperability between core software tools used in pharmacometrics. We describe the MDL-IDE, an integrated development environment for MDL, which assists users in writing \{MDL\} code. The paper focuses on language constructs and design decisions, briefly explains how models are validated and converted to a machine-readable format for processing by existing model simulation and estimation software tools. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2015.08.348},
  groups   = {SCOPUS, Inclusos},
  issn     = {1877-0509},
  keywords = {Model-based drug development, pharmacokinetics, domain-specific language, modeling, simulation ; },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050915024837},
}

@Article{Degueule2016,
  author   = {Thomas Degueule and Benoit Combemale and Arnaud Blouin and Olivier Barais and Jean-Marc Jézéquel},
  title    = {Safe model polymorphism for flexible modeling},
  journal  = {Computer Languages, Systems \& Structures},
  year     = {2016},
  pages    = {-},
  abstract = {Abstract Domain-Specific Languages (DSLs) are increasingly used by domain experts to handle various concerns in systems and software development. To support this trend, the Model-Driven Engineering (MDE) community has developed advanced techniques for designing new DSLs. However, the widespread use of independently developed, and constantly evolving \{DSLs\} is hampered by the rigidity imposed to the language users by the \{DSLs\} and their tooling, e.g., for manipulating a model through various similar \{DSLs\} or successive versions of a given DSL. In this paper, we propose a disciplined approach that leverages type groups׳ polymorphism to provide an advanced type system for manipulating models, in a polymorphic way, through different \{DSL\} interfaces. A \{DSL\} interface, a.k.a. model type, specifies a set of features, or services, available on the model it types, and subtyping relations among these model types define the safe substitutions. This type system complements the Melange language workbench and is seamlessly integrated into the Eclipse Modeling Framework (EMF), hence providing structural interoperability and compatibility of models between EMF-based tools. We illustrate the validity and practicability of our approach by bridging safe interoperability between different semantic and syntactic variation points of a finite-state machine (FSM) language, as well as between successive versions of the Unified Modeling Language (UML). },
  doi      = {http://dx.doi.org/10.1016/j.cl.2016.09.001},
  groups   = {ScienceDirect, excluidos},
  issn     = {1477-8424},
  keywords = {Metamodeling, Model typing, Type groups polymorphism },
  url      = {http://www.sciencedirect.com/science/article/pii/S1477842416300264},
}

@Article{Erdweg201524,
  author        = {Sebastian Erdweg and Tijs van der Storm and Markus Völter and Laurence Tratt and Remi Bosman and William R. Cook and Albert Gerritsen and Angelo Hulshout and Steven Kelly and Alex Loh and Gabriël Konat and Pedro J. Molina and Martin Palatnik and Risto Pohjonen and Eugen Schindler and Klemens Schindler and Riccardo Solmi and Vlad Vergu and Eelco Visser and Kevin van der Vlist and Guido Wachsmuth and Jimi van der Woning},
  title         = {Evaluating and comparing language workbenches: Existing results and benchmarks for the future},
  journal       = {Computer Languages, Systems \& Structures},
  year          = {2015},
  volume        = {44, Part A},
  pages         = {24 - 47},
  note          = {Special issue on the 6th and 7th International Conference on Software Language Engineering (SLE 2013 and \{SLE\} 2014)},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Language workbenches are environments for simplifying the creation and use of computer languages. The annual Language Workbench Challenge (LWC) was launched in 2011 to allow the many academic and industrial researchers in this area an opportunity to quantitatively and qualitatively compare their approaches. We first describe all four \{LWCs\} to date, before focussing on the approaches used, and results generated, during the third LWC. We give various empirical data for ten approaches from the third LWC. We present a generic feature model within which the approaches can be understood and contrasted. Finally, based on our experiences of the existing LWCs, we propose a number of benchmark problems for future LWCs. },
  doi           = {http://dx.doi.org/10.1016/j.cl.2015.08.007},
  groups        = {SCOPUS, Duplicados},
  issn          = {1477-8424},
  keywords      = {Language workbenches, Domain-specific languages, Questionnaire language, Survey, Benchmarks, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1477842415000573},
}

@Article{Weichhart201690,
  author        = {Georg Weichhart and Wided Guédria and Yannick Naudet},
  title         = {Supporting interoperability in complex adaptive enterprise systems: A domain specific language approach},
  journal       = {Data \& Knowledge Engineering},
  year          = {2016},
  volume        = {105},
  pages         = {90 - 106},
  note          = {Knowledge Engineering for Enterprise, Integration, Interoperability and Networking: Theory and Applications},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract From a Complex Adaptive Systems (CAS) theory perspective a new approach for supporting Enterprise Interoperability (EI) is described. Particular needs informed by the theory are presented and a software environment supporting these requirements is proposed. The infrastructure aims at serving as a tool for solving problems in the \{EI\} domain, and includes a Domain Specific Language (DSL) supporting engineering interoperability solutions. The Ontology of Enterprise Interoperability (OoEI) provides the underlying conceptualisation of the Enterprise Interoperability (EI) domain and is used as basis. The \{DSL\} enhances the ontology with \{CAS\} related concepts. The \{CAS\} perspective provides a particular focus on dynamic aspects, which requires a new approach currently only addressed to a limited extend. The research interoperability infrastructure provides components to address the decentralised nature of a \{CAS\} by providing software agents and agent interaction protocols that facilitate the identification of interoperability problems and agent negotiations to find solutions. It is realised using the functional programming language Scala. },
  doi           = {http://dx.doi.org/10.1016/j.datak.2016.04.001},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {0169-023X},
  keywords      = {Enterprise Interoperability, Ontology of interoperability, Complex Adaptive Systems, Multi Agent Systems, Scala, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0169023X16300222},
}

@Article{Troya2014863,
  author        = {Javier Troya and Antonio Vallecillo},
  title         = {Specification and simulation of queuing network models using Domain-Specific Languages},
  journal       = {Computer Standards \& Interfaces},
  year          = {2014},
  volume        = {36},
  number        = {5},
  pages         = {863 - 879},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Queuing network models (QNMs) provide powerful notations and tools for modeling and analyzing the performance of many different kinds of systems. Although several powerful tools currently exist for solving QNMs, some of these tools define their own model representations, have been developed in platform-specific ways, and are normally difficult to extend for coping with new system properties, probability distributions or system behaviors. This paper shows how Domain Specific Languages (DSLs), when used in conjunction with Model-driven engineering techniques, provide a high-level and very flexible approach for the specification and analysis of QNMs. We build on top of an existing metamodel for \{QNMs\} (PMIF) to define a \{DSL\} and its associated tools (editor and simulation engine), able to provide a high-level notation for the specification of different kinds of QNMs, and easy to extend for dealing with other probability distributions or system properties, such as system reliability. },
  doi           = {http://dx.doi.org/10.1016/j.csi.2014.01.002},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {0920-5489},
  keywords      = {Domain-Specific Languages, Queuing network models, PMIF, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S092054891400004X},
}

@InCollection{Sadrieh20151559,
  author    = {Afshin Sadrieh and Parisa A. Bahri},
  title     = {A New Software Development Methodology for Controllability Analysis of Forced Circulation Evaporator System},
  booktitle = {12th International Symposium on Process Systems Engineering and 25th European Symposium on Computer Aided Process Engineering},
  publisher = {Elsevier},
  year      = {2015},
  editor    = {Krist V. Gernaey, Jakob K. Huusom and Rafiqul Gani},
  volume    = {37},
  series    = {Computer Aided Chemical Engineering},
  pages     = {1559 - 1564},
  abstract  = {Abstract Modern chemical process plants are becoming more and more complex due to tighter economic and environmental limitations. As a result, achieving well-controllable process system designs becomes a tedious task. Using software products to evaluate designs in early stages is beneficial in order to reduce the human error and increase the efficiency. However, developing software tools for controllability problems using traditional software development methods is inefficient due to complexity and scale of these problems as well as considerable differences between them. In this work, a graphical domain-specific language (DSL) is introduced for measuring \{RGA\} index, to assess the controllability of a process plant with an application to a forced-circulation evaporator system. },
  doi       = {http://dx.doi.org/10.1016/B978-0-444-63577-8.50105-4},
  groups    = {SCOPUS,, excluidos},
  issn      = {1570-7946},
  keywords  = {Domain-specific languages, Forced circulation evaporator, Controllability analysis },
  url       = {http://www.sciencedirect.com/science/article/pii/B9780444635778501054},
}

@Article{Sequeira2015894,
  author        = {Fernando Rosa Sequeira and Rafael Z. Frantz and Iryna Yevseyeva and Michael T.M. Emmerich and Vitor Basto-Fernandes},
  title         = {An \{EAI\} Based Integration Solution for Science and Research Outcomes Information Management},
  journal       = {Procedia Computer Science},
  year          = {2015},
  volume        = {64},
  pages         = {894 - 901},
  note          = {Conference on \{ENTERprise\} Information Systems/International Conference on Project MANagement/Conference on Health and Social Care Information Systems and Technologies, CENTERIS/ProjMAN / \{HCist\} 2015 October 7-9, 2015},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract In this paper we present an Enterprise Application Integration (EAI) based proposal for research outcomes information management. The proposal is contextualized in terms of national and international science and research outcomes information management, corresponding supporting information systems and ecosystems. Information systems interoperability problems, approaches, technologies and tools are presented and applied to the research outcomes information management case. A business and technological perspective is provided, including the conceptual analysis and modelling, an integration solution based in a Domain-Specific Language (DSL) and the orchestration engine to execute the proposed solution. For illustrative purposes, the role and information system needs of a research unit is assumed as the representative case. },
  doi           = {http://dx.doi.org/10.1016/j.procs.2015.08.604},
  groups        = {SCOPUS, Duplicados},
  issn          = {1877-0509},
  keywords      = {Enterprise Application Integration, Domain-Specific Language, Information Management., rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1877050915027398},
}

@Article{Degenne2016,
  author        = {P. Degenne and D. Lo Seen},
  title         = {Ocelet: Simulating processes of landscape changes using interaction graphs},
  journal       = {SoftwareX},
  year          = {2016},
  pages         = {-},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract This paper introduces Ocelet, a domain specific language and simulation tool for modelling changes in geographical landscapes. It is characterised by the use of interaction graphs (graphs with interaction functions on their edges) to represent the system as composed of processes, each involving several entities distributed in space that are in interaction with each other. Entities are the vertices of the graphs, and interactions are the edges on which (interaction) functions can be applied to make the system change through time. Examples are given to illustrate the generic disposition of the simulation approach to model and study changing geographical setups. },
  doi           = {http://dx.doi.org/10.1016/j.softx.2016.05.002},
  groups        = {SCOPUS, Duplicados},
  issn          = {2352-7110},
  keywords      = {Spatial modelling, Multi-scale, Domain specific language, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S2352711016300103},
}

@Article{Patwari2016761,
  author        = {Puneet Patwari and Subhrojyoti Roy Chaudhuri and Swaminathan Natarajan and G Muralikrishna},
  title         = {M\&C ML: A modeling language for monitoring and control systems},
  journal       = {Fusion Engineering and Design},
  year          = {2016},
  volume        = {112},
  pages         = {761 - 765},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The use of System Engineering (SE) language such as SysML [1,20] is common within the community of control system designers. However the design handoff to the subsequent phases of the control system development is carried out manually in most cases without much tool support. The approach to agreeing on the control interface between components is a good example where engineers still rely on either manually created Interface Control Documents (ICD) or one off tools implemented by individual projects. Square Kilometer Array (SKA) [2] and International Thermonuclear Experimental Reactor (ITER) [3] are two good examples of such large projects adopting these approaches. This results in non-uniformity in the overall system design since individual groups invent their own vocabulary while using a language like SysML which leads to inconsistencies across the design, interface and realized code. To mitigate this, we propose the development of a Monitoring and Control Modeling Language (M&amp;CML), a domain specific language (DSL) [4,22] for specifying M&amp;C solutions. M&amp;C \{ML\} starts with defining a vocabulary borrowing concepts from standard practices used in the control domain and incorporates a language which ensures uniformity and consistency across the M&amp;C design, interfaces and implementation artifacts. In this paper we discuss this language with an analysis of its usage to point out its benefits. },
  doi           = {http://dx.doi.org/10.1016/j.fusengdes.2016.05.024},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {0920-3796},
  keywords      = {Domain driven engineering, Monitoring and control systems, Domain specific language for M&amp, amp, C systems, System engineering, Model driven engineering, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0920379616303817},
}

@Article{Challenger201691,
  author        = {Moharram Challenger and Marjan Mernik and Geylani Kardas and Tomaž Kosar},
  title         = {Declarative specifications for the development of multi-agent systems},
  journal       = {Computer Standards \& Interfaces},
  year          = {2016},
  volume        = {43},
  pages         = {91 - 115},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The designing and implementation of a multi-agent system (MAS), where autonomous agents collaborate with other agents for solving problems, constitute complex tasks that may become even harder when agents work in new interactive environments such as the Semantic Web. In order to deal with the complexities of designing and implementing a MAS, a domain-specific language (DSL) can be employed inside the MAS's development cycle. In such a manner, a \{MAS\} can be completely specified by programs written in a DSL. Such programs are declarative, expressive, and at the right abstraction level. In this way the complexity of \{MAS\} development is then partially shifted to \{DSL\} development and the task herein can be much more feasible by using a proper \{DSL\} development methodology and related tools. This paper presents and discusses our methodology for \{DSL\} development based on declarative formal specifications that are easy to compose, and its usage during \{MAS\} development. A practical case-study is also provided covering an example of a MAS's development for expert finding systems. By using denotational semantics for precisely defining the language, we show that it is possible to generate the language automatically. In addition, using attribute grammars makes it possible to have modular methodology within which evolutionary language development becomes easier. },
  doi           = {http://dx.doi.org/10.1016/j.csi.2015.08.012},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {0920-5489},
  keywords      = {Domain-specific language, Multi-agent system, Semantic Web, Formal semantics, Declarative specifications, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0920548915000975},
}

@Article{Dejanović201671,
  author   = {I. Dejanović and G. Milosavljević and R. Vaderna},
  title    = {Arpeggio: A flexible \{PEG\} parser for Python},
  journal  = {Knowledge-Based Systems},
  year     = {2016},
  volume   = {95},
  pages    = {71 - 74},
  abstract = {Abstract Arpeggio is a recursive descent parser with full backtracking and memoization based on \{PEG\} (Parsing Expression Grammar) grammars. This category of parsers is known as packrat parsers. It is implemented in the Python programming language and works as a grammar interpreter. Arpeggio has a very good support for error reporting, debugging, and grammar and parse tree visualization. It is used in industrial environments and teaching Domain-Specific Languages course at the Faculty of Technical Sciences in Novi Sad. Arpeggio is a foundation of a high-level \{DSL\} meta-language and tool - textX. It is a free and open-source software available at GitHub under \{MIT\} license. },
  doi      = {http://dx.doi.org/10.1016/j.knosys.2015.12.004},
  groups   = {Compendex, ACM,, excluidos},
  issn     = {0950-7051},
  keywords = {PEG, Packrat, Parser, Python, DSL, TextX },
  url      = {http://www.sciencedirect.com/science/article/pii/S0950705115004761},
}

@Article{Martini2016235,
  author   = {Ricardo Giuliani Martini and Giovani Rubert Librelotto and Pedro Rangel Henriques},
  title    = {Formal Description and Automatic Generation of Learning Spaces Based on Ontologies},
  journal  = {Procedia Computer Science},
  year     = {2016},
  volume   = {96},
  pages    = {235 - 244},
  note     = {Knowledge-Based and Intelligent Information \&amp; Engineering Systems: Proceedings of the 20th International Conference KES-2016},
  abstract = {Abstract A good virtual Learning Space (LS) should convey pertinent learning information to the visitors at the most adequate time and locations to favor their knowledge acquisition. Considering the consolidation of the internet and the improvement of the interaction, searching, and learning mechanisms, we propose a generic architecture, called CaVa, to create virtual Learning Spaces building up on cultural institution documents. More precisely, our proposal is to automatically create ontology-based virtual learning environments. Thus, to impart relevant learning materials to the virtual LS, we propose the use of ontologies to represent the key concepts and semantic relations in an user- and machine-understandable format. These concepts together with the data (extracted from the real documents) stored in a digital storage format (XML datasets, relational databases, etc.) are displayed in an ontology-based learning space that enables the visitors to use the available features and tools to learn about a specific domain. According to the approach here discussed, each desired virtual \{LS\} must be specified rigorously through a domain specific language (DSL) that was designed and implemented. To validate the proposed architecture, three case studies will be used as instances of CaVa architecture. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2016.08.136},
  groups   = {SCOPUS, excluidos},
  issn     = {1877-0509},
  keywords = {Learning Spaces, Exhibition Rooms, Cultural Heritage, Ontology, Domain Specific Language },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050916319378},
}

@Article{Pereira201635,
  author        = {Maria João Varanda Pereira and João Fonseca and Pedro Rangel Henriques},
  title         = {Ontological approach for \{DSL\} development},
  journal       = {Computer Languages, Systems \& Structures},
  year          = {2016},
  volume        = {45},
  pages         = {35 - 52},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract This paper presents a project whose main objective is to explore the ontological based development of Domain Specific Languages (DSL), more precisely, of their underlying Grammar. After reviewing the basic concepts characterizing Ontologies and DSLs, we introduce a tool, Onto2Gra, that takes profit of the knowledge described by the ontology and automatically generates a grammar for a \{DSL\} that allows to discourse about the domain described by that ontology. This approach represents a rigorous method to create, in a secure and effective way, a grammar for a new specialized language restricted to a concrete domain. The usual process of creating a grammar from the scratch is, as every creative action, difficult, slow and error prone; so this proposal is, from a grammar engineering point of view, of uttermost importance. After the grammar generation phase, the Grammar Engineer can manipulate it to add syntactic sugar to improve the final language quality or even to add specific semantic actions. The Onto2Gra project is composed of three engines. The main one is OWL2DSL, the component that converts an \{OWL\} ontology into a complete Attribute Grammar for the construction of an internal representation of all the input data. The two additional modules are Onto2OWL, converts ontologies written in OntoDL into standard OWL, and DDesc2OWL, converts domain instances written in the new \{DSL\} into the initial \{OWL\} ontology. },
  doi           = {http://dx.doi.org/10.1016/j.cl.2015.12.004},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1477-8424},
  keywords      = {DSL, Ontologies, Grammars, Problem domain concepts, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1477842415300270},
}

@Article{Estérie20143240,
  author   = {Pierre Estérie and Joel Falcou and Mathias Gaunard and Jean-Thierry Lapresté and Lionel Lacassagne},
  title    = {The numerical template toolbox: A modern C++ design for scientific computing},
  journal  = {Journal of Parallel and Distributed Computing},
  year     = {2014},
  volume   = {74},
  number   = {12},
  pages    = {3240 - 3253},
  note     = {Domain-Specific Languages and High-Level Frameworks for High-Performance Computing},
  abstract = {Abstract The design and implementation of high level tools for parallel programming is a major challenge as the complexity of modern architectures increases. Domain Specific Languages (or DSL) have been proposed as a solution to facilitate this design but few of those DSLs actually take full advantage of said parallel architectures. In this paper, we propose a library-based solution by designing a C++   DSLs using generative programming: \{NT\} 2 . By adapting generative programming idioms so that architecture specificities become mere parameters of the code generation process, we demonstrate that our library can deliver high performance while featuring a high level \{API\} and being easy to extend over new architectures. },
  doi      = {http://dx.doi.org/10.1016/j.jpdc.2014.07.002},
  groups   = {SCOPUS, excluidos},
  issn     = {0743-7315},
  keywords = {C++, Embedded domain specific languages, Parallel skeletons, Generic programming, Generative programming },
  url      = {http://www.sciencedirect.com/science/article/pii/S0743731514001245},
}

@Article{Gibbs201569,
  author        = {Ivan Gibbs and Sergiu Dascalu and Frederick C. Harris and Jr.},
  title         = {A separation-based \{UI\} architecture with a \{DSL\} for role specialization},
  journal       = {Journal of Systems and Software},
  year          = {2015},
  volume        = {101},
  pages         = {69 - 85},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract This paper proposes an architecture and associated methodology to separate front end \{UI\} concerns from back end coding concerns to improve the platform flexibility, shorten the development time, and increase the productivity of developers. Typical \{UI\} development is heavily dependent upon the underlying platform, framework, or tool used to create it, which results in a number of problems. We took a separation-based \{UI\} architecture and modified it with a domain specific language to support the independence of \{UI\} creation thereby resolving some of the aforementioned problems. A methodology incorporating this architecture into the development process is proposed. A climate science application was created to verify the validity of the methodology using modern practices of UX, DSLs, code generation, and model-driven engineering. Analyzing related work provides an overview of other methods similar to our method. Subsequently we evaluate the climate science application, conclude, and detail future work. },
  doi           = {http://dx.doi.org/10.1016/j.jss.2014.11.039},
  groups        = {Compendex, ACM, SCOPUS, Duplicados},
  issn          = {0164-1212},
  keywords      = {Domain specific language, Model driven engineering, User experience, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0164121214002702},
}

@InCollection{Sadrieh2014559,
  author    = {Afshin Sadrieh and Parisa A. Bahri},
  title     = {Novel Domain-Specific Language Framework for Controllability Analysis},
  booktitle = {24th European Symposium on Computer Aided Process Engineering},
  publisher = {Elsevier},
  year      = {2014},
  editor    = {Jiří Jaromír Klemeš, Petar Sabev Varbanov and Peng Yen Liew},
  volume    = {33},
  series    = {Computer Aided Chemical Engineering},
  pages     = {559 - 564},
  abstract  = {Abstract Controllability is one of the most important aspects of process systems’ operability. Failure to achieve a standard controllable process may lead to environmental disasters and economical difficulties. Therefore, the need for highly standard specific software tool for this area is now visible more than any time. However, this category of problems varies significantly from case to case, which makes providing software tools an inefficient task. In this study, a new methodology to develop software tool for controllability analysis is proposed and the maintainability of the software in terms of number of lines of code and time spent to apply a particular new request is discussed. Moreover, a controllability case study is applied to this software and the results are presented. },
  doi       = {http://dx.doi.org/10.1016/B978-0-444-63456-6.50094-6},
  groups    = {SCOPUS, Inclusos},
  issn      = {1570-7946},
  keywords  = {Domain-Specific Language, Maintainability, Controllability analysis, CAPE },
  url       = {http://www.sciencedirect.com/science/article/pii/B9780444634566500946},
}

@Article{Popovic201569,
  author   = {Aleksandar Popovic and Ivan Lukovic and Vladimir Dimitrieski and Verislav Djukic},
  title    = {A \{DSL\} for modeling application-specific functionalities of business applications},
  journal  = {Computer Languages, Systems \& Structures},
  year     = {2015},
  volume   = {43},
  pages    = {69 - 95},
  abstract = {Abstract Models have been widely used in the information system development process. Models are not just means for system analysis and documentation. They may be also transformed into system implementation, primarily program code. Generated program code of screen forms and transaction programs mainly implements generic functionalities that can be expressed by simple retrieval, insertion, update, or deletion operations over database records. Besides the program code of generic functionalities, each application usually includes program code for specific business logic that represents application-specific functionalities, which may include complex calculations, as well as a series of database operations. There is a lack of domain-specific and tool-supported techniques for specification of such application-specific functionalities at the level of platform-independent models (PIMs). In this paper, we propose an approach and a domain-specific language (DSL), named IIS⁎CFuncLang, aimed at enabling a complete specification of application-specific functionalities at the \{PIM\} level. We have developed algorithms for transformation of IIS⁎CFuncLang specifications into executable program code, such as PL/SQL program code. In order to support specification of application-specific functionalities using IIS⁎CFuncLang, we have also developed appropriate tree-based and textual editors. The language, editors, and the transformations are embedded into a Model-Driven Software Development tool, named Integrated Information Systems \{CASE\} (IIS⁎Case). IIS⁎Case supports platform-independent design and automated prototyping of information systems, which allows us to verify and test our approach in practice. },
  doi      = {http://dx.doi.org/10.1016/j.cl.2015.03.003},
  groups   = {SCOPUS, ACM, Compendex,, Inclusos},
  issn     = {1477-8424},
  keywords = {Domain-specific languages, IIS⁎CFuncLang, Application-specific functionalities, Model transformations, IIS⁎Case },
  url      = {http://www.sciencedirect.com/science/article/pii/S1477842415000263},
}

@Article{Sarimbekov2014344,
  author        = {Aibek Sarimbekov and Yudi Zheng and Danilo Ansaloni and Lubomír Bulej and Lukáš Marek and Walter Binder and Petr Tůma and Zhengwei Qi},
  title         = {Dynamic program analysis—Reconciling developer productivity and tool performance},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {95, Part 3},
  pages         = {344 - 358},
  note          = {Special Section: \{ACM\} SAC-SVT 2013 + Bytecode 2013},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Dynamic program analysis tools serve many important software engineering tasks such as profiling, debugging, testing, program comprehension, and reverse engineering. Many dynamic analysis tools rely on program instrumentation and are implemented using low-level instrumentation libraries, resulting in tedious and error-prone tool development. Targeting this issue, we have created the Domain-Specific Language for Instrumentation (DiSL), which offers high-level programming abstractions especially designed for instrumentation-based dynamic analysis. When designing DiSL, our goal was to boost the productivity of tool developers targeting the Java Virtual Machine, without impairing the performance of the resulting tools. In this paper we assess whether DiSL meets this goal. First, we perform a controlled experiment to measure tool development time and correctness of the developed tools, comparing DiSL with a prevailing, state-of-the-art instrumentation library. Second, we recast 10 open-source software engineering tools in DiSL and compare source code metrics and performance with the original implementations. Our studies show that DiSL significantly improves developer productivity, enables concise tool implementations, and does not have any negative impact on tool performance. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2014.03.014},
  groups        = {ScienceDirect, Duplicados},
  issn          = {0167-6423},
  keywords      = {Dynamic program analysis, Bytecode instrumentation, Development productivity, Controlled experiment, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642314001543},
}

@Article{Basten20157,
  author        = {Bas Basten and Jeroen van den Bos and Mark Hills and Paul Klint and Arnold Lankamp and Bert Lisser and Atze van der Ploeg and Tijs van der Storm and Jurgen Vinju},
  title         = {Modular language implementation in Rascal – experience report},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {7 - 19},
  note          = {\{LDTA\} (Language Descriptions, Tools, and Applications) Tool Challenge},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract All software evolves, and programming languages and programming language tools are no exception. And just like in ordinary software construction, modular implementations can help ease the process of changing a language implementation and its dependent tools. However, the syntactic and semantic dependencies between language features make this a challenging problem. In this paper we detail how programming languages can be implemented in a modular fashion using the Rascal meta-programming language. Rascal supports extensible definition of concrete syntax, abstract syntax and operations on concrete and abstract syntax trees like matching, traversal and transformation. As a result, new language features can be added without having to change existing code. As a case study, we detail our solution of the LDTA'11 Tool Challenge: a modular implementation of Oberon-0, a relatively simple imperative programming language. The approach we sketch can be applied equally well to the implementation of domain-specific languages. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2015.11.003},
  groups        = {ScienceDirect, Duplicados},
  issn          = {0167-6423},
  keywords      = {Language engineering, Language workbench, Meta-programming, Modularity, Compiler generators, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642315003524},
}

@Article{CórdobaSánchez2016164,
  author        = {Irene Córdoba-Sánchez and Juan de Lara},
  title         = {Ann: A domain-specific language for the effective design and validation of Java annotations},
  journal       = {Computer Languages, Systems \& Structures},
  year          = {2016},
  volume        = {45},
  pages         = {164 - 190},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract This paper describes a new modelling language for the effective design and validation of Java annotations. Since their inclusion in the 5th edition of Java, annotations have grown from a useful tool for the addition of meta-data to play a central role in many popular software projects. Usually they are not conceived in isolation, but in groups, with dependency and integrity constraints between them. However, the native support provided by Java for expressing this design is very limited. To overcome its deficiencies and make explicit the rich conceptual model which lies behind a set of annotations, we propose a domain-specific modelling language. The proposal has been implemented as an Eclipse plug-in, including an editor and an integrated code generator that synthesises annotation processors. The environment also integrates a model finder, able to detect unsatisfiable constraints between different annotations, and to provide examples of correct annotation usages for validation. The language has been tested using a real set of annotations from the Java Persistence \{API\} (JPA). Within this subset we have found enough rich semantics expressible with Ann and omitted nowadays by the Java language, which shows the benefits of Ann in a relevant field of application. },
  doi           = {http://dx.doi.org/10.1016/j.cl.2016.02.002},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1477-8424},
  keywords      = {Model driven engineering, Domain-specific languages, Code generation, Java annotations, Model finders, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1477842416300318},
}

@Article{Acher2013657,
  author        = {Mathieu Acher and Philippe Collet and Philippe Lahire and Robert B. France},
  title         = {FAMILIAR: A domain-specific language for large scale management of feature models},
  journal       = {Science of Computer Programming},
  year          = {2013},
  volume        = {78},
  number        = {6},
  pages         = {657 - 681},
  note          = {Special section: The Programming Languages track at the 26th \{ACM\} Symposium on Applied Computing (SAC 2011) \&amp; Special section on Agent-oriented Design Methods and Programming Techniques for Distributed Computing in Dynamic and Complex Environments},
  __markedentry = {[Neto:5]},
  abstract      = {The feature model formalism has become the de facto standard for managing variability in software product lines (SPLs). In practice, developing an \{SPL\} can involve modeling a large number of features representing different viewpoints, sub-systems or concerns of the software system. This activity is generally tedious and error-prone. In this article, we present \{FAMILIAR\} a Domain-Specific Language (DSL) that is dedicated to the large scale management of feature models and that complements existing tool support. The language provides a powerful support for separating concerns in feature modeling, through the provision of composition and decomposition operators, reasoning facilities and scripting capabilities with modularization mechanisms. We illustrate how an \{SPL\} consisting of medical imaging services can be practically managed using reusable \{FAMILIAR\} scripts that implement reasoning mechanisms. We also report on various usages and applications of \{FAMILIAR\} and its operators, to demonstrate their applicability to different domains and use for different purposes. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2012.12.004},
  groups        = {Compendex, ACM, Duplicados},
  issn          = {0167-6423},
  keywords      = {Domain-specific language, Feature model, Software product lines, Variability, Model management, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642312002158},
}

@Article{Dinkelaker2013615,
  author        = {Tom Dinkelaker and Michael Eichberg and Mira Mezini},
  title         = {Incremental concrete syntax for embedded languages with support for separate compilation},
  journal       = {Science of Computer Programming},
  year          = {2013},
  volume        = {78},
  number        = {6},
  pages         = {615 - 632},
  note          = {Special section: The Programming Languages track at the 26th \{ACM\} Symposium on Applied Computing (SAC 2011) \&amp; Special section on Agent-oriented Design Methods and Programming Techniques for Distributed Computing in Dynamic and Complex Environments},
  __markedentry = {[Neto:5]},
  abstract      = {Embedded domain-specific languages (EDSLs) are known to improve the productivity of developers. However, for many domains no \{DSL\} implementation is available and two important reasons for this are: First, the effort to implement \{EDSLs\} that provide the domain’s established syntax (called concrete syntax) is very high. Second, the \{EDSL\} and its underlying general-purpose programming language (GPL) are typically tightly integrated. This hampers reusability across different GPLs. Besides these implementation issues, the productivity gains of using \{EDSLs\} are also limited by the lack of explicit tool support for \{EDSL\} users—such as syntax highlighting or code analyses. In this paper, we present an approach that significantly reduces the necessary effort to implement embedded \{DSLs\} with concrete syntax. The idea is to use island grammars to specify the EDSL’s concrete syntax. This enables the developer to implement the embedded \{DSL\} as a library and to incrementally specify the concrete syntax using meta-data. Only those parts of the EDSL’s grammar need to be specified that deviate from the grammar of the GPL. By analyzing an EDSL’s implementation using reflection, it is possible to provide tool support for \{EDSLs\} without having the developer implement it explicitly, such as syntax highlighting. An evaluation demonstrates the feasibility of our approach by embedding a real-world \{DSL\} into a GPL. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2012.12.002},
  groups        = {Compendex, ACM, SCOPUS, Duplicados},
  issn          = {0167-6423},
  keywords      = {Language embeddings, Domain-specific languages, Language design and implementation, Program transformation, Generic pre-processor, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642312002134},
}

@Article{Wells2012309,
  author        = {S. Wells and C.A. Reed},
  title         = {A domain specific language for describing diverse systems of dialogue},
  journal       = {Journal of Applied Logic},
  year          = {2012},
  volume        = {10},
  number        = {4},
  pages         = {309 - 329},
  note          = {Selected papers from the 6th International Conference on Soft Computing Models in Industrial and Environmental Applications},
  __markedentry = {[Neto:5]},
  abstract      = {This paper introduces the Dialogue Game Description Language (DGDL), a domain specific language for describing dialectical games. Communication is an important topic within agent research and is a fundamental factor in the development of robust and efficient multiagent systems. Similarly, argumentation has been recognised as a key component of an agentʼs ability to make decisions using complex, dynamic, uncertain, and incomplete knowledge. Dialectical games, a type of multi-player argumentative dialogue game, provide a mechanism for communication which incorporates argumentative behaviours. However there are very few tools for working with these games and little agreement over how they should be described, shared, and reused. The \{DGDL\} provides a grammar for determining whether a game description is syntactically correct and thus provides a foundation for new tools to support the future development and wider exploitation of dialectical games. },
  doi           = {http://dx.doi.org/10.1016/j.jal.2012.09.001},
  groups        = {SCOPUS, Duplicados},
  issn          = {1570-8683},
  keywords      = {Argumentation, Dialectical games, Agent communication, Online argumentation, Dialogue, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1570868312000602},
}

@Article{Saviankou20151343,
  author   = {Pavel Saviankou and Michael Knobloch and Anke Visser and Bernd Mohr},
  title    = {Cube v4: From Performance Report Explorer to Performance Analysis Tool},
  journal  = {Procedia Computer Science},
  year     = {2015},
  volume   = {51},
  pages    = {1343 - 1352},
  note     = {International Conference On Computational Science, \{ICCS\} 2015Computational Science at the Gates of Nature},
  abstract = {Abstract Cube v3 has been a powerful tool to examine reports of the parallel performance tool Scalasca, but was basically unable to perform analyses on its own. With Cube v4, we addressed several shortcomings of Cube v3. We generalized the Cube data model, extended the list of supported data types, and allow operations with nontrivial algebras, e.g. for performance models or statistical data. Additionally, we introduced two major new features that greatly enhance the performance analysis features of Cube: Derived metrics and \{GUI\} plugins. Derived metrics can be used to create and manipulate metrics directly within the GUI, using a powerful domain-specific language called CubePL. Cube \{GUI\} plugins allow the development of novel performance analysis techniques and visualizations based on Cube data without changing the source code of the Cube GUI. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2015.05.320},
  groups   = {SCOPUS, Compendex, excluidos},
  issn     = {1877-0509},
  keywords = {Performance analysis, Call-tree profile, Derived metrics, DSL, GUI plugins },
  url      = {http://www.sciencedirect.com/science/article/pii/S187705091501128X},
}

@Article{Tyugashev2016120,
  author   = {Andrey A. Tyugashev},
  title    = {Language and Toolset for Visual Construction of Programs for Intelligent Autonomous Spacecraft Control},
  journal  = {IFAC-PapersOnLine},
  year     = {2016},
  volume   = {49},
  number   = {5},
  pages    = {120 - 125},
  note     = {4th \{IFAC\} Conference on Intelligent Control and Automation SciencesICONS 2016Reims, France, 1–3 June 2016},
  abstract = {Abstract The paper describes approach to Autonomous Fault Tolerant Intelligent Control of Spacecraft based on usage of Onboard Real-Time Interpreter of Integrated Control Programs, including special Diagnostic Routine. Rules of the Autonomous Control Program could be added or refined from Earth in operative manner by radio channel. Specially designed Visual Domain Specific Language allowing Control Logic Designers check, analyze and construct Rules in user friendly graphical environment excluding necessity to involve Software Developers. Proposed approach allows reducing of costs and labor consuming of Space Mission because of reducing of efforts needed for common-style Flight Control Software coding, multi-stage testing and support. Special Software Engineering Toolset that including Visualizer and Graphical Constructor of these autonomous control programs presented as well as the principles of its design and development. The Prototype of the Toolset has been successfully introduced at \{JSC\} Information Satellite Systems, Krasnoyarsk Region, Russia. },
  doi      = {http://dx.doi.org/10.1016/j.ifacol.2016.07.100},
  groups   = {SCOPUS, excluidos},
  issn     = {2405-8963},
  keywords = {Autonomous Control, Satellite Control, Diagnostic Programs, Software Tools, Software Engineering, Domain Specific Language, Visual Software Construction },
  url      = {http://www.sciencedirect.com/science/article/pii/S2405896316302968},
}

@Article{Belusso2016229,
  author   = {Cássio L.M. Belusso and Sandro Sawicki and Fabricia Roos-Frantz and Rafael Z. Frantz},
  title    = {A Study of Petri Nets, Markov Chains and Queueing Theory as Mathematical Modelling Languages Aiming at the Simulation of Enterprise Application Integration Solutions: A First Step},
  journal  = {Procedia Computer Science},
  year     = {2016},
  volume   = {100},
  pages    = {229 - 236},
  note     = {International Conference on \{ENTERprise\} Information Systems/International Conference on Project MANagement/International Conference on Health and Social Care Information Systems and Technologies, CENTERIS/ProjMAN / \{HCist\} 2016},
  abstract = {Abstract Enterprise Application Integration (EAI) is a research field that seeks to develop methodologies, techniques and tools to design and development integration solutions. The software ecosystem of companies is comprised of several applications, usually obtained from third parties or developed internally and custom-made for their business processes. Interest in \{EAI\} has arisen due to the need to integrate different applications composing the software ecosystem to allow business processes to evolve in response to the constant demands of the business market. The main challenge facing companies in this context is that most of their applications are not designed considering integration with other applications. The development of integration solutions is not a simple task. Guaraná technology provides a domain-specific language that allows for the design of conceptual models to represent integration solutions. This paper reports on a study of Petri Nets, Markov Chains and Queueing Theory, aiming to construct simulation models from conceptual models of integration solutions modeled with Guaraná. We map the building blocks Slot and Task of Guaraná to their corresponding elements in the mathematical modelling languages studied. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2016.09.147},
  groups   = {ScienceDirect,, excluidos},
  issn     = {1877-0509},
  keywords = {Enterprise Application Integration, Domain-Specific Language, Conceptual Model, Simulation },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050916323158},
}

@InCollection{Bialy201739,
  author    = {M. Bialy and V. Pantelic and J. Jaskolka and A. Schaap and L. Patcas and M. Lawford and A. Wassyng},
  title     = {Software Engineering for Model-Based Development by Domain Experts},
  booktitle = {Handbook of System Safety and Security},
  publisher = {Syngress},
  year      = {2017},
  editor    = {Griffor, Edward},
  pages     = {39 - 64},
  address   = {Boston},
  abstract  = {Abstract Model-Based Development (MBD) has been gaining traction in the development of embedded software in many industries, especially in safety-critical domains. The models are typically described using domain-specific languages and tools that are readily accessible to the domain experts. Consequently, domain experts, despite not having formal software engineering training, find themselves creating models (designs) from which code is generated, thus effectively contributing to the design and coding activities of software development. This new role for domain experts as software developers can have a direct impact on the system safety if the domain experts do not follow software engineering best practices. In this chapter, we describe our experiences as software engineers in multiyear collaborations with domain experts from the automotive industry, who are developing embedded software with the \{MBD\} approach. We provide guidelines that strengthen the collaboration between domain experts and software engineers and improve the quality, and hence safety, of embedded software systems developed using MBD. We clarify the role of some of the most commonly used software engineering principles and artefacts, while also addressing issues and misconceptions encountered in adopting software engineering practices in MBD. Although this chapter focuses on the \{MBD\} of automotive embedded software in Matlab Simulink, the guidelines we provide are applicable to the \{MBD\} of software in general. },
  doi       = {http://dx.doi.org/10.1016/B978-0-12-803773-7.00003-6},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-0-12-803773-7},
  keywords  = {Software engineering, domain experts, functional safety, embedded software, model-based development, Simulink, automotive },
  url       = {http://www.sciencedirect.com/science/article/pii/B9780128037737000036},
}

@Article{Hoyos20132890,
  author        = {José R. Hoyos and Jesús García-Molina and Juan A. Botía},
  title         = {A domain-specific language for context modeling in context-aware systems},
  journal       = {Journal of Systems and Software},
  year          = {2013},
  volume        = {86},
  number        = {11},
  pages         = {2890 - 2905},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Context-awareness refers to systems that can both sense and react based on their environment. One of the main difficulties that developers of context-aware systems must tackle is how to manage the needed context information. In this paper we present MLContext, a textual Domain-Specific Language (DSL) which is specially tailored for modeling context information. It has been implemented by applying Model-Driven Development (MDD) techniques to automatically generate software artifacts from context models. The \{MLContext\} abstract syntax has been defined as a metamodel, and model-to text transformations have been written to generate the desired software artifacts. The concrete syntax has been defined with the \{EMFText\} tool, which generates an editor and model injector. \{MLContext\} has been designed to provide a high-level abstraction, to be easy to learn, and to promote reuse of context models. A domain analysis has been applied to elicit the requirements and design choices to be taken into account in creating the DSL. As a proof of concept of the proposal, the generative approach has been applied to two different middleware platforms for context management. },
  doi           = {http://dx.doi.org/10.1016/j.jss.2013.07.008},
  groups        = {SCOPUS, ACM, Compendex, Duplicados},
  issn          = {0164-1212},
  keywords      = {Model Driven Development, Context modeling, Context aware, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0164121213001696},
}

@Article{Antonelli201595,
  author   = {Humberto Lidio Antonelli and Elias Adriano N. da Silva and Renata Pontin M. Fortes},
  title    = {A Model-driven Development for Creating Accessible Web Menus},
  journal  = {Procedia Computer Science},
  year     = {2015},
  volume   = {67},
  pages    = {95 - 104},
  note     = {Proceedings of the 6th International Conference on Software Development and Technologies for Enhancing Accessibility and Fighting Info-exclusion},
  abstract = {Abstract Web pages are composed by several elements that allow users to interact with available content. Some of these elements, such as menus, are responsible for assisting the navigation in the website, helping in the localization and access of the information requested by the user. However, many of menus available in Internet are not developed in an accessible manner, which creates accessibility barriers for many users, especially users with disabilities. Non-accessible menus hinder users find the information that they are looking for and therefore they can give up accessing the web site. This paper aims at addressing the problem by helping developers to create accessible web menus based on model-driven approach. Adopting this approach can help developers build accessible menus without knowing the technical details about accessibility. In direction to this objective, we initially studied the different types of menus and their structures, as well as the accessibility guidelines that involve creating accessible menus. From the study, we developed a meta-model that originated the \{DSL\} (Domain Specific Language) called \{AMenu\} (Accessible Menu). Then we included all the technical details about accessibility in the transformations. Finally, we presented an exploratory evaluation of DSL, discussing their efficiency and limitations. The results indicate a reduction in efforts for developing accessible web menus, since developers do not have to deal with technical details of accessibility. Our approach provides an alternative to traditional approaches to development for creating accessible web menus. The principles used in this study can be included in \{CASE\} tools and \{IDEs\} with great acceptance in the industry and therefore facilitate and disseminate the development of accessible systems. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2015.09.253},
  groups   = {SCOPUS,, excluidos},
  issn     = {1877-0509},
  keywords = {Accessibility, Navigability, Menu, Domain-specific Language },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050915030999},
}

@Article{Visser201511,
  author   = {Eelco Visser},
  title    = {Understanding software through linguistic abstraction},
  journal  = {Science of Computer Programming},
  year     = {2015},
  volume   = {97, Part 1},
  pages    = {11 - 16},
  note     = {Special Issue on New Ideas and Emerging Results in Understanding Software},
  abstract = {Abstract In this essay, I argue that linguistic abstraction should be used systematically as a tool to capture our emerging understanding of domains of computation. Moreover, to enable that systematic application, we need to capture our understanding of the domain of linguistic abstraction itself in higher-level meta languages. The argument is illustrated with examples from the SDF, Stratego, Spoofax, and WebDSL projects in which I explore these ideas. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2013.12.001},
  groups   = {SCOPUS, excluidos},
  issn     = {0167-6423},
  keywords = {Linguistic abstraction, Programming languages, Domain-specific languages, Software understanding },
  url      = {http://www.sciencedirect.com/science/article/pii/S0167642313003365},
}

@Article{LópezFernández2016104,
  author        = {Jesús J. López-Fernández and Esther Guerra and Juan de Lara},
  title         = {Combining unit and specification-based testing for meta-model validation and verification},
  journal       = {Information Systems},
  year          = {2016},
  volume        = {62},
  pages         = {104 - 135},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Meta-models play a cornerstone role in Model-Driven Engineering as they are used to define the abstract syntax of modelling languages, and so models and all sorts of model transformations depend on them. However, there are scarce tools and methods supporting their Validation and Verification (V&amp;V), which are essential activities for the proper engineering of meta-models. In order to fill this gap, we propose two complementary meta-model V&amp;V languages. The first one has similar philosophy to the xUnit framework, as it enables the definition of meta-model unit test suites comprising model fragments and assertions on their (in-)correctness. The second one is directed to express and verify expected properties of a meta-model, including domain and design properties, quality criteria and platform-specific requirements. As a proof of concept, we have developed tooling for both languages in the Eclipse platform, and illustrate its use within an example-driven approach for meta-model construction. The expressiveness of our languages is demonstrated by their application to build a library of meta-model quality issues, which has been evaluated over the \{ATL\} zoo of meta-models and some \{OMG\} specifications. The results show that integrated support for meta-model V&amp;V (as the one we propose here) is urgently needed in meta-modelling environments. },
  doi           = {http://dx.doi.org/10.1016/j.is.2016.06.008},
  groups        = {ACM, Duplicados},
  issn          = {0306-4379},
  keywords      = {Model-driven engineering, Meta-modelling, Domain-specific modelling languages, Validation &amp; verification, Meta-model quality, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0306437916301934},
}

@Article{Poncelet2016143,
  author   = {Clement Poncelet and Florent Jacquemard},
  title    = {Model-based testing for building reliable realtime interactive music systems},
  journal  = {Science of Computer Programming},
  year     = {2016},
  volume   = {132, Part 2},
  pages    = {143 - 172},
  note     = {Special Issue on Software Verification and Testing (SAC-SVT'15)},
  abstract = {Abstract The role of an Interactive Music System (IMS) is to accompany musicians during live performances, acting like a real musician. It must react in realtime to audio signals from musicians, according to a timed high-level requirement called mixed score, written in a domain specific language. Such goals imply strong requirements of temporal reliability and robustness to unforeseen errors in input, yet not much addressed by the computer music community. We present the application of Model-Based Testing techniques and tools to a state-of-the-art IMS, including in particular: offline and on-the-fly approaches for the generation of relevant input data for testing (including timing values), with coverage criteria, the computation of the corresponding expected output, according to the semantics of a given mixed score, the black-box execution of the test data on the System Under Test and the production of a verdict. Our method is based on formal models in a dedicated intermediate representation, compiled directly from mixed scores (high-level requirements), and either passed, to the model-checker Uppaal (after conversion to Timed Automata) in the offline approach, or executed by a virtual machine in the online approach. Our fully automatic framework has been applied to real mixed scores used in concerts and the results obtained have permitted to identify bugs in the target IMS. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2016.08.002},
  groups   = {SCOPUS, excluidos},
  issn     = {0167-6423},
  keywords = {Model based testing, Interactive music systems, Timed automata },
  url      = {http://www.sciencedirect.com/science/article/pii/S0167642316301022},
}

@Article{Lozano201573,
  author   = {Angela Lozano and Kim Mens and Andy Kellens},
  title    = {Usage contracts: Offering immediate feedback on violations of structural source-code regularities},
  journal  = {Science of Computer Programming},
  year     = {2015},
  volume   = {105},
  pages    = {73 - 91},
  abstract = {Abstract Developers often encode design knowledge through structural regularities such as \{API\} usage protocols, coding idioms and naming conventions. As these regularities express how the source code should be structured, they provide vital information for developers using or extending that code. Adherence to such regularities tends to deteriorate over time because they are not documented and checked explicitly. This paper introduces uContracts, an internal \{DSL\} to codify and verify such regularities as ‘usage contracts’. Our \{DSL\} aims at covering most common usage regularities, while still providing a means to express less common ones. Common regularities are identified based on regularities supported by existing approaches to detect bugs or suggest missing code fragments, techniques that mine for structural regularities, as well as on the analysis of an open-source project. We validate our \{DSL\} by documenting the structural regularities of an industrial case study, and analyse how useful the information provided by checking these regularities is for the developers of that case study. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2015.01.004},
  groups   = {SCOPUS, excluidos},
  issn     = {0167-6423},
  keywords = {Software development tool support, Structural regularities, Source code analysis, Internal domain-specific language, IDE integration },
  url      = {http://www.sciencedirect.com/science/article/pii/S016764231500012X},
}

@Article{Dimitrieski2015299,
  author        = {Vladimir Dimitrieski and Milan Čeliković and Slavica Aleksić and Sonja Ristić and Abdalla Alargt and Ivan Luković},
  title         = {Concepts and evaluation of the extended entity-relationship approach to database design in a multi-paradigm information system modeling tool},
  journal       = {Computer Languages, Systems \& Structures},
  year          = {2015},
  volume        = {44, Part C},
  pages         = {299 - 318},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Different approaches to information system (IS) development are based on different data models. The selection of a data model for conceptual design, among other things, depends on the problem domain, the knowledge, and the personal preferences of an \{IS\} designer. In some situations, a simultaneous usage of different approaches to the conceptual database design and \{IS\} development may lead to the most appropriate solutions. In our previous research we have developed a tool that provides an evolutive and incremental approach to \{IS\} development, which is based on the form type data model. The approaches based on the Extended Entity-Relationship (EER) and class data models are broadly accepted throughout the community of \{IS\} designers. In order to support the simultaneous usage of approaches based on the form type, \{EER\} and class data models, we have developed the Multi-Paradigm Information System Modeling Tool (MIST). In this paper, we present a part of our \{MIST\} tool that supports \{EER\} approach to a database design. \{MIST\} components currently provide a formal specification of an \{EER\} database schema specification and its transformation into the relational data model, or the class model. Also, \{MIST\} allows generation of Structured Query Language code for a database creation and procedural code for implementing database constraints. In addition, Java code that stores and processes data from the database, may be generated from the class model. In this paper, we present the evaluation study of the \{MIST\} \{EER\} domain-specific language. Users' perceptions of language quality characteristics are used for the evaluation. },
  doi           = {http://dx.doi.org/10.1016/j.cl.2015.08.011},
  groups        = {Compendex, ACM, SCOPUS, Duplicados},
  issn          = {1477-8424},
  keywords      = {Entity-relationship, Domain-specific language, Model transformation, Information system design, Evaluation study, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1477842415000615},
}

@Article{Kraisig2016407,
  author   = {Adriana R. Kraisig and Franciéli C. Welter and Igor G. Haugg and Roberto Cargnin and Fabricia Roos-Frantz and Sandro Sawicki and Rafael Z. Frantz},
  title    = {Mathematical Model for Simulating an Application Integration Solution in the Academic Context of Unijuí University},
  journal  = {Procedia Computer Science},
  year     = {2016},
  volume   = {100},
  pages    = {407 - 413},
  note     = {International Conference on \{ENTERprise\} Information Systems/International Conference on Project MANagement/International Conference on Health and Social Care Information Systems and Technologies, CENTERIS/ProjMAN / \{HCist\} 2016},
  abstract = {Abstract The enterprise applications consist of a set of applications that make up the software ecosystem. These can be developed in-house or acquired from third party companies. Generally these applications are developed in order to meet a demands/specific business need of the company without worrying of interacting with another existing system. The area of Enterprise Application Integration (EAI) is able to provide all techniques and tools in order to integrate heterogeneous applications software ecosystem of companies. The Guaraná \{DSL\} is a language that enables designing conceptual models of integration solutions using a concrete graphical and intuitive syntax. Integrating the applications is not a trivial task and solution development involves addition of costs (time and resources), risks such as the appearance of bugs that most often are observed only after the implementation of the conceptual model. In this paper we propose a simulation model using Petri Nets that enable the analysis of the behavior of an integration solution developed to a real-world integration problem at Unijuí University. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2016.09.176},
  groups   = {ScienceDirect, excluidos},
  issn     = {1877-0509},
  keywords = {Enterprise Application Integration, Domain-Specific Language, Conceptual Model, Simulation Model, Petri Nets },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050916323444},
}

@Article{Cazzola201616,
  author        = {Walter Cazzola and Edoardo Vacchi},
  title         = {Language components for modular \{DSLs\} using traits},
  journal       = {Computer Languages, Systems \& Structures},
  year          = {2016},
  volume        = {45},
  pages         = {16 - 34},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Recent advances in tooling and modern programming languages have progressively brought back the practice of developing domain-specific languages as a means to improve software development. Consequently, the problem of making composition between languages easier by emphasizing code reuse and componentized programming is a topic of increasing interest in research. In fact, it is not uncommon for different languages to share common features, and, because in the same project different \{DSLs\} may coexist to model concepts from different problem areas, it is interesting to study ways to develop modular, extensible languages. Earlier work has shown that traits can be used to modularize the semantics of a language implementation; a lot of attention is often spent on embedded DSLs; even when external \{DSLs\} are discussed, the main focus is on modularizing the semantics. In this paper we will show a complete trait-based approach to modularize not only the semantics but also the syntax of external DSLs, thereby simplifying extension and therefore evolution of a language implementation. We show the benefits of implementing these techniques using the Scala programming language. },
  doi           = {http://dx.doi.org/10.1016/j.cl.2015.12.001},
  groups        = {ACM, Duplicados},
  issn          = {1477-8424},
  keywords      = {rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1477842415300208},
}

@Article{Dubois2014199,
  author        = {Emmanuel Dubois and Christophe Bortolaso and Damien Appert and Guillaume Gauffre},
  title         = {An MDE-based framework to support the development of Mixed Interactive Systems},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {89, Part B},
  pages         = {199 - 221},
  note          = {Special issue on Success Stories in Model Driven Engineering},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract In the domain of Human–Computer Interaction (HCI), recent advances in sensors, communication technologies, miniaturization and computing capabilities have led to new and advanced forms of interaction. Among them, Mixed Interactive Systems (MIS), form a class of interactive systems that comprises augmented reality, tangible interfaces and ambient computing; \{MIS\} aim to take advantage of physical and digital worlds to promote a more transparent integration of interactive systems with the user’s environment. Due to the constant change of technologies and the multiplicity of these interaction forms, specific development approaches have been developed. As a result, numerous taxonomies, frameworks, \{API\} and models have emerged, each one covering a specific and limited aspect of the development of MIS. To support a coherent use of these multiple development resources and contribute to the increasing popularity of MIS, we have developed a framework based on Model-Driven Engineering. The goal is to take advantage of Model-Driven Engineering (MDE) standards, methodology and tools to support the manipulation of complementary Domain Specific Languages (DSL), to organize and link the use of different design and implementation resources, and to ensure a rationalized implementation based on design choices. In this paper, we first summarize existing uses of \{MDE\} in \{HCI\} before focusing on five major benefits \{MDE\} can provide in a \{MIS\} development context. We then detail which \{MDE\} tools and resources support these benefits and thus form the pillars of the success of an MDE-based \{MIS\} development approach. Based on this analysis, we introduce our framework, called Guide-Me, and illustrate its use through a case study. This framework includes two design models. Model transformations are also included to link one model to another; as a result the frameworks coverage extends from the earliest design step to a software component-based prototyping platform. A toolset based on the Eclipse Modeling Framework (EMF) that supports the use of the framework is also presented. We finally assess our MDE-based development process for \{MIS\} based on the five major \{MDE\} benefits for MIS. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2013.03.007},
  groups        = {SCOPUS, ACM, Duplicados},
  issn          = {0167-6423},
  keywords      = {Mixed Interactive System, Model-Driven Engineering, Development process, Domain-specific language, Flexible model transformation, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642313000671},
}

@Article{Rangarajan2014124,
  author        = {Srinivas Rangarajan and Ted Kaminski and Eric Van Wyk and Aditya Bhan and Prodromos Daoutidis},
  title         = {Language-oriented rule-based reaction network generation and analysis: Algorithms of \{RING\}},
  journal       = {Computers \& Chemical Engineering},
  year          = {2014},
  volume        = {64},
  pages         = {124 - 137},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The underlying algorithms of the language interface and post-generation analysis modules in RING, a network generation and analysis tool, are discussed. The front-end is a domain-specific reaction language developed with Silver, a meta-language based on attribute grammars. The language compiler translates user inputs written as a program into internal instructions, catches syntactic and semantic errors, and performs domain-specific optimization to speed up execution. In addition to generating reaction networks, \{RING\} allows post-processing analysis options to: (a) obtain reaction pathways and overall mechanisms from initial reactants to desired products using graph traversal algorithms, (b) group together isomers to reduce the size of the network through a novel molecule hashing technique, (c) calculate thermochemical quantities through semi-empirical methods such as group additivity, and (d) formulate and solve kinetic models of the entire or lumped complex network based on a rule-based kinetics specification scheme. },
  doi           = {http://dx.doi.org/10.1016/j.compchemeng.2014.02.007},
  groups        = {Duplicados},
  issn          = {0098-1354},
  keywords      = {Automated reaction network generation, Isomer lumping, Reaction network analysis, Kinetic modeling, Domain-specific languages, Extensible languages, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0098135414000398},
}

@Article{Urma2015127,
  author        = {Raoul-Gabriel Urma and Alan Mycroft},
  title         = {Source-code queries with graph databases—with application to programming language usage and evolution},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {97, Part 1},
  pages         = {127 - 134},
  note          = {Special Issue on New Ideas and Emerging Results in Understanding Software},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Program querying and analysis tools are of growing importance, and occur in two main variants. Firstly there are source-code query languages which help software engineers to explore a system, or to find code in need of refactoring as coding standards evolve. These also enable language designers to understand the practical uses of language features and idioms over a software corpus. Secondly there are program analysis tools in the style of Coverity which perform deeper program analysis searching for bugs as well as checking adherence to coding standards such as MISRA. The former class are typically implemented on top of relational or deductive databases and make ad-hoc trade-offs between scalability and the amount of source-code detail held—with consequent limitations on the expressiveness of queries. The latter class are more commercially driven and involve more ad-hoc queries over program representations, nonetheless similar pressures encourage user-visible domain-specific languages to specify analyses. We argue that a graph data model and associated query language provides a unifying conceptual model and gives efficient scalable implementation even when storing full source-code detail. It also supports overlays allowing a query \{DSL\} to pose queries at a mixture of syntax-tree, type, control-flow-graph or data-flow levels. We describe a prototype source-code query system built on top of Neo4j using its Cypher graph query language; experiments show it scales to multi-million-line programs while also storing full source-code detail. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2013.11.010},
  groups        = {ScienceDirect, Duplicados},
  issn          = {0167-6423},
  keywords      = {Programming language evolution, Source-code queries and DSLs, Graph databases, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642313002943},
}

@Article{Özacar201636,
  author   = {Tuğba Özacar},
  title    = {A tool for producing structured interoperable data from product features on the web},
  journal  = {Information Systems},
  year     = {2016},
  volume   = {56},
  pages    = {36 - 54},
  abstract = {Abstract This paper introduces a tool that produces structured interoperable data from product features, i.e., attribute name–value pairs, on the web. The tool extracts the product features using a web site-specific template created by the user. The value of the extracted data is maximized by using GoodRelations, which is the standard vocabulary for modeling product types and their features. The final output of the tool is GoodRelations snippets, which contain product features encoded in \{RDFa\} or Microdata. These snippets can be embedded into existing static and dynamic web pages in a way accessible to major search engines like Google and Yahoo, mobile applications, and browser extensions. This increases the visibility of your products and services in the latest generation of search engines, recommender systems, and other novel applications. },
  doi      = {http://dx.doi.org/10.1016/j.is.2015.09.002},
  groups   = {ScienceDirect,, excluidos},
  issn     = {0306-4379},
  keywords = {Information extraction, GoodRelations, Protégé, Web scraping, Ontology, Rich snippets },
  url      = {http://www.sciencedirect.com/science/article/pii/S0306437915001660},
}

@Article{Rangarajan2012114,
  author        = {Srinivas Rangarajan and Aditya Bhan and Prodromos Daoutidis},
  title         = {Language-oriented rule-based reaction network generation and analysis: Description of \{RING\}},
  journal       = {Computers \& Chemical Engineering},
  year          = {2012},
  volume        = {45},
  pages         = {114 - 123},
  __markedentry = {[Neto:5]},
  abstract      = {The input and output formats, and the structure of Rule Input Network Generator (RING), a computational tool for generation and analysis of complex reaction networks, are described with reference to the underlying algorithms from Cheminformatics and graph theory. \{RING\} consists of three modules: (a) a compiler that translates inputs written as a program in an English-like reaction language into internal representations and instructions, (b) a network generator that constructs an exhaustive reaction network from reaction rules and initial reactants specified, and (c) a post-processing module that can extract pathways, mechanisms, or lumps from the network based on user-specified instructions. \{RING\} can be used, in a rule-based manner, for constructing a large and complex reaction network from a set of elementary/overall reaction rules, and for elucidating transformations occurring in these networks through identifying pathways and mechanisms to specified products. \{RING\} is available open under \{GNU\} Lesser GPL. },
  doi           = {http://dx.doi.org/10.1016/j.compchemeng.2012.06.008},
  groups        = {SCOPUS, Duplicados},
  issn          = {0098-1354},
  keywords      = {Rule-based network generation, Reaction network analysis, Pathway analysis, Mechanism elucidation, Domain specific language interface, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0098135412001846},
}

@Article{Marek2015100,
  author        = {Lukáš Marek and Yudi Zheng and Danilo Ansaloni and Lubomír Bulej and Aibek Sarimbekov and Walter Binder and Petr Tůma},
  title         = {Introduction to dynamic program analysis with DiSL},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {98, Part 1},
  pages         = {100 - 115},
  note          = {Fifth issue of Experimental Software and Toolkits (EST): A special issue on Academics Modelling with Eclipse (ACME2012)},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Dynamic program analysis (DPA) tools assist in many software engineering and development tasks, such as profiling, program comprehension, and performance model construction and calibration. On the Java platform, many \{DPA\} tools are implemented either using aspect-oriented programming (AOP), or rely on bytecode instrumentation to modify the base program code. The pointcut/advice model found in \{AOP\} enables rapid tool development, but does not allow expressing certain instrumentations due to limitations of mainstream \{AOP\} languages—developers thus use bytecode manipulation to gain more expressiveness and performance. However, while the existing bytecode manipulation libraries handle some low-level details, they still make tool development tedious and error-prone. Targeting this issue, we provide the first complete presentation of DiSL, an open-source instrumentation framework that reconciles the conciseness of the \{AOP\} pointcut/advice model and the expressiveness and performance achievable with bytecode manipulation libraries. Specifically, we extend our previous work to provide an overview of the DiSL architecture, advanced features, and the programming model. We also include case studies illustrating successful deployment of DiSL-based \{DPA\} tools. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2014.01.003},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {0167-6423},
  keywords      = {Dynamic program analysis, Bytecode instrumentation, Aspect-oriented programming, Domain-specific languages, Java Virtual Machine, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642314000070},
}

@Article{Chanti20141625,
  author   = {H. Chanti and L. Thiry and M. Hassenforder and J-F. Brillhac and P. Fromy},
  title    = {Formalization and composition of languages for the modeling of fire safety systems},
  journal  = {\{IFAC\} Proceedings Volumes},
  year     = {2014},
  volume   = {47},
  number   = {3},
  pages    = {1625 - 1630},
  note     = {19th \{IFAC\} World Congress},
  abstract = {Abstract Modeling complex systems, such as the ones found in the certification of fire protection systems, generally requires the intervention of many specialists, each one using its own formalisms, concepts and tools. To model such systems, many specific languages are required and to be integrated they should be formally described. In this proposal, we suggest to use functional programming concepts to formalize and integrate the languages involved in the field of fire safety systems. Formalization is done by specifying constructor functions and integration by the way of generic/higher-order functions. },
  doi      = {http://dx.doi.org/10.3182/20140824-6-ZA-1003.01900},
  groups   = {SCOPUS, excluidos},
  issn     = {1474-6670},
  keywords = {Domain Specific Languages, functional programming, fire safety },
  url      = {http://www.sciencedirect.com/science/article/pii/S1474667016418458},
}

@Article{Salehi201663,
  author   = {Pejman Salehi and Abdelwahab Hamou-Lhadj and Maria Toeroe and Ferhat Khendek},
  title    = {A UML-based domain specific modeling language for service availability management: Design and experience},
  journal  = {Computer Standards \& Interfaces},
  year     = {2016},
  volume   = {44},
  pages    = {63 - 83},
  abstract = {Abstract For critical systems, providing services with minimal interruption is essential. Availability Management Framework (AMF), defined by \{SA\} Forum for managing highly-available applications, requires configurations of applications consisting of various entities organized according to AMF-specific rules and constraints. Creating such configurations is difficult due to the numerous constrained entities involved. This paper presents \{UACL\} (UML-based \{AMF\} Configuration Language) and a supporting implementation that models the \{AMF\} domain, providing designers with tools needed to design, edit, and analyze \{AMF\} configurations. \{UACL\} is an extension of \{UML\} through its profiling mechanism and has been designed to represent \{AMF\} concepts, their relations, and constraints. },
  doi      = {http://dx.doi.org/10.1016/j.csi.2015.09.009},
  groups   = {SCOPUS,, excluidos},
  issn     = {0920-5489},
  keywords = {Domain-specific modeling languages, UML profiles, High-availability, Availability Management Framework Standard, Service Availability Forum },
  url      = {http://www.sciencedirect.com/science/article/pii/S0920548915001063},
}

@Article{Haitzer2014135,
  author        = {Thomas Haitzer and Uwe Zdun},
  title         = {Semi-automated architectural abstraction specifications for supporting software evolution},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {90, Part B},
  pages         = {135 - 160},
  note          = {Special Issue on Component-Based Software Engineering and Software Architecture},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract In this paper we present an approach for supporting the semi-automated architectural abstraction of architectural models throughout the software life-cycle. It addresses the problem that the design and implementation of a software system often drift apart as software systems evolve, leading to architectural knowledge evaporation. Our approach provides concepts and tool support for the semi-automatic abstraction of architecture component and connector views from implemented systems and keeping the abstracted architecture models up-to-date during software evolution. In particular, we propose architecture abstraction concepts that are supported through a domain-specific language (DSL). Our main focus is on providing architectural abstraction specifications in the \{DSL\} that only need to be changed, if the architecture changes, but can tolerate non-architectural changes in the underlying source code. Once the software architect has defined an architectural abstraction in the DSL, we can automatically generate architectural component views from the source code using model-driven development (MDD) techniques and check whether architectural design constraints are fulfilled by these models. Our approach supports the automatic generation of traceability links between source code elements and architectural abstractions using \{MDD\} techniques to enable software architects to easily link between components and the source code elements that realize them. It enables software architects to compare different versions of the generated architectural component view with each other. We evaluate our research results by studying the evolution of architectural abstractions in different consecutive versions of five open source systems and by analyzing the performance of our approach in these cases. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2013.10.004},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {0167-6423},
  keywords      = {Architectural abstraction, Architectural component and connector views, Software evolution, UML, Model transformation, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642313002542},
}

@Article{Kos201674,
  author        = {Tomaž Kos and Marjan Mernik and Tomaž Kosar},
  title         = {Test automation of a measurement system using a domain-specific modelling language},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {111},
  pages         = {74 - 88},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The construction of domain-specific modelling languages (DSMLs) is only the first step within the needed toolchain. Models need to be maintained, modified or functional errors searched for. Therefore, tool support is vital for the \{DSML\} end-user’s efficiency. This paper presents SeTT, a simple but very useful tool for \{DSML\} end-users, a testing framework integrated within a \{DSML\} Sequencer. This Sequencer, part of the \{DEWESoft\} data acquisition system, supports the development of model-based tests using a high-level abstraction. The tests are used during the whole data acquisition process and able to test different systems’ parts. This paper shows how high-level specifications can be extended to describe a testing infrastructure for a specific DSML. In this manner, the Sequencer and SeTT were combined at the metamodel level. The contribution of the paper is to show that one can leverage on the \{DSML\} to build a testing framework with relatively little effort, by implementing assertions to it. },
  doi           = {http://dx.doi.org/10.1016/j.jss.2015.09.002},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {0164-1212},
  keywords      = {Test automation, Domain-specific modelling languages, Usage experience, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0164121215002058},
}

@Article{Ebrahimi2014338,
  author   = {Amir Hossein Ebrahimi and Pierre E.C. Johansson and Kristofer Bengtsson and Knut Åkesson},
  title    = {Managing Product and Production Variety – A Language Workbench Approach},
  journal  = {Procedia \{CIRP\}},
  year     = {2014},
  volume   = {17},
  pages    = {338 - 344},
  note     = {Variety Management in ManufacturingProceedings of the 47th \{CIRP\} Conference on Manufacturing Systems},
  abstract = {Abstract Product platforms are commonly used in industries with complex products and high competition like the car and truck industry to allow a customer to order a product that satisfy its unique needs. A consequence of product variety is that manufacturing and assembly processes need to deal with this variety as well. If the variety is low and changes of the product occur infrequently then the variety may be handled by designing the production system for a small set of typical products. But as the variety increases and changes become frequent the necessity for integrated product and production information model is high, to partially solve this problem Product Life Cycle Management (PLM) systems aim at providing an integrated model to all categories of users, e.g. product designers, product preparation engineers, line builders and shop-floor workers. All users need to access the information in the platform and refine and modify the information to reflect new knowledge that has been acquired. Today, most often multiple systems are used where some systems may store information in a structured way but often unstructured text documents are also used. This easily results in redundant information models and automated analysis is not feasible or not event possible because of issues regarding cohesion and traceability of information. The contribution in this paper is to discuss how a new type of tool for building domain specific languages and editors using language workbench approach can be used to support the different user categories in their tasks working with variability of a product and production system while at the same time provide cohesion and traceability of information. },
  doi      = {http://dx.doi.org/10.1016/j.procir.2014.01.100},
  groups   = {ScienceDirect, excluidos},
  issn     = {2212-8271},
  keywords = {product life cycle management, mass customization, product platform, process platform, knowledge managment, variability },
  url      = {http://www.sciencedirect.com/science/article/pii/S2212827114003588},
}

@Article{Barclay2015490,
  author   = {Jack Barclay and Vimal Dhokia and Aydin Nassehi},
  title    = {Generating Milling Tool Paths for Prismatic Parts Using Genetic Programming},
  journal  = {Procedia \{CIRP\}},
  year     = {2015},
  volume   = {33},
  pages    = {490 - 495},
  note     = {9th \{CIRP\} Conference on Intelligent Computation in Manufacturing Engineering - \{CIRP\} \{ICME\} '14},
  abstract = {Abstract The automatic generation of milling tool paths traditionally relies on applying complex tool path generation algorithms to a geometric model of the desired part. For parts with unusual geometries or intricate intersections between sculpted surfaces, manual intervention is often required when normal tool path generation methods fail to produce efficient tool paths. In this paper, a simplified model of the machining process is used to create a domain-specific language that enables tool paths to be generated and optimised through an evolutionary process - formulated, in this case, as a genetic programming system. The driving force behind the optimisation is a fitness function that promotes tool paths whose result matches the desired part geometry and favours those that reach their goal in fewer steps. Consequently, the system is not reliant on tool path generation algorithms, but instead requires a description of the desired characteristics of a good solution, which can then be used to measure and evaluate the relative performance of the candidate solutions that are generated. The performance of the system is less sensitive to different geometries of the desired part and doesn’t require any additional rules to deal with changes to the initial stock (e.g. when rest roughing). The method is initially demonstrated on a number of simple test components and the genetic programming process is shown to positively influence the outcome. Further tests and extensions to the work are presented. },
  doi      = {http://dx.doi.org/10.1016/j.procir.2015.06.060},
  groups   = {SCOPUS, Compendex, excluidos},
  issn     = {2212-8271},
  keywords = {Computer numerical control (CNC), Milling, Genetic programming },
  url      = {http://www.sciencedirect.com/science/article/pii/S2212827115007039},
}

@Article{Molina20131772,
  author        = {Ana I. Molina and Jesús Gallardo and Miguel A. Redondo and Manuel Ortega and William J. Giraldo},
  title         = {Metamodel-driven definition of a visual modeling language for specifying interactive groupware applications: An empirical study},
  journal       = {Journal of Systems and Software},
  year          = {2013},
  volume        = {86},
  number        = {7},
  pages         = {1772 - 1789},
  __markedentry = {[Neto:5]},
  abstract      = {This work is framed in the area of software development for Computer Supported Cooperative Work (CSCW). These software systems are called groupware systems. The development of groupware systems is a complex task, a problem that can be addressed applying the Model Driven Engineering (MDE) principles and techniques, where the use of models is essential. However, there are no proposals to address all issues to model in this kind of application (group work, shared context, coordination, etc.) and, in particular, there are no proposals that consider the modeling of both interactive and collaborative issues. To solve this deficiency, a domain-specific language (DSL) called Collaborative Interactive Application Notation (CIAN) has been proposed. To define this \{DSL\} a metamodel has been created describing the universe of discourse of the applications supporting interactive group work. We have defined the syntax and semantics of this language. We have also implemented a tool (called CIAT) for supporting the edition and validation of models created with CIAN. This tool has been implemented using the metamodeling facilities provided by the Eclipse platform. Finally, an empirical study was conducted with the aim of verifying the suitability of this approach and the perception of software engineers about its usefulness. The results obtained show that our proposal can facilitate the development process of groupware systems. },
  doi           = {http://dx.doi.org/10.1016/j.jss.2012.07.049},
  groups        = {SCOPUS, ACM, Compendex, Duplicados},
  issn          = {0164-1212},
  keywords      = {Groupware design, Interaction Design, DSL, Metamodel, MDE, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S016412121200221X},
}

@Article{Sloane201520,
  author        = {Anthony M. Sloane and Matthew Roberts},
  title         = {Oberon-0 in Kiama},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {20 - 32},
  note          = {\{LDTA\} (Language Descriptions, Tools, and Applications) Tool Challenge},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The Kiama language processing library is a collection of domain-specific languages for software language processing embedded in the Scala programming language. The standard Scala parsing library is augmented by Kiama's facilities for defining attribute grammars, strategy-based rewriting rules and combinator-based pretty-printing. We describe how we used Kiama to implement an Oberon-0 compiler as part of the 2011 \{LDTA\} Tool Challenge. In addition, we explain how Scala enabled a modular approach to the challenge. Traits were used to define components that addressed the processing tasks for each Oberon-0 sub-language. Combining the traits as mixins yielded the challenge artefacts. We conclude by reflecting on the strengths and weaknesses of Kiama that were revealed by the challenge and point to some future directions. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2015.10.010},
  groups        = {SCOPUS, ACM, Duplicados},
  issn          = {0167-6423},
  keywords      = {Oberon-0, Attribute grammars, Term rewriting, Scala, Mixins, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642315003032},
}

@Article{Helfer2015994,
  author        = {Thomas Helfer and Bruno Michel and Jean-Michel Proix and Maxime Salvo and Jérôme Sercombe and Michel Casella},
  title         = {Introducing the open-source mfront code generator: Application to mechanical behaviours and material knowledge management within the \{PLEIADES\} fuel element modelling platform},
  journal       = {Computers \& Mathematics with Applications},
  year          = {2015},
  volume        = {70},
  number        = {5},
  pages         = {994 - 1023},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The \{PLEIADES\} software environment is devoted to the thermomechanical simulation of nuclear fuel elements behaviour under irradiation. This platform is co-developed in the framework of a research cooperative program between Électricité de France (EDF), \{AREVA\} and the French Atomic Energy Commission (CEA). As many thermomechanical solvers are used within the platform, one of the PLEAIADES’s main challenge is to propose a unified software environment for capitalisation of material knowledge coming from research and development programs on various nuclear systems. This paper introduces a tool called mfront which is basically a code generator based on C++  (Stroustrup and Eberhardt, 2004). Domain specific languages are provided which were designed to simplify the implementations of new material properties, mechanical behaviours and simple material models. mfront was recently released under the \{GPL\} open-source licence and is available on its web site: http://tfel.sourceforge.net/. The authors hope that it will prove useful for researchers and engineers, in particular in the field of solid mechanics. mfront interfaces generate code specific to each solver and language considered. In this paper, after a general overview of mfront functionalities, a particular focus is made on mechanical behaviours which are by essence more complex and may have significant impact on the numerical performances of mechanical simulations. mfront users can describe all kinds of mechanical phenomena, such as viscoplasticity, plasticity and damage, for various types of mechanical behaviour (small strain or finite strain behaviour, cohesive zone models). Performance benchmarks, performed using the Code_Aster finite element solver, show that the code generated using mfront is in most cases on par or better than the behaviour implementations written in fortran natively available in this solver. The material knowledge management strategy that was set up within the \{PLEIADES\} platform is briefly discussed. A material database named sirius proposes a rigorous material verification workflow. We illustrate the use of mfront through two case of studies: a simple \{FFC\} single crystal viscoplastic behaviour and the implementation of a recent behaviour for the fuel material which describes various phenomena: fuel cracking, plasticity and viscoplasticity. },
  doi           = {http://dx.doi.org/10.1016/j.camwa.2015.06.027},
  groups        = {SCOPUS, Duplicados},
  issn          = {0898-1221},
  keywords      = {Material knowledge management, Mechanical behaviour integration, Implicit integration schemes, Single crystal plasticity, Domain specific languages, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0898122115003132},
}

@Article{Basso2016612,
  author   = {Fábio Paulo Basso and Raquel Mainardi Pillat and Toacy Cavalcante Oliveira and Fabricia Roos-Frantz and Rafael Z. Frantz},
  title    = {Automated design of multi-layered web information systems},
  journal  = {Journal of Systems and Software},
  year     = {2016},
  volume   = {117},
  pages    = {612 - 637},
  abstract = {Abstract In the development of web information systems, design tasks are commonly used in approaches for Model-Driven Web Engineering (MDWE) to represent models. To generate fully implemented prototypes, these models require a rich representation of the semantics for actions (e.g., database persistence operations). In the development of some use case scenarios for the multi-layered development of web information systems, these design tasks may consume weeks of work even for experienced designers. The literature pointed out that the impossibility for executing a software project with short iterations hampers the adoption of some approaches for design in some contexts, such as start-up companies. A possible solution to introduce design tasks in short iterations is the use of automated design techniques, which assist the production of models by means of transformation tasks and refinements. This paper details our methodology for MDWE, which is supported by automated design techniques strictly associated with use case patterns of type CRUD. The novelty relies on iterations that are possible for execution with short time-scales. This is a benefit from automated design techniques not observed in \{MDWE\} approaches based on manual design tasks. We also report on previous experiences and address open questions relevant for the theory and practice of MDWE. },
  doi      = {http://dx.doi.org/10.1016/j.jss.2016.04.060},
  groups   = {ScienceDirect,, excluidos},
  issn     = {0164-1212},
  keywords = {Model-driven web engineering, Rapid application prototype, Domain-specific language, Prototyping, Automated design, Mockup, Experience report },
  url      = {http://www.sciencedirect.com/science/article/pii/S0164121216300358},
}

@Article{Clark2015589,
  author   = {Tony Clark},
  title    = {XPL: A language for modular homogeneous language embedding},
  journal  = {Science of Computer Programming},
  year     = {2015},
  volume   = {98, Part 4},
  pages    = {589 - 616},
  abstract = {Abstract Languages that are used for Software Language Engineering (SLE) offer a range of features that support the construction and deployment of new languages. \{SLE\} languages offer features for constructing and processing syntax and defining the semantics of language features. New languages may be embedded within an existing language (internal) or may be stand-alone (external). Modularity is a desirable \{SLE\} property for which there is no generally agreed approach. This article analyses the current tools for \{SLE\} and identifies the key features that are common. It then proposes a language called \{XPL\} that supports these features. \{XPL\} is higher-order and allows languages to be constructed and manipulated as first-class elements and therefore can be used to represent a range of approaches to modular language definition. This is validated by using \{XPL\} to define the notion of a language module that supports modular language construction and language transformation. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2014.08.005},
  groups   = {SCOPUS, excluidos},
  issn     = {0167-6423},
  keywords = {Domain specific languages, Software language engineering, Language modules },
  url      = {http://www.sciencedirect.com/science/article/pii/S0167642314003670},
}

@Article{Rakotoarivelo2014173,
  author        = {Thierry Rakotoarivelo and Guillaume Jourjon and Max Ott},
  title         = {Designing and orchestrating reproducible experiments on federated networking testbeds},
  journal       = {Computer Networks},
  year          = {2014},
  volume        = {63},
  pages         = {173 - 187},
  note          = {Special issue on Future Internet Testbeds − Part \{II\}},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract In addition to theoretical analysis and simulations, the evaluation of new networking technologies in a real-life context and scale is critical to their global adoption and deployment. Federations of experimental platforms (aka testbeds) offer a controlled and cost-effective solution to perform such an evaluation. Most recent efforts in that area focused on building those facilities and providing experimenters with tools to allow the discovery and provisioning of their shared resources. Many challenges remain in order to support the complete experiment life cycle in a federated environment. We propose OMF-F, a framework which allows the definition of networking experiments and their execution over shared resources provided by different federated administrative domains. OMF-F provides a domain-specific language enabling rich event-based experiment descriptions. It defines a specific resource model and protocol, which together with its publish-subscribe messaging system allows automatic experiment orchestrations at a large scale. OMF-F further provides interfaces to operate with existing resource discovery and provisioning tools for federated testbeds. Our contributions in this paper are threefold. First we provide detailed descriptions of OMF-F’s design, its architecture, and its involved entities. Then, we present a quantitative evaluation of its underlying messaging and event-handling systems. Finally, we discuss two real examples of OMF-F deployed and used on federated domains to define and execute experiments. },
  doi           = {http://dx.doi.org/10.1016/j.bjp.2013.12.033},
  groups        = {SCOPUS, Duplicados},
  issn          = {1389-1286},
  keywords      = {Federation, Testbeds, Experiment definition and orchestration, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1389128613004465},
}

@Article{Rupanov2014161,
  author   = {V. Rupanov and C. Buckl and L. Fiege and M. Armbruster and A. Knoll and G. Spiegelberg},
  title    = {Employing early model-based safety evaluation to iteratively derive E/E architecture design},
  journal  = {Science of Computer Programming},
  year     = {2014},
  volume   = {90, Part B},
  pages    = {161 - 179},
  note     = {Special Issue on Component-Based Software Engineering and Software Architecture},
  abstract = {Abstract \{ISO\} 26262 addresses development of safe in-vehicle functions by specifying methods potentially used in the design and development lifecycle. It does not indicate what is sufficient and leaves room for interpretation. Yet the architects of electric/electronic systems need design boundaries to make decisions during architecture evolutionary design without adding a risk of late changes. Correct selection of safety mechanisms from alternatives at early design stages is vital for time-to-market of critical systems. In this paper we present and discuss an iterative architecture design and refinement process that is centered around \{ISO\} 26262 requirements and model-based analysis of safety-related metrics. This process simplifies identification of the most sensitive parts of the architecture, selection of the best suitable safety mechanisms to reduce thereby failure rate on the system level and improve the metrics defined by the standard. To support the defined process we present the metamodels that can be integrated with existing \{DSL\} (domain-specific language) frameworks to extend them with information supporting further extraction of fault propagation behavior. We provide a framework for architecture model analysis and selection of safety mechanisms. We provide details on the model-based toolset that has been developed to support the proposed analysis and synthesis methods, and demonstrate its application to analysis of a steer-by-wire system model and selection of safety mechanisms for it. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2013.10.005},
  groups   = {ScienceDirect, excluidos},
  issn     = {0167-6423},
  keywords = {Automotive systems, Embedded systems, Model-driven engineering, Quantitative safety analysis, ISO 26262 },
  url      = {http://www.sciencedirect.com/science/article/pii/S0167642313002554},
}

@Article{Sohr20121396,
  author        = {Karsten Sohr and Mirco Kuhlmann and Martin Gogolla and Hongxin Hu and Gail-Joon Ahn},
  title         = {Comprehensive two-level analysis of role-based delegation and revocation policies with \{UML\} and \{OCL\}},
  journal       = {Information and Software Technology},
  year          = {2012},
  volume        = {54},
  number        = {12},
  pages         = {1396 - 1417},
  note          = {Special Section on Software Reliability and Security},
  __markedentry = {[Neto:5]},
  abstract      = {Context Role-based access control (RBAC) has become the de facto standard for access management in various large-scale organizations. Often role-based policies must implement organizational rules to satisfy compliance or authorization requirements, e.g., the principle of separation of duty (SoD). To provide business continuity, organizations should also support the delegation of access rights and roles, respectively. This, however, makes access control more complex and error-prone, in particular, when delegation concepts interplay with SoD rules. Objective A systematic way to specify and validate access control policies consisting of organizational rules such as SoD as well as delegation and revocation rules shall be developed. A domain-specific language for \{RBAC\} as well as delegation concepts shall be made available. Method In this paper, we present an approach to the precise specification and validation of role-based policies based on \{UML\} and OCL. We significantly extend our earlier work, which proposed a UML-based domain-specific language for RBAC, by supporting delegation and revocation concepts. Result We show the appropriateness of our approach by applying it to a banking application. In particular, we give three scenarios for validating the interplay between SoD rules and delegation/revocation. Conclusion To the best of our knowledge, this is the first attempt to formalize advanced \{RBAC\} concepts, such as history-based SoD as well as various delegation and revocation schemes, with \{UML\} and OCL. With the rich tool support of UML, we believe our work can be employed to validate and implement real-world role-based policies. },
  doi           = {http://dx.doi.org/10.1016/j.infsof.2012.06.008},
  groups        = {Compendex, ACM, SCOPUS, Duplicados},
  issn          = {0950-5849},
  keywords      = {UML, OCL, RBAC, Delegation, Revocation, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0950584912001115},
}

@Article{Brambilla201471,
  author        = {Marco Brambilla and Piero Fraternali},
  title         = {Large-scale Model-Driven Engineering of web user interaction: The WebML and WebRatio experience},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {89, Part B},
  pages         = {71 - 87},
  note          = {Special issue on Success Stories in Model Driven Engineering},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract This paper reports the experience of WebRatio, a company focusing on Model-Driven Engineering (MDE) tools (WebRatio and WebRatio BPM) and services since 2001. The adopted \{MDE\} approach is based on the transformation of models expressed in a Domain Specific Language called WebML (Web Modeling Language) into running applications, with the unique feature of creating not only the back-end data and business logic but also the Web/RIA front-end, without posing any limitation on the graphical and interaction quality of the user interface. WebRatio has been applied in many industrial projects, some of which have delivered large-scale enterprise applications, generated and maintained completely through \{MDE\} practices over the years. In this paper we present the lessons learned within this experience, describe some success stories and show some quantitative information and evaluation on the usage of the approach. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2013.03.010},
  groups        = {SCOPUS, Duplicados},
  issn          = {0167-6423},
  keywords      = {Model-Driven Engineering, Code generation, BPM, IFML, Software engineering, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642313000701},
}

@Article{Blouin2015124,
  author        = {Arnaud Blouin and Naouel Moha and Benoit Baudry and Houari Sahraoui and Jean-Marc Jézéquel},
  title         = {Assessing the use of slicing-based visualizing techniques on the understanding of large metamodels},
  journal       = {Information and Software Technology},
  year          = {2015},
  volume        = {62},
  pages         = {124 - 142},
  __markedentry = {[Neto:5]},
  abstract      = {AbstractContext Metamodels are cornerstones of various metamodeling activities. Such activities consist of, for instance, transforming models into code or comparing metamodels. These activities thus require a good understanding of a metamodel and/or its parts. Current metamodel editing tools are based on standard interactive visualization features, such as physical zooms. Objective However, as soon as metamodels become large, navigating through large metamodels becomes a tedious task that hinders their understanding. So, a real need to support metamodel comprehension appears. Method In this work we promote the use of model slicing techniques to build interactive visualization tools for metamodels. Model slicing is a model comprehension technique inspired by program slicing. We show how the use of Kompren, a domain-specific language for defining model slicers, can ease the development of such interactive visualization features. Results We specifically make four main contributions. First, the proposed interactive visualization techniques permit users to focus on metamodel elements of interest, which aims at improving the understandability. Second, these proposed techniques are developed based on model slicing, a model comprehension technique that involves extracting a subset of model elements of interest. Third, we develop a metamodel visualizer, called Explen, embedding the proposed interactive visualization techniques. Fourth, we conducted experiments. showing that Explen significantly outperforms EcoreTools, in terms of time, correctness, and navigation effort, on metamodeling tasks. Conclusion The results of the experiments, in favor of Explen, show that improving metamodel understanding can be done using slicing-based interactive navigation features. },
  doi           = {http://dx.doi.org/10.1016/j.infsof.2015.02.007},
  groups        = {Compendex, ACM, SCOPUS, Duplicados},
  issn          = {0950-5849},
  keywords      = {Model-Driven Engineering, Metamodel, Class diagram, Visualization, Human–computer interaction, Model slicing, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0950584915000373},
}

@Article{Vara20122368,
  author   = {Juan Manuel Vara and Esperanza Marcos},
  title    = {A framework for model-driven development of information systems: Technical decisions and lessons learned},
  journal  = {Journal of Systems and Software},
  year     = {2012},
  volume   = {85},
  number   = {10},
  pages    = {2368 - 2384},
  note     = {Automated Software Evolution},
  abstract = {In recent years, the impact of the model-driven engineering (MDE) paradigm has resulted in the advent of a number of model-based methodological proposals that leverage the use of models at any stage of the development cycle. Apart from promoting the role of models, \{MDE\} is notable for leveraging the level of automation along the development process. For this to be achieved there is a need of supporting frameworks, tools or environments. This way, while accompanying any methodological proposal of the corresponding technical support has been traditionally recognized as a good practice, it becomes a mandatory requirement in \{MDE\} contexts. To address this task, this work presents in a systematic and reasoned way the set of methodological and technical decisions that drove the specification of M2DAT, a technical solution for model-driven development of Information Systems and its reference implementation: M2DAT-DB, a \{DSL\} toolkit for model-driven development of modern \{DB\} schemas. The objective of this work is to put forward the conclusions and decisions derived from the experience of the authors when designing and building such framework. As a result, this work will help not only \{MDE\} practitioners, but also \{SE\} practitioners wishing to bring the advantages of \{MDE\} to their fields of interest. },
  doi      = {http://dx.doi.org/10.1016/j.jss.2012.04.080},
  groups   = {SCOPUS,, excluidos},
  issn     = {0164-1212},
  keywords = {Model-driven engineering, Domain-specific modeling, Software development frameworks },
  url      = {http://www.sciencedirect.com/science/article/pii/S0164121212001367},
}

@Article{Viana20133123,
  author   = {Matheus C. Viana and Rosângela A.D. Penteado and Antônio F. do Prado},
  title    = {Domain-Specific Modeling Languages to improve framework instantiation},
  journal  = {Journal of Systems and Software},
  year     = {2013},
  volume   = {86},
  number   = {12},
  pages    = {3123 - 3139},
  abstract = {Abstract Frameworks are reusable software composed of concrete and abstract classes that implement the functionality of a domain. Applications reuse frameworks to enhance quality and development efficiency. However, frameworks are hard to learn and reuse. Application developers must understand the complex class hierarchy of the framework to instantiate it properly. In this paper, we present an approach to build a Domain-Specific Modeling Language (DSML) of a framework and use it to facilitate framework reuse during application development. The \{DSML\} of a framework is built by identifying the features of this framework and the information required to instantiate them. Application generators transform models created with the \{DSML\} into application code, hiding framework complexities. In this paper, we illustrate the use of our approach in a framework for the domain of business resource transactions and a experiment that evaluated the efficiency obtained with our approach. },
  doi      = {http://dx.doi.org/10.1016/j.jss.2013.07.030},
  groups   = {ScienceDirect, Inclusos},
  issn     = {0164-1212},
  keywords = {Framework, Domain-Specific Modeling Language, Reuse },
  url      = {http://www.sciencedirect.com/science/article/pii/S0164121213001775},
}

@Article{Barbier2015173,
  author   = {Guillaume Barbier and Véronique Cucchi and David R.C. Hill},
  title    = {Model-driven engineering applied to crop modeling},
  journal  = {Ecological Informatics},
  year     = {2015},
  volume   = {26, Part 2},
  pages    = {173 - 181},
  note     = {Information and Decision Support Systems for Agriculture and Environment},
  abstract = {Abstract At the crossroads of two disciplines, Computer Science and Agronomy, we propose the use of Model-Driven Engineering which has the potential to be the future of software engineering. This work was initiated to tackle issues met by the \{ITK\} Company in developing and designing new crop models for decision support systems. We aim in the long-run at a full-fledge crop modeling and simulation environment. The metamodel and graphical concrete syntax designed are overcoming the lack of formal tool for conceptual modeling. The presented prototype permits to improve \{ITK\} production process through the use of code generation techniques and the feedback of its industrial use is given. },
  doi      = {http://dx.doi.org/10.1016/j.ecoinf.2014.05.004},
  groups   = {, SCOPUS, excluidos},
  issn     = {1574-9541},
  keywords = {Crop model design, Model-Driven Engineering, Domain Specific Language, Visual modeling, Code generation },
  url      = {http://www.sciencedirect.com/science/article/pii/S1574954114000508},
}

@Article{FortmannRoe201428,
  author   = {Scott Fortmann-Roe},
  title    = {Insight Maker: A general-purpose tool for web-based modeling \& simulation},
  journal  = {Simulation Modelling Practice and Theory},
  year     = {2014},
  volume   = {47},
  pages    = {28 - 45},
  abstract = {Abstract A web-based, general-purpose simulation and modeling tool is presented in this paper. The tool, Insight Maker, has been designed to make modeling and simulation accessible to a wider audience of users. Insight Maker integrates three general modeling approaches – System Dynamics, Agent-Based Modeling, and imperative programming – in a unified modeling framework. The environment provides a graphical model construction interface that is implemented purely in client-side code that runs on users’ machines. Advanced features, such as model scripting and an optimization tool, are also described. Insight Maker, under development for several years, has gained significant adoption with currently more than 20,000 registered users. In addition to detailing the tool and its guiding philosophy, this first paper on Insight Maker describes lessons learned from the development of a complex web-based simulation and modeling tool. },
  doi      = {http://dx.doi.org/10.1016/j.simpat.2014.03.013},
  groups   = {ScienceDirect, excluidos},
  issn     = {1569-190X},
  keywords = {Modeling, Simulation, Web-based technologies, System Dynamics, Agent-Based Modeling },
  url      = {http://www.sciencedirect.com/science/article/pii/S1569190X14000513},
}

@Article{Freudenthal201585,
  author        = {Margus Freudenthal},
  title         = {Simpl \{DSL\} toolkit},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {85 - 91},
  note          = {\{LDTA\} (Language Descriptions, Tools, and Applications) Tool Challenge},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract This paper describes \{LDTA\} tool challenge entry that is implemented using Simpl \{DSL\} toolkit. Simpl is targeted at enterprise software development, helping to create \{DSL\} implementations that can be embedded into other systems. Simpl builds up on top of existing tools and programming languages and adds: a simple language for grammar descriptions that can be used to generate both the parser and the data types for representing abstract syntax trees; a pretty-printing library; an \{IDE\} framework; and integration layer that combines all components into a single whole and minimizes the need for boilerplate code. When implementing the challenge, Simpl provided direct support for parsing and code generation tasks. Name and type checking were implemented in Scala. In addition to the challenge task, Simpl was used to create an Eclipse-based \{IDE\} for the target language. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2014.11.018},
  groups        = {ACM, Compendex, SCOPUS, Duplicados},
  issn          = {0167-6423},
  keywords      = {Simpl \{DSL\} toolkit, Tool challenge, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642314005590},
}

@Article{Nadas2014105,
  author        = {Andras Nadas and Tihamer Levendovszky and Ethan K. Jackson and Istvan Madari and Janos Sztipanovits},
  title         = {A model-integrated authoring environment for privacy policies},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {89, Part B},
  pages         = {105 - 125},
  note          = {Special issue on Success Stories in Model Driven Engineering},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Privacy policies are rules designed to ensure that individuals’ health data are properly protected. Health Information Systems (HIS) are legally required to adhere to these policies. Since privacy policies are imposed on complex software systems, it is extremely hard to reason about their conformance and consistency. In order to address this problem, we have created a model-driven authoring environment to formally specify privacy policies originally defined in legal terms. In our observation, appropriate formalization of our policy language enabled formal analysis of its policies; these features were key to a successful model-driven engineering process. In this paper we present our modeling language and show its semantic anchoring to analyzable logic programs. We report on several projects where our approach is being applied and validated. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2013.05.004},
  groups        = {ACM, Duplicados},
  issn          = {0167-6423},
  keywords      = {Privacy policies, Model-integrated computing, Constraint logic programming, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S016764231300124X},
}

@Article{Nguyen201562,
  author        = {Phu H. Nguyen and Max Kramer and Jacques Klein and Yves Le Traon},
  title         = {An extensive systematic review on the Model-Driven Development of secure systems},
  journal       = {Information and Software Technology},
  year          = {2015},
  volume        = {68},
  pages         = {62 - 81},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Context: Model-Driven Security (MDS) is as a specialised Model-Driven Engineering research area for supporting the development of secure systems. Over a decade of research on \{MDS\} has resulted in a large number of publications. Objective: To provide a detailed analysis of the state of the art in MDS, a systematic literature review (SLR ) is essential. Method: We conducted an extensive \{SLR\} on MDS. Derived from our research questions, we designed a rigorous, extensive search and selection process to identify a set of primary \{MDS\} studies that is as complete as possible. Our three-pronged search process consists of automatic searching, manual searching, and snowballing. After discovering and considering more than thousand relevant papers, we identified, strictly selected, and reviewed 108 \{MDS\} publications. Results: The results of our \{SLR\} show the overall status of the key artefacts of MDS, and the identified primary \{MDS\} studies. For example, regarding security modelling artefact, we found that developing domain-specific languages plays a key role in many \{MDS\} approaches. The current limitations in each \{MDS\} artefact are pointed out and corresponding potential research directions are suggested. Moreover, we categorise the identified primary \{MDS\} studies into 5 significant \{MDS\} studies, and other emerging or less common \{MDS\} studies. Finally, some trend analyses of \{MDS\} research are given. Conclusion: Our results suggest the need for addressing multiple security concerns more systematically and simultaneously, for tool chains supporting the \{MDS\} development cycle, and for more empirical studies on the application of \{MDS\} methodologies. To the best of our knowledge, this \{SLR\} is the first in the field of Software Engineering that combines a snowballing strategy with database searching. This combination has delivered an extensive literature study on MDS. },
  doi           = {http://dx.doi.org/10.1016/j.infsof.2015.08.006},
  groups        = {SCOPUS, ACM, Duplicados},
  issn          = {0950-5849},
  keywords      = {Systematic review, Model-Driven Security, MDS, Model-Driven Engineering, MDE, Software security engineering, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0950584915001482},
}

@Article{Sun2016146,
  author        = {Yu Sun and Jules White and Sean Eade and Douglas C. Schmidt},
  title         = {ROAR: A QoS-oriented modeling framework for automated cloud resource allocation and optimization},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {116},
  pages         = {146 - 161},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Cloud computing offers a fast, easy and cost-effective way to configure and allocate computing resources for web applications, such as consoles for smart grid applications, medical records systems, and security management platforms. Although a diverse collection of cloud resources (e.g., servers) is available, choosing the most optimized and cost-effective set of cloud resources for a given web application and set of quality of service (QoS) goals is not a straightforward task. Optimizing cloud resource allocation is a critical task for offering web applications using a software as a service model in the cloud, where minimizing operational cost while ensuring QoS goals are met is critical to meeting customer demands and maximizing profit. Manual load testing with different sets of cloud resources, followed by comparison of test results to QoS goals is tedious and inaccurate due to the limitations of the load testing tools, challenges characterizing resource utilization, significant manual test orchestration effort, and challenges identifying resource bottlenecks. This paper introduces our work using a modeling framework – \{ROAR\} (Resource Optimization, Allocation and Recommendation System) to simplify, optimize, and automate cloud resource allocation decisions to meet QoS goals for web applications, including complex multi-tier application distributed in different server groups. \{ROAR\} uses a domain-specific language to describe the configuration of the web application, the \{APIs\} to benchmark and the expected QoS requirements (e.g., throughput and latency), and the resource optimization engine uses model-based analysis and code generation to automatically deploy and load test the application in multiple resource configurations in order to derive a cost-optimal resource configuration that meets the QoS goals. },
  doi           = {http://dx.doi.org/10.1016/j.jss.2015.08.006},
  groups        = {SCOPUS, Duplicados},
  issn          = {0164-1212},
  keywords      = {Cloud computing, Resource optimization, Load testing and benchmarking, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0164121215001715},
}

@Article{Cabanillas201555,
  author        = {Cristina Cabanillas and Manuel Resinas and Adela del-Río-Ortega and Antonio Ruiz-Cortés},
  title         = {Specification and automated design-time analysis of the business process human resource perspective},
  journal       = {Information Systems},
  year          = {2015},
  volume        = {52},
  pages         = {55 - 82},
  note          = {Special Issue on Selected Papers from \{SISAP\} 2013},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The human resource perspective of a business process is concerned with the relation between the activities of a process and the actors who take part in them. Unlike other process perspectives, such as control flow, for which many different types of analyses have been proposed, such as finding deadlocks, there is an important gap regarding the human resource perspective. Resource analysis in business processes has not been defined, and only a few analysis operations can be glimpsed in previous approaches. In this paper, we identify and formally define seven design-time analysis operations related to how resources are involved in process activities. Furthermore, we demonstrate that for a wide variety of resource-aware \{BP\} models, those analysis operations can be automated by leveraging Description Logic (DL) off-the-shelf reasoners. To this end, we rely on Resource Assignment Language (RAL), a domain-specific language that enables the definition of conditions to select the candidates to participate in a process activity. We provide a complete formal semantics for \{RAL\} based on \{DLs\} and extend it to address the operations, for which the control flow of the process must also be taken into consideration. A proof-of-concept implementation has been developed and integrated in a system called CRISTAL. As a result, we can give an automatic answer to different questions related to the management of resources in business processes at design time. },
  doi           = {http://dx.doi.org/10.1016/j.is.2015.03.002},
  groups        = {ACM, Duplicados},
  issn          = {0306-4379},
  keywords      = {Automated analysis, Analysis operation, Business process management, Human resource perspective, RAL, Resource assignment, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0306437915000460},
}

@Article{Burton201411,
  author   = {Frank R. Burton and Richard F. Paige and Simon Poulding and Simon Smith},
  title    = {System of Systems Acquisition Trade-offs},
  journal  = {Procedia Computer Science},
  year     = {2014},
  volume   = {28},
  pages    = {11 - 18},
  note     = {2014 Conference on Systems Engineering Research},
  abstract = {Abstract During System of Systems acquisition, organisations aim to satisfy their goals through the procurement of systems, people, training and processes. The most successful organisations undertake these acquisitions as efficiently as possible. For large organisations, a set of goals may be satisfied – to varying degrees – by any one of a large number of potential resource combinations, and so it is necessary to consider the trade-offs exhibited by each combination to find an effective System of Systems architecture. In this paper, we present an approach, supported by tools, that combines techniques from the fields of goal-modelling and multi-objective optimisation to effectively explore these high-level organisational trade-offs. The decision maker can state the organisational problems and provide high-level descriptions of the existing and acquirable systems using a custom domain specific language. The tool then explores the space of potential resource combinations using a multi-objective genetic algorithm and provides the decision maker with a Pareto front of acquisition plans that represent the best trade-offs between the various goals and costs. Furthermore, the technique and tool enables acquisitions to be scheduled to take an account of such factors as maintenance costs, existing system retirement dates, upfront costs for bringing new systems into service, the budgetary constraints of the organisation and how this affects the organisation's ability to satisfy its goals through the acquisition. The approach is evaluated on a realistic case study in which new systems are acquired to support a military scenario whilst considering the existing in-place systems and through-life implications. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2014.03.002},
  groups   = {SCOPUS, excluidos},
  issn     = {1877-0509},
  keywords = {System of Systems, Acquisition, Trade-offs, Goal Modelling, Metaheuristic Search },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050914000659},
}

@Article{Kosar2014622,
  author        = {Tomaž Kosar and Marjan Mernik and Jeff Gray and Tomaž Kos},
  title         = {Debugging measurement systems using a domain-specific modeling language},
  journal       = {Computers in Industry},
  year          = {2014},
  volume        = {65},
  number        = {4},
  pages         = {622 - 635},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Capturing physical data in the context of measurement systems is a demanding process that often requires many repetitions with different settings. To assist in this activity, a domain-specific modeling language (DSML) called Sequencer has been developed to enable the improved definition of measurement procedures. With Sequencer, the level of abstraction has been raised and sophisticated changes in measurement procedures are now enabled. Although there are numerous \{DSMLs\} like Sequencer in the existing literature, there are some obstacles working against the more widespread adoption of \{DSMLs\} in practice. One challenge is the lack of supporting tools for DSMLs, which would improve the capabilities of end-users of such languages. For instance, support for debugging a model expressed in a \{DSML\} is often neglected. The lack of a debugger at the proper abstraction level limits the domain experts in discovering and locating bugs in a model. In this paper, Sequencer is presented together with debugging facilities (called Ladybird) that are integrated in a modeling environment. Ladybird supports different execution modes (e.g., steps, breakpoints, animations, variable views, and stack traces) that can be helpful during the debugging of a model. Ladybird's primary contribution is in showing the value of error detection in complicated industrial environments, such as data acquisition in automotive testing. The paper contributes to a discussion of the implementation details of \{DSML\} debugging facilities and how such a debugger can be reused to support domains other than the measurement context of Sequencer. },
  doi           = {http://dx.doi.org/10.1016/j.compind.2014.01.013},
  groups        = {SCOPUS, Duplicados},
  issn          = {0166-3615},
  keywords      = {Debugging aid, Domain-specific modeling languages, Graphical environments, Usage experience, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0166361514000293},
}

@InCollection{Selić2014183,
  author    = {Bran Selić and Sébastien Gérard},
  title     = {Chapter 9 - Foundations for Model-Based Analysis},
  booktitle = {Modeling and Analysis of Real-Time and Embedded Systems with \{UML\} and \{MARTE\}},
  publisher = {Morgan Kaufmann},
  year      = {2014},
  editor    = {Selić, Bran and , and Gérard, Sébastien},
  pages     = {183 - 200},
  address   = {Boston},
  abstract  = {In addition to providing a domain-specific language for modeling of real-time systems phenomena, \{MARTE\} also supports formal model analysis. To that end, it first defines a generic framework, called Generic Quantitative Analysis Modeling (GQAM), which serves as a common basis for a variety of different formal analysis techniques. The common characteristic shared by these analyses is that they are all used to determine whether a particular platform is capable of providing the quality of service (QoS) required by an application. Both the Schedulability Analysis Modeling (SAM) subprofile and the Performance Analysis Modeling (PAM) subprofile of \{MARTE\} are based on the general concepts defined in GQAM. This chapter first describes a generic iterative analysis process, which explains how these types of analysis methods can be used in an agile way during design exploration. This is followed by a discussion of the general \{MARTE\} approach to model analysis and an explanation of the core concepts behind the \{GQAM\} framework. The material in this chapter is a prerequisite for anyone who is interested in applying the \{SAM\} or \{PAM\} subprofiles, as well as for those who are interested in using \{GQAM\} to support additional analysis methods. },
  doi       = {http://dx.doi.org/10.1016/B978-0-12-416619-6.00009-2},
  groups    = {ScienceDirect, excluidos},
  isbn      = {978-0-12-416619-6},
  keywords  = {Analysis, client/server, evolutionary prototyping, load modeling, mechanical verification, modeling and prediction, performance attributes, quality analysis and evaluation, relations between models, risk management, software process models, system-level design, tools, validation },
  url       = {http://www.sciencedirect.com/science/article/pii/B9780124166196000092},
}

@Article{Hamid2016239,
  author   = {Brahim Hamid and Jon Perez},
  title    = {Supporting pattern-based dependability engineering via model-driven development: Approach, tool-support and empirical validation},
  journal  = {Journal of Systems and Software},
  year     = {2016},
  volume   = {122},
  pages    = {239 - 273},
  abstract = {Abstract Safety-critical systems require a high level of safety and integrity. Therefore, generating such systems involves specific software building processes. Many domains are not traditionally involved in these types of software problems and must adapt their current processes accordingly. Typically, such requirements are developed ad hoc for each system, preventing further reuse beyond the domain-specific boundaries. This paper proposes a solution for software system development based on the reuse of dedicated subsystems, i.e., so-called dependability patterns that have been pre-engineered to adapt to a specific domain. We use Model-Driven Engineering (MDE) to describe dependability patterns and a methodology for developing dependable software systems using these patterns. Moreover, we describe an operational architecture for development tools to support the approach. An empirical evaluation of the proposed approach is presented through its practical application to a case study in the railway domain, which has strong dependability requirements, to support a pattern-based development approach. This case study is followed by a survey to better understand the perceptions of practitioners regarding our approach. },
  doi      = {http://dx.doi.org/10.1016/j.jss.2016.09.027},
  groups   = {ScienceDirect, excluidos},
  issn     = {0164-1212},
  keywords = {Dependability, Safety, System engineering, Patterns, Meta-modeling, Model driven engineering },
  url      = {http://www.sciencedirect.com/science/article/pii/S0164121216301868},
}

@Article{Chabridon20131912,
  author   = {Sophie Chabridon and Denis Conan and Zied Abid and Chantal Taconet},
  title    = {Building ubiquitous QoC-aware applications through model-driven software engineering},
  journal  = {Science of Computer Programming},
  year     = {2013},
  volume   = {78},
  number   = {10},
  pages    = {1912 - 1929},
  note     = {Special section on Language Descriptions Tools and Applications (LDTA’08 \&amp; ’09) \&amp; Special section on Software Engineering Aspects of Ubiquitous Computing and Ambient Intelligence (UCAmI 2011)},
  abstract = {As every-day mobile devices can easily be equipped with multiple sensing capabilities, ubiquitous applications are expected to exploit the richness of the context information that can be collected by these devices in order to provide the service that is the most appropriate to the situation of the user. However, the design and implementation of such context-aware ubiquitous appplications remain challenging as there exist very few models and tools to guide application designers and developers in mastering the complexity of context information. This becomes even more crucial as context is by nature imperfect. One way to address this issue is to associate to context information meta-data representing its quality. We propose a generic and extensible design process for context-aware applications taking into account the quality of context (QoC). We demonstrate its use on a prototype application for sending flash sale offers to mobile users. We present extensive performance results in terms of memory and processing time of both elementary context management operations and the whole context policy implementing the Flash sale application. The cost of adding QoC management is also measured and appears to be limited to a few milliseconds. We show that a context policy with 120 QoC-aware nodes can be processed in less than 100 ms on a mobile phone. Moreover, a policy of almost 3000 nodes can be instantiated before exhausting the resources of the phone. This enables very rich application scenarios enhancing the user experience and will favor the development of new ubiquitous applications. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2012.07.019},
  groups   = {SCOPUS, excluidos},
  issn     = {0167-6423},
  keywords = {Model-driven software engineering, Context, Quality of context, Domain specific language, Ubiquitous computing, Pervasive computing },
  url      = {http://www.sciencedirect.com/science/article/pii/S0167642312001475},
}

@Article{Yang2013167,
  author   = {Shahan Yang and Yuchen Zhou and John Baras},
  title    = {Compositional Analysis of Dynamic Bayesian Networks and Applications to Complex Dynamic System Decomposition},
  journal  = {Procedia Computer Science},
  year     = {2013},
  volume   = {16},
  pages    = {167 - 176},
  note     = {2013 Conference on Systems Engineering Research},
  abstract = {Dynamic Bayesian networks (DBNs) can be effectively used to model various problems in complex dynamic systems. We perform an empirical investigation on compositional analysis of \{DBNs\} using abstraction. In static systems and hidden Markov models, computation of a metric called treewidth induces a tree decomposition that can be used to perform logical or probabilistic inference and max + optimizations in time exponential in treewidth and linear in overall system size. Intuitively, the linear scaling means that very large systems can be analyzed as long as they are sufficiently sparse and well structured. In these simple cases, summary propagation, which uses two operations, summation (projection) and product (composition), suffices to perform the inference or optimization. Here, we begin an extension of this to structured networks of communicating dynamic systems. We define generalizations of projection and composition operators that treat labeled Markov chains as primitive objects. The projection operation, corresponding to summation, is implemented as label deletion followed by exact state reduction for Markov chains, similar to Hopcroft's \{DFA\} minimization algorithm, with O(nlogm) complexity. The composition operation is the product of state machines. We use canonical MDDs, similar to BDDs, to capture logical dependencies symbolically. Combining symbolic representations with Markov chain lumping algorithms is a novel contribution. Using this approach, we have created a tool lever- aging model based systems engineering technologies. The communicating Markov chains are specified using \{UML\} Statecharts via Papyrus extended using an \{ANTLR\} parsed domain specific language (DSL). The tool reduces the number of states in networks of Markov chains by several orders of magnitude. In one example, a network having a product state space of more than 600 million states is reduced to about 500 states. A feature of this technique is that the state space is examined incrementally, meaning that the full state space is never explicitly represented, even as an input to the reduction algorithm. The primary reduction appears to come from symmetry which is surprising because the technique includes no explicit symmetry handling. We note that composition is efficient at least for systems with high symmetry. We describe applications to a hospital intensive care unit (ICU) from a systems engineering perspective. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2013.01.018},
  groups   = {SCOPUS, excluidos},
  issn     = {1877-0509},
  keywords = {Bayesian networks, Treewidth, Markov chain },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050913000197},
}

@Article{CánovasIzquierdo2012257,
  author        = {Javier Luis Cánovas Izquierdo and Frédéric Jouault and Jordi Cabot and Jesús García Molina},
  title         = {API2MoL: Automating the building of bridges between \{APIs\} and Model-Driven Engineering},
  journal       = {Information and Software Technology},
  year          = {2012},
  volume        = {54},
  number        = {3},
  pages         = {257 - 273},
  __markedentry = {[Neto:5]},
  abstract      = {Context A software artefact typically makes its functionality available through a specialized Application Programming Interface (API) describing the set of services offered to client applications. In fact, building any software system usually involves managing a plethora of APIs, which complicates the development process. In Model-Driven Engineering (MDE), where models are the key elements of any software engineering activity, this \{API\} management should take place at the model level. Therefore, tools that facilitate the integration of \{APIs\} and \{MDE\} are clearly needed. Objective Our goal is to automate the implementation of API–MDE bridges for supporting both the creation of models from \{API\} objects and the generation of such \{API\} objects from models. In this sense, this paper presents the \{API2MoL\} approach, which provides a declarative rule-based language to easily write mapping definitions to link \{API\} specifications and the metamodel that represents them. These definitions are then executed to convert \{API\} objects into model elements or vice versa. The approach also allows both the metamodel and the mapping to be automatically obtained from the \{API\} specification (bootstrap process). Method After implementing the \{API2MoL\} engine, its correctness was validated using several APIs. Since \{APIs\} are normally large, we then developed a tool to implement the bootstrap process, which was also validated. Results We provide a toolkit (language and bootstrap tool) for the creation of bridges between \{APIs\} and MDE. The current implementation focuses on Java APIs, although its adaptation to other statically typed object-oriented languages is straightforward. The correctness, expressiveness and completeness of the approach have been validated with the Swing, \{SWT\} and \{JTwitter\} APIs. Conclusion \{API2MoL\} frees developers from having to manually implement the tasks of obtaining models from \{API\} objects and generating such objects from models. This helps to manage \{API\} models in MDE-based solutions. },
  doi           = {http://dx.doi.org/10.1016/j.infsof.2011.09.006},
  groups        = {SCOPUS, Duplicados},
  issn          = {0950-5849},
  keywords      = {Application Programming Interface, Model-Driven Engineering, Domain-Specific Languages, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0950584911001984},
}

@Article{Bollati2013699,
  author        = {Verónica Andrea Bollati and Juan Manuel Vara and Álvaro Jiménez and Esperanza Marcos},
  title         = {Applying \{MDE\} to the (semi-)automatic development of model transformations},
  journal       = {Information and Software Technology},
  year          = {2013},
  volume        = {55},
  number        = {4},
  pages         = {699 - 718},
  __markedentry = {[Neto:5]},
  abstract      = {Context Model transformations play a key role in any software development project based on Model-Driven Engineering principles. However, despite the inherent complexity of developing model transformations, little attention has been paid to the application of \{MDE\} principles to the development of model transformations. Objective In order to: (a) address the inherent complexity of model transformation development and (b) alleviate the problem of the diversity of the languages that are available for model transformation, this paper proposes the application of \{MDE\} principles to the development of model transformations. In particular, we have adopted the idea of handling model transformations as transformation models in order to be able to model, transform and generate model transformations. Method The proposal follows an MDA-based approach that entails the modeling of model transformations at different abstraction levels and the connection of these models by means of model transformations. It has been empirically validated by conducting a set of case studies following a systematic research methodology. Results The proposal was supported by the introduction of MeTAGeM, a methodological and technical framework for the model-driven development of model transformations that bundles a set of Domain-Specific Languages for modeling model transformations with a set of model transformations in order to bridge these languages and (semi-)automate model transformations development. Conclusion This paper serves to show that a semi-automatic development process for model transformations is not only desirable but feasible. This process, based on \{MDE\} principles, helps to ease the task of developing model transformations and to alleviate interoperability issues between model transformation languages. },
  doi           = {http://dx.doi.org/10.1016/j.infsof.2012.11.004},
  groups        = {SCOPUS, Duplicados},
  issn          = {0950-5849},
  keywords      = {Model transformations, Model-driven development, Design tools and techniques, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0950584912002303},
}

@Article{AzadiMarand2015319,
  author        = {Elaheh Azadi Marand and Elham Azadi Marand and Moharram Challenger},
  title         = {DSML4CP: A Domain-specific Modeling Language for Concurrent Programming},
  journal       = {Computer Languages, Systems \& Structures},
  year          = {2015},
  volume        = {44, Part C},
  pages         = {319 - 341},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Nowadays, concurrent programs are an inevitable part of many software applications. They can increase the computation performance of the applications by parallelizing their computations. One of the approaches to realize the concurrency is using multi thread programming. However, these systems are structurally complex considering the control of the parallelism (such as thread synchronization and resource control) and also considering the interaction between their components. So, the design of these systems can be difficult and their implementation can be error-prone especially when the addressed system is big and complex. On the other hand, a Domain-specific Modeling Language (DSML) is one of the Model Driven Development (MDD) approaches which tackles this problem. Since \{DSMLs\} provide a higher abstraction level, they can lead to reduce the complexities of the concurrent programs. With increasing the abstraction level and generating the artifacts automatically, the performance of developing the software (both in design and implementation phases) is increased, and the efficiency is raised by reducing the probability of occurring errors. Thus, in this paper, a \{DSML\} is proposed for concurrent programs, called DSML4CP, to work in a higher level of abstraction than code level. To this end, the concepts of concurrent programs and their relationships are presented in a metamodel. The proposed metamodel provides a context for defining abstract syntax, and concrete syntax of the DSML4CP. This new language is supported by a graphical modeling tool which can visualize different instance models for domain problems. In order to clarify the expressions of the language; the static semantic controls are realized in the form of constraints. Finally, the architectural code generation is fulfilled via model transformation rules using the templates of the concurrent programs. To increase level of the DSML׳s leverage and to demonstrate the general support of concurrent programming by the DSML, the transformation mechanism of the tool supports two well-known and highly used programming languages for code generation; Java and C#. The performed experiments on two case studies indicate a high performance for proposed language. In this regard, the results show automatic generation of 79% of the final code and 86% of the functions/modules on average. },
  doi           = {http://dx.doi.org/10.1016/j.cl.2015.09.002},
  groups        = {Compendex, Duplicados},
  issn          = {1477-8424},
  keywords      = {Domain-specific Modeling Language, Metamodel, Code generation, Constraint control, Concurrent programming, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1477842415000627},
}

@Article{Edge20129966,
  author        = {Michael E. Edge and Pedro R. Falcone Sampaio},
  title         = {The design of FFML: A rule-based policy modelling language for proactive fraud management in financial data streams},
  journal       = {Expert Systems with Applications},
  year          = {2012},
  volume        = {39},
  number        = {11},
  pages         = {9966 - 9985},
  __markedentry = {[Neto:5]},
  abstract      = {Developing fraud management policies and fraud detection systems is a vital capability for financial institutions towards minimising the effect of fraud upon customer service delivery, bottom line financial losses and the adverse impact on the organisation’s brand image reputation. Rapidly changing attacks in real-time financial service platforms continue to demonstrate fraudster’s ability to actively re-engineer their methods in response to ad hoc security protocol deployments, and highlights the distinct gap between the speed of transaction execution within streaming financial data and corresponding fraud technology frameworks that safeguard the platform. This paper presents the design of FFML, a rule-based policy modelling language and encompassing architecture for facilitating the conceptual level expression and implementation of proactive fraud controls within multi-channel financial service platforms. It is demonstrated how a domain specific language can be used to abstract the financial platform into a data stream based information model to reduce policy modelling complexity and deployment latencies through an innovative policy mapping language usable by both expert and non-expert users. \{FFML\} is part of a comprehensive suite of assistive tools and knowledge-based systems developed to support fraud analysts’ daily work of designing new high level fraud management policies, mapping into executable code of the underpinning application programming interface and deployment of active monitoring and compliance functionality within the financial platform. },
  doi           = {http://dx.doi.org/10.1016/j.eswa.2012.01.143},
  groups        = {SCOPUS, ACM, Compendex, Duplicados},
  issn          = {0957-4174},
  keywords      = {Fraud detection, Financial information systems, Rule-based expert systems, Information security, Domain specific policy-based languages, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0957417412001637},
}

@Article{Kos2012181,
  author        = {Tomaž Kos and Tomaž Kosar and Marjan Mernik},
  title         = {Development of data acquisition systems by using a domain-specific modeling language},
  journal       = {Computers in Industry},
  year          = {2012},
  volume        = {63},
  number        = {3},
  pages         = {181 - 192},
  __markedentry = {[Neto:5]},
  abstract      = {Data acquisition is the process of capturing and measuring physical data and then converting the results into a digital form that is further manipulated by a computer program. Within the industry, data acquisition systems (measurement systems) are used in a wide variety of fields, including product quality testing. Usually measuring systems are complicated devices, however newer data acquisition systems tend to be easier to use. As such, they open the door for the development of customized software, which can be easily manipulated, not only by programmers but also by domain experts, enabling them to understand and modify programs. Raising the level of abstraction, particularly with those programs that use visual models, can be an effective aid for domain experts, who are then able to model their programs on their own. This paper describes the design and use of a domain-specific modeling language called the Sequencer, integrated with the measuring equipment DEWESoft, which enables domain experts to model their own data acquisitions. Specifically, in this paper the Sequencer is exposed to: domain concepts identification, the construction of modeling notation, a connection with execution framework, and the end-users’ point of view on the modeling tool. The use of the Sequencer will be presented on car brake tests. For this purpose, the Sequencer has already been successfully applied in the automotive industry. },
  doi           = {http://dx.doi.org/10.1016/j.compind.2011.09.004},
  groups        = {Compendex, Duplicados},
  issn          = {0166-3615},
  keywords      = {Domain-specific modeling languages, Domain-specific languages, Data acquisition, Measuring systems, Brake tests, DEWESoft, Sequencer, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0166361511001059},
}

@Article{Bettini2016655,
  author        = {Lorenzo Bettini},
  title         = {Implementing type systems for the \{IDE\} with Xsemantics},
  journal       = {Journal of Logical and Algebraic Methods in Programming},
  year          = {2016},
  volume        = {85},
  number        = {5, Part 1},
  pages         = {655 - 680},
  note          = {Special Issue on Automated Verification of Programs and Web Systems},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Xsemantics is a \{DSL\} for writing type systems, reduction rules and, in general, relation rules for languages implemented in Xtext (Xtext is an Eclipse framework for rapidly building languages together with all the typical \{IDE\} tooling). Xsemantics aims at reducing the gap between the formalization of a language (i.e., type system and operational semantics) and the actual implementation in Xtext, since it uses a syntax that resembles the rules in a formal setting. In this paper we present the main features of Xsemantics for implementing type systems and reduction rules through examples (Featherweight Java and lambda calculus). We show how such implementations are close to the actual formalizations, and how Xsemantics can be a helpful tool when proving the type safety of a language. We also describe the new features of Xsemantics that help achieving a modular and efficient implementation of type systems. In particular, we focus on specific implementation techniques for implementing type systems that are suited for the \{IDE\} (in our context, Eclipse), in order to keep the tooling responsive and guarantee a good user experience. },
  doi           = {http://dx.doi.org/10.1016/j.jlamp.2015.11.005},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {2352-2208},
  keywords      = {DSL, Type systems, Semantics, Implementation, Eclipse, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S235222081500142X},
}

@Article{David2013201,
  author        = {O. David and J.C. Ascough II and W. Lloyd and T.R. Green and K.W. Rojas and G.H. Leavesley and L.R. Ahuja},
  title         = {A software engineering perspective on environmental modeling framework design: The Object Modeling System},
  journal       = {Environmental Modelling \& Software},
  year          = {2013},
  volume        = {39},
  pages         = {201 - 213},
  note          = {Thematic Issue on the Future of Integrated Modeling Science and Technology},
  __markedentry = {[Neto:5]},
  abstract      = {The environmental modeling community has historically been concerned with the proliferation of models and the effort associated with collective model development tasks (e.g., code generation, data transformation, etc.). Environmental modeling frameworks (EMFs) have been developed to address this problem, but much work remains before \{EMFs\} are adopted as mainstream modeling tools. Environmental model development requires both scientific understanding of environmental phenomena and software developer proficiency. \{EMFs\} support the modeling process through streamlining model code development, allowing seamless access to data, and supporting data analysis and visualization. \{EMFs\} also support aggregation of model components into functional units, component interaction and communication, temporal-spatial stepping, scaling of spatial data, multi-threading/multi-processor support, and cross-language interoperability. Some \{EMFs\} additionally focus on high-performance computing and are tailored for particular modeling domains such as ecosystem, socio-economic, or climate change research. The Object Modeling System Version 3 (OMS3) \{EMF\} employs new advances in software framework design to better support the environmental model development process. This paper discusses key \{EMF\} design goals/constraints and addresses software engineering aspects that have made \{OMS3\} framework development efficacious and its application practical, as demonstrated by leveraging software engineering efforts outside of the modeling community and lessons learned from over a decade of \{EMF\} development. Software engineering approaches employed in \{OMS3\} are highlighted including a non-invasive lightweight framework design supporting component-based model development, use of implicit parallelism in system design, use of domain specific language design patterns, and cloud-based support for computational scalability. The key advancements in \{EMF\} design presented herein may be applicable and beneficial for other \{EMF\} developers seeking to better support environmental model development through improved framework design. },
  doi           = {http://dx.doi.org/10.1016/j.envsoft.2012.03.006},
  groups        = {Compendex, ACM, SCOPUS, Duplicados},
  issn          = {1364-8152},
  keywords      = {Object Modeling System, Environmental modeling frameworks, Modeling and simulation, Software engineering, Software design, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1364815212000886},
}

@Article{Challenger2014111,
  author   = {Moharram Challenger and Sebla Demirkol and Sinem Getir and Marjan Mernik and Geylani Kardas and Tomaž Kosar},
  title    = {On the use of a domain-specific modeling language in the development of multiagent systems},
  journal  = {Engineering Applications of Artificial Intelligence},
  year     = {2014},
  volume   = {28},
  pages    = {111 - 141},
  abstract = {Abstract The study of Multiagent Systems (MASs) focuses on those systems in which many intelligent agents interact with each other. The agents are considered to be autonomous entities which contain intelligence that serves for solving their selfish or common problems, and to achieve certain goals. However, the autonomous, responsive, and proactive natures of agents make the development of agent-based software systems more complex than other software systems. Furthermore, the design and implementation of a \{MAS\} may become even more complex and difficult to implement when considering new requirements and interactions for new agent environments like the Semantic Web. We believe that both domain-specific modeling and the use of a domain-specific modeling language (DSML) may provide the required abstraction, and hence support a more fruitful methodology for the development of MASs. In this paper, we first introduce a \{DSML\} for \{MASs\} called SEA_ML with both its syntax and semantics definitions and then show how the language and its graphical tools can be used during model-driven development of real MASs. In addition to the classical viewpoints of a MAS, the proposed \{DSML\} includes new viewpoints which specifically support the development of software agents working within the Semantic Web environment. The methodology proposed for the \{MAS\} development based on SEA_ML is also discussed including its example application on the development of an agent-based stock exchange system. },
  doi      = {http://dx.doi.org/10.1016/j.engappai.2013.11.012},
  groups   = {SCOPUS, Inclusos},
  issn     = {0952-1976},
  keywords = {Agent, Multiagent system, Model driven development, Domain-specific modeling language, Metamodel, Semantic web },
  url      = {http://www.sciencedirect.com/science/article/pii/S0952197613002297},
}

@Article{Fernandes201546,
  author        = {Andreia Varmes Fernandes and Márcio Viana Ramos and José Hélio Costa and Ilka Maria Vasconcelos and Renato de Azevedo Moreira and Frederico Bruno Mendes Batista Moreno and Maria Eliza Caldas dos Santos and José Francisco de Carvalho Gonçalves},
  title         = {Lectin genes and their mature proteins: Still an exciting matter, as revealed by biochemistry and bioinformatics analyses of newly reported proteins},
  journal       = {Biochemical Systematics and Ecology},
  year          = {2015},
  volume        = {60},
  pages         = {46 - 55},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Two new lectins were purified through affinity chromatography after crude extract preparation under high ionic strength. The hemagglutinating activity of these lectins from the seeds of the legumes Dioclea bicolor (DBL) and Deguelia scandens (DSL) was inhibited by galactose and glucose, respectively, and the molecular masses were estimated at 24 and 22 kDa (via SDS-PAGE), respectively. The alignment of internal peptides of \{DBL\} (MS/MS) with known protein sequences revealed similarity to other legume lectins. The N-terminal amino acid sequence of \{DSL\} also aligned with legume lectins. Cross-similarities among the two studied lectins were observed only after sequence permutation. More than a dozen lectins have been reported for the genus Dioclea but none that recognize galactose. \{DSL\} is the first lectin reported for the Deguelia genus in the tribe Millettieae. With the aid of bioinformatics tools and searches for genome/transcriptome information about closely related sequences, new lectin members of Millettieae were also identified. Electrophoresis profiling and amino acid sequence analysis suggested that DBL-Gal and \{DSL\} do not undergo post-transcriptional ConA-like circular permutation. Molecular modeling of the deduced amino acid sequences of the Millettieae lectins suggested that the overall folding of the monomeric structures of legume lectins is conserved. This and other recent studies highlight native plants of the Amazon as renewed sources of lectins. },
  doi           = {http://dx.doi.org/10.1016/j.bse.2015.02.002},
  groups        = {SCOPUS, Duplicados},
  issn          = {0305-1978},
  keywords      = {Hemagglutinating activity, New lectins, N-terminal protein sequencing, Seeds of Amazonian legumes, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0305197815000496},
}

@Article{Marnerides201572,
  author        = {A.K. Marnerides and S. Malinowski and R. Morla and H.S. Kim},
  title         = {Fault diagnosis in \{DSL\} networks using support vector machines},
  journal       = {Computer Communications},
  year          = {2015},
  volume        = {62},
  pages         = {72 - 84},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract The adequate operation for a number of service distribution networks relies on the effective maintenance and fault management of their underlay \{DSL\} infrastructure. Thus, new tools are required in order to adequately monitor and further diagnose anomalies that other segments of the \{DSL\} network cannot identify due to the pragmatic issues raised by hardware or software misconfigurations. In this work we present a fundamentally new approach for classifying known DSL-level anomalies by exploiting the properties of novelty detection via the employment of one-class Support Vector Machines (SVMs). By virtue of the imbalance residing in the training samples that consequently lead to problematic prediction outcomes when used within two-class formulations, we adopt the properties of one-class classification and construct models for independently identifying and classifying a single type of a DSL-level anomaly. Given the fact that the greater number of the installed Digital Subscriber Line Access Multiplexers (DSLAMs) within the \{DSL\} network of a large European \{ISP\} were misconfigured, thus unable to accurately flag anomalous events, we utilize as inference solutions the models derived by the one-class \{SVM\} formulations built by the known labels as flagged by the much smaller number of correctly configured \{DSLAMs\} in the same network in order to aid the classification aspect against the monitored unlabeled events. By reaching an average over 95% on a number of classification accuracy metrics such as precision, recall and F-score we show that one-class \{SVM\} classifiers overcome the biased classification outcomes achieved by the traditional two-class formulations and that they may constitute as viable and promising components within the design of future network fault management strategies. In addition, we demonstrate their superiority over commonly used two-class machine learning approaches such as Decision Trees and Bayesian Networks that has been used in the same context within past solutions. },
  doi           = {http://dx.doi.org/10.1016/j.comcom.2015.01.006},
  groups        = {ACM, Duplicados},
  issn          = {0140-3664},
  keywords      = {Network management, Support vector machines, Supervised learning, One-class classifiers, DSL anomalies, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0140366415000080},
}

@Article{Maróti20142432,
  author   = {Miklós Maróti and Róbert Kereskényi and Tamás Kecskés and Péter Völgyesi and Ákos Lédeczi},
  title    = {Online Collaborative Environment for Designing Complex Computational Systems},
  journal  = {Procedia Computer Science},
  year     = {2014},
  volume   = {29},
  pages    = {2432 - 2441},
  note     = {2014 International Conference on Computational Science},
  abstract = {Abstract Developers of information systems have always utilized various visual formalisms during the design process, albeit in an informal manner. Architecture diagrams, finite state machines, and signal flow graphs are just a few examples. Model Integrated Computing (MIC) is an approach that considers these design artifacts as first class models and uses them to generate the system or subsystems automatically. Moreover, the same models can be used to analyze the system and generate test cases and documentation. \{MIC\} advocates the formal definition of these formalisms, called domain-specific modeling languages (DSML), via metamodeling and the automatic configuration of modeling tools from the metamodels. However, current \{MIC\} infrastructures are based on desktop applications that support a limited number of platforms, discourage concurrent design collaboration and are not scalable. This paper presents WebGME, a cloud- and web-based cyberinfrastructure to support the collaborative modeling, analysis, and synthesis of complex, large-scale scientific and engineering information systems. It facilitates interfacing with existing external tools, such as simulators and analysis tools, it provides custom domain-specific visualization support and enables the creation of automatic code generators. },
  doi      = {http://dx.doi.org/10.1016/j.procs.2014.05.227},
  groups   = {SCOPUS, excluidos},
  issn     = {1877-0509},
  keywords = {model-based software, online collaboration, automatic code generation, web-based design environment },
  url      = {http://www.sciencedirect.com/science/article/pii/S1877050914004049},
}

@Article{Koshima20153,
  author   = {Amanuel Alemayehu Koshima and Vincent Englebert},
  title    = {Collaborative editing of EMF/Ecore meta-models and models: Conflict detection, reconciliation, and merging in DiCoMEF},
  journal  = {Science of Computer Programming},
  year     = {2015},
  volume   = {113, Part 1},
  pages    = {3 - 28},
  note     = {Model Driven Development (Selected \&amp; extended papers from \{MODELSWARD\} 2014)},
  abstract = {Abstract Despite the fact that Domain Specific Modeling tools are becoming very powerful and more frequently used, the support for their cooperation has not reached its full strength, and demand for model management is growing. In cooperative work, the decision agents are semi-autonomous and therefore a solution for reconciliating \{DSM\} after a concurrent evolution is needed. Conflict detection and reconciliation are important steps for merging of concurrently evolved (meta)models in order to ensure collaboration. In this work, we present a conflict detection, reconciliation and merging framework for concurrently evolved meta-models and models. Additionally, we formally specify the \{EMF\} Ecore meta-model into set constructs that help to analyze the (meta)model and operations performed on it. },
  doi      = {http://dx.doi.org/10.1016/j.scico.2015.07.004},
  groups   = {SCOPUS, IEEE, excluidos},
  issn     = {0167-6423},
  keywords = {EMF, DSML, Collaborative modeling, Conflict detection, Merging },
  url      = {http://www.sciencedirect.com/science/article/pii/S0167642315001380},
}

@Article{Pathak2016149,
  author   = {Pankaj Pathak and Vivek Dhawan and Aniket Magarkar and Reinis Danne and Srinath Govindarajan and Sandipto Ghosh and Frank Steiniger and Pradip Chaudhari and Vijaya Gopal and Alex Bunker and Tomasz Róg and Alfred Fahr and Mangal Nagarsenker},
  title    = {Design of cholesterol arabinogalactan anchored liposomes for asialoglycoprotein receptor mediated targeting to hepatocellular carcinoma: In silico modeling, in vitro and in vivo evaluation},
  journal  = {International Journal of Pharmaceutics},
  year     = {2016},
  volume   = {509},
  number   = {1–2},
  pages    = {149 - 158},
  abstract = {Abstract We have developed active targeting liposomes to deliver anticancer agents to \{ASGPR\} which will contribute to effective treatment of hepatocellular carcinoma. Active targeting is achieved through polymeric ligands on the liposome surface. The liposomes were prepared using reverse phase evaporation method and doxorubicin hydrocholoride, a model drug, was loaded using the ammonium sulphate gradient method. Liposomes loaded with \{DOX\} were found to have a particle size of 200 nm with more than 90% entrapment efficiency. Systems were observed to release the drug in a sustained manner in acidic pH in vitro. Liposomes containing targeting ligands possessed greater and selective toxicity to \{ASGPR\} positive HepG2 cell lines due to specific ligand receptor interaction. Bio-distribution studies revealed that liposomes were concentrated in the liver even after 3 h of administration, thus providing conclusive evidence of targeting potential for formulated nanosystems. Tumor regression studies indicated greater tumor suppression with targeted liposomes thereby establishing superiority of the liposomal system. In this work, we used a novel methodology to guide the determination of the optimal composition of the targeting liposomes: molecular dynamics (MD) simulation that aided our understanding of the behaviour of the ligand within the bilayer. This can be seen as a demonstration of the utility of this methodology as a rational design tool for active targeting liposome formulation. },
  doi      = {http://dx.doi.org/10.1016/j.ijpharm.2016.05.041},
  groups   = {ScienceDirect, excluidos},
  issn     = {0378-5173},
  keywords = {Cholesterol, Hepatocellular carcinoma, Liposomes, Targeting, Asialoglycoprotein receptor, Arabinogalactan, Simulations },
  url      = {http://www.sciencedirect.com/science/article/pii/S0378517316304203},
}

@Article{Teruel2014922,
  author   = {Miguel A. Teruel and Elena Navarro and Víctor López-Jaquero and Francisco Montero and Pascual González},
  title    = {A \{CSCW\} Requirements Engineering \{CASE\} Tool: Development and usability evaluation},
  journal  = {Information and Software Technology},
  year     = {2014},
  volume   = {56},
  number   = {8},
  pages    = {922 - 949},
  abstract = {AbstractContext \{CSRML\} Tool 2012 is a Requirements Engineering \{CASE\} Tool for the Goal-Oriented Collaborative Systems Requirements Modeling Language (CSRML). Objective This work aims at evaluating the usability of \{CSRML\} Tool 2012, thus identifying any possible usability flaw to be solved in the next releases of the application, as well as giving a general overview on how to develop a \{DSL\} tool similar to the one evaluated in this work by means of Visual Studio Modelling SDK. Method In this evaluation, which was reported by following the ISO/IEC 25062:2006 Common Industry Format for usability tests, 28 fourth-course Computer Science students took part. They were asked to carry out a series of modifications to an incomplete \{CSRML\} requirements specification. Usability was assessed by measuring the task’s completion rate, the elapsed time, number of accesses to the help system of the tool and the instructor’s verbal assistance. The participants’ arousal and pleasantness were assessed by analyzing both facial expressions and a \{USE\} questionnaire. Results In spite of obtaining high usability levels, the test outcome revealed some usability flaws that should be addressed. Conclusion The important lessons learnt from this evaluation are also applicable to the success of other usability tests as well as to the development of new \{CASE\} tools. },
  doi      = {http://dx.doi.org/10.1016/j.infsof.2014.02.009},
  groups   = {Compendex, SCOPUS,, excluidos},
  issn     = {0950-5849},
  keywords = {Usability evaluation, CASE tool, CSRML, Requirements engineering, CSCW, ISO/IEC 25062:2006 },
  url      = {http://www.sciencedirect.com/science/article/pii/S0950584914000512},
}

@Article{deLara20131128,
  author        = {Juan de Lara and Esther Guerra and Jesús Sánchez Cuadrado},
  title         = {Reusable abstractions for modeling languages},
  journal       = {Information Systems},
  year          = {2013},
  volume        = {38},
  number        = {8},
  pages         = {1128 - 1149},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Model-driven engineering proposes the use of models to describe the relevant aspects of the system to be built and synthesize the final application from them. Models are normally described using Domain-Specific Modeling Languages (DSMLs), which provide primitives and constructs of the domain. Still, the increasing complexity of systems has raised the need for abstraction techniques able to produce simpler versions of the models while retaining some properties of interest. The problem is that developing such abstractions for each \{DSML\} from scratch is time and resource consuming. In this paper, our goal is reducing the effort to provide modeling languages with abstraction mechanisms. For this purpose, we have devised some techniques, based on generic programming and domain-specific meta-modeling, to define generic abstraction operations that can be reused over families of modeling languages sharing certain characteristics. Abstractions can make use of clustering algorithms as similarity criteria for model elements. These algorithms can be made generic as well, and customized for particular languages by means of annotation models. As a result, we have developed a catalog of reusable abstractions using the proposed techniques, together with a working implementation in the MetaDepth multi-level meta-modeling tool. Our techniques and prototypes demonstrate that it is feasible to build reusable and adaptable abstractions, so that similar abstractions need not be developed from scratch, and their integration in new or existing modeling languages is less costly. },
  doi           = {http://dx.doi.org/10.1016/j.is.2013.06.001},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {0306-4379},
  keywords      = {Model-driven engineering, Domain-specific modeling languages, Abstraction, Genericity, Domain-specific meta-modeling, MetaDepth, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S030643791300080X},
}

@Article{Eyisi201290,
  author        = {Emeka Eyisi and Jia Bai and Derek Riley and Jiannian Weng and Wei Yan and Yuan Xue and Xenofon Koutsoukos and Janos Sztipanovits},
  title         = {NCSWT: An integrated modeling and simulation tool for networked control systems},
  journal       = {Simulation Modelling Practice and Theory},
  year          = {2012},
  volume        = {27},
  pages         = {90 - 111},
  __markedentry = {[Neto:5]},
  abstract      = {Networked Control Systems (NCS) are becoming increasingly ubiquitous in a growing number of applications, such as groups of unmanned aerial vehicles and industrial control systems. The evaluation of \{NCS\} properties such as stability and performance is very important given that these systems are typically deployed in critical settings. This paper presents the Networked Control Systems Wind Tunnel (NCSWT), an integrated modeling and simulation tool for the evaluation of Networked Control Systems (NCS). \{NCSWT\} integrates Matlab/Simulink and ns-2 for modeling and simulation of \{NCS\} using the High Level Architecture (HLA) standard. The tool is composed of two parts, the design-time models and the run-time components. The design-time models use Model Integrated Computing (MIC) to define HLA-based model constructs such as federates representing the simulators and interactions representing the communication between the simulators. \{MIC\} techniques facilitate the modeling and design of complex systems by using abstractions defined in domain-specific modeling languages (DSMLs) to describe the systems. The design-time models represent the control system dynamics and networking system behaviors in order to facilitate the run-time simulation of a NCS. The run-time components represent the main software components and interfaces for the actual realization of a \{NCS\} simulation using the \{HLA\} framework. Our implementation of the \{NCSWT\} based on \{HLA\} guarantees accurate time synchronization and data communication. Two case studies are presented to demonstrate the capabilities of the tool as well as evaluate the impact of network effects on NCS. },
  doi           = {http://dx.doi.org/10.1016/j.simpat.2012.05.004},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1569-190X},
  keywords      = {Modeling, Simulation, Networked control systems, HLA, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S1569190X12000688},
}

@Article{Stevenson2014444,
  author        = {Andrew Stevenson and James R. Cordy},
  title         = {A survey of grammatical inference in software engineering},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {96, Part 4},
  pages         = {444 - 459},
  note          = {Selected Papers from the Fifth International Conference on Software Language Engineering (SLE 2012)},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Grammatical inference – used successfully in a variety of fields such as pattern recognition, computational biology and natural language processing – is the process of automatically inferring a grammar by examining the sentences of an unknown language. Software engineering can also benefit from grammatical inference. Unlike these other fields, which use grammars as a convenient tool to model naturally occurring patterns, software engineering treats grammars as first-class objects typically created and maintained for a specific purpose by human designers. We introduce the theory of grammatical inference and review the state of the art as it relates to software engineering. },
  doi           = {http://dx.doi.org/10.1016/j.scico.2014.05.008},
  groups        = {ACM, Duplicados},
  issn          = {0167-6423},
  keywords      = {Grammatical inference, Software engineering, Grammar induction, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0167642314002469},
}

@Article{Zimmermann20122014,
  author        = {Olaf Zimmermann and Christoph Miksovic and Jochen M. Küster},
  title         = {Reference architecture, metamodel, and modeling principles for architectural knowledge management in information technology services},
  journal       = {Journal of Systems and Software},
  year          = {2012},
  volume        = {85},
  number        = {9},
  pages         = {2014 - 2033},
  note          = {Selected papers from the 2011 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2011)},
  __markedentry = {[Neto:5]},
  abstract      = {Capturing and sharing design knowledge such as architectural decisions is becoming increasingly important in firms providing professional Information Technology (IT) services such as enterprise application development and strategic outsourcing. Methods, models, and tools supporting explicit knowledge management strategies have been proposed in recent years; however, several challenges remain unaddressed. In this paper, we extend our previous work to overcome these challenges and to satisfy the requirements of an additional user group, presales architects that are responsible for \{IT\} service solution proposals. In strategic outsourcing, such solution proposals require complex, contractually relevant design decisions concerning many different resources such as \{IT\} infrastructures, people, and real estate. To support both presales and project architects, we define a common reference architecture and a decision process-oriented metamodel. We also present a tool implementation of these concepts and discuss their application to outsourcing proposals and application development projects. Finally, we establish twelve decision modeling principles and practices that capture the practical experience gained and lessons learned during the application of our decision modeling concepts to both proposal development and architecture design work on projects. },
  doi           = {http://dx.doi.org/10.1016/j.jss.2012.05.003},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {0164-1212},
  keywords      = {Architectural decisions, Architectural principles, DSL, Knowledge management, Model-driven engineering, Outsourcing, SOA, Workflow, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0164121212001343},
}

@Article{Gramatica201525,
  author   = {Paola Gramatica and Stefano Cassani and Alessandro Sangion},
  title    = {\{PBT\} assessment and prioritization by \{PBT\} Index and consensus modeling: Comparison of screening results from structural models},
  journal  = {Environment International},
  year     = {2015},
  volume   = {77},
  pages    = {25 - 34},
  abstract = {Abstract The limited availability of comprehensive data for Persistence, Bioaccumulation and Toxicity (PBT) of chemicals is a serious hindrance to the assignment of compounds to the categories of \{PBT\} and vPvB; \{REACH\} regulation requires authorization for the use of such chemicals, and additionally plans for safer alternatives. In the context of screening and priority-setting tools for PBT-assessment, the cumulative \{PBT\} Index model, implemented in \{QSARINS\} (QSAR-INSUBRIA), new software tool for the development and validation of multiple linear regression \{QSAR\} models, offers a new holistic approach for the identification of chemicals with cumulative \{PBT\} properties directly from their molecular structure. In this study the Insubria \{PBT\} Index in \{QSARINS\} is applied to the screening and prioritization of various data sets, containing a large variety of chemicals of heterogeneous molecular structure, previously screened by various authors by different methods, for their potential \{PBT\} behavior. Particular attention is devoted to the model Applicability Domain, using different approaches such as Descriptor Range, Leverage, and Principal Component Analysis (PCA) of the modeling molecular descriptors, in order to discriminate between interpolated and extrapolated predictions. The results of this screening, which is based only on the molecular structure features and is not dependent on single threshold values for P, B and T, are compared with those obtained by the on-line US-EPA \{PBT\} Profiler. Good agreement between the various approaches is found, supporting the utility of a consensus approach in priority-setting studies. The main discrepancies are highlighted and commented on. Moreover, a priority list containing the most hazardous compounds identified in agreement between the two tools is drafted. The \{PBT\} Index, implemented in QSARINS, which was demonstrated to be a practical, precautionary and reliable screening tool for PBT-behavior directly from the molecular structure, can be usefully applied for focusing experimental studies, and even before chemical synthesis, in a “benign by design” approach of safer alternatives. },
  doi      = {http://dx.doi.org/10.1016/j.envint.2014.12.012},
  groups   = {excluidos},
  issn     = {0160-4120},
  keywords = {\{PBT\} by consensus, Insubria \{PBT\} Index, QSARINS, Screening, Priority setting, Benign by design },
  url      = {http://www.sciencedirect.com/science/article/pii/S0160412015000045},
}

@Article{Tissot201338,
  author   = {Jean-Daniel Tissot and Giorgia Canellini and Olivier Rubin and Anne Angelillo-Scherrer and Julien Delobel and Michel Prudent and Niels Lion},
  title    = {Blood microvesicles: From proteomics to physiology},
  journal  = {Translational Proteomics},
  year     = {2013},
  volume   = {1},
  number   = {1},
  pages    = {38 - 52},
  abstract = {Abstract Phospholipid vesicles of less than 1 μm are present in blood in physiological state and their concentration may vary under pathological conditions. Various names such as exosomes (EXS) and microparticles (MPS) have been used to designate these extracellular vesicles (EVS). Although \{EXs\} and \{MPS\} possibly arise from separate mechanisms, they share numerous similarities representing a challenge for their purification and characterization. These vesicles generally originate from various types of cells such as red blood cells, platelets, leukocytes or endothelial cells but also from tumor cells. They participate in numerous biological processes including hemostasis. It is therefore of major scientific interest to characterize the protein content of these different types of \{EVS\} and that of their membranes in order to elucidate the essential functions of these dynamic vesicular compartments. Proteomics has been shown to be a particularly adequate tool in this study field. This review attempts to link proteomic data with physiological roles and functions of blood EVS. },
  doi      = {http://dx.doi.org/10.1016/j.trprot.2013.04.004},
  groups   = {ScienceDirect, excluidos},
  issn     = {2212-9626},
  keywords = {Aging, Blood cells, Exosomes, Microparticles, Microvesicles, Proteomics },
  url      = {http://www.sciencedirect.com/science/article/pii/S2212963413000077},
}

@Article{Miller201350,
  author        = {Robert Miller and Franziska Plessow and Manfred Rauh and Michael Gröschl and Clemens Kirschbaum},
  title         = {Comparison of salivary cortisol as measured by different immunoassays and tandem mass spectrometry},
  journal       = {Psychoneuroendocrinology},
  year          = {2013},
  volume        = {38},
  number        = {1},
  pages         = {50 - 57},
  __markedentry = {[Neto:5]},
  abstract      = {Summary Assessing the amount of bioavailable cortisol in saliva with immunoassays and thus sampling an endocrine marker of hypothalamus–pituitary–adrenal axis activity is of major interest in both research and clinical practice. However, absolute cortisol concentrations obtained with different immunoassays (IAs) are barely comparable precluding direct comparison between studies or individuals whenever cortisol analyses were not based on the same IA. The present technical report aims to solve this problem by evaluating the validity of, as well as agreement between the most commonly used immunoassays in psychoneuroendocrinological research (i.e., IBL, DRG, Salimetrics, DSL, and DELFIA) and a reference method (LC–MS/MS) in a sample of 195 saliva specimen covering the whole range of cortisol concentrations in adults. A structural equation modelling framework is applied to decompose systematic assay variance and estimate cortisol reference values, which are adjusted for measurement error and interference of salivary cortisone. Our findings reveal nonlinear relations between \{IAs\} and LC–MS/MS, which are discussed in terms of \{IA\} cross-reactivity with saliva matrix components. Finally guidelines for converting cortisol concentrations being obtained by these immunoassays into comparable reference values are proposed by providing conversion functions, a conversion table, and an online conversion tool. },
  doi           = {http://dx.doi.org/10.1016/j.psyneuen.2012.04.019},
  groups        = {SCOPUS, Duplicados},
  issn          = {0306-4530},
  keywords      = {Salivary cortisol, Cortisone, Immunoassays, Cross-reactivity, Liquid chromatography, Mass spectrometry, Measurement model, Conversion, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0306453012001692},
}

@Article{Díaz2012737,
  author        = {Oscar Díaz and Gorka Puente},
  title         = {Wiki Scaffolding: Aligning wikis with the corporate strategy},
  journal       = {Information Systems},
  year          = {2012},
  volume        = {37},
  number        = {8},
  pages         = {737 - 752},
  note          = {Special Issue: Advanced Information Systems Engineering (CAiSE'11)},
  __markedentry = {[Neto:5]},
  abstract      = {Wikis are main exponents of collaborative development by user communities. This community may be created around the wiki itself (e.g., community of contributors in Wikipedia) or already exist (e.g., company employees in corporate wikis). In the latter case, the wiki is not created in a vacuum but as part of the information ecosystem of the hosting organization. As any other Information System resource, wiki success highly depends on the interplay of technology, work practice and the organization. Thus, wiki contributions should be framed along the concerns already in use in the hosting organization in terms of glossaries, schedules, policies, organigrams and the like. The question is then, how can corporate strategies permeate wiki construction while preserving wiki openness and accessibility? We advocate for the use of “Wiki Scaffoldings”, i.e., a wiki installation that is provided at the onset to mimic these corporate concerns: categories, users, templates, articles initialized with boilerplate text, are all introduced in the wiki before any contribution is made. To retain wikis' friendliness and engage layman participation, we propose scaffoldings to be described as mind maps. Mind maps are next “exported” as wiki installations. We show the feasibility of the approach introducing a Wiki Scaffolding Language (WSL). \{WSL\} is realized as a plugin for FreeMind, a popular tool for mind mapping. Finally, we validate the expressiveness of \{WSL\} in four case studies. \{WSL\} is available for download. },
  doi           = {http://dx.doi.org/10.1016/j.is.2012.05.002},
  groups        = {Compendex, SCOPUS, Duplicados},
  issn          = {0306-4379},
  keywords      = {Wiki, Wiki management, DSL, Mind map, FreeMind, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0306437912000695},
}

@Article{Arouche20151397,
  author        = {Nassim Arouche and Jean-Yves Picard and Danielle Monniaux and Soazik P. Jamin and Bernard Vigier and Nathalie Josso and Richard L. Cate and Nathalie di Clemente and Joëlle Taieb},
  title         = {The \{BOC\} ELISA, a ruminant-specific \{AMH\} immunoassay, improves the determination of plasma \{AMH\} concentration and its correlation with embryo production in cattle},
  journal       = {Theriogenology},
  year          = {2015},
  volume        = {84},
  number        = {8},
  pages         = {1397 - 1404},
  __markedentry = {[Neto:5]},
  abstract      = {Abstract Plasma anti-Müllerian hormone (AMH) concentrations have been recently found to be predictive of the number of embryos recovered after \{FSH\} superovulatory treatment in the cow. However, the sensitivity of the Active Müllerian-inhibiting substance/AMH \{ELISA\} (ref. 10–14400; DSL-Beckman-Coulter) used to make these measurements in bovine plasma samples is low because it was developed to measure human \{AMH\} levels. To overcome this limitation, we developed an immunoassay specific for the bovine (B), ovine (O), and caprine (C) species, the bovine-ovine-caprine (BOC) ELISA. For this purpose, we produced recombinant bovine \{AMH\} for standardization, and we used monoclonal antibodies raised against bovine AMH, previously prepared by our laboratory. We evaluated the precision, accuracy, specificity, limit of detection, and functional sensitivity of the assay. The intra-assay coefficient of variation ranged between 3.4% and 11.3% for \{AMH\} concentrations between 23.68 and 1.74 ng/mL, and the interassay coefficient of variation ranged between 4.8% and 20.5% for concentrations between 25.53 and 1.42 ng/mL, respectively. The assay displayed a good linearity, had a detection limit of 0.4 ng/mL and a functional sensitivity of 1.4 ng/mL. It also cross-reacted with ovine and caprine AMHs. Both the mean and median \{AMH\} levels measured in 40 cow plasma samples using the \{BOC\} \{ELISA\} were approximately 44 fold higher than the mean and median \{AMH\} levels measured with the Active Müllerian-inhibiting substance/AMH ELISA. Moreover, a higher correlation was observed between the average number of embryos recovered from each cow after superovulatory treatment and \{AMH\} concentrations measured with the \{BOC\} ELISA. This BOC \{ELISA\} provides a very efficient tool for evaluating the ovarian follicular reserve of cows and predicting their embryo production capacity. },
  doi           = {http://dx.doi.org/10.1016/j.theriogenology.2015.07.026},
  groups        = {SCOPUS, Duplicados},
  issn          = {0093-691X},
  keywords      = {Anti-Müllerian hormone, Müllerian-inhibiting substance, Immunoassay, Bovine, rank3},
  url           = {http://www.sciencedirect.com/science/article/pii/S0093691X15003854},
}

@Article{Liu2013143,
  author   = {Wenbin Liu},
  title    = {Bmdelta phenotype implies involvement of Notch signaling in body segmentation and appendage development of silkworm, Bombyx mori},
  journal  = {Arthropod Structure \& Development},
  year     = {2013},
  volume   = {42},
  number   = {2},
  pages    = {143 - 151},
  abstract = {The domesticated silkworm, Bombyx mori, belongs to the intermediate germband insects, in which the anterior segments are specified in the blastoderm, while the remaining posterior segments are sequentially generated from the cellularized growth zone. The pattern formation is distinct from Drosophila but somewhat resembles a vertebrate. Notch signaling is involved in the segmentation of vertebrates and spiders. Here, we studied the function of Notch signaling in silkworm embryogenesis via \{RNA\} interference (RNAi). Depletion of Bmdelta, the homolog of the Notch signaling ligand, led to severe defects in segment patterning, including a loss of posterior segments and irregular segment boundaries. The paired appendages on each segment were symmetrically fused along the ventral midline in Bmdelta \{RNAi\} embryos. An individual segment seemed to possess only one segmental appendage. Segmentation in prolegs could be observed. Our results show that Notch signaling is employed in not only appendage development but also body segmentation. Thus, conservation of Notch-mediated segmentation could also be extended to holometabolous insects. The involvement of Notch signaling seems to be the ancestral segmentation mechanism of arthropods. },
  doi      = {http://dx.doi.org/10.1016/j.asd.2012.10.002},
  groups   = {ScienceDirect, excluidos},
  issn     = {1467-8039},
  keywords = {Silkworm, Segmentation, delta, Notch signaling },
  url      = {http://www.sciencedirect.com/science/article/pii/S1467803912000795},
}

@Article{Naegel2013191,
  author   = {Arne Naegel and Michael Heisig and Gabriel Wittum},
  title    = {Detailed modeling of skin penetration—An overview},
  journal  = {Advanced Drug Delivery Reviews},
  year     = {2013},
  volume   = {65},
  number   = {2},
  pages    = {191 - 207},
  note     = {Modeling the human skin barrier - Towards a better understanding of dermal absorption},
  abstract = {Abstract In recent years, the combination of computational modeling and experiments has become a useful tool that is proving increasingly powerful for explaining biological complexity. As computational power is increasing, scientists are able to explore ever more complex models in finer detail and to explain very complex real world data. This work provides an overview of one-, two- and three-dimensional diffusion models for penetration into mammalian skin. Besides diffusive transport this includes also binding of substances to skin proteins and metabolism. These models are based on partial differential equations that describe the spatial evolution of the transport process through the biological barrier skin. Furthermore, the work focuses on analytical and numerical techniques for this type of equations such as discretization schemes or homogenization (upscaling) techniques. Finally, the work compares different geometry models with respect to the permeability. },
  doi      = {http://dx.doi.org/10.1016/j.addr.2012.10.009},
  groups   = {ScienceDirect, excluidos},
  issn     = {0169-409X},
  keywords = {Skin, Stratum corneum, Geometry models, Brick-and-mortar, Cuboid, Tetrakaidekahedra, Mathematical modeling, Numerical simulation, Homogenization, Drug diffusion },
  url      = {http://www.sciencedirect.com/science/article/pii/S0169409X12003559},
}

@Article{Nguyen2016,
  author   = {Phu H. Nguyen and Shaukat Ali and Tao Yue},
  title    = {Model-based security engineering for cyber-physical systems: A systematic mapping study},
  journal  = {Information and Software Technology},
  year     = {2016},
  pages    = {-},
  abstract = {AbstractContext Cyber-physical systems (CPSs) have emerged to be the next generation of engineered systems driving the so-called fourth industrial revolution. \{CPSs\} are becoming more complex, open and more prone to security threats, which urges security to be engineered systematically into CPSs. Model-Based Security Engineering (MBSE) could be a key means to tackle this challenge via security by design, abstraction, and automation. Objective We aim at providing an initial assessment of the state of the art in \{MBSE\} for \{CPSs\} (MBSE4CPS). Specifically, this work focuses on finding out 1) the publication statistics of \{MBSE4CPS\} studies; 2) the characteristics of \{MBSE4CPS\} studies; and 3) the open issues of \{MBSE4CPS\} research. Method We conducted a systematic mapping study (SMS) following a rigorous protocol that was developed based on the state-of-the-art \{SMS\} and systematic review guidelines. From thousands of relevant publications, we systematically identified 48 primary \{MBSE4CPS\} studies for data extraction and synthesis to answer predefined research questions. Results \{SMS\} results show that for three recent years (2014–2016) the number of primary \{MBSE4CPS\} studies has increased significantly. Within the primary studies, the popularity of using Domain-Specific Languages (DSLs) is comparable with the use of the standardised \{UML\} modelling notation. Most primary studies do not explicitly address specific security concerns (e.g., confidentiality, integrity) but rather focus on security analyses in general on threats, attacks or vulnerabilities. Few primary studies propose to engineer security solutions for CPSs. Many focus on the early stages of development lifecycle such as security requirement engineering or analysis. Conclusion The \{SMS\} does not only provide the state of the art in MBSE4CPS, but also points out several open issues that would deserve more investigation, e.g., the lack of engineering security solutions for CPSs, limited tool support, too few industrial case studies, and the challenge of bridging \{DSLs\} in engineering secure CPSs. },
  doi      = {http://dx.doi.org/10.1016/j.infsof.2016.11.004},
  groups   = {excluidos},
  issn     = {0950-5849},
  keywords = {Cyber-physical systems, Security, Model-based engineering, Security engineering, Systematic mapping, Snowballing, Survey },
  url      = {http://www.sciencedirect.com/science/article/pii/S0950584916303214},
}

@Article{Castelltort2016,
  author   = {Arnaud Castelltort and Anne Laurent},
  title    = {Rogue behavior detection in NoSQL graph databases},
  journal  = {Journal of Innovation in Digital Ecosystems},
  year     = {2016},
  pages    = {-},
  abstract = {Abstract Rogue behaviors refer to behavioral anomalies that can occur in human activities and that can thus be retrieved from human generated data. In this paper, we aim at showing that NoSQL graph databases are a useful tool for this purpose. Indeed these database engines exploit property graphs that can easily represent human and object interactions whatever the volume and complexity of the data. These interactions lead to fraud rings in the graphs in the form of sophisticated chains of indirect links between fraudsters representing successive transactions (money, communications, etc.) from which rogue behaviours are detected. Our work is based on two extensions of such NoSQL graph databases. The first extension allows the handling of time-variant data while the second one is devoted to the management of imprecise queries with a \{DSL\} (to define flexible operators and operations with Scala) and the Cypherf declarative flexible query language over NoSQL graph databases. These extensions allow to better address and describe sophisticated frauds. Feasibility have been studied to assess our proposition. },
  doi      = {http://dx.doi.org/10.1016/j.jides.2016.10.004},
  groups   = {excluidos},
  issn     = {2352-6645},
  keywords = {Rogue behavior, Fraud rings, NoSQL graph databases, Fuzzy DSL, Approximate cypher queries },
  url      = {http://www.sciencedirect.com/science/article/pii/S2352664516300177},
}

@Article{Poncelet2016,
  author        = {Poncelet, C. and Jacquemard, F.},
  title         = {Model-based testing for building reliable realtime interactive music systems},
  journal       = {Science of Computer Programming},
  year          = {2016},
  volume        = {132},
  pages         = {143-172},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2016.08.002},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993273203&partnerID=40&md5=3a8c9ea514334c7c115fb5829c73eaa0},
}

@Article{Patwari2016,
  author        = {Patwari, P. and Chaudhuri, S.R. and Natarajan, S. and Muralikrishna, G.},
  title         = {M\&amp;C ML: A modeling language for monitoring and control systems},
  journal       = {Fusion Engineering and Design},
  year          = {2016},
  volume        = {112},
  pages         = {761-765},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1016/j.fusengdes.2016.05.024},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969672798&partnerID=40&md5=5483b99d7401b41f3b3f24d01bed0bac},
}

@Article{Vögele20161,
  author        = {Vögele, C. and van Hoorn, A. and Schulz, E. and Hasselbring, W. and Krcmar, H.},
  title         = {WESSBAS: extraction of probabilistic workload specifications for load testing and performance prediction—a model-driven approach for session-based application systems},
  journal       = {Software and Systems Modeling},
  year          = {2016},
  pages         = {1-35},
  note          = {cited By 0; Article in Press},
  __markedentry = {[Neto:5]},
  document_type = {Article in Press},
  doi           = {10.1007/s10270-016-0566-5},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991818131&partnerID=40&md5=b167f01e4e328bee37f627ae4ac469d7},
}

@Conference{Fernandez2016551,
  author        = {Fernandez, I. and Di Cerbo, A. and Dehnhardt, E. and Tipaldi, M.},
  title         = {Test automation for critical space software},
  year          = {2016},
  pages         = {551-555},
  note          = {cited By 0},
  art_number    = {7573275},
  document_type = {Conference Paper},
  doi           = {10.1109/MetroAeroSpace.2016.7573275},
  groups        = {Scopus, excluidos},
  journal       = {3rd IEEE International Workshop on Metrology for Aerospace, MetroAeroSpace 2016 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991804310&partnerID=40&md5=923dc475692921770061330f1ac24335},
}

@Conference{Trask2016310,
  author        = {Trask, B. and Roman, A.},
  title         = {Leveraging model driven engineering in software product line architectures},
  year          = {2016},
  volume        = {16-23-September-2016},
  pages         = {310},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2934466.2956654},
  groups        = {Compendex, ACM, Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991583786&partnerID=40&md5=3680a8f74e7be17f78136a798fca6aa4},
}

@Conference{Kühn201650,
  author        = {Kühn, T. and Cazzola, W.},
  title         = {Apples and oranges: Comparing top-down and bottom-up language product lines},
  year          = {2016},
  volume        = {16-23-September-2016},
  pages         = {50-59},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2934466.2934470},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991608560&partnerID=40&md5=36b7a350e96f8166fa11537328e99377},
}

@Article{Challenger2016755,
  author        = {Challenger, M. and Kardas, G. and Tekinerdogan, B.},
  title         = {A systematic approach to evaluating domain-specific modeling language environments for multi-agent systems},
  journal       = {Software Quality Journal},
  year          = {2016},
  volume        = {24},
  number        = {3},
  pages         = {755-795},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1007/s11219-015-9291-5},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941359634&partnerID=40&md5=8ad3ec7614089409983ae9349a3ec32a},
}

@Article{Slivnik2016737,
  author        = {Slivnik, B.},
  title         = {Measuring the complexity of domain-specific languages developed using MDD},
  journal       = {Software Quality Journal},
  year          = {2016},
  volume        = {24},
  number        = {3},
  pages         = {737-753},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s11219-015-9279-1},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930889016&partnerID=40&md5=8408408adb3ecb0c246930194789d98f},
}

@Article{Ataş2016736,
  author        = {Ataş, M.},
  title         = {Open Cezeri Library: A novel java based matrix and computer vision framework},
  journal       = {Computer Applications in Engineering Education},
  year          = {2016},
  volume        = {24},
  number        = {5},
  pages         = {736-743},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1002/cae.21745},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969951526&partnerID=40&md5=6a10389768083d747817a231cf56c1d9},
}

@Conference{Pescador2016438,
  author        = {Pescador, A. and De Lara, J.},
  title         = {DSL-Maps: From requirements to design of domain-specific languages},
  year          = {2016},
  pages         = {438-443},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2970276.2970328},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989204998&partnerID=40&md5=139b30f05de017e6a6c5b8d180e58e98},
}

@Conference{Szabó2016870,
  author        = {Szabó, T. and Alperovich, S. and Voelter, M. and Erdweg, S.},
  title         = {An extensible framework for variable-precision data-flow analyses in MPS},
  year          = {2016},
  pages         = {870-875},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2970276.2970296},
  groups        = {IEEE, Compendex, Duplicados},
  journal       = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989166178&partnerID=40&md5=21a5a3e2940b770c63a81f364295057e},
}

@Conference{Szabó2016320,
  author        = {Szabó, T. and Erdweg, S. and Voelter, M.},
  title         = {IncA: A DSL for the definition of incremental program analyses},
  year          = {2016},
  pages         = {320-331},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2970276.2970298},
  groups        = {Scopus, Duplicados},
  journal       = {ASE 2016 - Proceedings of the 31st IEEE/ACM International Conference on Automated Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84989193381&partnerID=40&md5=86c0ee4d6d35b012f913793fc7064cb1},
}

@Conference{Durelli2016225,
  author        = {Durelli, G.C. and Spada, F. and Pilato, C. and Santambrogio, M.D.},
  title         = {Scala-based domain-specific language for creating accelerator-based SoCs},
  year          = {2016},
  volume        = {2016-August},
  pages         = {225-232},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7529871},
  document_type = {Conference Paper},
  doi           = {10.1109/IPDPSW.2016.169},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - IEEE 28th International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991575752&partnerID=40&md5=a8e6ab6fb1c692020c9d6f5add4d8a26},
}

@Conference{Mori2016253,
  author        = {Mori, J.Y. and Werner, A. and Fricke, F. and Hüebner, M.},
  title         = {A rapid prototyping method to reduce the design time in commercial high-level synthesis tools},
  year          = {2016},
  volume        = {2016-August},
  pages         = {253-258},
  note          = {cited By 0},
  art_number    = {7529875},
  document_type = {Conference Paper},
  doi           = {10.1109/IPDPSW.2016.56},
  groups        = {Scopus,, excluidos},
  journal       = {Proceedings - IEEE 28th International Parallel and Distributed Processing Symposium Workshops, IPDPSW 2014},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991696824&partnerID=40&md5=b0979128aaf8a304d46b5944c2dd9fed},
}

@Conference{Opila2016343,
  author        = {Opila, J.},
  title         = {Prototyping of visualization designs of 3D vector fields using POVRay rendering engine},
  year          = {2016},
  pages         = {343-348},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7522164},
  document_type = {Conference Paper},
  doi           = {10.1109/MIPRO.2016.7522164},
  groups        = {Compendex, Duplicados},
  journal       = {2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2016 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983688764&partnerID=40&md5=426b61c734651bb6f357e4c662fa7768},
}

@Conference{Lugaric20161162,
  author        = {Lugaric, T. and Pavlic, Z. and Skvorc, D.},
  title         = {Object-oriented programming model for synthesis of domain-specific application development environment},
  year          = {2016},
  pages         = {1162-1167},
  note          = {cited By 0},
  art_number    = {7522315},
  document_type = {Conference Paper},
  doi           = {10.1109/MIPRO.2016.7522315},
  groups        = {Scopus, Duvida},
  journal       = {2016 39th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2016 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983616304&partnerID=40&md5=516a0ce989d243c834206ade92582ec8},
}

@Conference{Bernardino2016157,
  author        = {Bernardino, M. and Zorzo, A.F. and Rodrigues, E.M.},
  title         = {Canopus: A Domain-Specific Language for Modeling Performance Testing},
  year          = {2016},
  pages         = {157-167},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7515468},
  document_type = {Conference Paper},
  doi           = {10.1109/ICST.2016.13},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - 2016 IEEE International Conference on Software Testing, Verification and Validation, ICST 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84983348066&partnerID=40&md5=a179c0dc2a33ca146b43bfe2d30d16b7},
}

@Conference{Portugal2016108,
  author        = {Portugal, I. and Alencar, P. and Cowan, D.},
  title         = {A Preliminary Survey on Domain-Specific Languages for Machine Learning in Big Data},
  year          = {2016},
  pages         = {108-110},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7515417},
  document_type = {Conference Paper},
  doi           = {10.1109/SWSTE.2016.23},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - 2016 IEEE International Conference on Software Science, Technology and Engineering, SwSTE 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981313251&partnerID=40&md5=72ea6934fa09ec8316e008f1d4278bb5},
}

@Conference{Deantoni201612,
  author        = {Deantoni, J.},
  title         = {Modeling the Behavioral Semantics of Heterogeneous Languages and their Coordination},
  year          = {2016},
  pages         = {12-18},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7510564},
  document_type = {Conference Paper},
  doi           = {10.1109/ACVI.2016.9},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 2016 Architecture-Centric Virtual Integration, ACVI 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84981499484&partnerID=40&md5=18165d769bbaa9e89f02333cdf37fb43},
}

@Article{BocanegraGarcía2016277,
  author        = {Bocanegra García, J. and Pavlich-Mariscal, J. and Carillo-Ramos, A.},
  title         = {Towards a domain-specific language to design adaptive software: The DMLAS approach [Hacia un lenguaje específico de dominio para el diseño de software adaptativo: La aproximación DMLAS]},
  journal       = {Ingenieria y Universidad},
  year          = {2016},
  volume        = {20},
  number        = {2},
  pages         = {277-296},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.11144/Javeriana.iyu20-2.tdsl},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982293201&partnerID=40&md5=67de549529376b598219657a99532f8f},
}

@Conference{Lopes2016197,
  author        = {Lopes, F.A. and Lima, L. and Santos, M. and Fidalgo, R. and Fernandes, S.},
  title         = {High-level modeling and application validation for SDN},
  year          = {2016},
  pages         = {197-205},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7502813},
  document_type = {Conference Paper},
  doi           = {10.1109/NOMS.2016.7502813},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the NOMS 2016 - 2016 IEEE/IFIP Network Operations and Management Symposium},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979738910&partnerID=40&md5=a65e72dc2b105a052d654aced1aa50af},
}

@Conference{Akhundov2016,
  author        = {Akhundov, J. and Werner, M. and Schaus, V. and Gerndt, A.},
  title         = {Using timed automata to check space mission feasibility in the early design phases},
  year          = {2016},
  volume        = {2016-June},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7500572},
  document_type = {Conference Paper},
  doi           = {10.1109/AERO.2016.7500572},
  groups        = {Compendex, Duplicados},
  journal       = {IEEE Aerospace Conference Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978535960&partnerID=40&md5=53db1d978577c2fa1be87ea5c4ab764c},
}

@Conference{Jager2016,
  author        = {Jager, S. and Maschotta, R. and Jungebloud, T. and Wichmann, A. and Zimmermann, A.},
  title         = {Creation of domain-specific languages for executable system models with the Eclipse Modeling Project},
  year          = {2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7490558},
  document_type = {Conference Paper},
  doi           = {10.1109/SYSCON.2016.7490558},
  groups        = {IEEE, Duplicados},
  journal       = {10th Annual International Systems Conference, SysCon 2016 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979231061&partnerID=40&md5=038f6f201a8c356a6e7f1fafb476f642},
}

@Conference{Bonnet2016,
  author        = {Bonnet, S. and Voirin, J.-L. and Exertier, D. and Normand, V.},
  title         = {Not (strictly) relying on SysML for MBSE: Language, tooling and development perspectives: The Arcadia/Capella rationale},
  year          = {2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7490559},
  document_type = {Conference Paper},
  doi           = {10.1109/SYSCON.2016.7490559},
  groups        = {Scopus, Duplicados},
  journal       = {10th Annual International Systems Conference, SysCon 2016 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979207744&partnerID=40&md5=cdfa7f42bffe290d0d57749a7fe4e513},
}

@Conference{Sredojević2016,
  author        = {Sredojević, D. and Vidaković, M. and Okanović, D. and Mitrović, D. and Ivanović, M.},
  title         = {Conversion of the agent-oriented domain-specific language ALAS into JavaScript},
  year          = {2016},
  volume        = {1738},
  note          = {cited By 0},
  art_number    = {240007},
  document_type = {Conference Paper},
  doi           = {10.1063/1.4952026},
  groups        = {Scopus,, Inclusos},
  journal       = {AIP Conference Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984548260&partnerID=40&md5=5f5187d3ce9cbfb871e83f78bae8b012},
}

@Conference{Skersys2016,
  author        = {Skersys, T. and Danenas, P. and Pavalkis, S.},
  title         = {Model-driven development of partial model-to-model transformations in a CASE tool},
  year          = {2016},
  volume        = {1738},
  note          = {cited By 0},
  art_number    = {240005},
  document_type = {Conference Paper},
  doi           = {10.1063/1.4952024},
  groups        = {Scopus, excluidos},
  journal       = {AIP Conference Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984585583&partnerID=40&md5=e4252e54ed7010254e5c5844f4cb87a7},
}

@Conference{Shambaugh2016416,
  author        = {Shambaugh, R. and Weiss, A. and Guha, A.},
  title         = {Rehearsal: A configuration verification tool for puppet},
  year          = {2016},
  volume        = {13-17-June-2016},
  pages         = {416-430},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2908080.2908083},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975827661&partnerID=40&md5=40fe42b4cd61079ecd37cb2e3b37f39c},
}

@Conference{Häser2016,
  author        = {Häser, F. and Felderer, M. and Breu, R.},
  title         = {An integrated tool environment for experimentation in domain specific language engineering},
  year          = {2016},
  volume        = {01-03-June-2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {a20},
  document_type = {Conference Paper},
  doi           = {10.1145/2915970.2916010},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978496761&partnerID=40&md5=78fa38c2932d567948cef54a264de8a3},
}

@Conference{Mahadik2016,
  author        = {Mahadik, K. and Wright, C. and Zhang, J. and Kulkarni, M. and Bagchi, S. and Chaterji, S.},
  title         = {SARVAVID: A domain specific language for developing scalable computational genomics applications},
  year          = {2016},
  volume        = {01-03-June-2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {a34},
  document_type = {Conference Paper},
  doi           = {10.1145/2925426.2926283},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the International Conference on Supercomputing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978472346&partnerID=40&md5=46aa65fb5e35e45cf9a6bcd7d41e13ab},
}

@Conference{Lachgar2016,
  author        = {Lachgar, M. and Abdali, A.},
  title         = {DSL and code generator for accelerating iOs apps development},
  year          = {2016},
  note          = {cited By 0},
  art_number    = {7483269},
  document_type = {Conference Paper},
  doi           = {10.1109/ICoCS.2015.7483269},
  groups        = {Scopus, Inclusos},
  journal       = {Proceedings of 2015 IEEE World Conference on Complex Systems, WCCS 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978370290&partnerID=40&md5=782b81622a1452519871c0a04f237851},
}

@Conference{NoAuthor2016,
  title         = {ACM International Conference Proceeding Series},
  year          = {2016},
  volume        = {01-03-June-2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  page_count    = {322},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978473145&partnerID=40&md5=2ae2e134478431f5a98b85f6e2788643},
}

@Article{Sun2016,
  author        = {Sun, Y. and White, J. and Eade, S. and Schmidt, D.C.},
  title         = {ROAR: A QoS-oriented modeling framework for automated cloud resource allocation and optimization},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {116},
  pages         = {146-161},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1016/j.jss.2015.08.006},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941255053&partnerID=40&md5=74e8a6ff5cbb3f558b42d399119283dd},
}

@Article{Khwaja2016,
  author        = {Khwaja, S. and Alshayeb, M.},
  title         = {Survey on software design-pattern specification languages},
  journal       = {ACM Computing Surveys},
  year          = {2016},
  volume        = {49},
  number        = {1},
  note          = {cited By 0},
  art_number    = {21},
  document_type = {Article},
  doi           = {10.1145/2926966},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978086505&partnerID=40&md5=dc7b9c17ece4efc4e3c82fa63d47a2ec},
}

@Conference{Costin2016437,
  author        = {Costin, A. and Zarras, A. and Francillon, A.},
  title         = {Automated dynamic firmware analysis at scale: A case study on embedded web interfaces},
  year          = {2016},
  pages         = {437-448},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2897845.2897900},
  groups        = {Scopus,, excluidos},
  journal       = {ASIA CCS 2016 - Proceedings of the 11th ACM Asia Conference on Computer and Communications Security},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979665771&partnerID=40&md5=718e5cb5b5446ee09591cb161c980524},
}

@Conference{Ratiu201615,
  author        = {Ratiu, D. and Voelter, M.},
  title         = {Automated testing of DSL implementations: Experiences from building mbeddr},
  year          = {2016},
  pages         = {15-21},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2896921.2896922},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - 11th International Workshop on Automation of Software Test, AST 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974577372&partnerID=40&md5=3a3c495d1b48e724d8b501071695aa67},
}

@Conference{Al-Mahfoudh201642,
  author        = {Al-Mahfoudh, M. and Gopalakrishnan, G. and Stutsman, R.},
  title         = {Toward rigorous design of domain-specific distributed systems},
  year          = {2016},
  pages         = {42-48},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2897667.2897674},
  groups        = {ACM, excluidos},
  journal       = {Proceedings - 4th FME Workshop on Formal Methods in Software Engineering, FormaliSE 2016},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974577470&partnerID=40&md5=ef2869ad192a38a97eeb74a5a72b0bd5},
}

@Conference{Wilder201619,
  author        = {Wilder, N. and Smith, J.M. and Mockus, A.},
  title         = {Exploring a framework for identity and attribute linking across heterogeneous data systems},
  year          = {2016},
  pages         = {19-25},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2896825.2896833},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - 2nd International Workshop on BIG Data Software Engineering, BIGDSE 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974601974&partnerID=40&md5=2327c8abf921d1d8a2ce9f28630b1c5d},
}

@Article{Bourgoin20161,
  author        = {Bourgoin, M. and Chailloux, E. and Lamotte, J.-L.},
  title         = {High Level Data Structures for GPGPU Programming in a Statically Typed Language},
  journal       = {International Journal of Parallel Programming},
  year          = {2016},
  pages         = {1-20},
  note          = {cited By 0; Article in Press},
  document_type = {Article in Press},
  doi           = {10.1007/s10766-016-0424-7},
  groups        = {excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966710157&partnerID=40&md5=e384bad46282c479ee38fa311c06427d},
}

@Conference{Caracciolo201641,
  author        = {Caracciolo, A. and Lungu, M. and Truffer, O. and Levitin, K. and Nierstrasz, O.},
  title         = {Evaluating an Architecture Conformance Monitoring Solution},
  year          = {2016},
  pages         = {41-44},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7464551},
  document_type = {Conference Paper},
  doi           = {10.1109/IWESEP.2016.12},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - 7th International Workshop on Empirical Software Engineering in Practice, IWESEP 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84971424536&partnerID=40&md5=361ca1f9d25cdf8f9efa032190a6306f},
}

@Conference{Ma2016900,
  author        = {Ma, S. and Aklah, Z. and Andrews, D.},
  title         = {Run time interpretation for creating custom accelerators},
  year          = {2016},
  pages         = {900-905},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7459436},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 2016 Design, Automation and Test in Europe Conference and Exhibition, DATE 2016},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84973659596&partnerID=40&md5=8fadd041e9595ec3e13bb6a35fd1c7ac},
}

@Article{Pereira2016,
  author        = {Pereira, M.J.V. and Fonseca, J. and Henriques, P.R.},
  title         = {Ontological approach for DSL development},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2016},
  volume        = {45},
  pages         = {35-52},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.cl.2015.12.004},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961156255&partnerID=40&md5=6c9ec6269100eeeed7b70041fc9ce24f},
}

@Article{Wilfert201618,
  author        = {Wilfert, O. and Barcik, P. and Kolka, Z.},
  title         = {Fully photonic wireless link for transmission of synchronization signals},
  journal       = {Radioengineering},
  year          = {2016},
  volume        = {25},
  number        = {1},
  pages         = {18-25},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.13164/re.2016.0018},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964644508&partnerID=40&md5=fa00ce051ef0412cb465f746b38509e3},
}

@Conference{Hadiwijaya20167,
  author        = {Hadiwijaya, R.I. and Inggriani Liem, M.M.},
  title         = {A domain-specific language for automatic generation of checkers},
  year          = {2016},
  pages         = {7-12},
  note          = {cited By 0},
  art_number    = {7436963},
  document_type = {Conference Paper},
  doi           = {10.1109/ICODSE.2015.7436963},
  groups        = {Compendex,, Inclusos},
  journal       = {Proceedings of 2015 International Conference on Data and Software Engineering, ICODSE 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966539545&partnerID=40&md5=a4218cb6810294c3dfbcbd7390710a2c},
}

@Conference{Scholz2016196,
  author        = {Scholz, B. and Jordan, H. and Subotić, P. and Westmann, T.},
  title         = {On fast large-scale program analysis in datalog},
  year          = {2016},
  pages         = {196-206},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2892208.2892226},
  groups        = {ACM, excluidos},
  journal       = {Proceedings of CC 2016: The 25th International Conference on Compiler Construction},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966550483&partnerID=40&md5=78daebfba2f75d9a2e8428dd586afcaa},
}

@Article{Ober20161,
  author        = {Ober, I. and Palyart, M. and Bruel, J.-M. and Lugato, D.},
  title         = {On the use of models for high-performance scientific computing applications: an experience report},
  journal       = {Software and Systems Modeling},
  year          = {2016},
  pages         = {1-24},
  note          = {cited By 0; Article in Press},
  document_type = {Article in Press},
  doi           = {10.1007/s10270-016-0518-0},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961165686&partnerID=40&md5=f01023ce759a80aa9cfc801d13291290},
}

@Conference{Hadas2016178,
  author        = {Hadas, A. and Lorenz, D.H.},
  title         = {Application-specific language-oriented modularity: A case study of the ovirt project},
  year          = {2016},
  pages         = {178-183},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2892664.2892692},
  groups        = {Scopus,, Duvida},
  journal       = {MODULARITY Companion 2016 - Companion Proceedings of the 15th International Conference on Modularity},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965017071&partnerID=40&md5=7e89c6d86772cd9fd5727d6e5abd364c},
}

@Conference{Bui2016196,
  author        = {Bui, T.M.A. and Ziane, M. and Stinckwich, S. and Ho, T.V. and Roche, B. and Papoulias, N.},
  title         = {Separation of concerns in epidemiological modelling},
  year          = {2016},
  pages         = {196-200},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2892664.2892699},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {MODULARITY Companion 2016 - Companion Proceedings of the 15th International Conference on Modularity},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965074791&partnerID=40&md5=a81831763632abad610ca98811bd51ac},
}

@Conference{Kruck201691,
  author        = {Kruck, B. and Lehmann, S. and Keßler, C. and Reschke, J. and Felgentreff, T. and Lincke, J. and Hirschfeld, R.},
  title         = {Multi-level debugging for interpreter developers},
  year          = {2016},
  pages         = {91-93},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2892664.2892679},
  groups        = {Compendex, Duplicados},
  journal       = {MODULARITY Companion 2016 - Companion Proceedings of the 15th International Conference on Modularity},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965054185&partnerID=40&md5=e82d2bd82eb61f2a0a8e0707253cf4a4},
}

@Conference{2016,
  title         = {ACM International Conference Proceeding Series},
  year          = {2016},
  volume        = {12-March-2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  page_count    = {43},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976627686&partnerID=40&md5=e39c0902ff07dc44eff0ac13e4813948},
}

@Conference{Lezos2016,
  author        = {Lezos, C. and Dimitroulakos, G. and Latifis, I. and Masselos, K.},
  title         = {Automatic generation of code analysis tools: The CastQL approach},
  year          = {2016},
  volume        = {12-March-2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {a3},
  document_type = {Conference Paper},
  doi           = {10.1145/2889420.2889422},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976631321&partnerID=40&md5=663e0f76ccd75ce4164ada866f3ee688},
}

@Conference{Hoisl20165001,
  author        = {Hoisl, B. and Sobernig, S.},
  title         = {Open-source development tools for domain-specific modeling: Results from a systematic literature review},
  year          = {2016},
  volume        = {2016-March},
  pages         = {5001-5010},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7427807},
  document_type = {Conference Paper},
  doi           = {10.1109/HICSS.2016.620},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975479800&partnerID=40&md5=4630d370a727abcbd64ed3f1906c6934},
}

@Conference{Tzeremes20165831,
  author        = {Tzeremes, V. and Gomaa, H.},
  title         = {XANA: An end user software product line framework for smart spaces},
  year          = {2016},
  volume        = {2016-March},
  pages         = {5831-5840},
  note          = {cited By 0},
  art_number    = {7427910},
  document_type = {Conference Paper},
  doi           = {10.1109/HICSS.2016.721},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975495422&partnerID=40&md5=2a26db4460ce68d1ef39df9e4a961a48},
}

@Article{Dejanovic2016,
  author        = {Dejanović, I. and Milosavljević, G. and Vaderna, R.},
  title         = {Arpeggio: A flexible PEG parser for Python},
  journal       = {Knowledge-Based Systems},
  year          = {2016},
  volume        = {95},
  pages         = {71-74},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.knosys.2015.12.004},
  groups        = {Compendex, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956597739&partnerID=40&md5=525f46cd84b8a3544f3b0a0af70966a6},
}

@Article{Oksman2016118,
  author        = {Oksman, V. and Strobel, R. and Wang, X. and Wei, D. and Verbin, R. and Goodson, R. and Sorbara, M.},
  title         = {The ITU-T's new G.fast standard brings DSL into the gigabit era},
  journal       = {IEEE Communications Magazine},
  year          = {2016},
  volume        = {54},
  number        = {3},
  pages         = {118-126},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7432157},
  document_type = {Article},
  doi           = {10.1109/MCOM.2016.7432157},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963774154&partnerID=40&md5=8c78bc99501ad08c78fc4e517b81f8f6},
}

@Conference{Ma2016173,
  author        = {Ma, S. and Aklah, Z. and Andrews, D.},
  title         = {Just in time assembly of accelerators},
  year          = {2016},
  pages         = {173-178},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2847263.2847341},
  groups        = {ACM, Duplicados},
  journal       = {FPGA 2016 - Proceedings of the 2016 ACM/SIGDA International Symposium on Field-Programmable Gate Arrays},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966669901&partnerID=40&md5=0f45e2577bab4ee4736d9811bb2ad703},
}

@Conference{Patwari2016177,
  author        = {Patwari, P. and Banerjee, A. and Chaudhuri, S.R. and Natarajan, S.},
  title         = {Learning's from developing a domain specific engineering environment for control systems},
  year          = {2016},
  volume        = {18-20-February-2016},
  pages         = {177-183},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2856636.2856653},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976616780&partnerID=40&md5=a832b96f59edf3939ba52bc1bcfe55df},
}

@Article{Degenne2016a,
  author        = {Degenne, P. and Lo Seen, D.},
  title         = {Ocelet: Simulating processes of landscape changes using interaction graphs},
  journal       = {SoftwareX},
  year          = {2016},
  note          = {cited By 0; Article in Press},
  document_type = {Article in Press},
  doi           = {10.1016/j.softx.2016.05.002},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977515854&partnerID=40&md5=9945f49e3a4ca474060028ce24fe210f},
}

@Conference{Aoun2016,
  author        = {Aoun, C.G. and Alloush, I. and Kermarrec, Y. and Champeau, J. and Zein, O.K.},
  title         = {A mapping approach for Marine Observatory relying on enterprise architecture},
  year          = {2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7404633},
  document_type = {Conference Paper},
  groups        = {IEEE, Duplicados},
  journal       = {OCEANS 2015 - MTS/IEEE Washington},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963940320&partnerID=40&md5=5bba4f79d73fbbebabd87c2e7beb02b2},
}

@Article{Cardoso2016251,
  author        = {Cardoso, J.M.P. and Coutinho, J.G.F. and Carvalho, T. and Diniz, P.C. and Petrov, Z. and Luk, W. and Gonçalves, F.},
  title         = {Performance-driven instrumentation and mapping strategies using the LARA aspect-oriented programming approach},
  journal       = {Software - Practice and Experience},
  year          = {2016},
  volume        = {46},
  number        = {2},
  pages         = {251-287},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1002/spe.2301},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954025940&partnerID=40&md5=375effa53f0b4a16f5ced9b376636b84},
}

@Conference{Sneps-Sneppe2016287,
  author        = {Sneps-Sneppe, M. and Namiot, D.},
  title         = {On web-based domain-specific language for Internet of Things},
  year          = {2016},
  volume        = {2016-January},
  pages         = {287-292},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7382444},
  document_type = {Conference Paper},
  doi           = {10.1109/ICUMT.2015.7382444},
  groups        = {Scopus, Duplicados},
  journal       = {International Congress on Ultra Modern Telecommunications and Control Systems and Workshops},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964608635&partnerID=40&md5=872c1345da58b27af55733ee7f05b7f2},
}

@Conference{Jančár2016133,
  author        = {Jančár, M. and Chodarev, S.},
  title         = {A generative framework for development of CRUD-based Linux desktop applications},
  year          = {2016},
  pages         = {133-138},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7377821},
  document_type = {Conference Paper},
  doi           = {10.1109/Informatics.2015.7377821},
  groups        = {IEEE, Duplicados},
  journal       = {2015 IEEE 13th International Scientific Conference on Informatics, INFORMATICS 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963680123&partnerID=40&md5=46f5b065def2d6079c0deae37d9f8f44},
}

@Conference{Kovacevic2016862,
  author        = {Kovacevic, D. and Krunic, M. and Cetic, N. and Kovacevic, J.},
  title         = {Xtext-based eclipse editor for linker configuration file},
  year          = {2016},
  pages         = {862-865},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7377601},
  document_type = {Conference Paper},
  doi           = {10.1109/TELFOR.2015.7377601},
  groups        = {Scopus, Duplicados},
  journal       = {2015 23rd Telecommunications Forum, TELFOR 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964412216&partnerID=40&md5=7d26b01d94ee905da745f54b09049c73},
}

@Conference{Artho2016858,
  author        = {Artho, C. and Seidl, M. and Gros, Q. and Choi, E.-H. and Kitamura, T. and Mori, A. and Ramler, R. and Yamagata, Y.},
  title         = {Model-based testing of stateful APIs with modbat},
  year          = {2016},
  pages         = {858-863},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7372080},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2015.95},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 2015 30th IEEE/ACM International Conference on Automated Software Engineering, ASE 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963803942&partnerID=40&md5=9bf83f32f00d2d7ba543c372258267b5},
}

@Conference{Bozhinoski2016801,
  author        = {Bozhinoski, D. and Di Ruscio, D. and Malavolta, I. and Pelliccione, P. and Tivoli, M.},
  title         = {FLYAQ: Enabling non-expert users to specify and generate missions of autonomous multicopters},
  year          = {2016},
  pages         = {801-806},
  note          = {cited By 0},
  art_number    = {7372070},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2015.104},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings - 2015 30th IEEE/ACM International Conference on Automated Software Engineering, ASE 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963804682&partnerID=40&md5=b62a17f094c5b5bbc85af53a5e90c3c7},
}

@Article{López-Fernández2016101,
  author        = {López-Fernández, J.J. and Garmendia, A. and Guerra, E. and de Lara, J.},
  title         = {Example-based generation of graphical modelling environments},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9764},
  pages         = {101-117},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-42061-5_7},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977500748&partnerID=40&md5=694e7d7bccc7413b6ec472efa209ae41},
}

@Article{MoreiradeSousa2016117,
  author        = {Moreira de Sousa, L. and Rodrigues da Silva, A.},
  title         = {A domain specific language for spatial simulation scenarios},
  journal       = {GeoInformatica},
  year          = {2016},
  volume        = {20},
  number        = {1},
  pages         = {117-149},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10707-015-0233-y},
  groups        = {ACM, Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84953359742&partnerID=40&md5=9f29acab0e17bd468976f2bc0bd2d1aa},
}

@Article{Wortmann2016774,
  author        = {Wortmann, N. and Michel, M. and Naujokat, S.},
  title         = {A fully model-based approach to software development for industrial centrifuges},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9953 LNCS},
  pages         = {774-783},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-47169-3_58},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993141576&partnerID=40&md5=2317945a35365436438b92f716d7b4d8},
}

@Article{Kos2016,
  author        = {Kos, T. and Mernik, M. and Kosar, T.},
  title         = {Test automation of a measurement system using a domain-specific modelling language},
  journal       = {Journal of Systems and Software},
  year          = {2016},
  volume        = {111},
  pages         = {74-88},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.jss.2015.09.002},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949818790&partnerID=40&md5=5156bd688379f51da0d8b871839fd4b0},
}

@Conference{Ribeiro2016323,
  author        = {Ribeiro, A. and De Sousa, L. and Da Silva, A.R.},
  title         = {Comparative analysis of workbenches to support DSMLs: Discussion with non-trivial model-driven development needs},
  year          = {2016},
  pages         = {323-330},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969951795&partnerID=40&md5=c082c0632824f5e955dbf9da79714d7a},
}

@Article{Córdoba-Sánchez2016164,
  author        = {Córdoba-Sánchez, I. and de Lara, J.},
  title         = {Ann: A domain-specific language for the effective design and validation of Java annotations},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2016},
  volume        = {45},
  pages         = {164-190},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.cl.2016.02.002},
  groups        = {Compendex, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979530334&partnerID=40&md5=d5d84142675c1e88e56db507ac19b85b},
}

@Article{Durán2016305,
  author        = {Durán, F. and Moreno-Delgado, A. and Álvarez-Palomo, J.M.},
  title         = {Statistical model checking of e-motions domain-specific modeling languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9633},
  pages         = {305-322},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-49665-7_18},
  groups        = {ACM, Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961744650&partnerID=40&md5=d1ce2fee75e2670a9f26c0f9b695c62a},
}

@Article{Salehi2016,
  author        = {Salehi, P. and Hamou-Lhadj, A. and Toeroe, M. and Khendek, F.},
  title         = {A UML-based domain specific modeling language for service availability management: Design and experience},
  journal       = {Computer Standards and Interfaces},
  year          = {2016},
  volume        = {44},
  pages         = {63-83},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.csi.2015.09.009},
  groups        = {ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947801974&partnerID=40&md5=69bdf90cfe5e490a8588f3c12c52f63c},
}

@Conference{Monthe2016,
  author        = {Monthe, V.M. and Nana, L. and Kouamou, G.E. and Tangha, C.},
  title         = {RsaML: A domain specific modeling language for describing robotic software architectures with integration of real-time properties},
  year          = {2016},
  volume        = {1697},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992365117&partnerID=40&md5=b570641c341bdf7624c482b84f9aa1aa},
}

@Article{Priefer2016603,
  author        = {Priefer, D. and Kneisel, P. and Taentzer, G.},
  title         = {A model-driven process to migrate web content management system extensions},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9671},
  pages         = {603-606},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-38791-8_57},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977535151&partnerID=40&md5=7962af2d88e810534332c1568ff47934},
}

@Conference{Nuntaruji2016407,
  author        = {Nuntaruji, I. and Limpiyakorn, Y.},
  title         = {DSL for business intelligence visualization},
  year          = {2016},
  pages         = {407-410},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  journal       = {2016 6th International Workshop on Computer Science and Engineering, WCSE 2016},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982806371&partnerID=40&md5=2ef576179ace0c2cf2f44f253df79967},
}

@Conference{Živković2016259,
  author        = {Živković, S. and Karagiannis, D.},
  title         = {Mixins and extenders for modular metamodel customisation},
  year          = {2016},
  volume        = {1},
  pages         = {259-270},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ICEIS 2016 - Proceedings of the 18th International Conference on Enterprise Information Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979582637&partnerID=40&md5=1328a1c5a3bd81ac293825a95499ddb3},
}

@Article{Mosteller201692,
  author        = {Mosteller, D. and Cabac, L. and Haustermann, M.},
  title         = {Integrating petri net semantics in a model-driven approach: The renew meta-modeling and transformation framework},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9930 LNCS},
  pages         = {92-113},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-53401-4_5},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988418762&partnerID=40&md5=b3db86c635e59f5db2ce7f8e49ecf85d},
}

@Conference{Vaquero-Melchor2016117,
  author        = {Vaquero-Melchor, D. and Garmendia, A. and Guerra, E. and De Lara, J.},
  title         = {Towards enabling mobile domain-specific modelling},
  year          = {2016},
  pages         = {117-122},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ICSOFT 2016 - Proceedings of the 11th International Joint Conference on Software Technologies},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992223582&partnerID=40&md5=f7eae39521777eb7e2d4c8c7ca845ddc},
}

@Article{Sedlmeier201665,
  author        = {Sedlmeier, M. and Gogolla, M.},
  title         = {Model Driven ActiveRecord with yEd},
  journal       = {Frontiers in Artificial Intelligence and Applications},
  year          = {2016},
  volume        = {280},
  pages         = {65-76},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.3233/978-1-61499-611-8-65},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956705836&partnerID=40&md5=d4c691f253bc07c7b85a3cbfea0fe583},
}

@Conference{Barreiro20163161,
  author        = {Barreiro, F.A. and Vazquez, D.},
  title         = {Expanding and integrating L2 software systems using a new cooperative DSL language},
  year          = {2016},
  volume        = {3},
  pages         = {3161-3168},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {AISTech - Iron and Steel Technology Conference Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979971353&partnerID=40&md5=8b8aa31231507dfd5030d9c7499d99ab},
}

@Article{Oliveira2016,
  author        = {Oliveira, B. and Belo, O.},
  title         = {On the specification of extract, transform, and load patterns behavior: A domain-specific language approach},
  journal       = {Expert Systems},
  year          = {2016},
  note          = {cited By 0; Article in Press},
  __markedentry = {[Neto:5]},
  document_type = {Article in Press},
  doi           = {10.1111/exsy.12168},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84987704704&partnerID=40&md5=cb2007c8d67999d6b2e536c85b2ed959},
}

@Article{Morales201650,
  author        = {Morales, Z. and Magańa, C. and Aguilar, J.A. and Zaldívar-Colado, A. and Tripp-Barba, C. and Misra, S. and Garcia, O. and Zurita, E.},
  title         = {A baseline domain specific language proposal for model-driven web engineering code generation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9790},
  pages         = {50-59},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-42092-9_5},
  groups        = {Compendex,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978209261&partnerID=40&md5=98e32ec9d7bbf3db86823b02384569c3},
}

@Article{Semeráth201687,
  author        = {Semeráth, O. and Vörös, A. and Varró, D.},
  title         = {Iterative and incremental model generation by logic solvers},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9633},
  pages         = {87-103},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-49665-7_6},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961743280&partnerID=40&md5=007d7668f5046f47368a11969fd91bb8},
}

@Article{Dieumegard2016117,
  author        = {Dieumegard, A. and Toom, A. and Pantel, M.},
  title         = {Block library driven translation validation for dataflow models in safety critical systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9933 LNCS},
  pages         = {117-132},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-45943-1_8},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990061196&partnerID=40&md5=49062e6a6d17319d8e46938a06e2e4c8},
}

@Conference{Solms2016148,
  author        = {Solms, F. and Hammond, P.N.D. and Marshall, L.},
  title         = {Constraints-based URDAD Model verification},
  year          = {2016},
  pages         = {148-155},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ENASE 2016 - Proceedings of the 11th International Conference on Evaluation of Novel Software Approaches to Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979513600&partnerID=40&md5=1d180273c94f556c177d384dd653f7dc},
}

@Conference{Kolovos201655,
  author        = {Kolovos, D.S. and Garcia-Dominguez, A. and Paige, R.F. and Guerra, E. and Cuadrado, J.S. and De Lara, J. and Ráth, I. and Varró, D. and Sunyé, G. and Tisi, M.},
  title         = {MONDO: Scalable modelling and model management on the Cloud},
  year          = {2016},
  volume        = {1675},
  pages         = {55-64},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988970685&partnerID=40&md5=14a8a98a60a87c41de9c4fa9c87c9900},
}

@Conference{Sultana2016,
  author        = {Sultana, N. and Mortier, R.},
  title         = {Kneecap: Model-based generation of network traffic},
  year          = {2016},
  volume        = {1617},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984861282&partnerID=40&md5=5eb7b45bf3ed54f4f4188a42535bc77d},
}

@Article{Baar201650,
  author        = {Baar, T.},
  title         = {Verification support for a state-transition-DSL defined with Xtext},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9609},
  pages         = {50-60},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-41579-6_5},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978975333&partnerID=40&md5=6d3496f7942eb938cb9a25a765727668},
}

@Article{Jongmans2016547,
  author        = {Jongmans, S.-S.T.Q. and Arbab, F.},
  title         = {PrDK: Protocol programming with automata},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9636},
  pages         = {547-552},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-49674-9_33},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964039904&partnerID=40&md5=123322baa28c3f041b85ea9a0a933211},
}

@Article{Khalilov2016447,
  author        = {Khalilov, E. and Ross, J. and Antkiewicz, M. and Völter, M. and Czarnecki, K.},
  title         = {Modeling and optimizing automotive electric/electronic (E/E) architectures: Towards making clafer accessible to practitioners},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9953 LNCS},
  pages         = {447-464},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-47169-3_37},
  groups        = {SpingerLink, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993231460&partnerID=40&md5=5b2e65b135b3a96da23b729d37169190},
}

@Article{Tyugashev2016,
  author        = {Tyugashev, A.A.},
  title         = {Language and Toolset for Visual Construction of Programs for Intelligent Autonomous Spacecraft Control},
  journal       = {IFAC-PapersOnLine},
  year          = {2016},
  volume        = {49},
  number        = {5},
  pages         = {120-125},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.ifacol.2016.07.100},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991106463&partnerID=40&md5=dfef9d2acf3ae91c832cb595838049e1},
}

@Article{Chodarev201684,
  author        = {Chodarev, S. and Kollar, J.},
  title         = {Extensible host language for domain-specific languages},
  journal       = {Computing and Informatics},
  year          = {2016},
  volume        = {35},
  number        = {1},
  pages         = {84-110},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84974849223&partnerID=40&md5=04181f300300d986ffc785aab6dc372f},
}

@Article{Ivanchikj2016583,
  author        = {Ivanchikj, A.},
  title         = {RESTful conversation with RESTalk: The use case of doodle},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9671},
  pages         = {583-587},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-38791-8_53},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977583475&partnerID=40&md5=cf63b808109333f9bb4eb6d31e94df7f},
}

@Article{Challenger2016,
  author        = {Challenger, M. and Mernik, M. and Kardas, G. and Kosar, T.},
  title         = {Declarative specifications for the development of multi-agent systems},
  journal       = {Computer Standards and Interfaces},
  year          = {2016},
  volume        = {43},
  pages         = {91-115},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.csi.2015.08.012},
  groups        = {ACM, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943339123&partnerID=40&md5=ef9e74946862cf6c53a21ec4d79d2de9},
}

@Conference{Rabbi201687,
  author        = {Rabbi, F. and Lamo, Y. and Yu, I.C. and Kristensen, L.M.},
  title         = {WebDPF: A web-based metamodelling and model transformation environment},
  year          = {2016},
  pages         = {87-98},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969973382&partnerID=40&md5=48afc70fa5994d6a7302e1247906a16d},
}

@Conference{Oliveira2016102,
  author        = {Oliveira, B. and Belo, O.},
  title         = {An ontology for describing ETL patterns behavior},
  year          = {2016},
  pages         = {102-109},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {DATA 2016 - Proceedings of the 5th International Conference on Data Management Technologies and Applications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991079635&partnerID=40&md5=664ddee417b73806d5b8b4c31c97e497},
}

@Conference{Tolvanen2016711,
  author        = {Tolvanen, J.-P. and Kelly, S.},
  title         = {Model-driven development challenges and solutions: Experiences with domain-specific modelling in industry},
  year          = {2016},
  pages         = {711-719},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84970016300&partnerID=40&md5=5ec3205566476059818961acc78f9752},
}

@Conference{Martini2016,
  author        = {Martini, R.G. and Librelotto, G.R. and Henriques, P.R.},
  title         = {Formal Description and Automatic Generation of Learning Spaces Based on Ontologies},
  year          = {2016},
  volume        = {96},
  pages         = {235-244},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2016.08.136},
  groups        = {ACM, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988908359&partnerID=40&md5=7d0fe498ee486bf6903c0d77293c3319},
}

@Article{Jörges2016282,
  author        = {Jörges, S. and Lamprecht, A.-L. and Margaria, T. and Naujokat, S. and Steffen, B.},
  title         = {Synthesis from a practical perspective},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9952 LNCS},
  pages         = {282-302},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-47166-2_20},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993138898&partnerID=40&md5=77321d6b43370575c81c55c1364e1a20},
}

@Conference{Bezirgiannis2016119,
  author        = {Bezirgiannis, N. and Prasetya, I.S.W.B. and Sakellariou, I.},
  title         = {HLogo: A parallel haskell variant of netlogo},
  year          = {2016},
  pages         = {119-128},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {SIMULTECH 2016 - Proceedings of the 6th International Conference on Simulation and Modeling Methodologies, Technologies and Applications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991219753&partnerID=40&md5=ee928349d48e42217cc0a971853eca97},
}

@Conference{Yang2016420,
  author        = {Yang, F. and Li, J. and Cheng, J.},
  title         = {Husky: Towards a more efficient and expressive distributed computing framework},
  year          = {2016},
  volume        = {9},
  number        = {5},
  pages         = {420-431},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the VLDB Endowment},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976582188&partnerID=40&md5=0cc1cd64d29f99bdf1efc97466ae2ef1},
}

@Article{Kilinç2016403,
  author        = {Kilinç, İ. and Ateş, H. and Özhorasan, B. and Korkmaz, H.},
  title         = {Tactical graphics description language},
  journal       = {Lecture Notes in Electrical Engineering},
  year          = {2016},
  volume        = {363},
  pages         = {403-413},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-22635-4_37},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945959799&partnerID=40&md5=de4a41676c35ccc7878d8d44850b329f},
}

@Article{Méndez-Acuña2016393,
  author        = {Méndez-Acuña, D. and Galindo, J.A. and Combemale, B. and Blouin, A. and Baudry, B.},
  title         = {Puzzle: A tool for analyzing and extracting specification clones in DSLs},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9679},
  pages         = {393-396},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-35122-3_26},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977534571&partnerID=40&md5=7a9c08000dacd768e00abcc7d3d6d1ad},
}

@Article{Regnell2016232,
  author        = {Regnell, B.},
  title         = {What is essential? – a pilot survey on views about the requirements metamodel of reqT.org},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9619},
  pages         = {232-239},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-30282-9_16},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960897355&partnerID=40&md5=89ec8be752722fbd5aeb2eb98d55cbe4},
}

@Article{Bergenti2016213,
  author        = {Bergenti, F. and Iotti, E. and Poggi, A.},
  title         = {Core features of an agent-oriented domain-specific language for JADE agents},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2016},
  volume        = {473},
  pages         = {213-224},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-40159-1_18},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976444943&partnerID=40&md5=07c8e1016f49d37f6cc74d685b28fa0e},
}

@Conference{Zhang2016578,
  author        = {Zhang, D. and Bosnacki, D. and Van Den Brand, M. and Huizing, C. and Kuiper, R. and Jacobs, B. and Wijs, A.},
  title         = {Verification of atomicity preservation in model-to-code transformations using generic Java code},
  year          = {2016},
  pages         = {578-588},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969969841&partnerID=40&md5=b20ae3a82b9ad92c8aa4756373647a9c},
}

@Conference{Vocka2016612,
  author        = {Vocka, R. and Havluj, F.},
  title         = {Quadriga-general and powerful lattice code calculation framework},
  year          = {2016},
  volume        = {1},
  pages         = {612-619},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {International Congress on Advances in Nuclear Power Plants, ICAPP 2016},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84986215711&partnerID=40&md5=687c0254d2ed27635d63bc0e127695a9},
}

@Conference{Thierry-Mieg201630,
  author        = {Thierry-Mieg, Y.},
  title         = {Bridging the gap between formal methods and software engineering using model-based technology},
  year          = {2016},
  volume        = {1591},
  pages         = {30-32},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977559044&partnerID=40&md5=5f553bec833c9183eb2d61158d895354},
}

@Conference{Scheffler2016377,
  author        = {Scheffler, R. and Koch, S. and Wrobel, G. and Pleßow, M. and Buse, C. and Behrens, B.-A.},
  title         = {Modelling CAD models: Method for the model driven design of CAD models for deep drawing tools},
  year          = {2016},
  pages         = {377-383},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969988997&partnerID=40&md5=55724dfaae5a172a000462cd5c41b2bb},
}

@Conference{Gamboa2016123,
  author        = {Gamboa, M.A. and Syriani, E.},
  title         = {Automating activities in MDE tools},
  year          = {2016},
  pages         = {123-133},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969920263&partnerID=40&md5=abfcfef65eaece6dd8a0c55f6ddb4413},
}

@Article{Naujokat2016218,
  author        = {Naujokat, S. and Neubauer, J. and Margaria, T. and Steffen, B.},
  title         = {Meta-level reuse for mastering domain specialization},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9953 LNCS},
  pages         = {218-237},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-47169-3_16},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84993114874&partnerID=40&md5=417a178d3241f169dc4afc81c7ed1ea4},
}

@Article{Kozynchenko2016,
  author        = {Kozynchenko, A.I. and Kozynchenko, S.A.},
  title         = {Development of the Object-Oriented Dynamic Simulation Models Using Visual C++ Freeware},
  journal       = {Modelling and Simulation in Engineering},
  year          = {2016},
  volume        = {2016},
  note          = {cited By 0},
  art_number    = {1756124},
  document_type = {Article},
  doi           = {10.1155/2016/1756124},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962690428&partnerID=40&md5=38d41a99bbd4c3fd40c4c12799d0db2d},
}

@Article{NoAuthor20161,
  title         = {6th International Conference on Model and Data Engineering, MEDI 2016},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9893 LNCS},
  pages         = {1-359},
  note          = {cited By 0},
  document_type = {Conference Review},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988672529&partnerID=40&md5=abab9ee9054c084402fd0ea1f8f3d4c2},
}

@Article{2016a,
  title         = {15th International Conference on Software Reuse, ICSR 2016},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9679},
  pages         = {1-411},
  note          = {cited By 0},
  document_type = {Conference Review},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84977492303&partnerID=40&md5=347f932969ae9dfb1c178ad3143fa5af},
}

@Article{Sprogis201699,
  author        = {Sprogis, A.},
  title         = {DSML tool building platform in WEB},
  journal       = {Communications in Computer and Information Science},
  year          = {2016},
  volume        = {615},
  pages         = {99-109},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-40180-5_7},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84978968784&partnerID=40&md5=37bcb5b3807dcaa015aaca052372ed26},
}

@Article{2016b,
  title         = {12th International Baltic Conference on Databases and Information Systems, DB and IS 2016},
  journal       = {Communications in Computer and Information Science},
  year          = {2016},
  volume        = {615},
  pages         = {1-380},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979066362&partnerID=40&md5=4c2d42d3da19b59719323e4f78ab188a},
}

@Conference{Bettini2016301,
  author        = {Bettini, L.},
  title         = {The EMF Parsley DSL for developing EMF applications},
  year          = {2016},
  pages         = {301-308},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  journal       = {MODELSWARD 2016 - Proceedings of the 4th International Conference on Model-Driven Engineering and Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84970015490&partnerID=40&md5=356f810494a266579d5c8c4dcea2ca95},
}

@Article{Kalnins201668,
  author        = {Kalnins, A. and Barzdins, J.},
  title         = {Metamodel specialization for DSL tool building},
  journal       = {Communications in Computer and Information Science},
  year          = {2016},
  volume        = {615},
  pages         = {68-82},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-40180-5_5},
  groups        = {Compendex, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979073709&partnerID=40&md5=f91c03c0e396b79b2d9ce05ad7dc097c},
}

@Article{2016c,
  title         = {3rd International Conference on Information Systems Design and Intelligent Applications, INDIA 2016},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2016},
  volume        = {433},
  pages         = {1-752},
  note          = {cited By 0},
  document_type = {Conference Review},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84965025467&partnerID=40&md5=bbc68e215f0deccb0e81dac762db9c29},
}

@Article{Kauffman2016235,
  author        = {Kauffman, S. and Havelund, K. and Joshi, R.},
  title         = {nfer – A notation and system for inferring event stream abstractions},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {10012 LNCS},
  pages         = {235-250},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-46982-9_15},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990196567&partnerID=40&md5=25ee821d308b403ce902cdc92ce29a0d},
}

@Article{Bošnački2016141,
  author        = {Bošnački, D. and van den Brand, M. and Gabriels, J. and Jacobs, B. and Kuiper, R. and Roede, S. and Wijs, A. and Zhang, D.},
  title         = {Towards modular verification of threaded concurrent executable code generated from DSL models},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9539},
  pages         = {141-160},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-28934-2_8},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958093527&partnerID=40&md5=85c9ca17b25cf38c23d77b3531e45ad6},
}

@Article{2016d,
  title         = {28th International Workshop on Languages and Compilers for Parallel Computing, LCPC 2015},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2016},
  volume        = {9519},
  pages         = {1-319},
  note          = {cited By 0},
  document_type = {Conference Review},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961154975&partnerID=40&md5=047a1be97b55df67c94e14e24ba0dca5},
}

@Article{Aram2015,
  author        = {Aram, M. and Neumann, G.},
  title         = {Multilayered analysis of co-development of business information systems},
  journal       = {Journal of Internet Services and Applications},
  year          = {2015},
  volume        = {6},
  number        = {1},
  note          = {cited By 1},
  art_number    = {13},
  document_type = {Article},
  doi           = {10.1186/s13174-015-0030-8},
  groups        = {Scopus, excluidos},
  page_count    = {30},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938854853&partnerID=40&md5=d116a8767179149fded44da59535900f},
}

@Conference{Mori2015193,
  author        = {Mori, J.Y. and Llanos, C.H. and Huebner, M.},
  title         = {A framework to the design and programming of many-core focal-plane vision processors},
  year          = {2015},
  pages         = {193-198},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {7363638},
  document_type = {Conference Paper},
  doi           = {10.1109/EUC.2015.24},
  groups        = {ACM, Compendex, IEEE, Duplicados},
  journal       = {Proceedings - IEEE/IFIP 13th International Conference on Embedded and Ubiquitous Computing, EUC 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963815334&partnerID=40&md5=7c8102a3e8bbbcdffa8871448fd6aba0},
}

@Conference{Bautista2015,
  author        = {Bautista, E. and La Serna, N.},
  title         = {An MDE-based graphical tool for the validation of MySQL replication models},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7360009},
  document_type = {Conference Paper},
  doi           = {10.1109/CLEI.2015.7360009},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - 2015 41st Latin American Computing Conference, CLEI 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961918787&partnerID=40&md5=a762c1939a11217c0d4fd81392d973f0},
}

@Article{Basten2015,
  author        = {Basten, B. and Van Den Bos, J. and Hills, M. and Klint, P. and Lankamp, A. and Lisser, B. and Van Der Ploeg, A. and Van Der Storm, T. and Vinju, J.},
  title         = {Modular language implementation in Rascal - Experience report},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {7-19},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1016/j.scico.2015.11.003},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960814183&partnerID=40&md5=7ced5f99174d631879e9b42b1e12af42},
}

@Article{Sloane2015,
  author        = {Sloane, A.M. and Roberts, M.},
  title         = {Oberon-0 in Kiama},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {20-32},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2015.10.010},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960807184&partnerID=40&md5=dcf497608a287a547bce9b87c505deaf},
}

@Article{Freudenthal2015,
  author        = {Freudenthal, M.},
  title         = {Simpl DSL toolkit},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {114},
  pages         = {85-91},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2014.11.018},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960814753&partnerID=40&md5=1de90e87d8a77fe060ba0c832b4cbed3},
}

@Conference{Efendioglu2015,
  author        = {Efendioglu, N. and Woitsch, R. and Karagiannis, D.},
  title         = {Modelling method design: A model-driven approach},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {59},
  document_type = {Conference Paper},
  doi           = {10.1145/2837185.2837206},
  groups        = {ACM, Duplicados},
  journal       = {17th International Conference on Information Integration and Web-Based Applications and Services, iiWAS 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84967139379&partnerID=40&md5=2bd2a5abe3fac1bd148fb475b3e3d630},
}

@Conference{Cardoso2015293,
  author        = {Cardoso, B. and Romão, T.},
  title         = {Avoiding "-too late! "-Expressing and Detecting Opportunity with EveWorks and EveXL},
  year          = {2015},
  pages         = {293-302},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2837126.2837139},
  groups        = {Compendex, Duplicados},
  journal       = {13th International Conference on Advances in Mobile Computing and Multimedia, MoMM 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968756806&partnerID=40&md5=d7066bfbad6001a1ed4242ca0d7077d3},
}

@Conference{Li2015959,
  author        = {Li, P. and Brunet, E. and Trahay, F. and Parrot, C. and Thomas, G. and Namyst, R.},
  title         = {Automatic OpenCL code generation for multi-device heterogeneous architectures},
  year          = {2015},
  volume        = {2015-December},
  pages         = {959-968},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {7349651},
  document_type = {Conference Paper},
  doi           = {10.1109/ICPP.2015.105},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings of the International Conference on Parallel Processing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84976471065&partnerID=40&md5=7aedb1b20965001e2a181282f3222ed5},
}

@Article{AzadiMarand2015,
  author        = {Azadi Marand, E. and Azadi Marand, E. and Challenger, M.},
  title         = {DSML4CP: A Domain-specific Modeling Language for Concurrent Programming},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2015},
  volume        = {44},
  pages         = {319-341},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.cl.2015.09.002},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951094439&partnerID=40&md5=e93332891d9f35a32187ef79284b80ec},
}

@Article{Dimitrieski2015,
  author        = {Dimitrieski, V. and Čeliković, M. and Aleksić, S. and Ristić, S. and Alargt, A. and Luković, I.},
  title         = {Concepts and evaluation of the extended entity-relationship approach to database design in a multi-paradigm information system modeling tool},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2015},
  volume        = {44},
  pages         = {299-318},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.cl.2015.08.011},
  groups        = {Compendex, ACM, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945540928&partnerID=40&md5=7b17ced3492e3b7df96e83c98d6bf300},
}

@Conference{Santos2015289,
  author        = {Santos, R. and Correia, N.},
  title         = {Building interactive experiences block by block},
  year          = {2015},
  volume        = {30-November-2015},
  pages         = {289-301},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2836041.2836071},
  groups        = {Scopus,, excluidos},
  journal       = {ACM International Conference Proceeding Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959269524&partnerID=40&md5=91286331208970508ca62ea6b9c8a25f},
}

@Conference{Pescador2015166,
  author        = {Pescador, A. and Garmendia, A. and Guerra, E. and Sánchez Cuadrado, J.S. and De Lara, J.},
  title         = {Pattern-based development of Domain-Specific Modelling Languages},
  year          = {2015},
  pages         = {166-175},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {7338247},
  document_type = {Conference Paper},
  doi           = {10.1109/MODELS.2015.7338247},
  groups        = {Compendex, Duplicados},
  journal       = {2015 ACM/IEEE 18th International Conference on Model Driven Engineering Languages and Systems, MODELS 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961680159&partnerID=40&md5=7da7d5656a41a3bc1399af9046693705},
}

@Conference{Maarouf2015,
  author        = {Maarouf, A. and El Hamlaoui, M. and Marzouk, A. and Haqiq, A.},
  title         = {Combining multi-agent systems and MDE approach for monitoring SLA violations in the Cloud Computing},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7336975},
  document_type = {Conference Paper},
  doi           = {10.1109/CloudTech.2015.7336975},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings of 2015 International Conference on Cloud Computing Technologies and Applications, CloudTech 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962812614&partnerID=40&md5=bb5b002b78253ff878f3bf9273bc7d45},
}

@Conference{Liao2015,
  author        = {Liao, C. and Lin, P.-H. and Quinlan, D.J. and Zhao, Y. and Shen, X.},
  title         = {Enhancing domain specific language implementations through ontology},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {a3},
  document_type = {Conference Paper},
  doi           = {10.1145/2830018.2830022},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of WOLFHPC 2015: 5th International Workshop on Domain-Specific Languages and High-Level Frameworks for High Performance Computing - Held in conjunction with SC 2015: The International Conference for High Performance Computing, Networking, Storage and Analysis},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959352993&partnerID=40&md5=4bde6069571e1f18b90e57cdad612c83},
}

@Conference{Gysi2015,
  author        = {Gysi, T. and Osuna, C. and Fuhrer, O. and Bianco, M. and Schulthess, T.C.},
  title         = {STELLA: A domain-specific tool for structured grid methods in weather and climate models},
  year          = {2015},
  volume        = {15-20-November-2015},
  note          = {cited By 1},
  art_number    = {a41},
  document_type = {Conference Paper},
  doi           = {10.1145/2807591.2807627},
  groups        = {Scopus, Duvida},
  journal       = {International Conference for High Performance Computing, Networking, Storage and Analysis, SC},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84966577649&partnerID=40&md5=097494b59aee7d92bbb3615375734349},
}

@Article{Li20151234,
  author        = {Li, S. and Li, D. and Li, F. and Zhou, N.},
  title         = {CPSiCGF: A code generation framework for CPS integration modeling},
  journal       = {Microprocessors and Microsystems},
  year          = {2015},
  volume        = {39},
  number        = {8},
  pages         = {1234-1244},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1016/j.micpro.2015.05.010},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84933567471&partnerID=40&md5=4a33a2d20a7a0d755158f919a2c202eb},
}

@Article{Abrantes20151515,
  author        = {Abrantes, J. and Coelho, R. and Bonifácio, R.},
  title         = {DAEH: A tool for specifying and monitoring the exception handling policy},
  journal       = {International Journal of Software Engineering and Knowledge Engineering},
  year          = {2015},
  volume        = {25},
  number        = {9-10},
  pages         = {1515-1530},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1142/S0218194015400306},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962493363&partnerID=40&md5=0c4098b5956cdbd4bff9a5e273b3bd63},
}

@Conference{Davies20151,
  author        = {Davies, J. and Gibbons, J. and Milward, A. and Milward, D. and Shah, S. and Solanki, M. and Welch, J.},
  title         = {Domain specific modelling for clinical research},
  year          = {2015},
  pages         = {1-8},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2846696.2846701},
  groups        = {Scopus, Duvida},
  journal       = {DSM 2015 - Proceedings of the Workshop on Domain-Specific Modeling},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975893953&partnerID=40&md5=c34f5b19c34964adcd25f7124843b6f5},
}

@Conference{Degueule201545,
  author        = {Degueule, T. and Combemale, B. and Blouin, A. and Barais, O.},
  title         = {Reusing legacy DSLs with melange},
  year          = {2015},
  pages         = {45-46},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2846696.2846697},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {DSM 2015 - Proceedings of the Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975813311&partnerID=40&md5=d4eebbc0ac583465a255c97dac275c5d},
}

@Conference{Voelter201555,
  author        = {Voelter, M. and Molotnikov, Z. and Kolb, B.},
  title         = {Towards improving software security using language engineering and mbeddr C},
  year          = {2015},
  pages         = {55-62},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2846696.2846698},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {DSM 2015 - Proceedings of the Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975853431&partnerID=40&md5=bf7391c85512f7d5725e616b08b24bbd},
}

@Conference{Adam201595,
  author        = {Adam, S. and Schultz, U.P.},
  title         = {Towards tool support for spreadsheet-based domain-specific languages},
  year          = {2015},
  pages         = {95-98},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814204.2814215},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {GPCE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963541110&partnerID=40&md5=1e5f35e4df2a75dbf30ee834eb9600ae},
}

@Conference{Boube2015137,
  author        = {Boube, E. and Corley, J. and Combemale, B. and Gray, J. and Baudry, B.},
  title         = {Supporting efficient and advanced omniscient debugging for xDSMLs},
  year          = {2015},
  pages         = {137-148},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814251.2814262},
  groups        = {Compendex, Duplicados},
  journal       = {SLE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962499468&partnerID=40&md5=52e5f6af00fa6b5e25366dec9f5b5a46},
}

@Conference{Maro20151,
  author        = {Maro, S. and Steghöfer, J.-P. and Anjorin, A. and Tichy, M. and Gelin, L.},
  title         = {On integrating graphical and textual editors for a uml profile based domain specific language: An industrial experience},
  year          = {2015},
  pages         = {1-12},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814251.2814253},
  groups        = {ACM, Duplicados},
  journal       = {SLE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962492788&partnerID=40&md5=e7949776d3746eba77d54d1c3e965db5},
}

@Conference{Degueule201525,
  author        = {Degueule, T. and Combemale, B. and Blouin, A. and Barais, O. and Jézéquel, J.-M.},
  title         = {Melange: A meta-language for modular and reusable development of DSLs},
  year          = {2015},
  pages         = {25-36},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814251.2814252},
  groups        = {ACM, Duplicados},
  journal       = {SLE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962587279&partnerID=40&md5=0cbed7c3ad4e6b62758e0bc1355069a0},
}

@Conference{Cuenca201531,
  author        = {Cuenca, F. and Van Den Bergh, J. and Luyten, K. and Coninx, K.},
  title         = {A user study for comparing the programming efficiency of modifying executable multimodal interaction descriptions: A domain-specific language versus equivalent event-callback code},
  year          = {2015},
  pages         = {31-38},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2846680.2846686},
  groups        = {ACM, Compendex, Duplicados},
  journal       = {PLATEAU 2015 - Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964675014&partnerID=40&md5=eb5be149e9afd628e30d67dd5c97e255},
}

@Conference{López-Fernández2015101,
  author        = {López-Fernández, J.J. and Guerra, E. and De Lara, J.},
  title         = {Example-based validation of domain-specific visual languages},
  year          = {2015},
  pages         = {101-112},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814251.2814256},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {SLE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Software Language Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962488489&partnerID=40&md5=3219360a9e14ee90dbf75ecedd729861},
}

@Conference{Kabáč20159,
  author        = {Kabáč, M. and Volanschi, N. and Consel, C.},
  title         = {An evaluation of the DiaSuite toolset by professional developers learning cost and usability},
  year          = {2015},
  pages         = {9-16},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2846680.2846682},
  groups        = {Scopus,, excluidos},
  journal       = {PLATEAU 2015 - Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964692777&partnerID=40&md5=32f084d6d91c4d660fc393dce2d7d063},
}

@Conference{NoAuthor2015,
  title         = {PLATEAU 2015 - Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools},
  year          = {2015},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  journal       = {PLATEAU 2015 - Proceedings of the 6th Workshop on Evaluation and Usability of Programming Languages and Tools},
  keywords      = {rank5},
  page_count    = {73},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964664248&partnerID=40&md5=42463e29ce716b0e9ea8deff4240a9ca},
}

@Conference{2015,
  title         = {GPCE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  year          = {2015},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {GPCE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  keywords      = {rank5},
  page_count    = {190},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963542605&partnerID=40&md5=a7f802150d4bf22fa841899b45e72475},
}

@Conference{Azadmanesh20152,
  author        = {Azadmanesh, M.R. and Hauswirth, M.},
  title         = {SQL for deep dynamic analysis?},
  year          = {2015},
  pages         = {2-7},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2823363.2823365},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {WODA 2015 - Proceedings of the 13th International Workshop on Dynamic Analysis},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957028833&partnerID=40&md5=6a47995e5022a5b0af8c0e7db668f65c},
}

@Conference{Selgrad2015141,
  author        = {Selgrad, K. and Lier, A. and Köferl, F. and Stamminger, M. and Lohmann, D.},
  title         = {Lightweight, generative variant exploration for high-performance graphics applications},
  year          = {2015},
  pages         = {141-150},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814204.2814220},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {GPCE 2015 - Proceedings of the 2015 ACM SIGPLAN International Conference on Generative Programming: Concepts and Experiences},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963517332&partnerID=40&md5=badca478aea16c094e8150d71d80ed95},
}

@Conference{Gray2015101,
  author        = {Gray, J. and Sprinkle, J. and Tolvanen, J.-P. and Rossi, M.},
  title         = {Workshop preview of the 15th workshop on domain specific modeling (DSM 2015)},
  year          = {2015},
  pages         = {101-102},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2814189.2833204},
  groups        = {ACM},
  journal       = {SPLASH Companion 2015 - Companion Proceedings of the 2015 ACM SIGPLAN International Conference on Systems, Programming, Languages and Applications: Software for Humanity},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960356931&partnerID=40&md5=0d71c31f68e5952dcac9e0b40dcd552f},
}

@Conference{Polozov2015107,
  author        = {Polozov, O. and Gulwani, S.},
  title         = {FlashMeta: A framework for inductive program synthesis},
  year          = {2015},
  volume        = {25-30-Oct-2015},
  pages         = {107-126},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814270.2814310},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958623850&partnerID=40&md5=63c0eeb54a7b1be45f8d796244460632},
}

@Conference{Voelter2015655,
  author        = {Voelter, M. and Van Deursen, A. and Kolb, B. and Eberle, S.},
  title         = {Using C language extensions for developing embedded software: A case study},
  year          = {2015},
  volume        = {25-30-Oct-2015},
  pages         = {655-674},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2814270.2814276},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958628004&partnerID=40&md5=ec2de851eea0f1a1343dc6b0aff80697},
}

@Conference{DeOliveira2015,
  author        = {De Oliveira, C.B. and Menotti, R. and Cardoso, J.M.P. and Marques, E.},
  title         = {A special-purpose language for implementing pipelined FPGA-based accelerators},
  year          = {2015},
  volume        = {2015-October},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7306085},
  document_type = {Conference Paper},
  doi           = {10.1109/FDL.2015.7306085},
  groups        = {IEEE, Duplicados},
  journal       = {Forum on Specification and Design Languages},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964008049&partnerID=40&md5=ddcb86cd69f5b052e8c5c9b39f400ff7},
}

@Conference{Pramudianto20151,
  author        = {Pramudianto, F. and Kamienski, C.A. and Souto, E. and Borelli, F. and Gomes, L.L. and Sadok, D. and Jarke, M.},
  title         = {IoT Link: An Internet of Things Prototyping Toolkit},
  year          = {2015},
  pages         = {1-9},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7306927},
  document_type = {Conference Paper},
  doi           = {10.1109/UIC-ATC-ScalCom.2014.95},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 2014 IEEE International Conference on Ubiquitous Intelligence and Computing, 2014 IEEE International Conference on Autonomic and Trusted Computing, 2014 IEEE International Conference on Scalable Computing and Communications and Associated Symposia/Workshops, UIC-ATC-ScalCom 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949549549&partnerID=40&md5=7b3bb8d1dafa7de12c629ccd2acbe3cc},
}

@Conference{2015a,
  title         = {Proceedings of the 2015 IEEE 19th International Enterprise Distributed Object Computing Conference Workshops and Demonstrations, EDOCW 2015},
  year          = {2015},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {Proceedings of the 2015 IEEE 19th International Enterprise Distributed Object Computing Conference Workshops and Demonstrations, EDOCW 2015},
  keywords      = {rank5},
  page_count    = {180},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964614217&partnerID=40&md5=1c67c755f38ef43e8ea93d9312d132e4},
}

@Conference{Prado2015130,
  author        = {Prado, E.F.D. and Lucredio, D.},
  title         = {A Flexible Model-Driven Game Development Approach},
  year          = {2015},
  pages         = {130-139},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7306135},
  document_type = {Conference Paper},
  doi           = {10.1109/SBCARS.2015.24},
  groups        = {ACM, IEEE, Duplicados},
  journal       = {Proceedings - 2015 9th Brazilian Symposium on Software Components, Architectures and Reuse, SBCARS 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958520688&partnerID=40&md5=2d3a15aea16348f711f9b1de8f6e4017},
}

@Article{López-Fernández20151323,
  author        = {López-Fernández, J.J. and Cuadrado, J.S. and Guerra, E. and de Lara, J.},
  title         = {Example-driven meta-model development},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {4},
  pages         = {1323-1347},
  note          = {cited By 5},
  document_type = {Article},
  doi           = {10.1007/s10270-013-0392-y},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941946127&partnerID=40&md5=9cc670cf44b78976864d1b7cbf7f6861},
}

@Conference{Vinogradov201556,
  author        = {Vinogradov, S. and Ozhigin, A. and Ratiu, D.},
  title         = {Modern model-based development approach for embedded systems practical experience},
  year          = {2015},
  pages         = {56-59},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7302512},
  document_type = {Conference Paper},
  doi           = {10.1109/SysEng.2015.7302512},
  groups        = {Compendex, Duplicados},
  journal       = {1st IEEE International Symposium on Systems Engineering, ISSE 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954522376&partnerID=40&md5=66ee5b1de86a017b9865a638096c95c4},
}

@Conference{Malavolta2015259,
  author        = {Malavolta, I. and Muccini, H. and Sebastiani, M.},
  title         = {Automatically Bridging UML Profiles to MOF Metamodels},
  year          = {2015},
  pages         = {259-266},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7302461},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAA.2015.64},
  groups        = {IEEE, Compendex, Duplicados},
  journal       = {Proceedings - 41st Euromicro Conference on Software Engineering and Advanced Applications, SEAA 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958292434&partnerID=40&md5=1db63e8466883a2778fafd9661c4853a},
}

@Article{Haber2015601,
  author        = {Haber, A. and Hölldobler, K. and Kolassa, C. and Look, M. and Müller, K. and Rumpe, B. and Schaefer, I. and Schulze, C.},
  title         = {Systematic synthesis of delta modeling languages},
  journal       = {International Journal on Software Tools for Technology Transfer},
  year          = {2015},
  volume        = {17},
  number        = {5},
  pages         = {601-626},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1007/s10009-015-0387-9},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941426977&partnerID=40&md5=73be9f37cc946a0cb8656ff712a92f19},
}

@Conference{VanBroeckhoven2015,
  author        = {Van Broeckhoven, F. and Vlieghe, J. and De Troyer, O.},
  title         = {Mapping between Pedagogical Design Strategies and Serious Game Narratives},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7295780},
  document_type = {Conference Paper},
  doi           = {10.1109/VS-GAMES.2015.7295780},
  groups        = {Compendex, Duplicados},
  journal       = {VS-Games 2015 - 7th International Conference on Games and Virtual Worlds for Serious Applications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954534972&partnerID=40&md5=4eb47967b17d11c149b36880ac2411a8},
}

@Conference{Sporer2015357,
  author        = {Sporer, H.},
  title         = {A model-based domain-specific language approach for the automotive E/E-System design},
  year          = {2015},
  pages         = {357-362},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2811411.2811533},
  groups        = {ACM, Compendex, Scopus, Duplicados},
  journal       = {Proceeding of the 2015 Research in Adaptive and Convergent Systems, RACS 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960845947&partnerID=40&md5=1dfc95df876aba97c025fa0149196c11},
}

@Conference{Aouini2015545,
  author        = {Aouini, Z. and Kortebi, A. and Ghamri-Doudane, Y.},
  title         = {Traffic monitoring in home networks: Enhancing diagnosis and performance tracking},
  year          = {2015},
  pages         = {545-550},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7289142},
  document_type = {Conference Paper},
  doi           = {10.1109/IWCMC.2015.7289142},
  groups        = {Compendex, Duplicados},
  journal       = {IWCMC 2015 - 11th International Wireless Communications and Mobile Computing Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949484588&partnerID=40&md5=6cd54b347b6473c5ca4e80e083c26d3b},
}

@Article{Popovic2015,
  author        = {Popovic, A. and Lukovic, I. and Dimitrieski, V. and Djukic, V.},
  title         = {A DSL for modeling application-specific functionalities of business applications},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2015},
  volume        = {43},
  pages         = {69-95},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.cl.2015.03.003},
  groups        = {ACM, Compendex, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938749428&partnerID=40&md5=a9080853d9dec81d62b1e72d821aafd3},
}

@Conference{DeSousaDuarte2015159,
  author        = {De Sousa Duarte, P.A. and Barreto, F.M. and De Almada Gomes, F.A. and Viana De Carvalho, W. and Trinta, F.A.M.},
  title         = {CRITiCAL: A Configuration Tool for Context Aware and mobiLe Applications},
  year          = {2015},
  volume        = {2},
  pages         = {159-168},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7273614},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2015.91},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962184530&partnerID=40&md5=b3dc06a20b26a8f5f4eeec2320d3a51c},
}

@Conference{Schmid2015166,
  author        = {Schmid, M. and Reiche, O. and Hannig, F. and Teich, J.},
  title         = {Loop coarsening in C-based High-Level Synthesis},
  year          = {2015},
  volume        = {2015-September},
  pages         = {166-173},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7245730},
  document_type = {Conference Paper},
  doi           = {10.1109/ASAP.2015.7245730},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of the International Conference on Application-Specific Systems, Architectures and Processors},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955590403&partnerID=40&md5=d23419af405e6454a3c8ac7aca337147},
}

@Book{Parlings2015295,
  title         = {Modular IT-support for integrated supply chain design},
  year          = {2015},
  author        = {Parlings, M. and Hegmanns, T. and Sprenger, P. and Kossmann, D.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-319-22288-2_17},
  groups        = {Scopus, excluidos},
  journal       = {Logistics and Supply Chain Innovation: Bridging the Gap between Theory and Practice},
  pages         = {295-312},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955626401&partnerID=40&md5=47063f0b9c9304df00846094ea475e8c},
}

@Article{Voelter201546,
  author        = {Voelter, M. and Warmer, J. and Kolb, B.},
  title         = {Projecting a Modular Future},
  journal       = {IEEE Software},
  year          = {2015},
  volume        = {32},
  number        = {5},
  pages         = {46-52},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6866847},
  document_type = {Article},
  doi           = {10.1109/MS.2014.103},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940375661&partnerID=40&md5=64d66328b7cc069f3924f11615836189},
}

@Book{Sawicki2015261,
  title         = {Characterising enterprise application integration solutions as discrete-event systems},
  year          = {2015},
  author        = {Sawicki, S. and Frantz, R.Z. and Fernandes, V.M.B. and Roos-Frantz, F. and Yevseyeva, I. and Corchuelo, R.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-8823-0.ch009},
  groups        = {Scopus,, excluidos},
  journal       = {Handbook of Research on Computational Simulation and Modeling in Engineering},
  pages         = {261-287},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958118538&partnerID=40&md5=b85920ba31d88586e786c0f6518d9d1c},
}

@Article{Helfer2015,
  author        = {Helfer, T. and Michel, B. and Proix, J.-M. and Salvo, M. and Sercombe, J. and Casella, M.},
  title         = {Introducing the open-source mfront code generator: Application to mechanical behaviours and material knowledge management within the PLEIADES fuel element modelling platform},
  journal       = {Computers and Mathematics with Applications},
  year          = {2015},
  volume        = {70},
  number        = {5},
  pages         = {994-1023},
  note          = {cited By 4},
  document_type = {Article},
  doi           = {10.1016/j.camwa.2015.06.027},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944384373&partnerID=40&md5=be7358c127e0b61958b3f9fe62184989},
}

@Conference{Chanti2015,
  author        = {Chanti, H. and Thiry, L. and Hassenforder, M. and Blanchard, E. and Fromy, P.},
  title         = {Fire safety DSL based algebra},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7233083},
  document_type = {Conference Paper},
  doi           = {10.1109/CEIT.2015.7233083},
  groups        = {Scopus, Duplicados},
  journal       = {3rd International Conference on Control, Engineering and Information Technology, CEIT 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960192273&partnerID=40&md5=5a92797443b7aa4a696fe57d17c2458a},
}

@Conference{Günalp2015720,
  author        = {Günalp, O. and Escoffier, C. and Lalanda, P.},
  title         = {Rondo: A Tool Suite for Continuous Deployment in Dynamic Environments},
  year          = {2015},
  pages         = {720-727},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {7207420},
  document_type = {Conference Paper},
  doi           = {10.1109/SCC.2015.102},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - 2015 IEEE International Conference on Services Computing, SCC 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84953432060&partnerID=40&md5=ec85a68e9de51f95899f4a5f8590dcff},
}

@Conference{Barnett2015657,
  author        = {Barnett, S. and Vasa, R. and Grundy, J.},
  title         = {Bootstrapping Mobile App Development},
  year          = {2015},
  volume        = {2},
  pages         = {657-660},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {7203036},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSE.2015.216},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951780610&partnerID=40&md5=d9da2da41bb4f5c8579dcc9d3ff00df2},
}

@Conference{Caracciolo2015871,
  author        = {Caracciolo, A.},
  title         = {A Unified Approach to Automatic Testing of Architectural Constraints},
  year          = {2015},
  volume        = {2},
  pages         = {871-874},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7203102},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSE.2015.281},
  groups        = {ACM, Compendex, IEEE, Duplicados},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951857824&partnerID=40&md5=b9f8566c76863ab1ff6aef9ea5d7945f},
}

@Conference{Sun2015264,
  author        = {Sun, W.-T. and Girault, A. and Delaval, G.},
  title         = {A formal approach for the synthesis and implementation of fault-tolerant industrial embedded systems},
  year          = {2015},
  pages         = {264-273},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7185068},
  document_type = {Conference Paper},
  doi           = {10.1109/SIES.2015.7185068},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {2015 10th IEEE International Symposium on Industrial Embedded Systems, SIES 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959466791&partnerID=40&md5=abd939cdd4d0159cc6c104d27aabd0c5},
}

@Conference{Karakoidas2015510,
  author        = {Karakoidas, V. and Mitropoulos, D. and Louridas, P. and Gousios, G. and Spinellis, D.},
  title         = {Generating the blueprints of the Java ecosystem},
  year          = {2015},
  volume        = {2015-August},
  pages         = {510-513},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7180130},
  document_type = {Conference Paper},
  doi           = {10.1109/MSR.2015.76},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {IEEE International Working Conference on Mining Software Repositories},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957045387&partnerID=40&md5=5c46034a438fbc22310104e6a6b01973},
}

@Article{Jung2015285,
  author        = {Jung, B. and Lenk, M. and Vitzthum, A.},
  title         = {Structured development of 3D applications: round-trip engineering in interdisciplinary teams},
  journal       = {Computer Science - Research and Development},
  year          = {2015},
  volume        = {30},
  number        = {3-4},
  pages         = {285-301},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s00450-014-0258-8},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84957943797&partnerID=40&md5=f0107ac995c24c23ad4fb991e132499e},
}

@Article{Semeráth2015,
  author        = {Semeráth, O. and Barta, Á. and Horváth, Á. and Szatmári, Z. and Varró, D.},
  title         = {Formal validation of domain-specific languages with derived features and well-formedness constraints},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  note          = {cited By 3; Article in Press},
  __markedentry = {[Neto:5]},
  document_type = {Article in Press},
  doi           = {10.1007/s10270-015-0485-x},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  page_count    = {36},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938538435&partnerID=40&md5=f6259bc548faf0dc5258deb66af876a9},
}

@Conference{Trask2015392,
  author        = {Trask, B. and Roman, A.},
  title         = {Leveraging model driven engineering in software product line architectures},
  year          = {2015},
  volume        = {20-24-July-2015},
  pages         = {392},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2791060.2791081},
  groups        = {Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982859432&partnerID=40&md5=66d3f51d2f56643580a8ad380006961b},
}

@Conference{Schmid2015390,
  author        = {Schmid, K. and Eichelberger, H.},
  title         = {EASy-Producer - from product lines to variability-rich software ecosystems},
  year          = {2015},
  volume        = {20-24-July-2015},
  pages         = {390-391},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2791060.2791112},
  groups        = {Compendex, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982805918&partnerID=40&md5=49ceaddb32bcff49712d071b998fc33c},
}

@Conference{Opiła2015312,
  author        = {Opiła, J.},
  title         = {Prototyping of visualization styles of 3D scalar fields using POV-Ray rendering engine},
  year          = {2015},
  pages         = {312-317},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {7160285},
  document_type = {Conference Paper},
  doi           = {10.1109/MIPRO.2015.7160285},
  groups        = {Compendex, Duplicados},
  journal       = {2015 38th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946111997&partnerID=40&md5=a88b20365f18a862a6914c444d6caf10},
}

@Conference{Rizun2015,
  author        = {Rizun, M. and Bach, J.-C. and Ducasse, S.},
  title         = {Code transformation by direct transformation of ASTs},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2811237.2811297},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {IWST 2015 - Proceedings of the 10th International Workshop on Smalltalk Technologies, in conjunction with the 23rd International Smalltalk Joint Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964253602&partnerID=40&md5=7b871cf9a30d33484d459bb391992ada},
}

@Article{Qamar2015631,
  author        = {Qamar, A. and Wikander, J. and During, C.},
  title         = {Managing dependencies in mechatronic design: a case study on dependency management between mechanical design and system design},
  journal       = {Engineering with Computers},
  year          = {2015},
  volume        = {31},
  number        = {3},
  pages         = {631-646},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s00366-014-0366-x},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931261077&partnerID=40&md5=8623337915d52c4fc8083680794d35da},
}

@Conference{Groce2015414,
  author        = {Groce, A. and Pinto, J. and Azimi, P. and Mittal, P.},
  title         = {TSTL: A language and tool for testing (demo)},
  year          = {2015},
  pages         = {414-417},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2771783.2784769},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {2015 International Symposium on Software Testing and Analysis, ISSTA 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975764117&partnerID=40&md5=1aceb6ee75fb6493cdef407b5150cfc3},
}

@Conference{Sato2015350,
  author        = {Sato, Y. and Hozumi, S. and Chiba, S.},
  title         = {Calculation coverage testing in scientific applications},
  year          = {2015},
  pages         = {350-360},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2771783.2771807},
  groups        = {Scopus,, excluidos},
  journal       = {2015 International Symposium on Software Testing and Analysis, ISSTA 2015 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84975705701&partnerID=40&md5=b2a38365e4650216840a90a88f0fb14a},
}

@Conference{Günalp2015211,
  author        = {Günalp, O. and Escoffier, C. and Lalanda, P.},
  title         = {Demo abstract: Reproducible deployment of pervasive applications},
  year          = {2015},
  pages         = {211-213},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7134025},
  document_type = {Conference Paper},
  doi           = {10.1109/PERCOMW.2015.7134025},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {2015 IEEE International Conference on Pervasive Computing and Communication Workshops, PerCom Workshops 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946076327&partnerID=40&md5=14b55bd67e49c799edc40eed1739cc3d},
}

@Conference{Bernecky201554,
  author        = {Bernecky, R. and Scholz, S.-B.},
  title         = {Abstract expressionism for parallel performance},
  year          = {2015},
  pages         = {54-59},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {2774962},
  document_type = {Conference Paper},
  doi           = {10.1145/2774959.2774962},
  groups        = {ACM, Duplicados},
  journal       = {ARRAY 2015 - Proceedings of the 2nd ACM SIGPLAN International Workshop on Libraries, Languages, and Compilers for Array Programming, co-located with PLDI 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84979781281&partnerID=40&md5=9e7ea047785dcf3052f74f68be74ada0},
}

@Article{Pedersen2015,
  author        = {Pedersen, M. and Phillips, A. and Plotkin, G.D.},
  title         = {A high-level language for rule-based modelling},
  journal       = {PLoS ONE},
  year          = {2015},
  volume        = {10},
  number        = {6},
  note          = {cited By 0},
  art_number    = {e0114296},
  document_type = {Article},
  doi           = {10.1371/journal.pone.0114296},
  groups        = {IEEE,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84934914900&partnerID=40&md5=6b7bfd90d3938f47c3dabb0900aa5758},
}

@Conference{Sergey201577,
  author        = {Sergey, I. and Nanevski, A. and Banerjee, A.},
  title         = {Mechanized verification of fine-grained concurrent programs},
  year          = {2015},
  volume        = {2015-June},
  pages         = {77-87},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2737924.2737964},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951799368&partnerID=40&md5=75a9926840a434d622490762756e1739},
}

@Article{Sergey2015,
  author        = {Sergey, I. and Nanevski, A. and Banerjee, A.},
  title         = {Mechanized verification of fine-grained concurrent programs},
  journal       = {ACM SIGPLAN Notices},
  year          = {2015},
  volume        = {50},
  number        = {6},
  pages         = {77-87},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2737924.2737964},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951102691&partnerID=40&md5=0652c29254c491e23ddd503ea4188dcc},
}

@Article{Fernandes2015,
  author        = {Fernandes, A.V. and Ramos, M.V. and Costa, J.H. and Vasconcelos, I.M. and de Azevedo Moreira, R. and Mendes Batista Moreno, F.B. and Caldas dos Santos, M.E. and de Carvalho Gonçalves, J.F.},
  title         = {Lectin genes and their mature proteins: Still an exciting matter, as revealed by biochemistry and bioinformatics analyses of newly reported proteins},
  journal       = {Biochemical Systematics and Ecology},
  year          = {2015},
  volume        = {60},
  pages         = {46-55},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1016/j.bse.2015.02.002},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925627823&partnerID=40&md5=5a3dce45978b6183fa791cc7bbf0f0a8},
}

@Article{García-Magariño20151359,
  author        = {García-Magariño, I. and Palacios-Navarro, G.},
  title         = {A Technique for Metamodeling Diagram Types with Tool Support},
  journal       = {Arabian Journal for Science and Engineering},
  year          = {2015},
  volume        = {40},
  number        = {5},
  pages         = {1359-1373},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1007/s13369-015-1607-z},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928408442&partnerID=40&md5=94249dfff3c9068ccaffe505407de0ae},
}

@Article{Tairas2015889,
  author        = {Tairas, R. and Cabot, J.},
  title         = {Corpus-based analysis of domain-specific languages},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {889-904},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-013-0352-6},
  groups        = {ACM, Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929061366&partnerID=40&md5=5f9ed77a896b5c5c52317a0e9b8dc29f},
}

@Article{Jézéquel2015905,
  author        = {Jézéquel, J.-M. and Combemale, B. and Barais, O. and Monperrus, M. and Fouquet, F.},
  title         = {Mashup of metalanguages and its implementation in the Kermeta language workbench},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {905-920},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-013-0354-4},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929061240&partnerID=40&md5=6ed91de66455be9d54ea5454ebf51aea},
}

@Conference{Ernst2015103,
  author        = {Ernst, M.D. and Grossman, D. and Jacky, J. and Loncaric, C. and Pernsteiner, S. and Tatlock, Z. and Torlak, E. and Wang, X.},
  title         = {Toward a dependability case language and workflow for a radiation therapy system},
  year          = {2015},
  volume        = {32},
  pages         = {103-112},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.4230/LIPIcs.SNAPL.2015.103},
  groups        = {Scopus, excluidos},
  journal       = {Leibniz International Proceedings in Informatics, LIPIcs},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84959053819&partnerID=40&md5=83d5597f62529293082e3bca81594a20},
}

@Article{Elaasar2015735,
  author        = {Elaasar, M. and Briand, L.C. and Labiche, Y.},
  title         = {VPML: an approach to detect design patterns of MOF-based modeling languages},
  journal       = {Software and Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {735-764},
  note          = {cited By 2},
  document_type = {Article},
  doi           = {10.1007/s10270-013-0325-9},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929061405&partnerID=40&md5=cf053b7aa4df31584b83eb018513a483},
}

@Conference{Córdoba20152087,
  author        = {Córdoba, I. and De Lara, J.},
  title         = {A modelling language for the effective design of Java annotations},
  year          = {2015},
  volume        = {13-17-April-2015},
  pages         = {2087-2092},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2695664.2695717},
  groups        = {Scopus, Inclusos},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955511260&partnerID=40&md5=409eb64ac1d17bf7db8b971458f21660},
}

@Conference{Bačíková20152115,
  author        = {Bačíková, M. and Porubän, J. and Chodarev, S. and Nosál', M.},
  title         = {Bootstrapping DSLs from user interfaces},
  year          = {2015},
  volume        = {13-17-April-2015},
  pages         = {2115-2118},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2695664.2695994},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955514391&partnerID=40&md5=0e6dda7b08d4303cce58181d0fbb596f},
}

@Conference{DeSousa20151854,
  author        = {De Sousa, L. and Da Silva, A.R.},
  title         = {A domain specific language for spatial simulation scenarios(DSL3S): Introduction and tool support},
  year          = {2015},
  volume        = {13-17-April-2015},
  pages         = {1854-1856},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2695664.2695972},
  groups        = {ACM, Compendex,, Inclusos},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955500124&partnerID=40&md5=43b1add022f61999e39f2542f6792243},
}

@Conference{Poncelet20151759,
  author        = {Poncelet, C. and Jacquemard, F.},
  title         = {Model based testing of an interactive music system},
  year          = {2015},
  volume        = {13-17-April-2015},
  pages         = {1759-1764},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2695664.2695804},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955496249&partnerID=40&md5=f81c6ace562a1ce7c099f6df77aee25d},
}

@Conference{DeSousaDuarte2015596,
  author        = {De Sousa Duarte, P.A. and Barreto, F.M. and De Almada Gomes, F.A. and De Carvalho, W.V. and Trinta, F.A.M.},
  title         = {Towards context-aware behaviour generation},
  year          = {2015},
  volume        = {13-17-April-2015},
  pages         = {596-598},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2695664.2696057},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955489237&partnerID=40&md5=3245fbe245a4e9d957ff2aecbc86ab34},
}

@Article{Gibbons20151,
  author        = {Gibbons, J.},
  title         = {Functional programming for domain-specific languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {8606},
  pages         = {1-28},
  note          = {cited By 2},
  document_type = {Article},
  doi           = {10.1007/978-3-319-15940-9_1},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925353123&partnerID=40&md5=c6aa4e9165815da76b5a3f65b8c790e4},
}

@Article{Cunha2015246,
  author        = {Cunha, J. and Fernandes, J.P. and Mendes, J. and Saraiva, J.},
  title         = {Spreadsheet engineering},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {8606},
  pages         = {246-299},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/978-3-319-15940-9_6},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925347861&partnerID=40&md5=57b651a4c2764bea134c2d38df4f0739},
}

@Article{Weichhart2015,
  author        = {Weichhart, G. and Guédria, W. and Naudet, Y.},
  title         = {Supporting interoperability in complex adaptive enterprise systems: A domain specific language approach},
  journal       = {Data and Knowledge Engineering},
  year          = {2015},
  note          = {cited By 0; Article in Press},
  __markedentry = {[Neto:5]},
  document_type = {Article in Press},
  doi           = {10.1016/j.datak.2016.04.001},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84992305098&partnerID=40&md5=dee2399544aa7d8684d6c1aa1923a917},
}

@Conference{Alexandrova2015163,
  author        = {Alexandrova, S. and Tatlock, Z. and Cakmak, M.},
  title         = {Visual Robot Programming for Generalizable Mobile Manipulation Tasks},
  year          = {2015},
  volume        = {02-05-March-2015},
  pages         = {163-164},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2701973.2702052},
  groups        = {Scopus, excluidos},
  journal       = {ACM/IEEE International Conference on Human-Robot Interaction},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969223215&partnerID=40&md5=def47033bed0bd2f361b48948c1a5191},
}

@Article{Barbier2015,
  author        = {Barbier, G. and Cucchi, V. and Hill, D.R.C.},
  title         = {Model-driven engineering applied to crop modeling},
  journal       = {Ecological Informatics},
  year          = {2015},
  volume        = {26},
  number        = {P2},
  pages         = {173-181},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.ecoinf.2014.05.004},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939570514&partnerID=40&md5=8077a2ebd0effa85bb2623dcb32a6672},
}

@Article{Batarseh20151,
  author        = {Batarseh, O.G. and Huang, E. and McGinnis, L.},
  title         = {Capturing simulation tool and application domain knowledge for automating simulation model creation},
  journal       = {Journal of Simulation},
  year          = {2015},
  volume        = {9},
  number        = {1},
  pages         = {1-15},
  note          = {cited By 2},
  document_type = {Article},
  doi           = {10.1057/jos.2014.9},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961324938&partnerID=40&md5=7b54daa51f4c3aa547818ba99e7d170c},
}

@Article{Strickland201523,
  author        = {Strickland, T.S. and Ren, B.M. and Foster, J.S.},
  title         = {Contracts for domain-specific languages in ruby},
  journal       = {ACM SIGPLAN Notices},
  year          = {2015},
  volume        = {50},
  number        = {2},
  pages         = {23-34},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2661088.2661092},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950127961&partnerID=40&md5=b1646ae21105096a7d2e07b473df3cf6},
}

@Conference{Latombe201521,
  author        = {Latombe, F. and Crégut, X. and Deantoni, J. and Pantel, M. and Combemale, B.},
  title         = {Coping with semantic variation points in domain-specific modeling languages},
  year          = {2015},
  volume        = {1560},
  pages         = {21-27},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, Inclusos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964506879&partnerID=40&md5=de02a132ebd0395017f10cf5e04f0022},
}

@Conference{Lopes2015770,
  author        = {Lopes, F.A. and Santos, M. and Fidalgo, R. and Fernandes, S.},
  title         = {Model-driven networking: A novel approach for SDN applications development},
  year          = {2015},
  pages         = {770-773},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {7140372},
  document_type = {Conference Paper},
  doi           = {10.1109/INM.2015.7140372},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the 2015 IFIP/IEEE International Symposium on Integrated Network Management, IM 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942627150&partnerID=40&md5=8cd97bbe7259921dce0eb73a7e0581aa},
}

@Conference{2015b,
  title         = {CEUR Workshop Proceedings},
  year          = {2015},
  volume        = {1560},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank5},
  page_count    = {42},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964499366&partnerID=40&md5=a61d4a5feb2791f4636ecd2ebc0ae35a},
}

@Conference{Doma2015260,
  author        = {Doma, E. and Selic, B. and Levy, D.},
  title         = {Exploring situation theory using InfonLab},
  year          = {2015},
  pages         = {260-267},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {7153814},
  document_type = {Conference Paper},
  doi           = {10.1109/ISORC.2015.20},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 2015 IEEE 18th International Symposium on Real-Time Distributed Computing, ISORC 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958820096&partnerID=40&md5=56d5ac50db00363b1abf5d54f97364f3},
}

@Conference{Korenkov201575,
  author        = {Korenkov, Y. and Loginov, I. and Lazdin, A.},
  title         = {PEG-based language workbench},
  year          = {2015},
  volume        = {2015-June},
  number        = {June},
  pages         = {75-81},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7117975},
  document_type = {Conference Paper},
  doi           = {10.1109/FRUCT.2015.7117975},
  groups        = {Compendex, Duplicados},
  journal       = {Conference of Open Innovation Association, FRUCT},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936937759&partnerID=40&md5=bbfbac105b06134768455432baf4c54e},
}

@Conference{Jaroslav2015,
  author        = {Jaroslav, P. and Dominik, L.},
  title         = {Iterative domain-specific language development with YAJCo parser generator},
  year          = {2015},
  volume        = {1648},
  note          = {cited By 0},
  art_number    = {310005},
  document_type = {Conference Paper},
  doi           = {10.1063/1.4912558},
  groups        = {Compendex, Inclusos},
  journal       = {AIP Conference Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939649629&partnerID=40&md5=1a17387438977f2ff98ae0734ce85cef},
}

@Conference{Křikava2015167,
  author        = {Křikava, F.},
  title         = {Solving the TTC'15 train benchmark case study with SIGMA},
  year          = {2015},
  volume        = {1524},
  pages         = {167-175},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962605463&partnerID=40&md5=ad7aa42d86bd8c5baf9de17f73810e55},
}

@Conference{Song20155,
  author        = {Song, H. and Chauvel, F. and Fleurey, F. and Ferry, N. and Solberg, A.},
  title         = {Consolas: A model-based tool for automatic configuration and deployment of cloud applications},
  year          = {2015},
  volume        = {1554},
  pages         = {5-8},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963646155&partnerID=40&md5=88627347edeb2c660b020b13c7bda09a},
}

@Conference{Kehrer201562,
  author        = {Kehrer, T. and Pietsch, C. and Kelter, U. and Strüber, D. and Vaupel, S.},
  title         = {An adaptable tool environment for high-level differencing of textual models},
  year          = {2015},
  volume        = {1512},
  pages         = {62-72},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960976488&partnerID=40&md5=9e5f0929aa11fa3a3cc70d590a08c172},
}

@Conference{Schutzel20152836,
  author        = {Schutzel, J. and Peng, D. and Uhrmacher, A.M. and Perrone, L.F.},
  title         = {Perspectives on languages for specifying simulation experiments},
  year          = {2015},
  volume        = {2015-January},
  pages         = {2836-2847},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7020125},
  document_type = {Conference Paper},
  doi           = {10.1109/WSC.2014.7020125},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - Winter Simulation Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940570236&partnerID=40&md5=221bfc5c4d96aaa034b6d2f228ea6872},
}

@Conference{Mohamad2015632,
  author        = {Mohamad, R.P. and Kolovos, D.S. and Paige, R.F.},
  title         = {Resource requirement analysis for web applications running in a virtualised environment},
  year          = {2015},
  volume        = {2015-February},
  number        = {February},
  pages         = {632-637},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7037727},
  document_type = {Conference Paper},
  doi           = {10.1109/CloudCom.2014.134},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of the International Conference on Cloud Computing Technology and Science, CloudCom},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937855178&partnerID=40&md5=73c607011d5908b5fb1677933415838b},
}

@Conference{Samyn2015523,
  author        = {Samyn, K. and Deglorie, G. and Lambert, P. and Van De Walle, R. and Van Hoecke, S.},
  title         = {Generating non-linear narrative for serious games with scenario templates},
  year          = {2015},
  pages         = {523-530},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {GRAPP 2015 - 10th International Conference on Computer Graphics Theory and Applications; VISIGRAPP, Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938842563&partnerID=40&md5=c6012b61f82122ae562f60455a7a023a},
}

@Article{Clark20157,
  author        = {Clark, T. and Van Den Brand, M. and Combemale, B. and Rumpe, B.},
  title         = {Conceptual model of the globalization for domain-specific languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9400},
  pages         = {7-20},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-26172-0_2},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951875201&partnerID=40&md5=071e5fe92a24f9c3ff91597a1f9d432a},
}

@Conference{Hadas201529,
  author        = {Hadas, A. and Lorenz, D.H.},
  title         = {First-class domain specific aspect languages},
  year          = {2015},
  volume        = {2015-March},
  pages         = {29-30},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2735386.2735929},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940506033&partnerID=40&md5=1e9a5c904c13cfafef16f984efeb98c7},
}

@Conference{Dieumegard201589,
  author        = {Dieumegard, A. and Pantel, M. and Babin, G. and Carton, M.},
  title         = {Tool paper: A lightweight formal encoding of a constraint language for DSMLs},
  year          = {2015},
  volume        = {1512},
  pages         = {89-104},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84960963570&partnerID=40&md5=da31db5573bdbcfeac63ad74647b4898},
}

@Conference{Huang2015247,
  author        = {Huang, C. and Osaka, A. and Kamei, Y. and Ubayashi, N.},
  title         = {Automated DSL construction based on software product lines},
  year          = {2015},
  pages         = {247-254},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939553753&partnerID=40&md5=2d317333a96a56e366447d11bbf74be2},
}

@Article{Lindecker20152.1,
  author        = {Lindecker, D. and Simko, G. and Levendovszky, T. and Madari, I. and Sztipanovits, J.},
  title         = {Validating transformations for semantic anchoring},
  journal       = {Journal of Object Technology},
  year          = {2015},
  volume        = {14},
  number        = {3},
  pages         = {2.1-2.25},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.5381/jot.2015.14.3.a2},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84982764474&partnerID=40&md5=c0051f0bbd22fa1e1eca7567da81f842},
}

@Article{Lindecker2015,
  author        = {Lindecker, D. and Simko, G. and Levendovszky, T. and Madari, I. and Sztipanovits, J.},
  title         = {Validating transformations for semantic anchoring},
  journal       = {Journal of Object Technology},
  year          = {2015},
  volume        = {14},
  number        = {3},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.5381/jot.2015.14.1.a2},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  page_count    = {25},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944038703&partnerID=40&md5=4630e1cb2a06b598b1af7023930a4d7c},
}

@Article{Cheng20151,
  author        = {Cheng, B.H.C. and Combemale, B. and France, R.B. and Jézéquel, J.-M. and Rumpe, B.},
  title         = {On the globalization of domain-specific languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9400},
  pages         = {1-6},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-26172-0_1},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951871719&partnerID=40&md5=d6a54f28ed4d2ddfb30663bc36456db2},
}

@Article{Erdweg2015,
  author        = {Erdweg, S. and Van Der Storm, T. and Völter, M. and Tratt, L. and Bosman, R. and Cook, W.R. and Gerritsen, A. and Hulshout, A. and Kelly, S. and Loh, A. and Konat, G. and Molina, P.J. and Palatnik, M. and Pohjonen, R. and Schindler, E. and Schindler, K. and Solmi, R. and Vergu, V. and Visser, E. and Van Der Vlist, K. and Wachsmuth, G. and Van Der Woning, J.},
  title         = {Evaluating and comparing language workbenches: Existing results and benchmarks for the future},
  journal       = {Computer Languages, Systems and Structures},
  year          = {2015},
  volume        = {44},
  pages         = {24-47},
  note          = {cited By 8},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.cl.2015.08.007},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943658378&partnerID=40&md5=165f7bf9265ecad01dc78e0571eb2895},
}

@Article{delaVega201579,
  author        = {de la Vega, A. and García-Saiz, D. and Zorrilla, M. and Sánchez, P.},
  title         = {Towards a DSL for educational data mining},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {563},
  pages         = {79-90},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-27653-3_8},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952664201&partnerID=40&md5=c0a123890493320f06856f385c29e0fa},
}

@Conference{Kokash2015,
  author        = {Kokash, N. and Moodie, S.L. and Smith, M.K. and Holford, N.},
  title         = {Implementing a domain-specific language for model-based drug development},
  year          = {2015},
  volume        = {63},
  pages         = {308-316},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2015.08.348},
  groups        = {Scopus, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954096385&partnerID=40&md5=96fe3f5737456ba0736896e13b27e55b},
}

@Article{Bryant201543,
  author        = {Bryant, B. and Jézéquel, J.-M. and Lämmel, R. and Mernik, M. and Schindler, M. and Steinmann, F. and Tolvanen, J.-P. and Vallecillo, A. and Völter, M.},
  title         = {Globalized domain specific language engineering},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9400},
  pages         = {43-69},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-26172-0_4},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951872456&partnerID=40&md5=6ed8b3546d3dc20cb7f4cd01778b326f},
}

@Article{Vuković201597,
  author        = {Vuković, Ž. and Milanović, N. and Vaderna, R. and Dejanović, I. and Milosavljević, G.},
  title         = {Sail: A domain-specific language for semantic-aided automation of interface mapping in enterprise integration},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9416},
  pages         = {97-106},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-26138-6_13},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951144652&partnerID=40&md5=2e758c8a576d5e35adf59e11a982c2bf},
}

@Article{Visser2015,
  author        = {Visser, E.},
  title         = {Understanding software through linguistic abstraction},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {97},
  number        = {P1},
  pages         = {11-16},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2013.12.001},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910141415&partnerID=40&md5=fa2bacb03bd6478d21dc3a1ef17037f9},
}

@Article{Haav2015309,
  author        = {Haav, H.-M. and Ojamaa, A. and Grigorenko, P. and Kotkas, V.},
  title         = {Ontology-based integration of software artefacts for DSL development},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9416},
  pages         = {309-318},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-26138-6_34},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951186292&partnerID=40&md5=33b5862cb5a7577638e77582a4ba9038},
}

@Conference{Hadas201535,
  author        = {Hadas, A. and Lorenz, D.H.},
  title         = {Demanding first-class equality for domain specific aspect languages},
  year          = {2015},
  volume        = {2015-March},
  pages         = {35-38},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2735386.2735388},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940560899&partnerID=40&md5=0962e7c02301c5b5fbfeb5495e1d5d87},
}

@Conference{Roussev20155228,
  author        = {Roussev, V.},
  title         = {Building a forensic computing language},
  year          = {2015},
  volume        = {2015-March},
  pages         = {5228-5233},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7070443},
  document_type = {Conference Paper},
  doi           = {10.1109/HICSS.2015.617},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944209364&partnerID=40&md5=89b5c09f3f7779ae9f2718a6534c51b4},
}

@Article{Belo201528,
  author        = {Belo, O. and Gomes, C. and Oliveira, B. and Marques, R. and Santos, V.},
  title         = {Using a domain-specific language to enrich ETL schemas},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {539},
  pages         = {28-35},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-23201-0_4},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946089409&partnerID=40&md5=9c738af7fae2eaa4fb4ae97877027ce4},
}

@Conference{Hadas201519,
  author        = {Hadas, A. and Lorenz, D.H.},
  title         = {A language workbench for implementing your favorite extension to AspectJ},
  year          = {2015},
  volume        = {2015-March},
  pages         = {19-20},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2735386.2735924},
  groups        = {Compendex, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940483720&partnerID=40&md5=38a7834f214cfbe4fbb478c2acc82d78},
}

@Article{Graves201541,
  author        = {Graves, I. and Procter, A. and Harrison, W.L. and Becchi, M. and Allwein, G.},
  title         = {Hardware synthesis from functional embedded domain-specific languages: A case study in regular expression compilation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9040},
  pages         = {41-52},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-16214-0_4},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84926665099&partnerID=40&md5=bb6b57064482f70b3a3d07de93065826},
}

@Article{Oliveira2015597,
  author        = {Oliveira, B. and Belo, O.},
  title         = {A domain-specific language for ETL patterns specification in data warehousing systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9273},
  pages         = {597-602},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-23485-4_60},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945955620&partnerID=40&md5=d0938414dcbd4a56787df6b73fab0b57},
}

@Conference{Nordmann20155032,
  author        = {Nordmann, A. and Wrede, S. and Steil, J.},
  title         = {Modeling of movement control architectures based on motion primitives using domain-specific languages},
  year          = {2015},
  volume        = {2015-June},
  number        = {June},
  pages         = {5032-5039},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7139899},
  document_type = {Conference Paper},
  doi           = {10.1109/ICRA.2015.7139899},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - IEEE International Conference on Robotics and Automation},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938253208&partnerID=40&md5=07df5722a97897a37b48d101e77dcb79},
}

@Conference{Deantoni2015313,
  author        = {Deantoni, J. and Diallo, I.P. and Teodorov, C. and Champeau, J. and Combemale, B.},
  title         = {Towards a meta-language for the concurrency concern in DSLs},
  year          = {2015},
  volume        = {2015-April},
  pages         = {313-316},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7092405},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings -Design, Automation and Test in Europe, DATE},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945933224&partnerID=40&md5=b28a66fcb63e474a4a3ab31d4b252100},
}

@Article{Sadrieh2015,
  author        = {Sadrieh, A. and Bahri, P.A.},
  title         = {A New Software Development Methodology for Controllability Analysis of Forced Circulation Evaporator System},
  journal       = {Computer Aided Chemical Engineering},
  year          = {2015},
  volume        = {37},
  pages         = {1559-1564},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/B978-0-444-63577-8.50105-4},
  groups        = {ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940493532&partnerID=40&md5=5a1d7ec0125b5bc94469c2561204fed9},
}

@Article{Pavletic201533,
  author        = {Pavletic, D. and Voelter, M. and Raza, S.A. and Kolb, B. and Kehrer, T.},
  title         = {Extensible debugger framework for extensible languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9111},
  pages         = {33-49},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-19584-1_3},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943658984&partnerID=40&md5=c5a23570cbf663c17539ed24ac263f19},
}

@Article{Valiyev2015340,
  author        = {Valiyev, R.A. and Galiullin, L.A. and Iliukhin, A.N.},
  title         = {Design of the modern domain specific programming languages},
  journal       = {International Journal of Soft Computing},
  year          = {2015},
  volume        = {10},
  number        = {5},
  pages         = {340-343},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.3923/ijscomp.2015.340.343},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938582742&partnerID=40&md5=67bf5330b7b91722098450e5925a536c},
}

@Conference{Baranowski2015646,
  author        = {Baranowski, M. and Bubak, M. and Belloum, A.},
  title         = {Data and process abstractions for cloud computing},
  year          = {2015},
  pages         = {646-649},
  note          = {cited By 0},
  art_number    = {7237108},
  document_type = {Conference Paper},
  doi           = {10.1109/HPCSim.2015.7237108},
  groups        = {Scopus,, excluidos},
  journal       = {Proceedings of the 2015 International Conference on High Performance Computing and Simulation, HPCS 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84948399975&partnerID=40&md5=4f2b316607bd728732b6be99e014d986},
}

@Conference{Sequeira2015,
  author        = {Sequeira, F.R. and Frantz, R.Z. and Yevseyeva, I. and Emmerich, M.T.M. and Basto-Fernandes, V.},
  title         = {An EAI Based Integration Solution for Science and Research Outcomes Information Management},
  year          = {2015},
  volume        = {64},
  pages         = {894-901},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2015.08.604},
  groups        = {ScienceDirect,, excluidos},
  journal       = {Procedia Computer Science},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962866428&partnerID=40&md5=ef66e0f18a281756baaf05db9668079a},
}

@Article{Aerts2015563,
  author        = {Aerts, A. and Mousavi, M.R. and Reniers, M.},
  title         = {A tool prototype for model-based testing of cyber-physical systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9399},
  pages         = {563-572},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-25150-9_32},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951965541&partnerID=40&md5=f8d02f602ece9c7301b40a6e19414948},
}

@Article{Gibbs2015,
  author        = {Gibbs, I. and Dascalu, S. and Harris, F.C.},
  title         = {A separation-based UI architecture with a DSL for role specialization},
  journal       = {Journal of Systems and Software},
  year          = {2015},
  volume        = {101},
  pages         = {69-85},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.jss.2014.11.039},
  groups        = {ScienceDirect, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921671860&partnerID=40&md5=118d547e9d8f2ba48d655c37ed910fa1},
}

@Conference{Kolovos201544,
  author        = {Kolovos, D.S. and Rose, L.M. and Paige, R.F. and Guerra, E. and Cuadrado, J.S. and De Lara, J. and Ráth, I. and Varró, D. and Sunyé, G. and Tisi, M.},
  title         = {MONDO: Scalable Modelling and model management on the cloud},
  year          = {2015},
  volume        = {1400},
  pages         = {44-53},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Scopus, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938633140&partnerID=40&md5=fa8e66897ed4eb30b3895010cd397efb},
}

@Article{Cheng201521,
  author        = {Cheng, B.H.C. and Degueule, T. and Atkinson, C. and Clarke, S. and Frank, U. and Mosterman, P.J. and Sztipanovits, J.},
  title         = {Motivating use cases for the globalization of DSLs},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9400},
  pages         = {21-42},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-26172-0_3},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951872077&partnerID=40&md5=a55df5ea8c0079982281ccb11aa1fc83},
}

@Conference{Wawrzik2015,
  author        = {Wawrzik, F. and Chipman, W. and Molina, J.M. and Grimm, C.},
  title         = {Modeling and simulation of Cyber-Physical Systems with SICYPHOS},
  year          = {2015},
  note          = {cited By 0},
  art_number    = {7127375},
  document_type = {Conference Paper},
  doi           = {10.1109/DTIS.2015.7127375},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings - 2015 10th IEEE International Conference on Design and Technology of Integrated Systems in Nanoscale Era, DTIS 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942532250&partnerID=40&md5=8ca9ed770d0ad90cc3e074c59b2768d6},
}

@Conference{Visic2015286,
  author        = {Visic, N. and Fill, H.-G. and Buchmann, R.A. and Karagiannis, D.},
  title         = {A domain-specific language for modeling method definition: From requirements to grammar},
  year          = {2015},
  volume        = {2015-June},
  number        = {June},
  pages         = {286-297},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {7128889},
  document_type = {Conference Paper},
  doi           = {10.1109/RCIS.2015.7128889},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - International Conference on Research Challenges in Information Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937821026&partnerID=40&md5=e836a598f6e45f753ec80e03c6c61a88},
}

@Conference{Bhat2015154,
  author        = {Bhat, M. and Reschenhofer, T. and Matthes, F.},
  title         = {Tool support for analyzing the evolution of Enterprise Architecture metrics},
  year          = {2015},
  volume        = {3},
  pages         = {154-161},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939543169&partnerID=40&md5=ad47afcf11e4f751b5944ee14ce8e23b},
}

@Article{Kyle2015269,
  author        = {Kyle, D. and Hansen, J. and Chaki, S.},
  title         = {Statistical model checking of distributed adaptive real-time software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9333},
  pages         = {269-274},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-23820-3_17},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950327100&partnerID=40&md5=85a56c51342423b36953284fbcbcbdfb},
}

@Conference{Alloush2015120,
  author        = {Alloush, I. and Aoun, C.G. and Kermarrec, Y. and Rouvrais, S.},
  title         = {A domain-specific framework for creating early trusted underwater systems relying on enterprise architecture},
  year          = {2015},
  volume        = {2015-February},
  number        = {February},
  pages         = {120-125},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7033645},
  document_type = {Conference Paper},
  doi           = {10.1109/MASCOTS.2014.23},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings - IEEE Computer Society's Annual International Symposium on Modeling, Analysis, and Simulation of Computer and Telecommunications Systems, MASCOTS},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937939680&partnerID=40&md5=80d383ed1a3b349e1e3f120cb51ad758},
}

@Conference{Jézéquel20151,
  author        = {Jézéquel, J.-M. and Méndez-Acuña, D. and Degueule, T. and Combemale, B. and Barais, O.},
  title         = {When systems engineering meets software language engineering},
  year          = {2015},
  pages         = {1-13},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-11617-4-1},
  groups        = {SpingerLink, Duplicados},
  journal       = {Complex Systems Design and Management - Proceedings of the 5th International Conference on Complex Systems Design and Management, CSD and M 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961319294&partnerID=40&md5=c3f3ffc1560d2ac05076190615056a50},
}

@Article{Gouseti201525,
  author        = {Gouseti, M. and Peters, C. and Van Der Storm, T.},
  title         = {Extensible language implementation with object algebras (short paper)},
  journal       = {ACM SIGPLAN Notices},
  year          = {2015},
  volume        = {50},
  number        = {3},
  pages         = {25-28},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2658761.2658765},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950284016&partnerID=40&md5=48c7ee70f88750f05c0d7ccefabc7f93},
}

@Conference{Porubän2015,
  author        = {Porubän, J. and Chodarev, S.},
  title         = {Model-aware language specification with Java},
  year          = {2015},
  note          = {cited By 2},
  art_number    = {7158424},
  document_type = {Conference Paper},
  doi           = {10.1109/EMES.2015.7158424},
  groups        = {Scopus, Duvida},
  journal       = {2015 13th International Conference on Engineering of Modern Electric Systems, EMES 2015},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943339381&partnerID=40&md5=febdf69d61a6b4e20e8bb8cd250d6ece},
}

@Conference{Yue2015195,
  author        = {Yue, S. and Gray, J.},
  title         = {A DSL for reducing the accidental complexities of using program transformation engines},
  year          = {2015},
  pages         = {195-200},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {24th International Conference on Software Engineering and Data Engineering, SEDE 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964039321&partnerID=40&md5=221d495d445d7595324c839253d88162},
}

@Conference{Antonelli2015,
  author        = {Antonelli, H.L. and Silva, E.A.N.D. and Fortes, R.P.M.},
  title         = {A Model-driven Development for Creating Accessible Web Menus},
  year          = {2015},
  volume        = {67},
  pages         = {95-104},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2015.09.253},
  groups        = {ScienceDirect, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962783925&partnerID=40&md5=96bd74e3865a58e01b8efe933ee401e9},
}

@Article{Godena2015135,
  author        = {Godena, G. and Lukman, T. and Heričko, M. and Strmčnik, S.},
  title         = {The experience of implementing model-driven engineering tools in the process control domain},
  journal       = {Information Technology and Control},
  year          = {2015},
  volume        = {44},
  number        = {2},
  pages         = {135-147},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.5755/j01.itc.44.2.6258},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936770941&partnerID=40&md5=c99ba6b9d4e7d0012a566b628a9ac385},
}

@Article{Lozano2015,
  author        = {Lozano, A. and Mens, K. and Kellens, A.},
  title         = {Usage contracts: Offering immediate feedback on violations of structural source-code regularities},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {105},
  pages         = {73-91},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.scico.2015.01.004},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929704961&partnerID=40&md5=fe1ce4db5d9ddf2a4173c27d1d30b7b4},
}

@Article{Olsson201518,
  author        = {Olsson, U. and Siljamäki, T. and Bordeleau, F.},
  title         = {Design, architects, and complex communication systems: Painting the bigger picture},
  journal       = {Ericsson Review (English Edition)},
  year          = {2015},
  volume        = {92},
  number        = {1},
  pages         = {18-28},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942309090&partnerID=40&md5=f4d2f64aed91cd933235577af113d469},
}

@Article{Cosentino2015423,
  author        = {Cosentino, V. and Tisi, M. and Izquierdo, J.L.C.},
  title         = {A model-driven approach to generate external DSLs from object-oriented APIs},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {8939},
  pages         = {423-435},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922031632&partnerID=40&md5=89f363bbe7cb4bddb4c22897d4ecd174},
}

@Conference{Saviankou2015,
  author        = {Saviankou, P. and Knobloch, M. and Visser, A. and Mohr, B.},
  title         = {Cube v4: From performance report explorer to performance analysis tool},
  year          = {2015},
  volume        = {51},
  number        = {1},
  pages         = {1343-1352},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2015.05.320},
  groups        = {Compendex, ScienceDirect, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939134805&partnerID=40&md5=a4739a0ffdb15df438a3289460e61878},
}

@Conference{Calbimonte201547,
  author        = {Calbimonte, J.-P.},
  title         = {Scalable and reactive programming for SemanticWeb developers},
  year          = {2015},
  volume        = {1361},
  pages         = {47-53},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930747643&partnerID=40&md5=2ef99d9884da324c6605bc7ebee63297},
}

@Conference{Skersys2015,
  author        = {Skersys, T. and Pavalkis, S. and Nemuraite, L.},
  title         = {Implementing semantically rich business vocabularies in CASE tools},
  year          = {2015},
  volume        = {1648},
  note          = {cited By 2},
  art_number    = {310002},
  document_type = {Conference Paper},
  doi           = {10.1063/1.4912555},
  groups        = {Scopus, excluidos},
  journal       = {AIP Conference Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939647123&partnerID=40&md5=e70b746e393c8c96bbb6c373f34ae0ea},
}

@Conference{Basso201521,
  author        = {Basso, F.P.},
  title         = {A proposal for a common representation language for MDE artifacts and settings},
  year          = {2015},
  volume        = {1499},
  pages         = {21-31},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955462388&partnerID=40&md5=597fb16917d32cb7bb3f3912472ad0dc},
}

@Article{Marek2015,
  author        = {Marek, L. and Zheng, Y. and Ansaloni, D. and Bulej, L. and Sarimbekov, A. and Binder, W. and Tůma, P.},
  title         = {Introduction to dynamic program analysis with DiSL},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {98},
  number        = {P1},
  pages         = {100-115},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2014.01.003},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84916942804&partnerID=40&md5=4630ea3f85888c888372e0a18a7eb75f},
}

@Article{Groce2015204,
  author        = {Groce, A. and Pinto, J.},
  title         = {A little language for testing},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9058},
  pages         = {204-218},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-17524-9_15},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942627107&partnerID=40&md5=c9a1073521b43bd7325a100aeb9c8733},
}

@Conference{Atkinson201513,
  author        = {Atkinson, C. and Gerbig, R.},
  title         = {Aspect-oriented concrete syntax definition for deep modeling languages},
  year          = {2015},
  volume        = {1505},
  pages         = {13-22},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961344456&partnerID=40&md5=ff00b685a34483907f0f01f4d9ff894e},
}

@Article{Fox2015187,
  author        = {Fox, A.},
  title         = {Improved tool support for machine-code decompilation in HOL4},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9236},
  pages         = {187-202},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-22102-1_12},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944687607&partnerID=40&md5=be7fd2a889e304223bc5a251bbe4aaa6},
}

@Article{Catmore2015,
  author        = {Catmore, J. and Cranshaw, J. and Gillam, T. and Gramstad, E. and Laycock, P. and Ozturk, N. and Stewart, G.A.},
  title         = {A new petabyte-scale data derivation framework for ATLAS},
  journal       = {Journal of Physics: Conference Series},
  year          = {2015},
  volume        = {664},
  number        = {7},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {072007},
  document_type = {Conference Paper},
  doi           = {10.1088/1742-6596/664/7/072007},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961891743&partnerID=40&md5=1ad2cee29fac4085986be7e93fc88a0e},
}

@Conference{Abrantes2015370,
  author        = {Abrantes, J. and Coelho, R.},
  title         = {Specifying and dynamically monitoring the exception handling policy},
  year          = {2015},
  volume        = {2015-January},
  pages         = {370-374},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.18293/SEKE2015-133},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84969869930&partnerID=40&md5=07e24ae18d74ab3642b103b6f1ce5a56},
}

@Conference{Silvestre201546,
  author        = {Silvestre, L.},
  title         = {Automatic generation of transformations for software process tailoring},
  year          = {2015},
  volume        = {1503},
  pages         = {46-51},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961321527&partnerID=40&md5=3a86b793540aa08e18a5a754e05f2fb4},
}

@Article{Foster2015343,
  author        = {Foster, N. and Kozen, D. and Milano, M. and Silva, A. and Thompson, L.},
  title         = {A coalgebraic decision procedure for NetKAT},
  journal       = {ACM SIGPLAN Notices},
  year          = {2015},
  volume        = {50},
  number        = {1},
  pages         = {343-355},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/10.1145/2676726.2677011},
  groups        = {ACM, Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950319370&partnerID=40&md5=c91be5f69f0deea2bb3cfc0412243a04},
}

@Conference{Foster2015,
  author        = {Foster, N. and Kozen, D. and Milano, M. and Silva, A. and Thompson, L.},
  title         = {A coalgebraic decision procedure for NetKAT},
  year          = {2015},
  volume        = {2015-January},
  pages         = {343-355},
  note          = {cited By 4},
  document_type = {Conference Paper},
  doi           = {10.1145/2676726.2677011},
  groups        = {excluidos},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939537312&partnerID=40&md5=55c55698f2119d4c49f472418cc38967},
}

@Article{Sakellariou201537,
  author        = {Sakellariou, I. and Dranidis, D. and Ntika, M. and Kefalas, P.},
  title         = {Stream X-machines for agent simulation test case generation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9494},
  pages         = {37-57},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-27947-3_3},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952837323&partnerID=40&md5=e6f49b8801b2f226eb2c2beca5977b29},
}

@Article{Leslie-Hurd2015144,
  author        = {Leslie-Hurd, R. and Caspi, D. and Fernandez, M.},
  title         = {Verifying linearizability of intel® software guard extensions},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9207},
  pages         = {144-160},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-21668-3_9},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951045261&partnerID=40&md5=bc5cfc3f303c555ed11ce74db9f1aa93},
}

@Conference{Atkinson201528,
  author        = {Atkinson, C. and Gerbig, R. and Metzger, N.},
  title         = {On the execution of deep models},
  year          = {2015},
  volume        = {1560},
  pages         = {28-33},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964519959&partnerID=40&md5=ffbb34892e79a729d47bf279d491dc5a},
}

@Conference{Sakellariou201587,
  author        = {Sakellariou, I. and Dranidis, D. and Ntika, M. and Kefalas, P.},
  title         = {From formal modelling to agent simulation execution and testing},
  year          = {2015},
  volume        = {1},
  pages         = {87-98},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {ICAART 2015 - 7th International Conference on Agents and Artificial Intelligence, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943328599&partnerID=40&md5=95e16ff340735e5d7bfcd7b51fb4329a},
}

@Conference{Gulwani20151,
  author        = {Gulwani, S.},
  title         = {Automating repetitive tasks for the masses},
  year          = {2015},
  volume        = {2015-January},
  pages         = {1-2},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2676726.2682621},
  groups        = {Scopus,, excluidos},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939495043&partnerID=40&md5=19d9ac96812d034b56c22a070c774dbe},
}

@Conference{Kim201559,
  author        = {Kim, H. and Reich, J. and Gupta, A. and Shahbaz, M. and Feamster, N. and Clark, R.},
  title         = {Kinetic: Verifiable dynamic network control},
  year          = {2015},
  pages         = {59-72},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 12th USENIX Symposium on Networked Systems Design and Implementation, NSDI 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84967146012&partnerID=40&md5=1845b93d1e4cda49909a71aa7df408f2},
}

@Article{Gulwani2015,
  author        = {Gulwani, S.},
  title         = {Automating repetitive tasks for the masses},
  journal       = {ACM SIGPLAN Notices},
  year          = {2015},
  volume        = {50},
  number        = {1},
  pages         = {1-2},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2676726.2682621},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950318524&partnerID=40&md5=1d0932635a89b7257d1faf1b3fdab910},
}

@Article{Kilinç2015403,
  author        = {Kilinç, I. and Ateş, H. and Özhorasan, B. and Korkmaz, H.},
  title         = {Tactical graphics description language},
  journal       = {Lecture Notes in Electrical Engineering},
  year          = {2015},
  volume        = {355},
  pages         = {403-413},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-22635-4_37},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945919994&partnerID=40&md5=190591b0cbcb1e107a1db2c82b78b45c},
}

@Article{Arkın201582,
  author        = {Arkın, E. and Tekinerdogan, B.},
  title         = {Parallel application development using architecture view driven model transformations},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {580},
  pages         = {82-96},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-27869-8_5},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955304477&partnerID=40&md5=24a8c36fb2f6985a6a02cf4b002f69d3},
}

@Article{Urma2015,
  author        = {Urma, R.-G. and Mycroft, A.},
  title         = {Source-code queries with graph databases - With application to programming language usage and evolution},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {97},
  number        = {P1},
  pages         = {127-134},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2013.11.010},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910136661&partnerID=40&md5=a48c33a05baff2f1f83bed7471a31f10},
}

@Article{Klarl201539,
  author        = {Klarl, A.},
  title         = {From HELENA ensemble specifications to PROMELA verification models},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9232},
  pages         = {39-45},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-23404-5_4},
  groups        = {Compendex, ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945953129&partnerID=40&md5=d587de1d96efa5e71c1b9728cf1ae30c},
}

@Article{Peralta2015155,
  author        = {Peralta, A.J. and Le, N.T.T. and Stinckwich, S. and Hanachi, C. and Bergel, A. and Ho, T.V.},
  title         = {A tool for assessing quality of rescue plans by combining visualizations of different business process perspectives},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2015},
  volume        = {233},
  pages         = {155-166},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-24399-3_14},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951802235&partnerID=40&md5=e3eafa862d13025cba5e97112f99c5d7},
}

@Article{Bhat2015595,
  author        = {Bhat, M. and Reschenhofer, T. and Matthes, F.},
  title         = {A model-based approach for retrospective analysis of enterprise architecture metrics},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2015},
  volume        = {241},
  pages         = {595-611},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-29133-8_29},
  groups        = {Compendex,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958969577&partnerID=40&md5=0dcc7aaa57310e938d985cdcf9d34abc},
}

@Article{Belo2015239,
  author        = {Belo, O. and Gomes, C. and Oliveira, B. and Marques, R. and Santos, V.},
  title         = {Automatic generation of ETL physical systems from BPMN conceptual models},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9344},
  pages         = {239-247},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-23781-7_19},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951750121&partnerID=40&md5=27586d2bab8d3fb0589321992c1a4afe},
}

@Conference{Barclay2015,
  author        = {Barclay, J. and Dhokia, V. and Nassehi, A.},
  title         = {Generating milling tool paths for prismatic parts using genetic programming},
  year          = {2015},
  volume        = {33},
  pages         = {490-495},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procir.2015.06.060},
  groups        = {Compendex, Duplicados},
  journal       = {Procedia CIRP},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939780136&partnerID=40&md5=2d6dfa01e4a99e267e18307ae08e3158},
}

@Article{Blouin2015,
  author        = {Blouin, A. and Moha, N. and Baudry, B. and Sahraoui, H. and Jézéquel, J.-M.},
  title         = {Assessing the use of slicing-based visualizing techniques on the understanding of large metamodels},
  journal       = {Information and Software Technology},
  year          = {2015},
  volume        = {62},
  number        = {1},
  pages         = {124-142},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.infsof.2015.02.007},
  groups        = {Compendex, ACM, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84932651642&partnerID=40&md5=caa9cf1a3334420a8c82c4cfa82cd492},
}

@Article{NoAuthor20151,
  title         = {3rd International Conference on Model-Driven Engineering and Software Development, MODELSWARD 2015},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {580},
  pages         = {1-436},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955320859&partnerID=40&md5=55f99682621c0095f9e42e3fedb3d69a},
}

@Conference{Bayol2015143,
  author        = {Bayol, B. and Chen, Y. and Baey, C. and Viaud, G. and Cournède, P.-H.},
  title         = {WIP - Promoting good modeling practice with a domain-specific language and statistical algorithms designed for parallel computing},
  year          = {2015},
  volume        = {47},
  number        = {8},
  pages         = {143-148},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {Simulation Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928170285&partnerID=40&md5=993937bb9ea5dccab16a523cf0007620},
}

@Article{Zyła2015161,
  author        = {Zyła, K.},
  title         = {Perspectives of simplified graphical domain-specific languages as communication tools in developing mobile systems for reporting life-threatening situations},
  journal       = {Studies in Logic, Grammar and Rhetoric},
  year          = {2015},
  volume        = {43},
  number        = {56},
  pages         = {161-175},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1515/slgr-2015-0048},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84964308249&partnerID=40&md5=3913804d57b0f931550957ecc6f76254},
}

@Conference{Nair2015459,
  author        = {Nair, S. and Jetley, R. and Nair, A. and Hauck-Stattelmann, S.},
  title         = {A static code analysis tool for control system software},
  year          = {2015},
  pages         = {459-463},
  note          = {cited By 0},
  art_number    = {7081856},
  document_type = {Conference Paper},
  doi           = {10.1109/SANER.2015.7081856},
  groups        = {Scopus,, excluidos},
  journal       = {2015 IEEE 22nd International Conference on Software Analysis, Evolution, and Reengineering, SANER 2015 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928664810&partnerID=40&md5=5149b0a6a7262d2d5084639751a91a0f},
}

@Conference{Ravishankar2015109,
  author        = {Ravishankar, M. and Holewinski, J. and Grover, V.},
  title         = {Forma: A DSL for image processing applications to target GPUs and multi-core CPUs},
  year          = {2015},
  volume        = {2015-February},
  pages         = {109-120},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2716282.2716290},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938841551&partnerID=40&md5=9aed4995ab8ce53a680651dd33d190f5},
}

@Article{2015c,
  title         = {9th International Conference on Evaluation of Novel Approaches to Software Engineering, ENASE 2014},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {551},
  pages         = {1-168},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951924586&partnerID=40&md5=ec41cf279ce9688ce249dd8d6324e7da},
}

@Conference{Alégroth2015,
  author        = {Alégroth, E. and Bache, G. and Bache, E.},
  title         = {On the industrial applicability of TextTest: An empirical case study},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7102598},
  document_type = {Conference Paper},
  doi           = {10.1109/ICST.2015.7102598},
  groups        = {Compendex, Duplicados},
  journal       = {2015 IEEE 8th International Conference on Software Testing, Verification and Validation, ICST 2015 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84935061864&partnerID=40&md5=7783c28d2f42920ff0accfe57adddca2},
}

@Conference{Sanz2015239,
  author        = {Sanz, C. and Salas, A. and De Miguel, M. and Alonso, A. and De La Puente, J.A. and Benac, C.},
  title         = {Automated model-based testing based on an agnostic-platform modeling language},
  year          = {2015},
  pages         = {239-246},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, IEEE, Duplicados},
  journal       = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939528171&partnerID=40&md5=aeb1af13310f8bedb119ea14245d0b93},
}

@Conference{Kövesdán2015149,
  author        = {Kövesdán, G. and Asztalos, M. and Lengyel, L.},
  title         = {Aggregate Callback: A design pattern for flexible and robust runtime model building},
  year          = {2015},
  pages         = {149-156},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, IEEE, ACM, Duplicados},
  journal       = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939541508&partnerID=40&md5=06c691330cc11f44646320f5c3183f6f},
}

@Conference{Pomante2015,
  author        = {Pomante, L. and Candia, S. and Incerto, E.},
  title         = {A Model-Driven approach for the development of an IDE for Spacecraft on-board software},
  year          = {2015},
  volume        = {2015-June},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7119032},
  document_type = {Conference Paper},
  doi           = {10.1109/AERO.2015.7119032},
  groups        = {IEEE, Duplicados},
  journal       = {IEEE Aerospace Conference Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84940688914&partnerID=40&md5=7cde45b1bcddf956cc53efdd0c17ac58},
}

@Conference{Beckmann2015255,
  author        = {Beckmann, K.},
  title         = {Integrating existing proprietary system models into a model-driven test process for an industrial automation scenario},
  year          = {2015},
  pages         = {255-262},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {MODELSWARD 2015 - 3rd International Conference on Model-Driven Engineering and Software Development, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939514838&partnerID=40&md5=17a5948e71ddcb558d5cfb883ca68210},
}

@Conference{Frantz2015260,
  author        = {Frantz, R.Z. and Sawicki, S. and Roos-Frantz, F. and Yevseyeva, I. and Emmerich, M.},
  title         = {On using Markov decision processes to model integration solutions for disparate resources in software ecosystems},
  year          = {2015},
  volume        = {2},
  pages         = {260-267},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939480835&partnerID=40&md5=f34e7b56cfaa721161927a1b97ac446e},
}

@Conference{Akhundov201522,
  author        = {Akhundov, J. and Tröger, P. and Werner, M.},
  title         = {Considering concurrency in early spacecraft design studies},
  year          = {2015},
  volume        = {1492},
  pages         = {22-30},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84955455774&partnerID=40&md5=7b66f6fe8fd8b5646a6cd9e33eb963fb},
}

@Book{Frantz2015111,
  title         = {A survey on the open source tools for modelling and implementing enterprise application integration solutions},
  year          = {2015},
  author        = {Frantz, R.Z. and Roos-Frantz, F. and Corchuelo, R.},
  volume        = {10},
  note          = {cited By 0},
  document_type = {Book Chapter},
  groups        = {Scopus,, excluidos},
  journal       = {Horizons in Computer Science Research},
  pages         = {111-130},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961324454&partnerID=40&md5=58ee2841f1553d6f8b018c1e1ca2696d},
}

@Article{Porubän2015683,
  author        = {Porubän, J. and Bačíková, M. and Chodarev, S. and Nosál, M.},
  title         = {Teaching pragmatic model-driven software development},
  journal       = {Computer Science and Information Systems},
  year          = {2015},
  volume        = {12},
  number        = {2},
  pages         = {683-705},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.2298/CSIS140107022P},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937545112&partnerID=40&md5=acb9701eebb3cf4fd479a86b343a5477},
}

@Article{Clark2015,
  author        = {Clark, T.},
  title         = {XPL: A language for modular homogeneous language embedding},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {98},
  pages         = {589-616},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2014.08.005},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954383505&partnerID=40&md5=d13053966af2d6d0ee3d397695b864c4},
}

@Book{Sobolewski201567,
  title         = {Technology foundations},
  year          = {2015},
  author        = {Sobolewski, M.},
  note          = {cited By 6},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-319-13776-6_4},
  groups        = {Scopus, excluidos},
  journal       = {Concurrent Engineering in the 21st Century: Foundations, Developments and Challenges},
  pages         = {67-99},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944584482&partnerID=40&md5=46de448ac3ee4d71537ec6187e0f248b},
}

@Article{Smith2015349,
  author        = {Smith, M.J. and Macadam, T. and MacKay, J.R.},
  title         = {Integrated modelling, design and analysis of submarine structures},
  journal       = {Ships and Offshore Structures},
  year          = {2015},
  volume        = {10},
  number        = {4},
  pages         = {349-366},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1080/17445302.2014.937058},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936891295&partnerID=40&md5=6e4664dac1d8b54ba17f9603be161d86},
}

@Book{Becker2015187,
  title         = {Semantic business process modelling and analysis},
  year          = {2015},
  author        = {Becker, J. and Pfeiffer, D. and Räckers, M. and Falk, T. and Czerwonka, M.},
  note          = {cited By 2},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-642-45100-3_9},
  groups        = {Scopus, excluidos},
  journal       = {Handbook on Business Process Management 1: Introduction, Methods, and Information Systems},
  pages         = {187-217},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943402641&partnerID=40&md5=3675fb6b299ea396d466bf002fece916},
}

@Article{Puente2015785,
  author        = {Puente, G. and Díaz, O. and Azanza, M.},
  title         = {Refactoring affordances in corporate wikis: a case for the use of mind maps},
  journal       = {Enterprise Information Systems},
  year          = {2015},
  volume        = {9},
  number        = {8},
  pages         = {785-834},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1080/17517575.2013.830343},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929950659&partnerID=40&md5=340fa410ae58a39a34642d78055320c1},
}

@Article{2015d,
  title         = {11th International Symposium on Applied Reconfigurable Computing, ARC 2015},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9040},
  pages         = {1-556},
  note          = {cited By 0},
  document_type = {Conference Review},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927743471&partnerID=40&md5=f22cd08a229962018af3f52244aa4078},
}

@Conference{Roos-Frantz201587,
  author        = {Roos-Frantz, F. and Binelo, M. and Frantz, R.Z. and Sawicki, S. and Basto-Fernandes, V.},
  title         = {Using Petri nets to enable the simulation of application integration solutions conceptual models},
  year          = {2015},
  volume        = {1},
  pages         = {87-96},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {ICEIS 2015 - 17th International Conference on Enterprise Information Systems, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939518774&partnerID=40&md5=cdf634fc2f4c439cd12ff7f98283062f},
}

@Article{Porwol201568,
  author        = {Porwol, L. and Hassan, I. and Ojo, A. and Breslin, J.},
  title         = {A knowledge extraction and management component to support spontaneous participation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9249},
  pages         = {68-80},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-22500-5_6},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944768933&partnerID=40&md5=a8586ff018fd1d26610cedf9cabdb25f},
}

@Article{Valiyev2015344,
  author        = {Valiyev, R.A. and Galiullin, L.A. and Iliukhin, A.N.},
  title         = {Methods of integration and execution of the code of modern programming languages},
  journal       = {International Journal of Soft Computing},
  year          = {2015},
  volume        = {10},
  number        = {5},
  pages         = {344-347},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.3923/ijscomp.2015.344.347},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938565310&partnerID=40&md5=5dff86e2881d741ac03bec430df0c8ff},
}

@Article{Nguyen2015,
  author        = {Nguyen, P.H. and Kramer, M. and Klein, J. and Traon, Y.L.},
  title         = {An extensive systematic review on the Model-Driven Development of secure systems},
  journal       = {Information and Software Technology},
  year          = {2015},
  volume        = {68},
  pages         = {62-81},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Review},
  doi           = {10.1016/j.infsof.2015.08.006},
  groups        = {ScienceDirect, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942611940&partnerID=40&md5=27865b692ec3741d82388acb45b89fb6},
}

@Article{Gjøsæter201591,
  author        = {Gjøsæter, T. and Prinz, A.},
  title         = {Languagelab - a meta-modelling environment},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9369},
  pages         = {91-105},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-24912-4_8},
  groups        = {Compendex, ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84951025222&partnerID=40&md5=080cbb6a5bac20e7c140658f1787179d},
}

@Article{Zivkovic201547,
  author        = {Zivkovic, S. and Miksa, K. and Kühn, H.},
  title         = {On developing hybrid modeling methods using metamodeling platforms: A case of physical devices DSML based on ADOxx},
  journal       = {International Journal of Information System Modeling and Design},
  year          = {2015},
  volume        = {6},
  number        = {1},
  pages         = {47-66},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.4018/ijismd.2015010103},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924100551&partnerID=40&md5=86a4ddc129b21b17f37fa24fc3289cbf},
}

@Article{Smeltzer201553,
  author        = {Smeltzer, K. and Erwig, M. and Metoyer, R.},
  title         = {A transformational approach to data visualization},
  journal       = {ACM SIGPLAN Notices},
  year          = {2015},
  volume        = {50},
  number        = {3},
  pages         = {53-62},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2658761.2658769},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84950260994&partnerID=40&md5=d51c03610fdaa1bb967c472e8951c19d},
}

@Conference{Caracciolo201541,
  author        = {Caracciolo, A. and Lungu, M.F. and Nierstrasz, O.},
  title         = {A Unified Approach to Architecture Conformance Checking},
  year          = {2015},
  pages         = {41-50},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  art_number    = {7158502},
  document_type = {Conference Paper},
  doi           = {10.1109/WICSA.2015.11},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings - 12th Working IEEE/IFIP Conference on Software Architecture, WICSA 2015},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943327975&partnerID=40&md5=6503870fcdbaea7ab70e903ff961c545},
}

@Article{Wang201599,
  author        = {Wang, S.-W. and Wang, Q.-H. and Zhai, L.-P. and Liu, J. and Yu, Z.-D. and Zheng, M.-M. and Wang, F.},
  title         = {Genetic diversity among the microorganisms in daqu used for beidacang liquor as revealed by rapd analyses},
  journal       = {Lecture Notes in Electrical Engineering},
  year          = {2015},
  volume        = {333},
  pages         = {99-108},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-46318-5_11},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943594262&partnerID=40&md5=2a058b2528a647990c19255351c5d155},
}

@Article{Bruneliere201562,
  author        = {Bruneliere, H. and Garcia, J. and Desfray, P. and Khelladi, D.E. and Hebig, R. and Bendraou, R. and Cabot, J.},
  title         = {On lightweight metamodel extension to support modeling tools agility},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9153},
  pages         = {62-74},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-21151-0_5},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949944134&partnerID=40&md5=6f47cbb285013485cd0e73b71475d11d},
}

@Article{Marnerides2015,
  author        = {Marnerides, A.K. and Malinowski, S. and Morla, R. and Kim, H.S.},
  title         = {Fault diagnosis in DSL networks using support vector machines},
  journal       = {Computer Communications},
  year          = {2015},
  volume        = {62},
  pages         = {72-84},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {5044},
  document_type = {Article},
  doi           = {10.1016/j.comcom.2015.01.006},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928826771&partnerID=40&md5=3dad61812f1ba14fdd3b57eba3c352ce},
}

@Article{Koshima2015,
  author        = {Koshima, A.A. and Englebert, V.},
  title         = {Collaborative editing of EMF/Ecore meta-models and models: Conflict detection, reconciliation, and merging in DiCoMEF},
  journal       = {Science of Computer Programming},
  year          = {2015},
  volume        = {113},
  pages         = {3-28},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2015.07.004},
  groups        = {ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947870192&partnerID=40&md5=f7fa50098f577a08cff27d2802f8ce71},
}

@Article{Vieira2015205,
  author        = {Vieira, N. and Simões, A. and Carvalho, N.R.},
  title         = {SplineAPI: A REST API for NLP services},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {563},
  pages         = {205-215},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-27653-3_20},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952660178&partnerID=40&md5=236c8387abf42e30526d23a1e8f8b07c},
}

@Article{Wu201576,
  author        = {Wu, S.K. and McCullough, H.},
  title         = {First steps for a library publisher: Developing publishing services at UNC Charlotte J. Murrey Atkins library},
  journal       = {OCLC Systems and Services},
  year          = {2015},
  volume        = {31},
  number        = {2},
  pages         = {76-86},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1108/OCLC-02-2014-0016},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928669142&partnerID=40&md5=f207e5da2cb5914fa4f31bc106f4e922},
}

@Article{2015e,
  title         = {4th International Symposium on Languages, Applications and Technologies, SLATE 2015},
  journal       = {Communications in Computer and Information Science},
  year          = {2015},
  volume        = {563},
  pages         = {1-270},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84952683088&partnerID=40&md5=fe4328a3cf5bbc508245a34a8f5aa700},
}

@Conference{Scheidgen20151,
  author        = {Scheidgen, M.},
  title         = {Generation of large random models for benchmarking},
  year          = {2015},
  volume        = {1406},
  pages         = {1-10},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938582252&partnerID=40&md5=9c7eaa13fefb1305dac91ff543092fc7},
}

@Conference{Schützel2015,
  author        = {Schützel, J. and Stieber, S. and Haubelt, C. and Uhrmacher, A.M.},
  title         = {Targeted on-line data extraction with SystemXtract},
  year          = {2015},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.4108/eai.24-8-2015.2260916},
  groups        = {Compendex, Duplicados},
  journal       = {SIMUTOOLS 2015 - 8th EAI International Conference on Simulation Tools and Techniques},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946029382&partnerID=40&md5=902ef0bb60caa851fde144bd237baad2},
}

@Book{Oliveira2015299,
  title         = {Developing statistical literacy (DSL): Student learning and teacher education},
  year          = {2015},
  author        = {Oliveira, H. and Henriques, A. and Da Ponte, J.P.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-319-23470-0_35},
  groups        = {Scopus, excluidos},
  journal       = {The Teaching and Learning of Statistics: International Perspectives},
  pages         = {299-300},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958700481&partnerID=40&md5=675e1497148df95f5015fedd79ef8847},
}

@Article{2015f,
  title         = {8th International Conference on Graph Transformation, ICGT 2015},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2015},
  volume        = {9151},
  pages         = {1-282},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947071405&partnerID=40&md5=fb197cffbe9a3428460b18e3ec3b6119},
}

@Article{Gała201593,
  author        = {Gała, M. and Jagieła, K. and Jąderko, A. and Rak, J.},
  title         = {Integrated multimotor electrical dc drive for metallurgical rolling table},
  journal       = {Acta Mechanica et Automatica},
  year          = {2015},
  volume        = {9},
  number        = {2},
  pages         = {93-98},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1515/ama-2015-0016},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937853836&partnerID=40&md5=4a25c5c8439a10064c0e6b3d5260533a},
}

@Article{Figay2015141,
  author        = {Figay, N. and Ghodous, P. and Shariat, B. and Exposito, E. and Tchoffa, D. and Kermad, L. and Dafaoui, E.M. and Vosgien, T.},
  title         = {Model based enterprise modeling for testing plm interoperability in dynamic manufacturing network},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2015},
  volume        = {213},
  pages         = {141-153},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-47157-9_13},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937510550&partnerID=40&md5=b32f1346dfe36d2e75b800a64fac0bd1},
}

@Article{Arouche2015,
  author        = {Arouche, N. and Picard, J.-Y. and Monniaux, D. and Jamin, S.P. and Vigier, B. and Josso, N. and Cate, R.L. and di Clemente, N. and Taieb, J.},
  title         = {The BOC ELISA, a ruminant-specific AMH immunoassay, improves the determination of plasma AMH concentration and its correlation with embryo production in cattle},
  journal       = {Theriogenology},
  year          = {2015},
  volume        = {84},
  number        = {8},
  pages         = {1397-1404},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1016/j.theriogenology.2015.07.026},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84943448081&partnerID=40&md5=171494145aa549b9c930d639d4ce0a06},
}

@Article{Jiao20152317,
  author        = {Jiao, H. and Zhu, Y. and Lu, S. and Zheng, Y. and Chen, H.},
  title         = {An integrated approach for the identification of HNF4α-centered transcriptional regulatory networks during early liver regeneration},
  journal       = {Cellular Physiology and Biochemistry},
  year          = {2015},
  volume        = {36},
  number        = {6},
  pages         = {2317-2326},
  note          = {cited By 2},
  document_type = {Article},
  doi           = {10.1159/000430195},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939633913&partnerID=40&md5=ea403e365b8cd85177a780423333a534},
}

@Article{Choi20142407,
  author        = {Choi, H. and Choi, W. and Quan, T.M. and Hildebrand, D.G.C. and Pfister, H. and Jeong, W.-K.},
  title         = {Vivaldi: A domain-specific language for volume processing and visualization on distributed heterogeneous systems},
  journal       = {IEEE Transactions on Visualization and Computer Graphics},
  year          = {2014},
  volume        = {20},
  number        = {12},
  pages         = {2407-2416},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  art_number    = {06875916},
  document_type = {Article},
  doi           = {10.1109/TVCG.2014.2346322},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84909998985&partnerID=40&md5=1d33dfca68ceda702af291c92d88a55c},
}

@Article{Eichelberger2014559,
  author        = {Eichelberger, H. and Schmid, K.},
  title         = {Mapping the design-space of textual variability modeling languages: a refined analysis},
  journal       = {International Journal on Software Tools for Technology Transfer},
  year          = {2014},
  volume        = {17},
  number        = {5},
  pages         = {559-584},
  note          = {cited By 4},
  document_type = {Article},
  doi           = {10.1007/s10009-014-0362-x},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941426769&partnerID=40&md5=11770babe9e73c4c69326628991038f2},
}

@Conference{Dziwok2014715,
  author        = {Dziwok, S. and Gerking, C. and Becker, S. and Thiele, S. and Heinzemann, C. and Pohlmann, U.},
  title         = {A tool suite for the model-driven software engineering of cyber-physical systems},
  year          = {2014},
  volume        = {16-21-November-2014},
  pages         = {715-718},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2635868.2661665},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the ACM SIGSOFT Symposium on the Foundations of Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84986877618&partnerID=40&md5=e681ac726b257eec3d0a023444f2b76f},
}

@Conference{Lindner2014,
  author        = {Lindner, M. and Lindner, A. and Lindgren, P.},
  title         = {RTFM-core: Course in Compiler Construction},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {4},
  document_type = {Conference Paper},
  doi           = {10.1145/2829957.2829962},
  groups        = {ACM, Duplicados},
  journal       = {2014 Workshop on Embedded and Cyber-Physical Systems Education, WESE 2014 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84963771020&partnerID=40&md5=ab73a982c58f526aaaf14c4805e8129c},
}

@Article{Syschikov20141,
  author        = {Syschikov, A. and Sheynin, Y. and Sedov, B. and Ivanova, V.},
  title         = {Domain-specific programming environment for heterogeneous multicore embedded systems},
  journal       = {International Journal of Embedded and Real-Time Communication Systems},
  year          = {2014},
  volume        = {5},
  number        = {4},
  pages         = {1-23},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.4018/IJERTCS.2014100101},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84954565850&partnerID=40&md5=5da249efbf989d60c0bdc8c98dce1956},
}

@Conference{Ma201427,
  author        = {Ma, Q. and Schmit, S. and Glodt, C. and Kelsen, P.},
  title         = {Combining Models with Code: A Tale of Two Languages},
  year          = {2014},
  volume        = {18-21-August-2014},
  pages         = {27-32},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6912082},
  document_type = {Conference Paper},
  doi           = {10.1109/ICGSEW.2014.9},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988507778&partnerID=40&md5=fe009696c0d8c6135071ad196884454a},
}

@Conference{Fatollahi-Fard201445,
  author        = {Fatollahi-Fard, F. and Donofrio, D. and Michelogiannakis, G. and Shalf, J.},
  title         = {OpenSoC fabric: On-chip network generator},
  year          = {2014},
  volume        = {23-26-September-2014},
  pages         = {45-50},
  note          = {cited By 0},
  art_number    = {2685351},
  document_type = {Conference Paper},
  doi           = {10.1145/2685342.2685351},
  groups        = {Scopus, excluidos},
  journal       = {ACM International Conference Proceeding Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84984696301&partnerID=40&md5=66e57d4dd088630d56a327b671173cb7},
}

@Article{Haitzer2014,
  author        = {Haitzer, T. and Zdun, U.},
  title         = {Semi-automated architectural abstraction specifications for supporting software evolution},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {90},
  number        = {PART B},
  pages         = {135-160},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2013.10.004},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901188259&partnerID=40&md5=d36824083998994c7add382bbc6170c4},
}

@Conference{Kranz2014187,
  author        = {Kranz, J. and Simon, A.},
  title         = {Structure-preserving compilation: Efficient integration of functional DSLs into legacy systems},
  year          = {2014},
  pages         = {187-198},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2643135.2643157},
  groups        = {ACM, Duplicados},
  journal       = {PPDP 2014 - Proceedings of the 16th International Symposium on Principles and Practice of Declarative Programming},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84968735464&partnerID=40&md5=b8702beb389f5823d360e26fcd9683d3},
}

@Article{Troya2014,
  author        = {Troya, J. and Vallecillo, A.},
  title         = {Specification and simulation of queuing network models using Domain-Specific Languages},
  journal       = {Computer Standards and Interfaces},
  year          = {2014},
  volume        = {36},
  number        = {5},
  pages         = {863-879},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.csi.2014.01.002},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894660648&partnerID=40&md5=fcd180deabe9e68ca4043a008587c958},
}

@Book{Bermúdez2014500,
  title         = {DSL TUNNOS commerce: Model-driven architecture applied to e-commerce platforms},
  year          = {2014},
  author        = {Bermúdez, G.M.T. and Arias, A.B.R. and Rojas, L.A.R.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-6359-6.ch020},
  groups        = {Scopus, Inclusos},
  journal       = {Handbook of Research on Innovations in Systems and Software Engineering},
  pages         = {500-509},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84945359465&partnerID=40&md5=86810f5fe4772aeead573fcf1debb0cf},
}

@Article{Bourgoin2014583,
  author        = {Bourgoin, M. and Chailloux, E. and Lamotte, J.-L.},
  title         = {Efficient Abstractions for GPGPU Programming},
  journal       = {International Journal of Parallel Programming},
  year          = {2014},
  volume        = {42},
  number        = {4},
  pages         = {583-600},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10766-013-0261-x},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956843386&partnerID=40&md5=7b3c482614c6483772b63c1ca7bdb9f1},
}

@Book{Kahlaoui2014228,
  title         = {Demystifying domain specific languages},
  year          = {2014},
  author        = {Kahlaoui, A. and Abran, A.},
  volume        = {1-3},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-6042-7.ch012},
  groups        = {Inclusos},
  journal       = {Computational Linguistics: Concepts, Methodologies, Tools, and Applications},
  pages         = {228-250},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946004982&partnerID=40&md5=256f0e406ea87a28d8177b890b6c758c},
}

@Book{Clark2014866,
  title         = {Software language engineering with XMF and XModeler},
  year          = {2014},
  author        = {Clark, T. and Willans, J.},
  volume        = {2-3},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-6042-7.ch042},
  groups        = {Scopus, Duvida},
  journal       = {Computational Linguistics: Concepts, Methodologies, Tools, and Applications},
  pages         = {866-896},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946001794&partnerID=40&md5=2cce225be4db1e1724025dfbafb8f484},
}

@Book{Amrani20141043,
  title         = {A formal semantics of Kermeta},
  year          = {2014},
  author        = {Amrani, M.},
  volume        = {2-3},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-6042-7.ch050},
  groups        = {Scopus,, excluidos},
  journal       = {Computational Linguistics: Concepts, Methodologies, Tools, and Applications},
  pages         = {1043-1082},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946008896&partnerID=40&md5=d52978e3ff02a258c268614ae0854b3d},
}

@Article{Rangarajan2014,
  author        = {Rangarajan, S. and Kaminski, T. and Van Wyk, E. and Bhan, A. and Daoutidis, P.},
  title         = {Language-oriented rule-based reaction network generation and analysis: Algorithms of RING},
  journal       = {Computers and Chemical Engineering},
  year          = {2014},
  volume        = {64},
  pages         = {124-137},
  note          = {cited By 4},
  document_type = {Article},
  doi           = {10.1016/j.compchemeng.2014.02.007},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897820347&partnerID=40&md5=2f3380f7b47ab4922450017c2c91e604},
}

@Article{Rakotoarivelo2014,
  author        = {Rakotoarivelo, T. and Jourjon, G. and Ott, M.},
  title         = {Designing and orchestrating reproducible experiments on federated networking testbeds},
  journal       = {Computer Networks},
  year          = {2014},
  volume        = {63},
  pages         = {173-187},
  note          = {cited By 12},
  document_type = {Article},
  doi           = {10.1016/j.bjp.2013.12.033},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899409634&partnerID=40&md5=bcd00cb58c10f955fd8cb10ead83d10f},
}

@Conference{Cho2014937,
  author        = {Cho, H. and Ryu, S.},
  title         = {REST to javascript for better client-side development},
  year          = {2014},
  pages         = {937-942},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2567948.2579219},
  groups        = {ACM, Duplicados},
  journal       = {WWW 2014 Companion - Proceedings of the 23rd International Conference on World Wide Web},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84990891777&partnerID=40&md5=b64ee701fa14361c26d7c93ef6f1549c},
}

@Article{Jia20142141,
  author        = {Jia, Y. and Shen, B.J. and Yu, T.Y. and Zhu, J.G.},
  title         = {An end-user oriented visual programming language},
  journal       = {Applied Mechanics and Materials},
  year          = {2014},
  volume        = {513-517},
  pages         = {2141-2144},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.4028/www.scientific.net/AMM.513-517.2141},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897731988&partnerID=40&md5=9e89ffc2685ae18cd2c03b950dda0dc8},
}

@Book{Vanderbauwhede20141,
  title         = {High-performance computing using FPGAs},
  year          = {2014},
  author        = {Vanderbauwhede, W. and Benkrid, K.},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Book},
  doi           = {10.1007/978-1-4614-1791-0},
  groups        = {ACM, Duplicados},
  journal       = {High-Performance Computing Using FPGAs},
  keywords      = {rank3},
  pages         = {1-803},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929284466&partnerID=40&md5=770626e3dbefd707481ff719dc17e2fc},
}

@Conference{Basso2014195,
  author        = {Basso, F.P. and Werner, C.M.L. and Oliveira, T.C.},
  title         = {Towards facilities to introduce solutions for MDE in development environments with reusable assets},
  year          = {2014},
  pages         = {195-202},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {7051890},
  document_type = {Conference Paper},
  doi           = {10.1109/IRI.2014.7051890},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the 2014 IEEE 15th International Conference on Information Reuse and Integration, IEEE IRI 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946692298&partnerID=40&md5=075f5a7358d705dd5a9b1eba6af35da0},
}

@Article{Lakin201481,
  author        = {Lakin, M.R. and Phillips, A.},
  title         = {Compiling DNA strand displacement reactions using a functional programming language},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8324 LNCS},
  pages         = {81-86},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-04132-2_6},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893484138&partnerID=40&md5=d2e0b2e5866c477254ccfd4297728347},
}

@Article{Challenger2014,
  author        = {Challenger, M. and Demirkol, S. and Getir, S. and Mernik, M. and Kardas, G. and Kosar, T.},
  title         = {On the use of a domain-specific modeling language in the development of multiagent systems},
  journal       = {Engineering Applications of Artificial Intelligence},
  year          = {2014},
  volume        = {28},
  pages         = {111-141},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.engappai.2013.11.012},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892845703&partnerID=40&md5=8776b1f24e8b1338ea6e11cefba37ec9},
}

@Conference{Ferry2014269,
  author        = {Ferry, N. and Song, H. and Rossini, A. and Chauvel, F. and Solberg, A.},
  title         = {Cloud MF: Applying MDE to tame the complexity of managing multi-cloud applications},
  year          = {2014},
  pages         = {269-277},
  note          = {cited By 16},
  __markedentry = {[Neto:5]},
  art_number    = {7027503},
  document_type = {Conference Paper},
  doi           = {10.1109/UCC.2014.36},
  groups        = {IEEE, ACM, Compendex, Duplicados},
  journal       = {Proceedings - 2014 IEEE/ACM 7th International Conference on Utility and Cloud Computing, UCC 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946685259&partnerID=40&md5=e9d09ee4e7b445be3749aafc7d4ef1ef},
}

@Conference{Moser2014,
  author        = {Moser, M. and Pfeiffer, M. and Pichler, J.},
  title         = {A novel domain-specific language for the robot welding automation domain},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7005348},
  document_type = {Conference Paper},
  doi           = {10.1109/ETFA.2014.7005348},
  groups        = {Scopus, Duplicados},
  journal       = {19th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946688207&partnerID=40&md5=701837dfeaaaa7b2c2acdd5c6db2e66a},
}

@Conference{Butzin2014,
  author        = {Butzin, B. and Golatowski, F. and Niedermeier, C. and Vicari, N. and Wuchner, E.},
  title         = {A model based development approach for building automation systems},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7005365},
  document_type = {Conference Paper},
  doi           = {10.1109/ETFA.2014.7005365},
  groups        = {IEEE, Duplicados},
  journal       = {19th IEEE International Conference on Emerging Technologies and Factory Automation, ETFA 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946692793&partnerID=40&md5=94e8b0b0832255149953619f1ede33ec},
}

@Conference{Zarrin201423,
  author        = {Zarrin, B. and Baumeister, H.},
  title         = {Design of a domain-specific language for material flow analysis using Microsoft DSL tools: An experience paper},
  year          = {2014},
  pages         = {23-28},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2688447.2688452},
  groups        = {ACM, Duplicados},
  journal       = {DSM 2014 - Proceedings of the 2014 ACM SIGPLAN Workshop on Domain-Specific Modeling, Part of SPLASH 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921510894&partnerID=40&md5=2f97cc2e08db6596c44fb91d1d750845},
}

@Conference{Tariq20146,
  author        = {Tariq, M.U. and Florence, J. and Wolf, M.},
  title         = {Design specification of cyber-physical systems: Towards a domain-specific modeling language based on simulink, eclipse modeling framework, and giotto},
  year          = {2014},
  volume        = {1250},
  pages         = {6-15},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84913622545&partnerID=40&md5=5302c4558e154f2bdea661d435f2e871},
}

@Conference{Wang2014611,
  author        = {Wang, D. and Miao, Y. and Hoppe, H.U. and Samaka, M.},
  title         = {A domain-specific modeling language approach to support various forms of online PBL},
  year          = {2014},
  pages         = {611-613},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6901554},
  document_type = {Conference Paper},
  doi           = {10.1109/ICALT.2014.178},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - IEEE 14th International Conference on Advanced Learning Technologies, ICALT 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910038863&partnerID=40&md5=26b50bcc4641bc1f0f6256ce8809ed10},
}

@Conference{Breuker2014758,
  author        = {Breuker, D.},
  title         = {Towards model-driven engineering for big data analytics - An exploratory analysis of domain-specific languages for machine learning},
  year          = {2014},
  pages         = {758-767},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6758697},
  document_type = {Conference Paper},
  doi           = {10.1109/HICSS.2014.101},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of the Annual Hawaii International Conference on System Sciences},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902286420&partnerID=40&md5=0473eadf058423496268f9e558bf5cba},
}

@Article{Biehl2014461,
  author        = {Biehl, M. and El-Khoury, J. and Loiret, F. and Törngren, M.},
  title         = {On the modeling and generation of service-oriented tool chains},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {2},
  pages         = {461-480},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0275-7},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899932886&partnerID=40&md5=59668ff24c7e873ffad0721bfd478d38},
}

@Article{Frank2014941,
  author        = {Frank, U.},
  title         = {Multi-perspective enterprise modeling: Foundational concepts, prospects and future research challenges},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {3},
  pages         = {941-962},
  note          = {cited By 26},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0273-9},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903381462&partnerID=40&md5=2eb23f637e16ff642120dbfa6f7cb7e9},
}

@Article{He2014416,
  author        = {He, L. and Yao, J. and Lei, Y.L.},
  title         = {Air-combat decision modeling method based on DSM},
  journal       = {Applied Mechanics and Materials},
  year          = {2014},
  volume        = {536-537},
  pages         = {416-420},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.4028/www.scientific.net/AMM.536-537.416},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901277843&partnerID=40&md5=993394e9205429c4f435e33cbb37913a},
}

@Article{deRoo201455,
  author        = {de Roo, A. and Sözer, H. and Akşit, M.},
  title         = {Composing domain-specific physical models with general-purpose software modules in embedded control software},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {55-81},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0283-7},
  groups        = {Scopus,, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893743354&partnerID=40&md5=665da196555c73afb1590a8959fa872c},
}

@Article{Kosar2014,
  author        = {Kosar, T. and Mernik, M. and Gray, J. and Kos, T.},
  title         = {Debugging measurement systems using a domain-specific modeling language},
  journal       = {Computers in Industry},
  year          = {2014},
  volume        = {65},
  number        = {4},
  pages         = {622-635},
  note          = {cited By 4},
  document_type = {Article},
  doi           = {10.1016/j.compind.2014.01.013},
  groups        = {ScienceDirect,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897439898&partnerID=40&md5=9f33573cda1389ba47a67f86e2fe65c0},
}

@Article{Jacob201452,
  author        = {Jacob, F. and Wynne, A. and Liu, Y. and Gray, J.},
  title         = {Domain-specific languages for developing and deploying signature discovery workflows},
  journal       = {Computing in Science and Engineering},
  year          = {2014},
  volume        = {16},
  number        = {1},
  pages         = {52-64},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6654153},
  document_type = {Article},
  doi           = {10.1109/MCSE.2013.97},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898477791&partnerID=40&md5=a65de01306109568fcb60761729831e2},
}

@Conference{Křikava20141612,
  author        = {Křikava, F. and Collet, P. and France, R.B.},
  title         = {Manipulating models using internal domain-specific languages},
  year          = {2014},
  pages         = {1612-1614},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2554850.2555127},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905653313&partnerID=40&md5=b228ec564c5e0942a6cf740a96145e16},
}

@Conference{Jacek2014498,
  author        = {Jacek, K. and Kamil, N. and Kamil, Z.},
  title         = {Domain-specific languages as tools for teaching 3D graphics},
  year          = {2014},
  pages         = {498-503},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906901826&partnerID=40&md5=9ca9033be9edb601b56e02ea1c568e47},
}

@Conference{Balasubramanian201467,
  author        = {Balasubramanian, D. and Levendovszky, T. and Dubey, A. and Karsai, G.},
  title         = {Taming multi-paradigm integration in a software architecture description language},
  year          = {2014},
  volume        = {1237},
  pages         = {67-76},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911930545&partnerID=40&md5=73cce38a0d3ab3a3a4d0150f588a12d1},
}

@Conference{Koshima2014744,
  author        = {Koshima, A. and Englebert, V.},
  title         = {DiCoMEF: A distributed collaborative model editing framework},
  year          = {2014},
  volume        = {2014-January},
  number        = {January},
  pages         = {744-745},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84938328421&partnerID=40&md5=658cedd3bd7afb058f30ca6e6ce9ca7e},
}

@Conference{Pfister2014298,
  author        = {Pfister, F. and Huchard, M. and Nebut, C.},
  title         = {A framework for concurrent design of metamodels and diagrams towards an agile method for the synthesis of domain specific graphical modeling languages},
  year          = {2014},
  volume        = {2},
  pages         = {298-306},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ICEIS 2014 - Proceedings of the 16th International Conference on Enterprise Information Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902356552&partnerID=40&md5=f1639cae128a40a53537c4dd13ff251a},
}

@Article{Nordmann2014195,
  author        = {Nordmann, A. and Hochgeschwender, N. and Wrede, S.},
  title         = {A survey on domain-specific languages in robotics},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8810},
  pages         = {195-206},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921626192&partnerID=40&md5=ec1b20c5576f277830e21841f6f2d94f},
}

@Conference{Franceschini2014103,
  author        = {Franceschini, R. and Bisgambiglia, P.-A. and Bisgambglia, P. and Hill, D.},
  title         = {DEVS-Ruby: A domain specific language for DEVS modeling and simulation (WIP)},
  year          = {2014},
  volume        = {46},
  number        = {4},
  pages         = {103-108},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Simulation Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901975387&partnerID=40&md5=db172089d69209251f5fc89e026a5392},
}

@Conference{Maróti201441,
  author        = {Maróti, M. and Kecskés, T. and Kereskényi, R. and Broll, B. and Völgyesi, P. and Jurácz, L. and Levendoszky, T. and Lédeczi, A.},
  title         = {Next generation (Meta)modeling: Web- and cloud-based collaborative tool infrastructure},
  year          = {2014},
  volume        = {1237},
  pages         = {41-60},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911943150&partnerID=40&md5=f9a0b113284ad803bc144ffa70b9a0c5},
}

@Article{Levendovszky2014807,
  author        = {Levendovszky, T. and Balasubramanian, D. and Narayanan, A. and Shi, F. and van Buskirk, C. and Karsai, G.},
  title         = {A semi-formal description of migrating domain-specific models with evolving domains},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {2},
  pages         = {807-823},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0313-5},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899982125&partnerID=40&md5=2debc1d30656274b7e11c47cd75fe223},
}

@Conference{Bordeleau20142,
  author        = {Bordeleau, F.},
  title         = {Model-Based Engineering: A new era based on papyrus and open source tooling},
  year          = {2014},
  volume        = {1290},
  pages         = {2-8},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910607087&partnerID=40&md5=33571472af176fbf2a9ddc8dd73f4f0c},
}

@Conference{Maroti2014,
  author        = {Maróti, M. and Kereskényi, R. and Kecskés, T. and Völgyesi, P. and Lédeczi, Á.},
  title         = {Online collaborative environment for designing complex computational systems},
  year          = {2014},
  volume        = {29},
  pages         = {2432-2441},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2014.05.227},
  groups        = {Scopus, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902779618&partnerID=40&md5=9c42964b6dfe1f911cb644cfa3594029},
}

@Conference{NoAuthor2014,
  title         = {CEUR Workshop Proceedings},
  year          = {2014},
  volume        = {1237},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  page_count    = {87},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912060156&partnerID=40&md5=645b9eaa2217130ace41328bc97e6c3b},
}

@Conference{López-Fernández2014831,
  author        = {López-Fernández, J.J. and Guerra, E. and De Lara, J.},
  title         = {Meta-model validation and verification with metabest},
  year          = {2014},
  pages         = {831-834},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2642937.2648617},
  groups        = {Scopus, excluidos},
  journal       = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908617806&partnerID=40&md5=6ad39120ab50b9ab4eaa073f6aea7b44},
}

@Conference{Cossentino2014,
  author        = {Cossentino, M. and Nogare, D.D. and Giancarlo, R. and Lodato, C. and Lopes, S. and Ribino, P. and Sabatucci, L. and Seiditay, V.},
  title         = {Gimt: A tool for ontology and goal modeling in BDI multi-agent design},
  year          = {2014},
  volume        = {1260},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919754074&partnerID=40&md5=123cc36ac6585f44bde50428fdb12523},
}

@Conference{Erdweg201471,
  author        = {Erdweg, S. and Welc, A.},
  title         = {DSLDI 2014: Second Workshop on Domain Specific Languages Design and Implementation},
  year          = {2014},
  pages         = {71-72},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2660252.2663600},
  groups        = {ACM, Duplicados},
  journal       = {SPLASH 2014 - Companion Publication of the 2014 ACM SIGPLAN Conference on Systems, Programming, and Applications: Software for Humanity},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910644758&partnerID=40&md5=03ea3286b6e50453104e61a631902726},
}

@Conference{Basciani201466,
  author        = {Basciani, F. and Di Rocco, J. and Di Ruscio, D. and Di Salle, A. and Iovino, L. and Pierantonio, A.},
  title         = {MDEForge: An extensible Web-based modeling platform},
  year          = {2014},
  volume        = {1242},
  pages         = {66-75},
  note          = {cited By 8},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911959056&partnerID=40&md5=96d3c4967b26e5806ee9f0f62bb1015f},
}

@Article{Karnitis2014343,
  author        = {Karnitis, G. and Bicevska, Z. and Cerina-Berzina, J. and Bicevskis, J.},
  title         = {Practitioners approach to business processes modeling},
  journal       = {Frontiers in Artificial Intelligence and Applications},
  year          = {2014},
  volume        = {Databases and Information Systems VIII -Selected Papers from the Eleventh International Baltic Conference,DB\&IS 2014},
  pages         = {343-356},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.3233/978-1-61499-458-9-343},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911483897&partnerID=40&md5=fc39dc4ed639641ee2861de3d9bd42be},
}

@Article{Birken2014407,
  author        = {Birken, K.},
  title         = {Building code generators for DSLs using a partial evaluator for the Xtend language},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8802},
  pages         = {407-424},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910655351&partnerID=40&md5=0cb7d844ca6e856961ab50fd74761b2b},
}

@Conference{Barišić20148,
  author        = {Barišić, A. and Amaral, V. and Goulão, M. and Aguiar, A.},
  title         = {Introducing usability concerns early in the DSL development cycle: FlowSL experience report},
  year          = {2014},
  volume        = {1249},
  pages         = {8-17},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84961338199&partnerID=40&md5=7146ec4109e44f15ea38256fa78ea033},
}

@Article{Collet2014273,
  author        = {Collet, P.},
  title         = {Domain specific languages for managing feature models: Advances and challenges},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8802},
  pages         = {273-288},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910681004&partnerID=40&md5=2c0151bf4dd9513b8d209e0795ad63f7},
}

@Article{Viana2014263,
  author        = {Viana, M. and Penteado, R. and do Prado, A. and Durelli, R.},
  title         = {Developing frameworks from extended feature models},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2014},
  volume        = {263},
  pages         = {263-284},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/978-3-319-04717-1_12},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912116892&partnerID=40&md5=b3cb3697844308edc8d3d7b75741266e},
}

@Conference{Aoun2014130,
  author        = {Aoun, C.G. and Alloush, I. and Kermarrec, Y. and Zein, O.K. and Champeau, J.},
  title         = {Domain specific modeling language for object localization in marine observatories},
  year          = {2014},
  pages         = {130-136},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Scopus, Duplicados},
  journal       = {SENSORCOMM 2014 - 8th International Conference on Sensor Technologies and Applications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929340525&partnerID=40&md5=9f11cb0aac2a3fb136227a965bf2eb0b},
}

@Conference{Maeda2014173,
  author        = {Maeda, K.},
  title         = {Generation of presentation slides on web browser using a domain-specific language},
  year          = {2014},
  pages         = {173-177},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {23rd International Conference on Software Engineering and Data Engineering, SEDE 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84913580153&partnerID=40&md5=b7bfed51c0e58e14e48c5e8209dd703c},
}

@Article{Gani2014494,
  author        = {Gani, K. and Bouet, M. and Schneider, M. and Toumani, F.},
  title         = {Formal modeling and analysis of home care plans},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8831},
  pages         = {494-501},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910642557&partnerID=40&md5=8e81c7c019e657b407ba02a133e13f8f},
}

@Conference{Chanti2014419,
  author        = {Chanti, H. and Thiry, L. and Hassenforder, M. and Fromy, P.},
  title         = {Algebra applied to the multimodeling of fire protection systems},
  year          = {2014},
  pages         = {419-426},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Scopus, Duplicados},
  journal       = {Modelling and Simulation 2014 - European Simulation and Modelling Conference, ESM 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922278034&partnerID=40&md5=8bce29774022d769eeaafb23f8183dbb},
}

@Conference{Neema201445,
  author        = {Neema, S. and Simko, G. and Levendovszky, T. and Porter, J. and Agrawal, A. and Sztipanovits, J.},
  title         = {Formalization of software models for Cyber-Physical Systems},
  year          = {2014},
  pages         = {45-51},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2593489.2593495},
  groups        = {Scopus, excluidos},
  journal       = {2nd FME Workshop on Formal Methods in Software Engineering, FormaliSE 2014 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939537060&partnerID=40&md5=e4eddb769228e0c2324918d825e02eac},
}

@Article{Hamlaoui2014132,
  author        = {Hamlaoui, M.E. and Ebersold, S. and Anwar, A. and Coulette, B. and Nassar, M.},
  title         = {Towards a framework for heterogeneous models matching},
  journal       = {Journal of Software Engineering},
  year          = {2014},
  volume        = {8},
  number        = {3},
  pages         = {132-151},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.3923/jse.2014.132.151},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899886336&partnerID=40&md5=b3b40de547f653318d28897c3cc765f3},
}

@Article{Erdweg201468,
  author        = {Erdweg, S. and Fehrenbach, S. and Ostermann, K.},
  title         = {Evolution of software systems with extensible languages and DSLs},
  journal       = {IEEE Software},
  year          = {2014},
  volume        = {31},
  number        = {5},
  pages         = {68-75},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {99},
  document_type = {Article},
  doi           = {10.1109/MS.2014.99},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907976398&partnerID=40&md5=79f6d83175a8879129f851c7a030b9c5},
}

@Conference{Herrera2014,
  author        = {Herrera, A.S.-B.},
  title         = {Enhancing xtext for general purpose languages},
  year          = {2014},
  volume        = {1321},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921033213&partnerID=40&md5=2dc13111e9e55ddf27c884dd3e2e5793},
}

@Article{Jackson2014771,
  author        = {Jackson, E.K.},
  title         = {A module system for domain-specific languages},
  journal       = {Theory and Practice of Logic Programming},
  year          = {2014},
  volume        = {14},
  number        = {4-5},
  pages         = {771-785},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1017/S1471068414000337},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904653387&partnerID=40&md5=a67d5d1f2ee872129c640f21c1058c63},
}

@Conference{Szabó201413,
  author        = {Szabó, T. and Voelter, M. and Kolb, B. and Ratiu, D. and Schaetz, B.},
  title         = {Mbeddr - Extensible languages for embedded software development},
  year          = {2014},
  pages         = {13-15},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2663171.2663186},
  groups        = {Compendex, Duplicados},
  journal       = {HILT 2014 - Proceedings of the ACM Conference on High Integrity Language Technology},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910620618&partnerID=40&md5=2b2e8bb48ca521c4b7363f603de761f5},
}

@Article{Sztipanovits2014235,
  author        = {Sztipanovits, J. and Bapty, T. and Neema, S. and Howard, L. and Jackson, E.},
  title         = {OpenMETA: A model- and component-based design tool chain for cyber-physical systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8415 LNCS},
  pages         = {235-248},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-54848-2_16},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904810677&partnerID=40&md5=49deab9e56a2ab4e80b301e8b9f4a111},
}

@Conference{Krikava201476,
  author        = {Krikava, F. and Collet, P.},
  title         = {Solving the TTC'14 FIXML case study with SIGMA},
  year          = {2014},
  volume        = {1305},
  pages         = {76-86},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84917691145&partnerID=40&md5=11db98d493eb55379e7f33166943178f},
}

@Article{Machot2014388,
  author        = {Machot, F.A. and Mayr, H.C. and Michael, J.},
  title         = {Behavior modeling and reasoning for ambient support: HCM-L modeler},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8482 LNAI},
  number        = {PART 2},
  pages         = {388-397},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-07467-2_41},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958524878&partnerID=40&md5=5c42fd8ee072db5c5d735da1c9283bca},
}

@Conference{Vu2014200,
  author        = {Vu, L.H. and Haxthausen, A.E. and Peleska, J.},
  title         = {A Domain-specific language for railway interlocking systems},
  year          = {2014},
  pages         = {200-209},
  note          = {cited By 5},
  document_type = {Conference Paper},
  groups        = {Scopus,, Inclusos},
  journal       = {FORMS/FORMAT 2014 - 10th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922309861&partnerID=40&md5=d438e5032e593dd1a04a37066cb7a971},
}

@Article{Ouedraogo2014,
  author        = {Ouedraogo, G.S. and Gautier, M. and Sentieys, O.},
  title         = {A frame-based domain-specific language for rapid prototyping of FPGA-based software-defined radios},
  journal       = {Eurasip Journal on Advances in Signal Processing},
  year          = {2014},
  volume        = {2014},
  number        = {1},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1186/1687-6180-2014-164},
  groups        = {Scopus,, Inclusos},
  page_count    = {15},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84916631373&partnerID=40&md5=34a5e8ca3e10afa7380011aecfdea5ef},
}

@Article{Vendrov2014385,
  author        = {Vendrov, I. and Dutchyn, C. and Osgood, N.D.},
  title         = {Frabjous: A declarative domain-specific language for agent-based modeling},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8393 LNCS},
  pages         = {385-392},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-05579-4_47},
  groups        = {Compendex, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958541259&partnerID=40&md5=8e0f2c258cc8869a1b4c582ffacf611c},
}

@Conference{Karsai20141,
  author        = {Karsai, G. and Balasubramanian, D. and Dubey, A. and Otte, W.R.},
  title         = {Distributed and managed: Research challenges and opportunities of the next generation cyber-physical systems},
  year          = {2014},
  pages         = {1-8},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {6899124},
  document_type = {Conference Paper},
  doi           = {10.1109/ISORC.2014.36},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - IEEE 17th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing, ISORC 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84941266845&partnerID=40&md5=3decec3a9b7c03ba84cbe672064f3b48},
}

@Article{Kalnins2014351,
  author        = {Kalnins, A. and Lace, L. and Kalnina, E. and Sostaks, A.},
  title         = {DSL based platform for business process management},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8327 LNCS},
  pages         = {351-362},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-04298-5_31},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958543679&partnerID=40&md5=6d95f1386c451ccc47eb1043a2f30110},
}

@Article{Aßmann2014133,
  author        = {Aßmann, U. and Bartho, A. and Bürger, C. and Cech, S. and Demuth, B. and Heidenreich, F. and Johannes, J. and Karol, S. and Polowinski, J. and Reimann, J. and Schroeter, J. and Seifert, M. and Thiele, M. and Wende, C. and Wilke, C.},
  title         = {DropsBox: The Dresden Open Software Toolbox: Domain-specific modelling tools beyond metamodels and transformations},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {133-169},
  note          = {cited By 5},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0284-6},
  groups        = {Compendex, ACM, SpingerLink, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893802266&partnerID=40&md5=0fa1ed4f15c36e484c934cb4df274e8a},
}

@Conference{Strickland201423,
  author        = {Strickland, T.S. and Ren, B.M. and Foster, J.S.},
  title         = {Contracts for domain-specific languages in Ruby},
  year          = {2014},
  pages         = {23-34},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2661088.2661092},
  groups        = {Duplicados},
  journal       = {DLS 2014 - Proceedings of the 10th Symposium on Dynamic Languages, Part of SPLASH 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910665205&partnerID=40&md5=1640108d1dcd69415ceef85c213546a2},
}

@Conference{Bakanov201443,
  author        = {Bakanov, K. and Spence, I. and Vandierendonck, H. and Gillan, C.J.},
  title         = {Rigorous specification and low-latency implementation of technical market indicators},
  year          = {2014},
  pages         = {43-51},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2567634.2567636},
  groups        = {ACM, Duplicados},
  journal       = {PPAA 2014 - Proceedings of the 2014 Workshop on Parallel Programming for Analytics Applications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897527080&partnerID=40&md5=eba5a08429ef660c892ad1794d7a9d0a},
}

@Article{Mintchev2014229,
  author        = {Mintchev, S.},
  title         = {User-defined rules made simple with functional programming},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2014},
  volume        = {176 LNBIP},
  pages         = {229-240},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-06695-0},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904576892&partnerID=40&md5=5c65501db8e868bd273abd78eb15ca54},
}

@Conference{DeOliveira2014257,
  author        = {De Oliveira, C.B. and Cardoso, J.M.P. and Marques, E.},
  title         = {High-level synthesis from C vs. a DSL-based approach},
  year          = {2014},
  pages         = {257-262},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6969396},
  document_type = {Conference Paper},
  doi           = {10.1109/IPDPSW.2014.34},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the International Parallel and Distributed Processing Symposium, IPDPS},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84918826349&partnerID=40&md5=8f806a88598db11a6c145d5ad5e4440f},
}

@Conference{Zhu201417,
  author        = {Zhu, X. and Phung, C. and Pareto, L. and Ehnebom, S. and Krekola, M. and Christerson, M. and Helander, M.},
  title         = {An industrial case study on using language workbench technology for realizing model-driven engineering},
  year          = {2014},
  pages         = {17-29},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906896545&partnerID=40&md5=0071042975360c2758c90d6696aeca87},
}

@Article{Zhang20141217,
  author        = {Zhang, M. and Wang, Z. and Xu, P. and Li, Y.},
  title         = {Research and implementation of a peripheral environment simulation tool with domain-specific languages},
  journal       = {Lecture Notes in Electrical Engineering},
  year          = {2014},
  volume        = {277 LNEE},
  pages         = {1217-1224},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-01766-2_138},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958539603&partnerID=40&md5=c1706e06ef80b7704a994b86d6f76224},
}

@Article{Gobillot2014303,
  author        = {Gobillot, N. and Lesire, C. and Doose, D.},
  title         = {A modeling framework for software architecture specification and validation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8810},
  pages         = {303-314},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921921286&partnerID=40&md5=4824d835dfa73c5a7be496e0d37ebbfb},
}

@Conference{Maldague2014,
  author        = {Maldague, P.F. and Wissler, S. and Lenda, M. and Finnerty, D.},
  title         = {APGEN scheduling: 15 years of experience in planning automation},
  year          = {2014},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {13th International Conference on Space Operations, SpaceOps 2014},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901264360&partnerID=40&md5=5a70c7a5e48458e27e43b5fc1995d564},
}

@Article{Esterie2014,
  author        = {Estérie, P. and Falcou, J. and Gaunard, M. and Lapresté, J.-T. and Lacassagne, L.},
  title         = {The numerical template toolbox: A modern C++ design for scientific computing},
  journal       = {Journal of Parallel and Distributed Computing},
  year          = {2014},
  volume        = {74},
  number        = {12},
  pages         = {3240-3253},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.jpdc.2014.07.002},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910025411&partnerID=40&md5=271e2f6f53194df776834a65132ffcc0},
}

@Conference{2014,
  title         = {Proceedings of the ECSA 2014 Workshops and Tool Demos Track - European Conference on Software Architecture, ECSAW 2014},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  page_count    = {208},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907386094&partnerID=40&md5=1ee3054c7f81c5f68dc8a14da82187ed},
}

@Conference{Kourzanov201425,
  author        = {Kourzanov, P.},
  title         = {DSL methods for CPS simulation in the cloud experience report},
  year          = {2014},
  pages         = {25-32},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2559627.2559634},
  groups        = {Compendex, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904544407&partnerID=40&md5=839667306d6a5d2542a30dbcead74acc},
}

@Article{Goldschmidt2014242,
  author        = {Goldschmidt, T.},
  title         = {Towards an infrastructure for domain-specific languages in a multi-domain cloud platform},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8569 LNCS},
  pages         = {242-253},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-09195-2_16},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958553434&partnerID=40&md5=f4724f9ca8ef155fd6374208a43baea1},
}

@Article{Frank2014319,
  author        = {Frank, U.},
  title         = {Multilevel modeling: Toward a new paradigm of conceptual modeling and information systems design},
  journal       = {Business and Information Systems Engineering},
  year          = {2014},
  volume        = {6},
  number        = {6},
  pages         = {319-337},
  note          = {cited By 10},
  document_type = {Article},
  doi           = {10.1007/s12599-014-0350-4},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84913558646&partnerID=40&md5=c38755999054a298ada57881ba19eaa0},
}

@Conference{Sierra20143,
  author        = {Sierra, J.-L.},
  title         = {Language-driven software development},
  year          = {2014},
  volume        = {38},
  pages         = {3-12},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.4230/OASIcs.SLATE.2014.3},
  groups        = {Scopus, excluidos},
  journal       = {OpenAccess Series in Informatics},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905649757&partnerID=40&md5=0cd1b962ada8b1a8479974ee780d7fd4},
}

@Article{James2014189,
  author        = {James, P. and Moller, F. and Nguyen, H.N. and Roggenbach, M. and Schneider, S. and Treharne, H. and Trumble, M. and Williams, D.},
  title         = {Verification of scheme plans using CSP∥B},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8368 LNCS},
  pages         = {189-204},
  note          = {cited By 8},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-05032-4_15},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901650933&partnerID=40&md5=230844a7cd3be9bdcd52aea3a5004152},
}

@Conference{Goldschmidt201439,
  author        = {Goldschmidt, T.},
  title         = {A view-based approach towards an engineering platform for industrial automation in the cloud},
  year          = {2014},
  pages         = {39-42},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2631675.2631679},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907066656&partnerID=40&md5=53e6a42dc100fede62ab25bf5b407d5d},
}

@Conference{Čeliković2014290,
  author        = {Čeliković, M. and Dimitrieski, V. and Aleksic, S. and Ristic, S. and Lukovic, I.},
  title         = {A DSL for EER data model specification},
  year          = {2014},
  pages         = {290-297},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {Information Systems Development: Transforming Organisations and Society Through Information Systems - Proceedings of the 23rd International Conference on Information Systems Development, ISD 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923699390&partnerID=40&md5=9129cbcdcb0ea3d8f2d3b369b19467df},
}

@Article{Sadrieh2014,
  author        = {Sadrieh, A. and Bahri, P.A.},
  title         = {Novel domain-specific language framework for controllability analysis},
  journal       = {Computer Aided Chemical Engineering},
  year          = {2014},
  volume        = {33},
  pages         = {559-564},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/B978-0-444-63456-6.50094-6},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902962004&partnerID=40&md5=45e15ce541e03cc6c5b00573fb9f27de},
}

@Conference{López-Fernández20143,
  author        = {López-Fernández, J.J. and Guerra, E. and De Lara, J.},
  title         = {Assessing the quality of meta-models},
  year          = {2014},
  volume        = {1235},
  pages         = {3-12},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911484484&partnerID=40&md5=0d97177d935d71fc1482f2a56224d488},
}

@Article{Křikava2014569,
  author        = {Křikava, F. and Collet, P. and France, R.B.},
  title         = {SIGMA: Scala internal domain-specific languages for model manipulations},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8767},
  pages         = {569-585},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921786703&partnerID=40&md5=e31f4392036d17e51edddd72f409652b},
}

@Conference{Rouly201431,
  author        = {Rouly, J.M. and Orbeck, J.D. and Syriani, E.},
  title         = {Usability and suitability survey of features in visual IDEs for non-programmers},
  year          = {2014},
  pages         = {31-42},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1145/2688204.2688207},
  groups        = {Scopus, excluidos},
  journal       = {PLATEAU 2014 - Proceedings of the 2014 ACM SIGPLAN Workshop on Evaluation and Usability of Programming Languages and Tools, Part of SPLASH 2014},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84930987155&partnerID=40&md5=fb99ed7ce2cf61ca8da68caa9c425790},
}

@Article{Gore2014,
  author        = {Gore, R. and Diallo, S. and Padilla, J.},
  title         = {ConceVE: Conceptual modeling and formal validation for everyone},
  journal       = {ACM Transactions on Modeling and Computer Simulation},
  year          = {2014},
  volume        = {24},
  number        = {2},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {2567897},
  document_type = {Article},
  doi           = {10.1145/2567897},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897460011&partnerID=40&md5=e19c1bd6cfaabad3e00d597209f5af59},
}

@Conference{Uhler2014157,
  author        = {Uhler, R. and Dave, N.},
  title         = {Smten with satisfiability-based search},
  year          = {2014},
  pages         = {157-176},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1145/2660193.2660208},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings of the Conference on Object-Oriented Programming Systems, Languages, and Applications, OOPSLA},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908265261&partnerID=40&md5=94290f68a2ea09bdf530e12c7080b5da},
}

@Conference{VanTooren201486,
  author        = {Van Tooren, M.J.L. and Van Der Elst, S.W.G. and Vermeulen, B.},
  title         = {Structured design automation},
  year          = {2014},
  pages         = {86-93},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Competitive Design - Proceedings of the 19th CIRP Design Conference},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912103154&partnerID=40&md5=1f57970d6adfbf08791a81c37d81a9a7},
}

@Conference{Moser201442,
  author        = {Moser, M. and Pfeiffer, M. and Pichler, J.},
  title         = {Domain-specific modeling in industrial automation: Challenges and experiences},
  year          = {2014},
  pages         = {42-51},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2593783.2593787},
  groups        = {ACM, Duplicados},
  journal       = {1st International Workshop on Modern Software Engineering Methods for Industrial Automation, MoSEMInA 2014 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928012529&partnerID=40&md5=5e5de39bbdd83f4ea71bfe43d8482488},
}

@Conference{Reis20141570,
  author        = {Reis, L.V.S. and Di Iorio, V.O. and Bigonha, R.S.},
  title         = {Defining the syntax of extensible languages},
  year          = {2014},
  pages         = {1570-1576},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1145/2554850.2554898},
  groups        = {ACM,, excluidos},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905650461&partnerID=40&md5=c4da30364ffc0558d473983973604377},
}

@Article{Barthou2014,
  author        = {Barthou, D. and Brand-Foissac, O. and Pène, O. and Grosdidier, G. and Dolbeau, R. and Eisenbeis, C. and Kruse, M. and Petrov, K. and Tadonki, C.},
  title         = {Automated code generation for Lattice Quantum Chromodynamics and beyond},
  journal       = {Journal of Physics: Conference Series},
  year          = {2014},
  volume        = {510},
  number        = {1},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {012005},
  document_type = {Conference Paper},
  doi           = {10.1088/1742-6596/510/1/012005},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903648175&partnerID=40&md5=fb67be962272b21bf641eede248c94e8},
}

@Conference{Rabbi2014489,
  author        = {Rabbi, F. and Maccaull, W.},
  title         = {User-friendly UIs for the execution of clinical practice guidelines},
  year          = {2014},
  pages         = {489-490},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6881940},
  document_type = {Conference Paper},
  doi           = {10.1109/CBMS.2014.104},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - IEEE Symposium on Computer-Based Medical Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907385619&partnerID=40&md5=e77a07bea0d59b36922a31e21a292ab9},
}

@Article{Rakotonirainy201445,
  author        = {Rakotonirainy, H.L. and Müller, J.-P. and Ramamonjisoa, B.O.},
  title         = {Towards a generic framework for the initialization and the observation of socio-environmental models},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8748},
  pages         = {45-52},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921534834&partnerID=40&md5=b28470d3a0ba75c3b3c6ce4509fab811},
}

@Conference{George2014,
  author        = {George, N. and Lee, H. and Novo, D. and Rompf, T. and Brown, K.J. and Sujeeth, A.K. and Odersky, M. and Olukotun, K. and Ienne, P.},
  title         = {Hardware system synthesis from Domain-Specific Languages},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6927454},
  document_type = {Conference Paper},
  doi           = {10.1109/FPL.2014.6927454},
  groups        = {Compendex, Duplicados},
  journal       = {Conference Digest - 24th International Conference on Field Programmable Logic and Applications, FPL 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911092077&partnerID=40&md5=c923d5c89cea029fc27653e1b81ec814},
}

@Conference{Rahman201437,
  author        = {Rahman, A. and Amyot, D.},
  title         = {A DSL for importing models in a requirements management system},
  year          = {2014},
  pages         = {37-46},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6890824},
  document_type = {Conference Paper},
  doi           = {10.1109/MoDRE.2014.6890824},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {2014 IEEE 4th International Model-Driven Requirements Engineering Workshop, MoDRE 2014 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908657442&partnerID=40&md5=57404e83bae16f99d9d62798f6a9a33d},
}

@Conference{Gouseti201425,
  author        = {Gouseti, M. and Peters, C. and Van Der Storm, T.},
  title         = {Extensible language implementation with object algebras},
  year          = {2014},
  pages         = {25-28},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2658761.2658765},
  groups        = {ACM, excluidos},
  journal       = {13th International Conference on Generative Programming: Concepts and Experiences, GPCE 2014 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939485763&partnerID=40&md5=0dc094a27a04f501549593fb07b2ffa6},
}

@Conference{Lajmi201425,
  author        = {Lajmi, A. and Martinez, J. and Ziadi, T.},
  title         = {DSLFORGE: Textual modeling on the web},
  year          = {2014},
  volume        = {1255},
  pages         = {25-29},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919474627&partnerID=40&md5=c683f58befd2d2d01a9458219ff020a2},
}

@Conference{Tcholtchev2014528,
  author        = {Tcholtchev, N. and Dudeck, G. and Wagner, M. and Hein, C. and Prakash, A. and Ritter, T.},
  title         = {Integrating the modelica DSL into a platform for model-based tool interoperability},
  year          = {2014},
  pages         = {528-534},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6903184},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSACW.2014.88},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - IEEE 38th Annual International Computers, Software and Applications Conference Workshops, COMPSACW 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84931026869&partnerID=40&md5=90a028cd982c1f2502745f9281518a06},
}

@Conference{Szabó201421,
  author        = {Szabó, T. and Voelter, M. and Kolb, B. and Ratiu, D. and Schaetz, B.},
  title         = {Mbeddr - Extensible languages for embedded software development},
  year          = {2014},
  pages         = {21-22},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2688130.2688132},
  groups        = {Scopus, Duplicados},
  journal       = {ETX 2014 - Proceedings of the 2014 ACM SIGPLAN Workshop on Eclipse Technology eXchange, Part of SPLASH 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922829119&partnerID=40&md5=d6bc190f1bdb870246250daae6fc4728},
}

@Conference{Fonseca201485,
  author        = {Fonseca, J.M.S. and Pereira, M.J.V. and Henriques, P.R.},
  title         = {Converting ontologies into DSLs},
  year          = {2014},
  volume        = {38},
  pages         = {85-92},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.4230/OASIcs.SLATE.2014.85},
  groups        = {Compendex, Duplicados},
  journal       = {OpenAccess Series in Informatics},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905663521&partnerID=40&md5=237934ba3142f1c26e65fe1391874d53},
}

@Article{Visic2014162,
  author        = {Visic, N. and Karagiannis, D.},
  title         = {Developing conceptual modeling tools using a DSL},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8793},
  pages         = {162-173},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84909606880&partnerID=40&md5=b3fe56cbd27d94437c5e9e7b16787d00},
}

@Conference{James2014210,
  author        = {James, P. and Moller, F. and Nguyen, H.N. and Roggenbach, M. and Treharne, H.},
  title         = {Decomposing scheme plans to manage verification complexity},
  year          = {2014},
  pages         = {210-220},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {FORMS/FORMAT 2014 - 10th Symposium on Formal Methods for Automation and Safety in Railway and Automotive Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922336529&partnerID=40&md5=0b06d8f38fd23682574b7c680ff0c793},
}

@Article{Satyanarayan2014361,
  author        = {Satyanarayan, A. and Heer, J.},
  title         = {Authoring narrative visualizations with Ellipsis},
  journal       = {Computer Graphics Forum},
  year          = {2014},
  volume        = {33},
  number        = {3},
  pages         = {361-370},
  note          = {cited By 8},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1111/cgf.12392},
  groups        = {ACM, Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904437113&partnerID=40&md5=077ef5676a52cc117719e41a9046f10c},
}

@Article{Silva2014105,
  author        = {Silva, R. and Mota, A. and Starr, R.R.},
  title         = {Formal MDE-based tool development},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2014},
  volume        = {263},
  pages         = {105-125},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/978-3-319-04717-1_5},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912082960&partnerID=40&md5=7da1d8bf4d126e3cbb0db87ff25429f9},
}

@Conference{VanHoorn2014139,
  author        = {Van Hoorn, A. and Vögele, C. and Schulz, E. and Hasselbring, W. and Krcmar, H.},
  title         = {Automatic extraction of probabilistic workload specifications for load testing session-based application systems},
  year          = {2014},
  pages         = {139-146},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.4108/icst.valuetools.2014.258171},
  groups        = {ACM, Compendex, Duplicados},
  journal       = {Proceedings of the 8th International Conference on Performance Evaluation Methodologies and Tools, VALUETOOLS 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962273190&partnerID=40&md5=069725b2fb989b76e3d31833bf1cfb8a},
}

@Article{CánovasIzquierdo2014713,
  author        = {Cánovas Izquierdo, J.L. and García Molina, J.},
  title         = {Extracting models from source code in software modernization},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {2},
  pages         = {713-734},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0270-z},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899945387&partnerID=40&md5=e210ee35d20d28db40f1ee27f692530c},
}

@Conference{Cledou2014536,
  author        = {Cledou, G.},
  title         = {A virtual factory for Smart City Service Integration},
  year          = {2014},
  volume        = {2014-January},
  pages         = {536-539},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2691195.2691288},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939149389&partnerID=40&md5=15ffb3aa86fd152b682d2bcd4ae7c9fa},
}

@Article{Miao2014179,
  author        = {Miao, Y. and Ally, M. and Samaka, M. and Tsinakos, A.A.},
  title         = {Towards pedagogy-driven learning design: A case study of problem-based learning design},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8613 LNCS},
  pages         = {179-189},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-09635-3_20},
  groups        = {Compendex, SpingerLink, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905844073&partnerID=40&md5=29a01a83481fcbc8f3c0db0815bbffac},
}

@Conference{Stewart2014357,
  author        = {Stewart, G. and Gowda, M. and Mainland, G. and Radunović, B. and Vytiniotis, D. and Patterson, D.},
  title         = {Ziria: Language for rapid prototyping of wireless PHY},
  year          = {2014},
  pages         = {357-358},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1145/2619239.2631427},
  groups        = {Scopus, excluidos},
  journal       = {SIGCOMM 2014 - Proceedings of the 2014 ACM Conference on Special Interest Group on Data Communication},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907325681&partnerID=40&md5=d440d9294711baa8fd0b6bf800902414},
}

@Conference{Wider201463,
  author        = {Wider, A.},
  title         = {Implementing a bidirectional model transformation language as an internal DSL in scala},
  year          = {2014},
  volume        = {1133},
  pages         = {63-70},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923698822&partnerID=40&md5=946ad25792acb5cec93a8647ac558d29},
}

@Conference{Holmes2014422,
  author        = {Holmes, T.},
  title         = {Facilitating development and provisioning of service topologies through domain-specific languages},
  year          = {2014},
  pages         = {422-425},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6975396},
  document_type = {Conference Paper},
  doi           = {10.1109/EDOCW.2014.72},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOCW},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919761700&partnerID=40&md5=cfa2d54f179cf3449aeb3faf9bf3cbe4},
}

@Conference{Prosvirnova20141137,
  author        = {Prosvirnova, T. and Batteux, M. and Maarouf, A. and Rauzy, A.},
  title         = {GraphXica: A language for graphical animation of models},
  year          = {2014},
  pages         = {1137-1145},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Safety, Reliability and Risk Analysis: Beyond the Horizon - Proceedings of the European Safety and Reliability Conference, ESREL 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900020116&partnerID=40&md5=a7250610c58bd7a5c523374b04d4381b},
}

@Conference{Ouedraogo2014341,
  author        = {Ouedraogo, G.S. and Gautier, M. and Sentieys, O.},
  title         = {Frame-based modeling for automatic synthesis of FPGA-Software Defined Radio},
  year          = {2014},
  pages         = {341-346},
  note          = {cited By 3},
  art_number    = {6849709},
  document_type = {Conference Paper},
  doi           = {10.4108/icst.crowncom.2014.255289},
  groups        = {excluidos},
  journal       = {Proceedings of the 2014 9th International Conference on Cognitive Radio Oriented Wireless Networks and Communications, CROWNCOM 2014},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905053054&partnerID=40&md5=37e689a9e473b0fefecd42c463ec095d},
}

@Conference{Yue201475,
  author        = {Yue, J.},
  title         = {Transition from EBNF to Xtext},
  year          = {2014},
  volume        = {1258},
  pages         = {75-80},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925959188&partnerID=40&md5=f7024c39c3bc9673fa9f7c525eeeee4e},
}

@Article{Granada2014535,
  author        = {Granada, D. and Vara, J.M. and Bollati, V.A. and Marcos, E.},
  title         = {Enabling the development of cognitive effective visual DSLs},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8767},
  pages         = {535-551},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921519582&partnerID=40&md5=a8748a6cf8dda829723fe6cdb4da8c86},
}

@Conference{NoAuthor201491,
  title         = {CEUR Workshop Proceedings},
  year          = {2014},
  volume        = {1346},
  pages         = {91},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928040695&partnerID=40&md5=40e362ef36c9e698924d517cca036864},
}

@Conference{Chanti2014,
  author        = {Chanti, H. and Thiry, L. and Hassenforder, M. and Brillhac, J.-F. and Fromy, P.},
  title         = {Formalization and composition of languages for the modeling of fire safety systems},
  year          = {2014},
  volume        = {19},
  pages         = {1625-1630},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Scopus, Duplicados},
  journal       = {IFAC Proceedings Volumes (IFAC-PapersOnline)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929734654&partnerID=40&md5=11ac22f712a83766d0ed5067da1b54ec},
}

@Article{Moliné2014170,
  author        = {Moliné, É. and Morette, N. and Novales, C. and Vieyres, P.},
  title         = {Robotic engineer’s specifications for a well-fitted model-driven control architecture for robots},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8810},
  pages         = {170-181},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921913590&partnerID=40&md5=c9a6be297760f2070543a9d9e924e0de},
}

@Book{Trask2014360,
  title         = {Leveraging Model Driven Engineering in Software Product Line Architectures},
  year          = {2014},
  author        = {Trask, B. and Roman, A.},
  volume        = {1},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2648511.2648558},
  groups        = {Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  pages         = {360-361},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907808901&partnerID=40&md5=80e74a940a7cea918bf82580d41c0183},
}

@Conference{Ribeiro20141316,
  author        = {Ribeiro, A. and Da Silva, A.R.},
  title         = {XIS-Mobile: A DSL for mobile applications},
  year          = {2014},
  pages         = {1316-1323},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2554850.2554926},
  groups        = {Scopus, Inclusos},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905641036&partnerID=40&md5=89e29613c431657503cb7b0b7dfcfb88},
}

@Conference{Foster2014113,
  author        = {Foster, S. and Miyazawa, A. and Woodcock, J. and Cavalcanti, A. and Fitzgerald, J. and Larsen, P.G.},
  title         = {An approach for managing semantic heterogeneity in Systems of Systems Engineering},
  year          = {2014},
  pages         = {113-118},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6892473},
  document_type = {Conference Paper},
  doi           = {10.1109/SYSOSE.2014.6892473},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings of the 9th International Conference on System of Systems Engineering: The Socio-Technical Perspective, SoSE 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908648714&partnerID=40&md5=c6150d5771a8b77f493d5567a5b266af},
}

@Conference{Kuhn201464,
  author        = {Kuhn, E. and Crass, S. and Hambock, T.},
  title         = {Approaching coordination in distributed embedded applications with the peer model DSL},
  year          = {2014},
  pages         = {64-68},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6928791},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAA.2014.72},
  groups        = {Compendex, IEEE, ACM, Duplicados},
  journal       = {Proceedings - 40th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84916629521&partnerID=40&md5=787f5a142b3288009992f4d0dc779916},
}

@Article{Quesada20141177,
  author        = {Quesada, L. and Berzal, F. and Cubero, J.-C.},
  title         = {ModelCC - A pragmatic parser generator},
  journal       = {International Journal of Software Engineering and Knowledge Engineering},
  year          = {2014},
  volume        = {24},
  number        = {8},
  pages         = {1177-1195},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1142/S0218194014500375},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929299147&partnerID=40&md5=ddda279b645ab1be9b63a182cfe89645},
}

@Article{Cuadrado2014196,
  author        = {Cuadrado, J.S. and Guerra, E. and De Lara, J.},
  title         = {Towards the systematic construction of domain-specific transformation languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8569 LNCS},
  pages         = {196-212},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-09195-2_13},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958531966&partnerID=40&md5=82eaa44e2bdad79d6bfa85d29899273d},
}

@Article{Kraas2014255,
  author        = {Kraas, A.},
  title         = {Towards an extensible modeling and validation framework for SDL-UML},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8769},
  pages         = {255-270},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949146806&partnerID=40&md5=a70afc62708dda256896127e36a46956},
}

@Conference{Molotnikov2014539,
  author        = {Molotnikov, Z. and Völter, M. and Ratiu, D.},
  title         = {Automated domain-specific C verification with mbeddr},
  year          = {2014},
  pages         = {539-550},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2642937.2642938},
  groups        = {ACM, Duplicados},
  journal       = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908654378&partnerID=40&md5=924e31408f9e1733bb8031a34203995d},
}

@Conference{2014a,
  title         = {DSM 2014 - Proceedings of the 2014 ACM SIGPLAN Workshop on Domain-Specific Modeling, Part of SPLASH 2014},
  year          = {2014},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {DSM 2014 - Proceedings of the 2014 ACM SIGPLAN Workshop on Domain-Specific Modeling, Part of SPLASH 2014},
  keywords      = {rank5},
  page_count    = {56},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921804250&partnerID=40&md5=57ba828d4a02b4bcc08ce55aabb72cc1},
}

@Article{Iliasov2014131,
  author        = {Iliasov, A. and Palacin, R. and Romanovsky, A.},
  title         = {Advanced modelling, simulation and verification for future traffic regulation optimisation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8785},
  pages         = {131-138},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911167197&partnerID=40&md5=a9c39db46d5c7361b216a887fd3cc63d},
}

@Article{Bouabana-Tebibel2014219,
  author        = {Bouabana-Tebibel, T. and Rubin, S.H. and Habib, K. and Chebba, A. and Mellah, S. and Allata, L.},
  title         = {Towards a high level language for reuse and integration},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2014},
  volume        = {263},
  pages         = {219-239},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1007/978-3-319-04717-1_10},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912088370&partnerID=40&md5=2a9b6fb00ef416619117e7dd4f8f346e},
}

@Article{Dubois2014,
  author        = {Dubois, E. and Bortolaso, C. and Appert, D. and Gauffre, G.},
  title         = {An MDE-based framework to support the development of Mixed Interactive Systems},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {89},
  number        = {PART B},
  pages         = {199-221},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2013.03.007},
  groups        = {ScienceDirect, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900521425&partnerID=40&md5=d82dadb06475f277f7e52557f0e3ebdf},
}

@Article{Nabuco2014248,
  author        = {Nabuco, M. and Paiva, A.C.R.},
  title         = {Model-based test case generation for web applications},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8584 LNCS},
  number        = {PART 6},
  pages         = {248-262},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-09153-2_19},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904895456&partnerID=40&md5=4d5c9dd0014b22ad406bb2f494917f6a},
}

@Conference{Ecker2014,
  author        = {Ecker, W. and Velten, M. and Zafari, L. and Goyal, A.},
  title         = {The metamodeling approach to system level synthesis},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6800525},
  document_type = {Conference Paper},
  doi           = {10.7873/DATE2014.324},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings -Design, Automation and Test in Europe, DATE},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903828515&partnerID=40&md5=81b2831ffe44d59a35b1ca707a39c43b},
}

@Conference{Klein2014314,
  author        = {Klein, M.J. and Sawicki, S. and Roos-Frantz, F. and Frantz, R.Z.},
  title         = {On the formalisation of an application integration language using Z notation},
  year          = {2014},
  volume        = {1},
  pages         = {314-319},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {ICEIS 2014 - Proceedings of the 16th International Conference on Enterprise Information Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902358134&partnerID=40&md5=bbe2cb848ab680d394fdc133248dabc7},
}

@Article{Díaz2014293,
  author        = {Díaz, O. and Arellano, C. and Aldalur, I. and Medina, H. and Firmenich, S.},
  title         = {End-User Browser-Side Modification of Web Pages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8786},
  pages         = {293-307},
  note          = {cited By 4},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921683810&partnerID=40&md5=58004b3a6728a8fd4b965d99819f7c75},
}

@Conference{Fragkoulis2014,
  author        = {Fragkoulis, M. and Spinellis, D. and Louridas, P. and Bilas, A.},
  title         = {Relational access to unix kernel data structures},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {12},
  document_type = {Conference Paper},
  doi           = {10.1145/2592798.2592802},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 9th European Conference on Computer Systems, EuroSys 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900406010&partnerID=40&md5=f41089272ff4d72eadb0ea2445eb9042},
}

@Article{Brambilla2014,
  author        = {Brambilla, M. and Fraternali, P.},
  title         = {Large-scale Model-Driven Engineering of web user interaction: The WebML and WebRatio experience},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {89},
  number        = {PART B},
  pages         = {71-87},
  note          = {cited By 10},
  document_type = {Article},
  doi           = {10.1016/j.scico.2013.03.010},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900490431&partnerID=40&md5=edac4194e22a4654278f8c672eca7ced},
}

@Article{Martins2014244,
  author        = {Martins, P. and Fernandes, J.P. and Saraiva, J.},
  title         = {A web portal for the certification of open source software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {7991 LNCS},
  pages         = {244-260},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-54338-8_20},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958552092&partnerID=40&md5=c255fd9541d66feb5a02ae0592629a91},
}

@Conference{Albuquerque201431,
  author        = {Albuquerque, M.T.C.F. and Ramalho, G.L. and Corruble, V. and Santos, A.L.M. and Freitas, F.},
  title         = {Helping Developers to Look Deeper inside Game Sessions},
  year          = {2014},
  volume        = {2014-December},
  number        = {December},
  pages         = {31-40},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7000030},
  document_type = {Conference Paper},
  doi           = {10.1109/SBGAMES.2014.28},
  groups        = {ACM, Duplicados},
  journal       = {Brazilian Symposium on Games and Digital Entertainment, SBGAMES},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937578643&partnerID=40&md5=d9b5ebbc01748bc82de91b6c32cfd951},
}

@Article{Dou2014190,
  author        = {Dou, W. and Bianculli, D. and Briand, L.},
  title         = {Revisiting model-driven engineering for run-time verification of business processes},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8769},
  pages         = {190-197},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84949118981&partnerID=40&md5=2b403bccaf9fb920c69d9f82497b6c07},
}

@Article{Sun201418,
  author        = {Sun, Y. and White, J. and Eade, S.},
  title         = {A model-based system to automate cloud resource allocation and optimization},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8767},
  pages         = {18-34},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921710054&partnerID=40&md5=512710f412727b7219916c2f334435f2},
}

@Article{Mayer2014437,
  author        = {Mayer, P. and Schroeder, A.},
  title         = {Automated multi-language artifact binding and rename refactoring between Java and DSLs used by Java frameworks},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8586 LNCS},
  pages         = {437-462},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-662-44202-9_18},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905380688&partnerID=40&md5=cdaec1fa89b397a88dd2c1d18f89a4ea},
}

@Conference{ElHamlaoui2014,
  author        = {El Hamlaoui, M. and Ebersold, S. and Coulette, B. and Nassar, M. and Anwar, A.},
  title         = {Heterogeneous models matching for consistency management},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6861074},
  document_type = {Conference Paper},
  doi           = {10.1109/RCIS.2014.6861074},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - International Conference on Research Challenges in Information Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906751582&partnerID=40&md5=573ad49a110c18afe454f8fe6f844ce6},
}

@Conference{Just2014433,
  author        = {Just, R.},
  title         = {The major mutation framework: Efficient and scalable mutation analysis for Java},
  year          = {2014},
  pages         = {433-436},
  note          = {cited By 13},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {2014 International Symposium on Software Testing and Analysis, ISSTA 2014 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920141738&partnerID=40&md5=2c90a22e5c474719e2fd463c9bc9594b},
}

@Article{Bache2014320,
  author        = {Bache, E. and Bache, G.},
  title         = {Specification by example with gui tests - how could that work?},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2014},
  volume        = {179 LNBIP},
  pages         = {320-326},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-06862-6},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904569844&partnerID=40&md5=e74e987e40cac1a7fb80336556d7829c},
}

@Conference{Tyugu2014201,
  author        = {Tyugu, E. and Harf, M. and Grigorenko, P.},
  title         = {A case study of combining compositional and object-oriented software development},
  year          = {2014},
  pages         = {201-208},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906902991&partnerID=40&md5=669d6bd02954a53064d4f0b63cc360c7},
}

@Conference{Sottet2014246,
  author        = {Sottet, J.-S. and Vagner, A.},
  title         = {Defining domain specific transformations in human-computer interfaces development},
  year          = {2014},
  pages         = {246-253},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906895427&partnerID=40&md5=5ad54c8e9f9344c40b90bfb3599a12ec},
}

@Conference{Li2014,
  author        = {Li, K. and Joshi, P. and Gupta, A. and Ganai, M.K.},
  title         = {ReproLite: A lightweight tool to quickly reproduce hard system bugs},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2670979.2671004},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the 5th ACM Symposium on Cloud Computing, SOCC 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912072105&partnerID=40&md5=f7b07a182b2eb603bc82f70d1b0c7a45},
}

@Article{Bernardi20141233,
  author        = {Bernardi, M.L. and Cimitile, M. and Di Lucca, G.},
  title         = {Design pattern detection using a DSL-driven graph matching approach},
  journal       = {Journal of Software: Evolution and Process},
  year          = {2014},
  volume        = {26},
  number        = {12},
  pages         = {1233-1266},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1002/smr.1674},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937485645&partnerID=40&md5=c646f184735c5ccf02b3dce22630278f},
}

@Article{Basso-Blandin201440,
  author        = {Basso-Blandin, A. and Delaplace, F.},
  title         = {GUBS a language for synthetic biology: Specification and compilation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8553 LNCS},
  pages         = {40-53},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-08123-6_4},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958552385&partnerID=40&md5=4b38b82d1a598ad106b7926c231c8ce9},
}

@Conference{2014b,
  title         = {Proceedings - 2nd IEEE Working Conference on Software Visualization, VISSOFT 2014},
  year          = {2014},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {Proceedings - 2nd IEEE Working Conference on Software Visualization, VISSOFT 2014},
  keywords      = {rank5},
  page_count    = {186},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84925596799&partnerID=40&md5=ac303acf935315704d4db21c4913dad5},
}

@Article{Schivo2014832,
  author        = {Schivo, S. and Scholma, J. and Wanders, B. and Camacho, R.A.U. and Van Der Vet, P.E. and Karperien, M. and Langerak, R. and Van De Pol, J. and Post, J.N.},
  title         = {Modeling biological pathway dynamics with timed automata},
  journal       = {IEEE Journal of Biomedical and Health Informatics},
  year          = {2014},
  volume        = {18},
  number        = {3},
  pages         = {832-839},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {6676814},
  document_type = {Article},
  doi           = {10.1109/JBHI.2013.2292880},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900830231&partnerID=40&md5=15f72c9be37853db873bbdf8d1d3fe27},
}

@Conference{Burton2014,
  author        = {Burton, F.R. and Paige, R.F. and Poulding, S. and Smith, S.},
  title         = {System of Systems acquisition trade-offs},
  year          = {2014},
  volume        = {28},
  pages         = {11-18},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2014.03.002},
  groups        = {Scopus, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898001664&partnerID=40&md5=c3ba5d68427ad55725379ba34aad74c0},
}

@Conference{Watney201454,
  author        = {Watney, G. and Reder, L.J. and Canham, T.},
  title         = {Modeling for partitioned and multi-core flight software systems: (Instrument Software Framework)},
  year          = {2014},
  pages         = {54-61},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6979145},
  document_type = {Conference Paper},
  doi           = {10.1109/SMC-IT.2014.15},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 5th IEEE International Conference on Space Mission Challenges for Information Technology, SMC-IT 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920549125&partnerID=40&md5=c38579c71b64c97a05714763e215734b},
}

@Conference{Tatibouët2014182,
  author        = {Tatibouët, J. and Cuccuru, A. and Gérard, S. and Terrier, F.},
  title         = {Towards a systematic, tool-independent methodology for defining the execution semantics of UML profiles with fUML},
  year          = {2014},
  pages         = {182-192},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906901829&partnerID=40&md5=86867c33044e665961dc896d9030fe9e},
}

@Article{Genevès2014,
  author        = {Genevès, P. and Layäida, N.},
  title         = {Equipping IDEs with XML-path reasoning capabilities},
  journal       = {ACM Transactions on Internet Technology},
  year          = {2014},
  volume        = {13},
  number        = {4},
  note          = {cited By 0},
  art_number    = {13},
  document_type = {Article},
  doi           = {10.1145/2602573},
  groups        = {ACM, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905235196&partnerID=40&md5=45d0cb549c21bb474648bf0cbcb72ac2},
}

@Conference{Prud'hommeaux201432,
  author        = {Prud'hommeaux, E. and Gayo, J.E.L. and Solbrig, H.},
  title         = {Shape expressions: An RDF validation and transformation language},
  year          = {2014},
  volume        = {2014-September},
  number        = {September},
  pages         = {32-40},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2660517.2660523},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937698926&partnerID=40&md5=e34e7b8115dfb230145f9334ab5e846e},
}

@Conference{Castets20141200,
  author        = {Castets, M. and Degenne, P. and Poncelet, P. and Lo Seen, D.},
  title         = {Integrating raster and vector spatial representations with interaction graphs for multi-scale environmental simulations},
  year          = {2014},
  volume        = {2},
  pages         = {1200-1205},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings - 7th International Congress on Environmental Modelling and Software: Bold Visions for Environmental Modeling, iEMSs 2014},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911907960&partnerID=40&md5=b74d792a8407bb31e609d0d3a16fd130},
}

@Article{Damas2014338,
  author        = {Damas, C. and Lambeau, B. and Van Lamsweerde, A.},
  title         = {Analyzing critical decision-based processes},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2014},
  volume        = {40},
  number        = {4},
  pages         = {338-365},
  note          = {cited By 1},
  art_number    = {6776491},
  document_type = {Article},
  doi           = {10.1109/TSE.2014.2312954},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900565665&partnerID=40&md5=acb5206464a6257279a259c233fa0fdf},
}

@Conference{Ciraci201475,
  author        = {Ciraci, S. and Fuller, J.C. and Daily, J. and Makhmalbaf, A. and Callahan, D.},
  title         = {A runtime verification framework for control system simulation},
  year          = {2014},
  pages         = {75-84},
  note          = {cited By 0},
  art_number    = {6899203},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2014.14},
  groups        = {IEEE, ACM, Compendex,, excluidos},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84928625966&partnerID=40&md5=74e134287ab9c1f1165fab7c3d16ef5a},
}

@Conference{Akinyele2014153,
  author        = {Akinyele, J.A. and Barthe, G. and Grégoire, B. and Schmidt, B. and Strub, P.-Y.},
  title         = {Certified synthesis of efficient batch verifiers},
  year          = {2014},
  volume        = {2014-January},
  pages         = {153-165},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6957109},
  document_type = {Conference Paper},
  doi           = {10.1109/CSF.2014.19},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings of the Computer Security Foundations Workshop},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939615507&partnerID=40&md5=c31bd56c9da0e1079939e63bae9e3511},
}

@Article{Lengyel20143171,
  author        = {Lengyel, L. and Mészáros, T. and Asztalos, M. and Boros, P. and Máté, A. and Madács, G. and Hudák, P. and Kovács, K. and Tresch, A. and Charaf, H.},
  title         = {Quality Assured Model-Driven Requirements Engineering and Software Development},
  journal       = {Computer Journal},
  year          = {2014},
  volume        = {58},
  number        = {11},
  pages         = {3171-3186},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1093/comjnl/bxv051},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84947753564&partnerID=40&md5=bd9d94a057940d8755e0ab61a0b7e983},
}

@Conference{Sharma20141,
  author        = {Sharma, V.S. and Ramnani, R.R. and Sengupta, S.},
  title         = {A framework for identifying and analyzing non-functional requirements from text},
  year          = {2014},
  pages         = {1-8},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2593861.2593862},
  groups        = {ACM, Compendex, Duplicados},
  journal       = {4th International Workshop on the Twin Peaks of Requirements and Architecture, TwinPeaks 2014 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942510551&partnerID=40&md5=d35de2d02773b0179f6a966e7621e5d5},
}

@Article{Sarimbekov2014,
  author        = {Sarimbekov, A. and Zheng, Y. and Ansaloni, D. and Bulej, L. and Marek, L. and Binder, W. and Tůma, P. and Qi, Z.},
  title         = {Dynamic program analysis - Reconciling developer productivity and tool performance},
  journal       = {Science of Computer Programming},
  year          = {2014},
  volume        = {95},
  number        = {P3},
  pages         = {344-358},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.scico.2014.03.014},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908357491&partnerID=40&md5=f89c634c388b8bcdf911c47adf27bbe2},
}

@Conference{Thiery2014376,
  author        = {Thiery, A. and Cerqueus, T. and Thorpe, C. and Sunyé, G. and Murphy, J.},
  title         = {A DSL for deployment and testing in the cloud},
  year          = {2014},
  pages         = {376-382},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6825691},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSTW.2014.43},
  groups        = {ACM, Compendex, IEEE, Duplicados},
  journal       = {Proceedings - IEEE 7th International Conference on Software Testing, Verification and Validation Workshops, ICSTW 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84903640674&partnerID=40&md5=0eac619d84991196f14b7ae5a09b2a00},
}

@Conference{Ebrahimi2014,
  author        = {Ebrahimi, A.H. and Johansson, P.E.C. and Bengtsson, K. and Åkesson, K.},
  title         = {Managing product and production variety -A language workbench approach},
  year          = {2014},
  volume        = {17},
  pages         = {338-344},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procir.2014.01.100},
  groups        = {Compendex, Duplicados},
  journal       = {Procedia CIRP},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904460413&partnerID=40&md5=31099dafa3c0b7fc9b3430e59f541521},
}

@Article{Bachtarzi2014221,
  author        = {Bachtarzi, F. and Chaoui, A.},
  title         = {A modelling language and a tool for web services composition},
  journal       = {International Journal of Communication Networks and Distributed Systems},
  year          = {2014},
  volume        = {13},
  number        = {2},
  pages         = {221-240},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1504/IJCNDS.2014.064168},
  groups        = {ACM, Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907013430&partnerID=40&md5=1ca41f26ad8d4af5c310431fb32bdccf},
}

@Conference{Geyer201425,
  author        = {Geyer, F. and Schneele, S. and Carle, G.},
  title         = {PETFEN: A performance evaluation tool for flow-level network modeling of ethernet networks},
  year          = {2014},
  pages         = {25-30},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.4108/icst.valuetools.2014.258166},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the 8th International Conference on Performance Evaluation Methodologies and Tools, VALUETOOLS 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84962809020&partnerID=40&md5=99045f554c1e3bb4e517dfd296c5ff80},
}

@Article{Havelund2014187,
  author        = {Havelund, K. and Joshi, R.},
  title         = {Comprehension of spacecraft telemetry using hierarchical specifications of behavior},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8829},
  pages         = {187-202},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908695047&partnerID=40&md5=25dd6ddd8869990449dc4773da9e17b3},
}

@Article{Unutulmaz2014137,
  author        = {Unutulmaz, A. and Dündar, G. and Fernández, F.V.},
  title         = {Template coding with LDS and applications of LDS in EDA},
  journal       = {Analog Integrated Circuits and Signal Processing},
  year          = {2014},
  volume        = {78},
  number        = {1},
  pages         = {137-151},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/s10470-013-0213-9},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892674608&partnerID=40&md5=604ccf1adaa5f6048e00d35432eed572},
}

@Conference{DiGiorgio2014,
  author        = {Di Giorgio, N. and Heinen, W. and Reid, S. and Pearson, S.},
  title         = {LMP rules editor: A fresh approach for generic management of mission planning rules and constraints},
  year          = {2014},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {13th International Conference on Space Operations, SpaceOps 2014},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901279023&partnerID=40&md5=eed7cf74cc5231581ddda11a57bc242c},
}

@Conference{Wettinger2014173,
  author        = {Wettinger, J. and Gorlach, K. and Leymann, F.},
  title         = {Deployment aggregates - A generic deployment automation approach for applications operated in the cloud},
  year          = {2014},
  pages         = {173-180},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6975358},
  document_type = {Conference Paper},
  doi           = {10.1109/EDOCW.2014.34},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOCW},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84919762657&partnerID=40&md5=e0de6a1fb8bf21fd5fb8fac87e1b8b0b},
}

@Article{Lang2014167,
  author        = {Lang, D.T.},
  title         = {Enhancing R with advanced compilation tools and methods},
  journal       = {Statistical Science},
  year          = {2014},
  volume        = {29},
  number        = {2},
  pages         = {167-180},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1214/13-STS462},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907187629&partnerID=40&md5=5daf230bb3f5ef629657da90f8977455},
}

@Conference{Kuraj201445,
  author        = {Kuraj, I. and Kuncak, V.},
  title         = {SciFe: Scala framework for efficient enumeration of data structures with invariants},
  year          = {2014},
  pages         = {45-49},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2637647.2637655},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {SCALA 2014 - Proceedings of the 5th Annual Scala Workshop, Co-located with ECOOP 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906055230&partnerID=40&md5=f161a406517aa79832d1add55f09a425},
}

@Conference{Wu2014354,
  author        = {Wu, S. and Fitzgerald, A. and Witten, I.H.},
  title         = {Second language learning in the context of MOOCs},
  year          = {2014},
  volume        = {1},
  pages         = {354-359},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {CSEDU 2014 - Proceedings of the 6th International Conference on Computer Supported Education},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902314551&partnerID=40&md5=564f70c90dced66841e2faeda3d6aa45},
}

@Conference{Collins20148,
  author        = {Collins, A. and Grewe, D. and Grover, V. and Lee, S. and Susnea, A.},
  title         = {NOVA: A functional language for data parallelism},
  year          = {2014},
  pages         = {8-13},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2627373.2627375},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908259616&partnerID=40&md5=d4dcf9c88363016873c83c49ce33ce0b},
}

@Conference{Bagge201454,
  author        = {Bagge, A.H. and Lämmel, R. and Zaytsev, V.},
  title         = {Reflections on courses for software language engineering},
  year          = {2014},
  volume        = {1346},
  pages         = {54-63},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84927729866&partnerID=40&md5=e110f4d55b9988e991143f2c9bf5d7ba},
}

@Article{Wachsmuth201435,
  author        = {Wachsmuth, G.H. and Konat, G.D.P. and Visser, E.},
  title         = {Language design with the spoofax language workbench},
  journal       = {IEEE Software},
  year          = {2014},
  volume        = {31},
  number        = {5},
  pages         = {35-43},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {100},
  document_type = {Review},
  doi           = {10.1109/MS.2014.100},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907989410&partnerID=40&md5=be81b4d5d45127c096435d61327ee7c7},
}

@Conference{Caracciolo2014,
  author        = {Caracciolo, A. and Lungu, M.F. and Nierstrasz, O.},
  title         = {Dictō: A unified DSL for testing architectural rules},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2642803.2642824},
  groups        = {Scopus, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907409332&partnerID=40&md5=fb62c4472d9e2441c4cd000c2965a839},
}

@Conference{Smeltzer201453,
  author        = {Smeltzer, K. and Erwig, M. and Metoyer, R.},
  title         = {A transformational approach to data visualization},
  year          = {2014},
  pages         = {53-62},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2658761.2658769},
  groups        = {Duplicados},
  journal       = {13th International Conference on Generative Programming: Concepts and Experiences, GPCE 2014 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939537680&partnerID=40&md5=a618313b0c99304f5c0f233ba56e3112},
}

@Conference{Schug2014724,
  author        = {Schug, P. and Kotlov, A.},
  title         = {Designing CAx-process chains: Model and modeling language for cax-process chain methodology},
  year          = {2014},
  volume        = {2},
  pages         = {724-733},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ACM, Duplicados},
  journal       = {ICINCO 2014 - Proceedings of the 11th International Conference on Informatics in Control, Automation and Robotics},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910053461&partnerID=40&md5=e0387cf274c2e1dc8b1365f220069a2d},
}

@Conference{Moreira2014863,
  author        = {Moreira, R.M.L.M. and Paiva, A.C.R.},
  title         = {PBGT tool: An integrated modeling and testing environment for pattern-based GUI testing},
  year          = {2014},
  pages         = {863-866},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2642937.2648618},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ASE 2014 - Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908612083&partnerID=40&md5=ebe25ba55f93ad7b068b1a3190d15a9f},
}

@Article{Teruel2014,
  author        = {Teruel, M.A. and Navarro, E. and López-Jaquero, V. and Montero, F. and González, P.},
  title         = {A CSCW Requirements Engineering CASE Tool: Development and usability evaluation},
  journal       = {Information and Software Technology},
  year          = {2014},
  volume        = {56},
  number        = {8},
  pages         = {922-949},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.infsof.2014.02.009},
  groups        = {Compendex, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900002321&partnerID=40&md5=3bb0e47f1b55f49f3a6f65010d455ce9},
}

@Article{Barbosa2014240,
  author        = {Barbosa, M. and Castro, D. and Silva, P.F.},
  title         = {Compiling CAO: From cryptographic specifications to C implementations},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8414 LNCS},
  pages         = {240-244},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-54792-8_13},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900560282&partnerID=40&md5=d64dc0af4469577710be357a9e16808e},
}

@Conference{Ramos-Cantor2014,
  author        = {Ramos-Cantor, O.D. and Lossow, M. and Droste, H. and Kadel, G. and Pesavento, M.},
  title         = {A network simulation tool for user traffic modeling and quality of experience analysis in a hybrid access architecture},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6840004},
  document_type = {Conference Paper},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings of World Telecommunications Congress 2014, WTC 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84991215318&partnerID=40&md5=f312dda5b4c7c61d5e6da3f2f399ff45},
}

@Conference{Moreno-Delgado2014116,
  author        = {Moreno-Delgado, A. and Durán, F.},
  title         = {The movie database case: Solutions using maude and the maude-based e-motions tool},
  year          = {2014},
  volume        = {1305},
  pages         = {116-124},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84917741320&partnerID=40&md5=0384a350ffe10c4f7403ca950af6e6d5},
}

@Conference{Duval201427,
  author        = {Duval, T. and Blouin, A. and Jezequel, J.-M.},
  title         = {When Model Driven Engineering meets virtual reality: Feedback from application to the Collaviz framework},
  year          = {2014},
  pages         = {27-34},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {7152798},
  document_type = {Conference Paper},
  doi           = {10.1109/SEARIS.2014.7152798},
  groups        = {Scopus, Duplicados},
  journal       = {2014 IEEE 7th Workshop on Software Engineering and Architectures for Realtime Interactive Systems, SEARIS 2014},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84988306016&partnerID=40&md5=5cbdf15c7375289e9f3bb0306ffb0a59},
}

@Article{Moreno-Delgado2014132,
  author        = {Moreno-Delgado, A. and Durán, F. and Zschaler, S. and Troya, J.},
  title         = {Modular DSLs for flexible analysis: An e-Motions reimplementation of Palladio},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8569 LNCS},
  pages         = {132-147},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-09195-2_9},
  groups        = {ACM, Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84958551237&partnerID=40&md5=d5a3874b562c6cf841d7e0b80a9387f6},
}

@Conference{Koshima201455,
  author        = {Koshima, A. and Englebert, V.},
  title         = {Collaborative editing of EMF/Ecore meta-models and models conflict detection, reconciliation, and merging in DiCoMEF},
  year          = {2014},
  pages         = {55-66},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {ScienceDirect, IEEE, Duplicados},
  journal       = {MODELSWARD 2014 - Proceedings of the 2nd International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906909966&partnerID=40&md5=7bc03b61ddec96e2e11aaa6adeeff901},
}

@Article{Härtel2014342,
  author        = {Härtel, J. and Härtel, L. and Lämmel, R.},
  title         = {Test-data generation for xtext: Tool paper},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8706},
  pages         = {342-351},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921744080&partnerID=40&md5=1060ab7e63b27548b72d9874f025b62c},
}

@Article{Peachey201420,
  author        = {Peachey, C. and Mallieu, D.},
  title         = {Poyry's role in Turkey},
  journal       = {International Water Power and Dam Construction},
  year          = {2014},
  volume        = {66},
  number        = {9},
  pages         = {20-22},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908396369&partnerID=40&md5=b7ec7c7e95686c08c2e73c86188d157d},
}

@Article{2014c,
  title         = {Software Engineering and Formal Methods - 12th International Conference, SEFM 2014, Proceedings},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8702 LNCS},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  keywords      = {rank5},
  page_count    = {394},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905974651&partnerID=40&md5=0f407c851010f223696ae265d7cf6c11},
}

@Article{Skersys2014260,
  author        = {Skersys, T. and Pavalkis, S. and Lagzdinyte-Budnike, I.},
  title         = {Model-driven approach and implementation of partial model-to-model transformations in a CASE tool},
  journal       = {Communications in Computer and Information Science},
  year          = {2014},
  volume        = {465},
  pages         = {260-271},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922205382&partnerID=40&md5=93ea9a8eecf9339dced187d9b11d01e1},
}

@Article{Bourgoin2014,
  author        = {Bourgoin, M. and Chailloux, E. and Lamotte, J.-L.},
  title         = {Efficient abstractions for GPGPU programming},
  journal       = {International Journal of Parallel Programming},
  year          = {2014},
  volume        = {42},
  number        = {4},
  pages         = {583-600},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10766-013-0261-y},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84902142853&partnerID=40&md5=416403b56f09ef4a13e5cc3eced95c8c},
}

@Conference{Bettini201458,
  author        = {Bettini, L.},
  title         = {Developing user interfaces with EMF parsley},
  year          = {2014},
  pages         = {58-66},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ICSOFT-PT 2014 - Proceedings of the 9th International Conference on Software Paradigm Trends},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908887146&partnerID=40&md5=d9b757a8df7379828c84bf1c4e6d64d7},
}

@Article{Nisar2014213,
  author        = {Nisar, K. and Osman, W.R.S. and Altrad, A.M.M.},
  title         = {Modeling of Broadband over In-Door Power Line Network in Malaysia},
  journal       = {Advances in Intelligent Systems and Computing},
  year          = {2014},
  volume        = {265 AISC},
  pages         = {213-222},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-06538-0_21},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906871254&partnerID=40&md5=8d6756df3e860f49f7975d7b3b7abce4},
}

@Conference{2014d,
  title         = {3rd Symposium on Languages, Applications and Technologies, SLATE 2014},
  year          = {2014},
  volume        = {38},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {OpenAccess Series in Informatics},
  keywords      = {rank3},
  page_count    = {304},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905641338&partnerID=40&md5=14597e632dcc713f1243f7bfbc5f8ba8},
}

@Conference{Louadah201426,
  author        = {Louadah, H. and Champagne, R. and Labiche, Y.},
  title         = {Towards automating Interface Control Documents elaboration and management},
  year          = {2014},
  volume        = {1250},
  pages         = {26-33},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84913621953&partnerID=40&md5=ad8b295c69af375b358b58a7c01de529},
}

@Conference{2014e,
  title         = {2014 IEEE 4th International Model-Driven Requirements Engineering Workshop, MoDRE 2014 - Proceedings},
  year          = {2014},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {2014 IEEE 4th International Model-Driven Requirements Engineering Workshop, MoDRE 2014 - Proceedings},
  keywords      = {rank3},
  page_count    = {95},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908897230&partnerID=40&md5=63aa523faf9dc63d6092b632ae768b1b},
}

@Article{Carção2014602,
  author        = {Carção, T. and Martins, P.},
  title         = {A visual DSL for the certification of open source software},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8583 LNCS},
  number        = {PART 5},
  pages         = {602-617},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-09156-3_42},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904894238&partnerID=40&md5=6aea81423722fa5526643a0ea07abc27},
}

@Article{NoAuthor20141,
  title         = {7th International Conference on Knowledge Science, Engineering and Management, KSEM 2014},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2014},
  volume        = {8793},
  pages         = {1-389},
  note          = {cited By 0},
  document_type = {Conference Review},
  keywords      = {rank5},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84920545373&partnerID=40&md5=34eb0f5b92aa1346c702ee21955eb0bb},
}

@Article{Leitner201435,
  author        = {Leitner, A. and Preschern, C. and Kreiner, C.},
  title         = {Effective development of automation systems through domain-specific modeling in a small enterprise context},
  journal       = {Software and Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {35-54},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0289-1},
  groups        = {Compendex, ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893788486&partnerID=40&md5=6958bbfa3a844fe1fee7abc32ae95c01},
}

@Conference{Melingui2014754,
  author        = {Melingui, A. and Merzouki, R. and Mbede, J.B. and Escande, C. and Daachi, B. and Benoudjit, N.},
  title         = {Qualitative approach for inverse kinematic modeling of a Compact Bionic Handling Assistant trunk},
  year          = {2014},
  pages         = {754-761},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6889947},
  document_type = {Conference Paper},
  doi           = {10.1109/IJCNN.2014.6889947},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the International Joint Conference on Neural Networks},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84908472203&partnerID=40&md5=70101308cfb3fe5148627b4f79a6123e},
}

@Conference{Rompf201441,
  author        = {Rompf, T. and Sujeeth, A.K. and Brown, K.J. and Lee, H.J. and Chafi, H. and Olukotun, K.},
  title         = {Surgical precision JIT compilers},
  year          = {2014},
  pages         = {41-52},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2594291.2594316},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84901599274&partnerID=40&md5=8ee930cf5d525d6f278cfa30d52fd6ef},
}

@Article{Rompf2014,
  author        = {Rompf, T. and Sujeeth, A.K. and Brown, K.J. and Lee, H. and Chafiz, H. and Olukotun, K.},
  title         = {Surgical precision JIT compilers},
  journal       = {ACM SIGPLAN Notices},
  year          = {2014},
  volume        = {49},
  number        = {6},
  pages         = {41-52},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2594291.2594316},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907023064&partnerID=40&md5=5f23a2b314a8958a93c1b2d9920e00f3},
}

@Conference{Asenov2013127,
  author        = {Asenov, D. and Müller, P.},
  title         = {Customizing the visualization and interaction for embedded domain-specific languages in a structured editor},
  year          = {2013},
  pages         = {127-130},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6645255},
  document_type = {Conference Paper},
  doi           = {10.1109/VLHCC.2013.6645255},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891066272&partnerID=40&md5=1331d0a52794bb53d226a7c860665664},
}

@Conference{Pérez201399,
  author        = {Pérez, F. and Valderas, P. and Fons, J.},
  title         = {A domain-specific language for enabling doctors to specify biomechanical protocols},
  year          = {2013},
  pages         = {99-102},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6645251},
  document_type = {Conference Paper},
  doi           = {10.1109/VLHCC.2013.6645251},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings of IEEE Symposium on Visual Languages and Human-Centric Computing, VL/HCC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891088125&partnerID=40&md5=978f2124d89182da465450ff15cc6209},
}

@Conference{Sujeeth2013145,
  author        = {Sujeeth, A.K. and Gibbons, A. and Brown, K.J. and Lee, H. and Rompf, T. and Odersky, M. and Olukotun, K.},
  title         = {Forge: Generating a high performance DSL implementation from a declarative specification},
  year          = {2013},
  pages         = {145-154},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2517208.2517220},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {SPLASH Indianapolis 2013; GPCE 2013 - Proceedings of the 12th International Conference on Generative Programming: Concepts and Experiences},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889668325&partnerID=40&md5=2c575128a203f7fd68ec5eafd1a5643e},
}

@Conference{DiRuscio2013114,
  author        = {Di Ruscio, D. and Iovino, L. and Pierantonio, A.},
  title         = {Managing the coupled evolution of metamodels and textual concrete syntax specifications},
  year          = {2013},
  pages         = {114-121},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  art_number    = {6619498},
  document_type = {Conference Paper},
  doi           = {10.1109/SEAA.2013.22},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - 39th Euromicro Conference Series on Software Engineering and Advanced Applications, SEAA 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889009056&partnerID=40&md5=4ec4359ce912ee763950a1326c6e2a4b},
}

@Conference{Montrieux20131,
  author        = {Montrieux, L. and Yu, Y. and Wermelinger, M.},
  title         = {Developing a domain-specific plug-in for a modelling platform: The good, the bad, the ugly},
  year          = {2013},
  pages         = {1-6},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6597186},
  document_type = {Conference Paper},
  doi           = {10.1109/TOPI.2013.6597186},
  groups        = {IEEE, Duplicados},
  journal       = {International Workshop on Developing Tools as Plug-Ins, TOPI},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889042547&partnerID=40&md5=13901110b7f46736983760d97c395a2f},
}

@Conference{Lapets201319,
  author        = {Lapets, A. and Skowyra, R. and Bestavros, A. and Kfoury, A.},
  title         = {Towards accessible integration and deployment of formal tools and techniques},
  year          = {2013},
  pages         = {19-24},
  note          = {cited By 0},
  art_number    = {6597189},
  document_type = {Conference Paper},
  doi           = {10.1109/TOPI.2013.6597189},
  groups        = {Scopus, excluidos},
  journal       = {International Workshop on Developing Tools as Plug-Ins, TOPI},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84889044958&partnerID=40&md5=f5910cd6602fb3f0fde7ebade10603d3},
}

@Article{Combemale2013365,
  author        = {Combemale, B. and De Antoni, J. and Larsen, M.V. and Mallet, F. and Barais, O. and Baudry, B. and France, R.B.},
  title         = {Reifying concurrency for executable metamodeling},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {365-384},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-02654-1_20},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891304677&partnerID=40&md5=2d73c1795ee31dbc3d6decbf7f977958},
}

@Article{NoAuthor2013,
  title         = {Software Language Engineering - 6th International Conference, SLE 2013, Proceedings},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8225 LNCS},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  page_count    = {386},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891337258&partnerID=40&md5=4524fb48721637b3046c73705eccb5c2},
}

@Article{Erdweg2013197,
  author        = {Erdweg, S. and Van Der Storm, T. and Völter, M. and Boersma, M. and Bosman, R. and Cook, W.R. and Gerritsen, A. and Hulshout, A. and Kelly, S. and Loh, A. and Konat, G.D.P. and Molina, P.J. and Palatnik, M. and Pohjonen, R. and Schindler, E. and Schindler, K. and Solmi, R. and Vergu, V.A. and Visser, E. and Van Der Vlist, K. and Wachsmuth, G.H. and Van Der Woning, J.},
  title         = {The state of the art in language workbenches: Conclusions from the language workbench challenge},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {197-217},
  note          = {cited By 29},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-02654-1_11},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891295467&partnerID=40&md5=196fde44f4a74bc6efe160b46204e8cc},
}

@Conference{Miao2013454,
  author        = {Miao, Y. and Samaka, M. and Impagliazzo, J.},
  title         = {Facilitating teachers in developing online PBL courses},
  year          = {2013},
  pages         = {454-459},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  art_number    = {6654481},
  document_type = {Conference Paper},
  doi           = {10.1109/TALE.2013.6654481},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of 2013 IEEE International Conference on Teaching, Assessment and Learning for Engineering, TALE 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892629178&partnerID=40&md5=81d14e4366bfdb7e849394ab92dbba87},
}

@Article{Vacchi201376,
  author        = {Vacchi, E. and Cazzola, W. and Pillay, S. and Combemale, B.},
  title         = {Variability support in domain-specific language development},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {76-95},
  note          = {cited By 10},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-02654-1_5},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891322998&partnerID=40&md5=4ac95a2ae0f547b09138b81964b89c10},
}

@Article{Fehrenbach201396,
  author        = {Fehrenbach, S. and Erdweg, S. and Ostermann, K.},
  title         = {Software evolution to domain-specific languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8225 LNCS},
  pages         = {96-116},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-02654-1_6},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891339527&partnerID=40&md5=1cab1781a1cb711d84b437c84096a23f},
}

@Conference{Ozik20131560,
  author        = {Ozik, J. and Collier, N.T. and Murphy, J.T. and North, M.J.},
  title         = {The ReLogo agent-based modeling language},
  year          = {2013},
  pages         = {1560-1568},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6721539},
  document_type = {Conference Paper},
  doi           = {10.1109/WSC.2013.6721539},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the 2013 Winter Simulation Conference - Simulation: Making Decisions in a Complex World, WSC 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894205751&partnerID=40&md5=0e8ee1a6864ec0a50c22556540636a0f},
}

@Conference{Azevedo2013203,
  author        = {Azevedo, B.M. and Almeida, J.J.},
  title         = {ABC with a UNIX flavor},
  year          = {2013},
  volume        = {29},
  pages         = {203-218},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.4230/OASIcs.SLATE.2013.203},
  groups        = {Compendex, Duplicados},
  journal       = {OpenAccess Series in Informatics},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893209544&partnerID=40&md5=b466b0c2bde5eef1e942aa7126e447df},
}

@Conference{Schäfer2013,
  author        = {Schäfer, J. and Klein, D.},
  title         = {Implementing Situation Awareness for Car-to-X Applications using Domain Specific Languages},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6692589},
  document_type = {Conference Paper},
  doi           = {10.1109/VTCSpring.2013.6692589},
  groups        = {Compendex, Duplicados},
  journal       = {IEEE Vehicular Technology Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893555462&partnerID=40&md5=6d19a8a39235aa1cff1d435b09e02a31},
}

@Conference{Díaz2013219,
  author        = {Díaz, O. and Arellano, C.},
  title         = {Integrating microblogging into domain specific language editors},
  year          = {2013},
  pages         = {219-225},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6686034},
  document_type = {Conference Paper},
  doi           = {10.1109/CGC.2013.42},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - 2013 IEEE 3rd International Conference on Cloud and Green Computing, CGC 2013 and 2013 IEEE 3rd International Conference on Social Computing and Its Applications, SCA 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893309200&partnerID=40&md5=33bc30fafb43d5be5a2fa2c32d78ceb0},
}

@Conference{Deneke20131036,
  author        = {Deneke, W. and Li, W.-N. and Thompson, C.},
  title         = {Automatic composition of ETL workflows from business intents},
  year          = {2013},
  pages         = {1036-1042},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6755332},
  document_type = {Conference Paper},
  doi           = {10.1109/CSE.2013.151},
  groups        = {ACM, IEEE, Duplicados},
  journal       = {Proceedings - 16th IEEE International Conference on Computational Science and Engineering, CSE 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900349807&partnerID=40&md5=583ecf9a2f338eaf3fa4b266785b6f79},
}

@Conference{Liu20131447,
  author        = {Liu, C. and Shen, B.-H. and Oh, S.Y. and Gerla, M. and Palsberg, J. and Banner, C. and Butler, R.},
  title         = {Agnostic protocol translation for cross-domain information sharing},
  year          = {2013},
  pages         = {1447-1452},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6735827},
  document_type = {Conference Paper},
  doi           = {10.1109/MILCOM.2013.245},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings - IEEE Military Communications Conference MILCOM},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897740793&partnerID=40&md5=2d30b0c3c463235be933dcdb3e27ecaa},
}

@Conference{VanDenBos2013520,
  author        = {Van Den Bos, J. and Van Der Storm, T.},
  title         = {TRINITY: An IDE for the matrix},
  year          = {2013},
  pages         = {520-523},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6676947},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSM.2013.86},
  groups        = {ACM, Duplicados},
  journal       = {IEEE International Conference on Software Maintenance, ICSM},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891687666&partnerID=40&md5=bf5a24d2213f9e1e533215ad2d818c4f},
}

@Article{Heidenreich2013322,
  author        = {Heidenreich, F. and Johannes, J. and Karol, S. and Seifert, M. and Wende, C.},
  title         = {Model-based language engineering with EMFText},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7680 LNCS},
  pages         = {322-345},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35992-7_9},
  groups        = {SpingerLink, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894204800&partnerID=40&md5=f7685e442968d79dfb3d7dc4e79e405b},
}

@Conference{Novak20136866,
  author        = {Novak, P. and Sindelar, R.},
  title         = {Ontology-based industrial plant description supporting simulation model design and maintenance},
  year          = {2013},
  pages         = {6866-6871},
  note          = {cited By 0},
  art_number    = {6700269},
  document_type = {Conference Paper},
  doi           = {10.1109/IECON.2013.6700269},
  groups        = {Scopus, excluidos},
  journal       = {IECON Proceedings (Industrial Electronics Conference)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893543272&partnerID=40&md5=8ec0d7de853beea91b281d8f8da3e8c0},
}

@Article{Artho2013112,
  author        = {Artho, C.V. and Biere, A. and Hagiya, M. and Platon, E. and Seidl, M. and Tanabe, Y. and Yamamoto, M.},
  title         = {Modbat: A model-based API tester for event-driven systems},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8244 LNCS},
  pages         = {112-128},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-03077-7-8},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891847416&partnerID=40&md5=21d20ecf26e077fce91f41c8ccf8c587},
}

@Article{Drey2013206,
  author        = {Drey, Z. and Morales, J.F. and Hermenegildo, M.V. and Carro, M.},
  title         = {Reversible language extensions and their application in debugging},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7752 LNCS},
  pages         = {206-221},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-45284-0_14},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891330782&partnerID=40&md5=bdcaf832629ce7e57bdca5d019ff42c0},
}

@Conference{Yakymets20131137,
  author        = {Yakymets, N. and Dhouib, S. and Jaber, H. and Lanusse, A.},
  title         = {Model-driven safety assessment of robotic systems},
  year          = {2013},
  pages         = {1137-1142},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  art_number    = {6696493},
  document_type = {Conference Paper},
  doi           = {10.1109/IROS.2013.6696493},
  groups        = {Scopus, Duplicados},
  journal       = {IEEE International Conference on Intelligent Robots and Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893805398&partnerID=40&md5=0b00306246563ddf5610659df9f40f85},
}

@Article{DeMoraes2013111,
  author        = {De Moraes, J.L.C. and De Souza, W.L. and Pires, L.P. and Cavalini, L.T. and Do Prado, A.F.},
  title         = {Using the dual-level modeling approach to develop applications for pervasive healthcare},
  journal       = {Journal of Mobile Multimedia},
  year          = {2013},
  volume        = {9},
  number        = {1-2},
  pages         = {111-127},
  note          = {cited By 1},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892655391&partnerID=40&md5=e8e7ba0c8ca3ad9079a679251437bd8e},
}

@Conference{George2013120,
  author        = {George, N. and Novo, D. and Rompf, T. and Odersky, M. and Ienne, P.},
  title         = {Making domain-specific hardware synthesis tools cost-efficient},
  year          = {2013},
  pages         = {120-127},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  art_number    = {6718341},
  document_type = {Conference Paper},
  doi           = {10.1109/FPT.2013.6718341},
  groups        = {Compendex, Duplicados},
  journal       = {FPT 2013 - Proceedings of the 2013 International Conference on Field Programmable Technology},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894137403&partnerID=40&md5=88658875568fd7bd31c6009375de6a43},
}

@Conference{Wuest2013664,
  author        = {Wuest, D. and Seyff, N. and Glinz, M.},
  title         = {Semi-automatic generation of metamodels from model sketches},
  year          = {2013},
  pages         = {664-669},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6693130},
  document_type = {Conference Paper},
  doi           = {10.1109/ASE.2013.6693130},
  groups        = {Scopus, Duplicados},
  journal       = {2013 28th IEEE/ACM International Conference on Automated Software Engineering, ASE 2013 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893593728&partnerID=40&md5=689c227a9bc118ac537e0cf1bd50919c},
}

@Conference{Procter2013446,
  author        = {Procter, A. and Harrison, W.L. and Graves, I. and Becchi, M. and Allwein, G.},
  title         = {Semantics-directed machine architecture in ReWire},
  year          = {2013},
  pages         = {446-449},
  note          = {cited By 3},
  art_number    = {6718410},
  document_type = {Conference Paper},
  doi           = {10.1109/FPT.2013.6718410},
  groups        = {Scopus, excluidos},
  journal       = {FPT 2013 - Proceedings of the 2013 International Conference on Field Programmable Technology},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894159852&partnerID=40&md5=bfa69820dc30b0c09057911bd4f5f608},
}

@Article{Pfeiffer2013431,
  author        = {Pfeiffer, R.-H. and Wasowski, A.},
  title         = {Tengi interfaces for tracing between heterogeneous components},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7680 LNCS},
  pages         = {431-447},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35992-7_12},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894148812&partnerID=40&md5=5fc6f4a288cca36e51e140c0e847df80},
}

@Conference{Yang2013,
  author        = {Yang, S. and Zhou, Y. and Baras, J.},
  title         = {Compositional analysis of dynamic Bayesian networks and applications to complex dynamic system decomposition},
  year          = {2013},
  volume        = {16},
  pages         = {167-176},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.procs.2013.01.018},
  groups        = {ScienceDirect, Duplicados},
  journal       = {Procedia Computer Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898765048&partnerID=40&md5=5b4badbd38656a22a9749ea03531ac8b},
}

@Conference{Farias2013291,
  author        = {Farias, F.S. and Borges, G.S. and Monteiro, W.B. and Silva, D.L.L. and Costa, J.C.W.A.},
  title         = {Noise estimation in DSL systems using linear regression},
  year          = {2013},
  pages         = {291-294},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6698124},
  document_type = {Conference Paper},
  doi           = {10.1109/ATC.2013.6698124},
  groups        = {Compendex, Duplicados},
  journal       = {International Conference on Advanced Technologies for Communications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893372391&partnerID=40&md5=69cc8a7520195ec05ec45601b15e6580},
}

@Article{LindhardtJohansen2013,
  author        = {Lindhardt Johansen, M. and Hagen, C.P. and Johannsen, T.H. and Main, K.M. and Picard, J.-Y. and Jørgensen, A. and Rajpert-De Meyts, E. and Juul, A.},
  title         = {Anti-Müllerian hormone and its clinical use in pediatrics with special emphasis on disorders of sex development},
  journal       = {International Journal of Endocrinology},
  year          = {2013},
  volume        = {2013},
  note          = {cited By 10},
  art_number    = {198698},
  document_type = {Review},
  doi           = {10.1155/2013/198698},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893856738&partnerID=40&md5=d727f31ee71e7692df9b7de0f5851401},
}

@Conference{Helene2013429,
  author        = {Helene, C. and Sebastien, L.},
  title         = {Algorithmic skeleton library for scientific simulations: SkelGIS},
  year          = {2013},
  pages         = {429-436},
  note          = {cited By 0},
  art_number    = {6641450},
  document_type = {Conference Paper},
  doi           = {10.1109/HPCSim.2013.6641450},
  groups        = {IEEE,, excluidos},
  journal       = {Proceedings of the 2013 International Conference on High Performance Computing and Simulation, HPCS 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888070783&partnerID=40&md5=37c760ea482dcdc205b9a6f11d936183},
}

@Article{Rogozov20131224,
  author        = {Rogozov, Y. and Sviridov, A. and Degtyarev, A.},
  title         = {Analysis and perspective of development of software with dynamic stricture},
  journal       = {Middle East Journal of Scientific Research},
  year          = {2013},
  volume        = {16},
  number        = {9},
  pages         = {1224-1229},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.5829/idosi.mejsr.2013.16.09.12008},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887721787&partnerID=40&md5=448d2a9ab1d8d473699ec77f991bbfe2},
}

@Article{Colombo2013352,
  author        = {Colombo, C. and Mizzi, R. and Pace, G.J.},
  title         = {SMock - A test platform for monitoring tools},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8174 LNCS},
  pages         = {352-357},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40787-1_24},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887436363&partnerID=40&md5=c2e0e219fe2622cb2b5b9a4517e379b6},
}

@Article{Klann2013,
  author        = {Klann, J.G. and Murphy, S.N.},
  title         = {Computing health quality measures using Informatics for Integrating Biology and the Bedside.},
  journal       = {Journal of medical Internet research},
  year          = {2013},
  volume        = {15},
  number        = {4},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.2196/jmir.2493},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887362965&partnerID=40&md5=eb2bab699dc7b629bff23681209d7701},
}

@Conference{Thomas2013461,
  author        = {Thomas, U. and Hirzinger, G. and Rumpe, B. and Schulze, C. and Wortmann, A.},
  title         = {A new skill based robot programming language using UML/P Statecharts},
  year          = {2013},
  pages         = {461-466},
  note          = {cited By 13},
  __markedentry = {[Neto:5]},
  art_number    = {6630615},
  document_type = {Conference Paper},
  doi           = {10.1109/ICRA.2013.6630615},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - IEEE International Conference on Robotics and Automation},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887300711&partnerID=40&md5=43dfd7213729a7557df19553d3c7ad85},
}

@Conference{Horpácsi201363,
  author        = {Horpácsi, D.},
  title         = {Extending erlang by utilising RefactorErl},
  year          = {2013},
  pages         = {63-71},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2505305.2505314},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN International Conference on Functional Programming, ICFP},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887216696&partnerID=40&md5=1f7d7504ddf03a166e6b54cc8512a91c},
}

@Conference{Bibliowicz2013473,
  author        = {Bibliowicz, A. and Dori, D.},
  title         = {Creating domain-specific modeling languages with OPM/D: A meta-modeling approach},
  year          = {2013},
  pages         = {473-479},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, Inclusos},
  journal       = {ICSOFT 2013 - Proceedings of the 8th International Joint Conference on Software Technologies},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887033912&partnerID=40&md5=e7a4bb92f5dfc9d1bb7e27df1cbb85ca},
}

@Conference{Dévai2013244,
  author        = {Dévai, G. and Leskó, D. and Tejfel, M.},
  title         = {Embedding and parsing combined for efficient language design},
  year          = {2013},
  pages         = {244-250},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {ICSOFT 2013 - Proceedings of the 8th International Joint Conference on Software Technologies},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887108262&partnerID=40&md5=6d6926ece14c1af08a2a6379aac67193},
}

@Conference{Kuzenkova2013205,
  author        = {Kuzenkova, A. and Deripaska, A. and Bryksin, T. and Litvinov, Y. and Polyakov, V.},
  title         = {QReal DSM platform: An environment for creation of specific visual IDEs},
  year          = {2013},
  pages         = {205-211},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ENASE 2013 - Proceedings of the 8th International Conference on Evaluation of Novel Approaches to Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887041790&partnerID=40&md5=9f0fcd614c7e337fc92fa09ab46ffbb2},
}

@Article{Arkin2013757,
  author        = {Arkin, E. and Tekinerdogan, B. and Imre, K.M.},
  title         = {Model-driven approach for supporting the mapping of parallel algorithms to parallel computing platforms},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8107 LNCS},
  pages         = {757-773},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-41533-3_46},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887004069&partnerID=40&md5=559693dce4f53c6963e28759ff3aa640},
}

@Article{Zalila2013336,
  author        = {Zalila, F. and Crégut, X. and Pantel, M.},
  title         = {Formal verification integration approach for DSML},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8107 LNCS},
  pages         = {336-351},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-41533-3_21},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886812513&partnerID=40&md5=63b9fec67171576db0e72ba5ba70c608},
}

@Article{Noyrit2013505,
  author        = {Noyrit, F. and Gérard, S. and Terrier, F.},
  title         = {Computer assisted integration of domain-specific modeling languages using text analysis techniques},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8107 LNCS},
  pages         = {505-521},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-41533-3_31},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886839464&partnerID=40&md5=e0a7b83a7627a66ca16661e3e64d6cba},
}

@Article{Wouters2013522,
  author        = {Wouters, L.},
  title         = {Towards the notation-driven development of DSMLs},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8107 LNCS},
  pages         = {522-537},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-41533-3_32},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886863178&partnerID=40&md5=8f03afdf73990f243135cc44af6b8a88},
}

@Article{Semeráth2013538,
  author        = {Semeráth, O. and Horváth, Á. and Varró, D.},
  title         = {Validation of derived features and well-formedness constraints in DSLs: By mapping graph queries to an SMT-solver},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8107 LNCS},
  pages         = {538-554},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-41533-3_33},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886860124&partnerID=40&md5=afdf9fb1b65e350971a5b5756da2b97e},
}

@Article{Hoyos2013,
  author        = {Hoyos, J.R. and García-Molina, J. and Botía, J.A.},
  title         = {A domain-specific language for context modeling in context-aware systems},
  journal       = {Journal of Systems and Software},
  year          = {2013},
  volume        = {86},
  number        = {11},
  pages         = {2890-2905},
  note          = {cited By 12},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.jss.2013.07.008},
  groups        = {ACM, Compendex, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884130833&partnerID=40&md5=90d1799a06cdf26652a628a9538173bc},
}

@Book{Sérot2013201,
  title         = {CAPH: A language for implementing stream-processing applications on FPGAs},
  year          = {2013},
  author        = {Sérot, J. and Berry, F. and Ahmed, S.},
  note          = {cited By 4},
  document_type = {Book Chapter},
  doi           = {10.1007/978-1-4614-1362-2_9},
  groups        = {Scopus,, excluidos},
  journal       = {Embedded Systems Design with FPGAs},
  pages         = {201-224},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899498591&partnerID=40&md5=24cf6c7b1cd4c2a57f5c48fe8d63e709},
}

@Book{Cardoso20131,
  title         = {Compilation and synthesis for embedded reconfigurable systems: An aspect-oriented approach},
  year          = {2013},
  author        = {Cardoso, J.M.P. and Diniz, P.C. and De Figueiredo Coutinho, J.G. and Petrov, Z.M.},
  note          = {cited By 0},
  document_type = {Book},
  doi           = {10.1007/978-1-4614-4894-5},
  groups        = {ACM,, excluidos},
  journal       = {Compilation and Synthesis for Embedded Reconfigurable Systems: An Aspect-Oriented Approach},
  pages         = {1-203},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84929884364&partnerID=40&md5=7ae1e60ae0fc329dbcb5dcac19378877},
}

@Article{Iliasov2013130,
  author        = {Iliasov, A. and Lopatkin, I. and Romanovsky, A.},
  title         = {The SafeCap platform for modelling railway safety and capacity},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8153 LNCS},
  pages         = {130-137},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40793-2_12},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885786431&partnerID=40&md5=0e55c4e7fdcad6d8b49d00f42b4c9172},
}

@Conference{Annenkov20131084,
  author        = {Annenkov, D.V. and Cherkashin, E.A.},
  title         = {Generation technique for Django MVC web framework using the stratego transformation language},
  year          = {2013},
  pages         = {1084-1087},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6596418},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {2013 36th International Convention on Information and Communication Technology, Electronics and Microelectronics, MIPRO 2013 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886941671&partnerID=40&md5=9a24cd18d7e1ee619ae81ecf4949985d},
}

@Article{Adetoye201318,
  author        = {Adetoye, A.O. and Goldsmith, M. and Creese, S.},
  title         = {Analysis of dependencies in critical infrastructures},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {6983 LNCS},
  pages         = {18-29},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-41476-3_2},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885724822&partnerID=40&md5=36fc97fb686d7c102b2bbdac3d77c2ca},
}

@Article{2013,
  title         = {SDL 2013: Model-Driven Dependability Engineering - 16th International SDL Forum, Proceedings},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7916 LNCS},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  keywords      = {rank5},
  page_count    = {292},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885784007&partnerID=40&md5=e2d513f64368995165c3835837d48c69},
}

@Article{Iliasov2013125,
  author        = {Iliasov, A. and Lopatkin, I. and Romanovsky, A.},
  title         = {The SafeCap project on railway safety verification and capacity simulation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8166 LNCS},
  pages         = {125-132},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40894-6_10},
  groups        = {Scopus},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885779529&partnerID=40&md5=5b960621507042081d4239922d8afe5f},
}

@Article{Schmidt2013222,
  author        = {Schmidt, M. and Wider, A. and Scheidgen, M. and Fischer, J. and Von Klinski, S.},
  title         = {Refactorings in language development with asymmetric bidirectional model transformations},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7916 LNCS},
  pages         = {222-238},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-38911-5_13},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885802836&partnerID=40&md5=7cd0bac65e2028d0754855cac3e73cfd},
}

@Conference{Mooij2013662,
  author        = {Mooij, A.J. and Hooman, J. and Albers, R.},
  title         = {Gaining industrial confidence for the introduction of domain-specific languages},
  year          = {2013},
  pages         = {662-667},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6605868},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSACW.2013.83},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885574422&partnerID=40&md5=10a54b51124a50e12bec636906662567},
}

@Conference{Kulkarni201327,
  author        = {Kulkarni, A. and Newton, R.R.},
  title         = {Embrace, defend, extend: A methodology for embedding preexisting DSLs : Case in point, streamHs: Streamit in haskell},
  year          = {2013},
  pages         = {27-34},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2505351.2505355},
  groups        = {Compendex, ACM, Inclusos},
  journal       = {Proceedings of the ACM SIGPLAN International Conference on Functional Programming, ICFP},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885610585&partnerID=40&md5=1d2b91c6304679fbb0fd96e493afb9ce},
}

@Conference{Lindecker201320,
  author        = {Lindecker, D. and Simko, G. and Madari, I. and Levendovszky, T. and Sztipanovits, J.},
  title         = {Multi-way semantic specification of domain-specific modeling languages},
  year          = {2013},
  pages         = {20-29},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6601569},
  document_type = {Conference Paper},
  doi           = {10.1109/ECBS.2013.29},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the International Symposium and Workshop on Engineering of Computer Based Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885193789&partnerID=40&md5=ce64710ce52208a6bb6419af42dab1d5},
}

@Conference{Szabo2013127,
  author        = {Szabo, C. and Chen, Y.},
  title         = {A model-driven approach for ensuring change traceability and multi-model consistency},
  year          = {2013},
  pages         = {127-136},
  note          = {cited By 1},
  art_number    = {6601300},
  document_type = {Conference Paper},
  doi           = {10.1109/ASWEC.2013.24},
  groups        = {Scopus,, excluidos},
  journal       = {Proceedings of the Australian Software Engineering Conference, ASWEC},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885210855&partnerID=40&md5=8aa12214d51378da4b68d5176b1eacfd},
}

@Conference{Sarimbekov201311,
  author        = {Sarimbekov, A. and Zheng, Y. and Ansaloni, D. and Bulej, L. and Marek, L. and Binder, W. and Tůma, P. and Qi, Z.},
  title         = {Productive development of dynamic program analysis tools with DiSL},
  year          = {2013},
  pages         = {11-19},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6601288},
  document_type = {Conference Paper},
  doi           = {10.1109/ASWEC.2013.12},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the Australian Software Engineering Conference, ASWEC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885198442&partnerID=40&md5=e82bb074a01fe0e20672c94845509370},
}

@Article{Izquierdo2013101,
  author        = {Izquierdo, J.L.C. and Cabot, J. and López-Fernández, J.J. and Cuadrado, J.S. and Guerra, E. and De Lara, J.},
  title         = {Engaging end-users in the collaborative development of domain-specific modelling languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8091 LNCS},
  pages         = {101-110},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40840-3-16},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885009758&partnerID=40&md5=9044ae66a48f1232558765767a934aa0},
}

@Conference{Jindal2013874,
  author        = {Jindal, N. and Lotrich, V. and Deumens, E. and Sanders, B.A.},
  title         = {SIPMaP: A tool for modeling irregular parallel computations in the super instruction architecture},
  year          = {2013},
  pages         = {874-884},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6569869},
  document_type = {Conference Paper},
  doi           = {10.1109/IPDPS.2013.35},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - IEEE 27th International Parallel and Distributed Processing Symposium, IPDPS 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884877251&partnerID=40&md5=89056b8d75f3cb28cc35c99d88338988},
}

@Conference{Ferry201338,
  author        = {Ferry, N. and Chauvel, F. and Rossini, A. and Morin, B. and Solberg, A.},
  title         = {Managing multi-cloud systems with CloudMF},
  year          = {2013},
  pages         = {38-45},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1145/2513534.2513542},
  groups        = {Scopus, excluidos},
  journal       = {ACM International Conference Proceeding Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884604847&partnerID=40&md5=6019fe6f16a9d12483ce4a61f6d93835},
}

@Article{Demirkol20131525,
  author        = {Demirkol, S. and Challenger, M. and Getir, S. and Kosar, T. and Kardas, G. and Mernik, M.},
  title         = {A DSL for the development of software agents working within a semantic web environment},
  journal       = {Computer Science and Information Systems},
  year          = {2013},
  volume        = {10},
  number        = {4 SPEC.ISSUE},
  pages         = {1525-1556},
  note          = {cited By 8},
  document_type = {Article},
  doi           = {10.2298/CSIS121105044D},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886770100&partnerID=40&md5=df9eee2b46d719738607b3c5dc721c9a},
}

@Article{Chabridon2013,
  author        = {Chabridon, S. and Conan, D. and Abid, Z. and Taconet, C.},
  title         = {Building ubiquitous QoC-aware applications through model-driven software engineering},
  journal       = {Science of Computer Programming},
  year          = {2013},
  volume        = {78},
  number        = {10},
  pages         = {1912-1929},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.scico.2012.07.019},
  groups        = {ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880261767&partnerID=40&md5=af91da252588d46db8f5f14cbcc7570c},
}

@Conference{Cencetti2013,
  author        = {Cencetti, M. and Pasquinelli, M. and Maggiore, P.},
  title         = {System modeling framework and MDO tool integration: MBSE methodologies applied to design and analysis of space system},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {AIAA Modeling and Simulation Technologies (MST) Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883701055&partnerID=40&md5=14a003463374c9e3404e08e1e629e4b5},
}

@Conference{Alvarez2013,
  author        = {Alvarez, C. and Casallas, R.},
  title         = {MTC Flow: A tool to design, develop and deploy model transformation chains},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2491279.2491286},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACadeMics Tooling with Eclipse, ACME 2013 - A Joint ECMFA/ECSA/ECOOP Workshop},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883668663&partnerID=40&md5=cc027b7065a602cc79679afc31640db8},
}

@Conference{Törsel2013383,
  author        = {Törsel, A.-M.},
  title         = {A testing tool for web applications using a domain-specific modelling language and the NuSMV model checker},
  year          = {2013},
  pages         = {383-390},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6569751},
  document_type = {Conference Paper},
  doi           = {10.1109/ICST.2013.54},
  groups        = {IEEE, ACM, Compendex, Duplicados},
  journal       = {Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883315645&partnerID=40&md5=c0a64195932e0040f449a7d1e0fa9fe3},
}

@Article{Thillainathan2013643,
  author        = {Thillainathan, N. and Hoffmann, H. and Hirdes, E.M. and Leimeister, J.M.},
  title         = {Enabling educators to design serious games - A serious game logic and structure modeling language},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8095 LNCS},
  pages         = {643-644},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40814-4_92},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883338991&partnerID=40&md5=69106b7ca5197aa63060f95b7872fc63},
}

@Conference{Biely2013,
  author        = {Biely, M. and Delgado, P. and Milosevic, Z. and Schiper, A.},
  title         = {Distal: A framework for implementing fault-tolerant distributed algorithms},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6575306},
  document_type = {Conference Paper},
  doi           = {10.1109/DSN.2013.6575306},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the International Conference on Dependable Systems and Networks},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883327856&partnerID=40&md5=9d33eeb542513d9ee16c66873756225f},
}

@Conference{Calvagna2013376,
  author        = {Calvagna, A. and Gargantini, A. and Vavassori, P.},
  title         = {Combinatorial interaction testing with CITLAB},
  year          = {2013},
  pages         = {376-382},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  art_number    = {6569750},
  document_type = {Conference Paper},
  doi           = {10.1109/ICST.2013.53},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings - IEEE 6th International Conference on Software Testing, Verification and Validation, ICST 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883325712&partnerID=40&md5=61859bcaf07db654422c5715b6a7a69c},
}

@Article{2013a,
  title         = {Model-Based Methodologies for Pervasive and Embedded Software - 8th International Workshop, MOMPES 2012, Revised Papers},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7706 LNCS},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  keywords      = {rank5},
  page_count    = {138},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883327079&partnerID=40&md5=8211dfa3e44bb6c053fa6fdfa5b93683},
}

@Article{James2013435,
  author        = {James, P. and Trumble, M. and Treharne, H. and Roggenbach, M. and Schneider, S.},
  title         = {OnTrack: An open tooling environment for railway verification},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7871 LNCS},
  pages         = {435-440},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-38088-4_30},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883438774&partnerID=40&md5=b9cd9427f6f08b95b65979452ce25974},
}

@Article{BenMaissa201324,
  author        = {Ben Maissa, Y. and Kordon, F. and Mouline, S. and Thierry-Mieg, Y.},
  title         = {Modeling and analyzing wireless sensor networks with VeriSensor: An integrated workflow},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8100 LNCS},
  pages         = {24-47},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40465-8_2},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883143802&partnerID=40&md5=fadecacd531dfe8012870373d275a592},
}

@Article{Silkensen201369,
  author        = {Silkensen, E. and Siek, J.},
  title         = {Well-typed islands parse faster},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7829 LNCS},
  pages         = {69-84},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40447-4_5},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883192438&partnerID=40&md5=b31accf3dd456147fa4a61e06e8d1364},
}

@Conference{Kaminski201318,
  author        = {Kaminski, T. and Van Wyk, E.},
  title         = {Creating and using domain-specific language features},
  year          = {2013},
  pages         = {18-21},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2489812.2489817},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 1st Workshop on the Globalization of Domain Specific Languages, GlobalDSL 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883094686&partnerID=40&md5=f6b1bc8e86d16f60ee1455b241683179},
}

@Conference{Melo201312,
  author        = {Melo, I. and Sánchez, M. and Villalobos, J.},
  title         = {Composing graphical languages},
  year          = {2013},
  pages         = {12-17},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2489812.2489816},
  groups        = {Scopus,, Duvida},
  journal       = {Proceedings of the 1st Workshop on the Globalization of Domain Specific Languages, GlobalDSL 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883120805&partnerID=40&md5=3ae61d0f65c511ca00edfc164bb9f265},
}

@Conference{Guha2013483,
  author        = {Guha, A. and Reitblatt, M. and Foster, N.},
  title         = {Machine-verified network controllers},
  year          = {2013},
  pages         = {483-494},
  note          = {cited By 8},
  document_type = {Conference Paper},
  doi           = {10.1145/2462156.2462178},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings of the ACM SIGPLAN Conference on Programming Language Design and Implementation (PLDI)},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883130051&partnerID=40&md5=28923529f16d3c9a1673e6e99e9e8f5a},
}

@Conference{LeGoaer201328,
  author        = {Le Goaer, O. and Waltham, S.},
  title         = {Yet another DSL for cross-platforms mobile development},
  year          = {2013},
  pages         = {28-33},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2489812.2489819},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 1st Workshop on the Globalization of Domain Specific Languages, GlobalDSL 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883068147&partnerID=40&md5=076f979a450f2ea51085b9e01f21c6c6},
}

@Article{Voelter2013339,
  author        = {Voelter, M. and Ratiu, D. and Kolb, B. and Schaetz, B.},
  title         = {Mbeddr: Instantiating a language workbench in the embedded software domain},
  journal       = {Automated Software Engineering},
  year          = {2013},
  volume        = {20},
  number        = {3},
  pages         = {339-390},
  note          = {cited By 20},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10515-013-0120-4},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879079477&partnerID=40&md5=250da8a41e97ad9f87808be2e2fc9057},
}

@Conference{AbuJbara2013209,
  author        = {Abu Jbara, A. and Levis, A.H.},
  title         = {On defining a Domain Specific Multi-Modeling Workflow Language to address complex Multi-Modeling activities},
  year          = {2013},
  pages         = {209-214},
  note          = {cited By 0},
  art_number    = {6549884},
  document_type = {Conference Paper},
  doi           = {10.1109/SysCon.2013.6549884},
  groups        = {Scopus, Inclusos},
  journal       = {SysCon 2013 - 7th Annual IEEE International Systems Conference, Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882977644&partnerID=40&md5=6930c55f0956e480c10438bf2c9c4106},
}

@Article{Lukman20131078,
  author        = {Lukman, T. and Godena, G. and Gray, J. and Heričko, M. and Strmčnik, S.},
  title         = {Model-driven engineering of process control software - beyond device-centric abstractions},
  journal       = {Control Engineering Practice},
  year          = {2013},
  volume        = {21},
  number        = {8},
  pages         = {1078-1096},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.conengprac.2013.03.013},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882693334&partnerID=40&md5=4ed6e8cb451c17842e7186a1366b8aad},
}

@Conference{Atkinson201332,
  author        = {Atkinson, C. and Gerbig, R.},
  title         = {Harmonizing textual and graphical visualizations of domain specific models},
  year          = {2013},
  pages         = {32-41},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2489820.2489821},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 2nd Workshop on Graphical Modeling Language Development, GMLD 2013 - In Conjunction with European Conference on Modelling Foundations and Applications, ECMFA 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882434213&partnerID=40&md5=32409a10e954c3088e13b0885ea90f38},
}

@Conference{Pallec201323,
  author        = {Pallec, X.L. and Dupuy-Chessa, S.},
  title         = {Support for quality metrics in metamodelling},
  year          = {2013},
  pages         = {23-31},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2489820.2489825},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings of the 2nd Workshop on Graphical Modeling Language Development, GMLD 2013 - In Conjunction with European Conference on Modelling Foundations and Applications, ECMFA 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882435116&partnerID=40&md5=1618e24eb17d7b0a676631bda82080b9},
}

@Conference{Kouhen20133,
  author        = {Kouhen, A.E. and Dumoulin, C. and Gérard, S. and Boulet, P.},
  title         = {A component-based approach for specifying dsml's concrete syntax},
  year          = {2013},
  pages         = {3-11},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2489820.2489822},
  groups        = {Compendex,, excluidos},
  journal       = {Proceedings of the 2nd Workshop on Graphical Modeling Language Development, GMLD 2013 - In Conjunction with European Conference on Modelling Foundations and Applications, ECMFA 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882365060&partnerID=40&md5=431e70548b22b696620bc3ad82c438cf},
}

@Conference{Iliasov20131,
  author        = {Iliasov, A. and Romanovsky, A.},
  title         = {SafeCap domain language for reasoning about safety and capacity},
  year          = {2013},
  pages         = {1-10},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6532141},
  document_type = {Conference Paper},
  doi           = {10.1109/WDTS-RASD.2012.11},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - 2012 Workshop on Dependable Transportation Systems/Recent Advances in Software Dependability, WDTS-RASD 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881338581&partnerID=40&md5=b8b4d64c4ff41a2f4adb4603da488cac},
}

@Article{DeLara20131128,
  author        = {De Lara, J. and Guerra, E. and Sánchez Cuadrado, J.},
  title         = {Reusable abstractions for modeling languages},
  journal       = {Information Systems},
  year          = {2013},
  volume        = {38},
  number        = {8},
  pages         = {1128-1149},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.is.2013.06.001},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84881252457&partnerID=40&md5=3be074d7906431bdec3720f0846a7c37},
}

@Article{Firmenich2013224,
  author        = {Firmenich, S. and Rossi, G. and Winckler, M.},
  title         = {A domain specific language for orchestrating user tasks whilst navigation web sites},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7977 LNCS},
  pages         = {224-232},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-39200-9_20},
  groups        = {ACM,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880881558&partnerID=40&md5=02b9a5d855fd69c893960819967c8126},
}

@Article{Barbier2013253,
  author        = {Barbier, G. and Cucchi, V. and Hill, D.R.C.},
  title         = {Contribution of model-driven engineering to crop modeling},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7971 LNCS},
  number        = {PART 1},
  pages         = {253-263},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-39637-3-21},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880743919&partnerID=40&md5=d376d67d9a780483adda798491859681},
}

@Article{Kuhlmann2013796,
  author        = {Kuhlmann, M. and Sohr, K. and Gogolla, M.},
  title         = {Employing UML and OCL for designing and analysing role-based access control},
  journal       = {Mathematical Structures in Computer Science},
  year          = {2013},
  volume        = {23},
  number        = {4},
  pages         = {796-833},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1017/S0960129512000266},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880209377&partnerID=40&md5=e42888f04160105e104ccfb7575686e3},
}

@Article{DeMoraes2013475,
  author        = {De Moraes, J.L.C. and De Souza, W.L. and Ferreira Pires, L. and Cavalini, L.T. and Do Prado, A.F.},
  title         = {A novel approach to developing applications in the pervasive healthcare environment through the use of archetypes},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7975 LNCS},
  number        = {PART 5},
  pages         = {475-490},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-39640-3-35},
  groups        = {Compendex, IEEE,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880730613&partnerID=40&md5=87766b34fe4b8d35103722881e985743},
}

@Article{Brettschneider2013128,
  author        = {Brettschneider, M. and Häberlein, T.},
  title         = {From arrows to netlists describing hardware},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7973 LNCS},
  number        = {PART 3},
  pages         = {128-143},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-39646-5_10},
  groups        = {Compendex, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880709850&partnerID=40&md5=0375b9ec7a15a48d852bdaa603551739},
}

@Book{Chiprianov2013570,
  title         = {Integrating DSLs into a software engineering process: Application to collaborative construction of telecom services},
  year          = {2013},
  author        = {Chiprianov, V. and Kermarrec, Y. and Rouvrais, S.},
  volume        = {2-4},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-4301-7.ch028},
  groups        = {Scopus, Duplicados},
  journal       = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  keywords      = {rank3},
  pages         = {570-595},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944677206&partnerID=40&md5=68fd600d8169263ba9bfe3ab3977a463},
}

@Book{Luković2013596,
  title         = {DSLs in action with model based approaches to information system development},
  year          = {2013},
  author        = {Luković, I. and Čeliković, M. and Ivančević, V. and Aleksić, S.},
  volume        = {2-4},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-4301-7.ch029},
  groups        = {Scopus, Inclusos},
  journal       = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  pages         = {596-626},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944678680&partnerID=40&md5=f94323db4ed0840be8c28d30f9a855ae},
}

@Book{Kolomvatsos2013695,
  title         = {Creating, debugging, and testing mobile applications with the IPAC application creation environment},
  year          = {2013},
  author        = {Kolomvatsos, K. and Valkanas, G. and Patelis, P. and Hadjiefthymiades, S.},
  volume        = {2-4},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-4301-7.ch033},
  groups        = {Scopus,, excluidos},
  journal       = {Software Design and Development: Concepts, Methodologies, Tools, and Applications},
  pages         = {695-718},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944679881&partnerID=40&md5=d4a47a8e861d28a6c96842a798f2566a},
}

@Conference{Johnson201333,
  author        = {Johnson, K. and Calinescu, R. and Kikuchi, S.},
  title         = {An incremental verification framework for component-based software systems},
  year          = {2013},
  pages         = {33-42},
  note          = {cited By 17},
  document_type = {Conference Paper},
  doi           = {10.1145/2465449.2465456},
  groups        = {Scopus,, excluidos},
  journal       = {CBSE 2013 - Proceedings of the 16th ACM SIGSOFT Symposium on Component Based Software Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880539485&partnerID=40&md5=18467c282a6aa56f13b8a4d5e666e453},
}

@Conference{Kolovos2013,
  author        = {Kolovos, D.S. and Rose, L.M. and Matragkas, N. and Paige, R.F. and Guerra, E. and Cuadrado, J.S. and De Lara, J. and Ráth, I. and Varró, D. and Tisi, M. and Cabot, J.},
  title         = {A research roadmap towards achieving scalability in model driven engineering},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {2},
  document_type = {Conference Paper},
  doi           = {10.1145/2487766.2487768},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880430801&partnerID=40&md5=4f0c7c0900d610eefb84280c45899e77},
}

@Article{Sabo2013509,
  author        = {Sabo, A. and Kuljić, B. and Szakáll, T.},
  title         = {Educational tools for object-oriented DSP interactive DSL framework},
  journal       = {Computing and Informatics},
  year          = {2013},
  volume        = {32},
  number        = {3},
  pages         = {509-526},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880270643&partnerID=40&md5=47f322fb90fc6043220cf63ce7289d71},
}

@Conference{Stone20133,
  author        = {Stone, A. and Mills Strout, M.},
  title         = {Abstractions to separate concerns in semi-regular grids},
  year          = {2013},
  pages         = {3-12},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2464996.2467267},
  groups        = {Scopus,, excluidos},
  journal       = {Proceedings of the International Conference on Supercomputing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879836286&partnerID=40&md5=fd79dcc29be70948e11f32f6604a40cf},
}

@Article{Guerra2013555,
  author        = {Guerra, E. and de Lara, J. and Kolovos, D.S. and Paige, R.F. and dos Santos, O.M.},
  title         = {Engineering model transformations with transML},
  journal       = {Software and Systems Modeling},
  year          = {2013},
  volume        = {12},
  number        = {3},
  pages         = {555-577},
  note          = {cited By 22},
  document_type = {Article},
  doi           = {10.1007/s10270-011-0211-2},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879785772&partnerID=40&md5=9539218bbef6abd4646843ebee735191},
}

@Article{Molina2013,
  author        = {Molina, A.I. and Gallardo, J. and Redondo, M.A. and Ortega, M. and Giraldo, W.J.},
  title         = {Metamodel-driven definition of a visual modeling language for specifying interactive groupware applications: An empirical study},
  journal       = {Journal of Systems and Software},
  year          = {2013},
  volume        = {86},
  number        = {7},
  pages         = {1772-1789},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.jss.2012.07.049},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879921378&partnerID=40&md5=31ac65068f28cd9becc8ee2f970e2794},
}

@Article{Mohagheghi2013619,
  author        = {Mohagheghi, P. and Gilani, W. and Stefanescu, A. and Fernandez, M.A. and Nordmoen, B. and Fritzsche, M.},
  title         = {Where does model-driven engineering help? Experiences from three industrial cases},
  journal       = {Software and Systems Modeling},
  year          = {2013},
  volume        = {12},
  number        = {3},
  pages         = {619-639},
  note          = {cited By 12},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-011-0219-7},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879712753&partnerID=40&md5=93ff93700372dbe91f42017f7b443279},
}

@Book{Kahlaoui2013230,
  title         = {Demystifying domain specific languages},
  year          = {2013},
  author        = {Kahlaoui, A. and Abran, A.},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-4217-1.ch009},
  groups        = {Scopus, Duplicados},
  journal       = {Progressions and Innovations in Model-Driven Software Engineering},
  keywords      = {rank3},
  pages         = {230-251},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84944878280&partnerID=40&md5=c86ec4fc0684ebd6f588fee34ed9e35a},
}

@Book{Barbier2013181,
  title         = {CMF: A crop model factory to improve scientific models development process},
  year          = {2013},
  author        = {Barbier, G. and Cucchi, V. and Pinet, F. and Hill, D.R.C.},
  note          = {cited By 1},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-4217-1.ch006},
  groups        = {Scopus,, excluidos},
  journal       = {Progressions and Innovations in Model-Driven Software Engineering},
  pages         = {181-195},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84939576082&partnerID=40&md5=c22ddd2f2c82700b19aa0dc1e4298284},
}

@Article{Perrone201395,
  author        = {Perrone, G. and Debois, S. and Hildebrandt, T.T.},
  title         = {A verification environment for bigraphs},
  journal       = {Innovations in Systems and Software Engineering},
  year          = {2013},
  volume        = {9},
  number        = {2},
  pages         = {95-104},
  note          = {cited By 5},
  document_type = {Article},
  doi           = {10.1007/s11334-013-0210-2},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878406868&partnerID=40&md5=d6110566a60e50a5d637cd1477c9db37},
}

@Article{Acher2013,
  author        = {Acher, M. and Collet, P. and Lahire, P. and France, R.B.},
  title         = {FAMILIAR: A domain-specific language for large scale management of feature models},
  journal       = {Science of Computer Programming},
  year          = {2013},
  volume        = {78},
  number        = {6},
  pages         = {657-681},
  note          = {cited By 39},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.scico.2012.12.004},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875729938&partnerID=40&md5=022b272cc23e29c8097a00646802ead0},
}

@Article{Dinkelaker2013,
  author        = {Dinkelaker, T. and Eichberg, M. and Mezini, M.},
  title         = {Incremental concrete syntax for embedded languages with support for separate compilation},
  journal       = {Science of Computer Programming},
  year          = {2013},
  volume        = {78},
  number        = {6},
  pages         = {615-632},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.scico.2012.12.002},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875725110&partnerID=40&md5=06310c55d1c84a41ff7cd4712398c111},
}

@Article{Guha2013,
  author        = {Guha, A. and Reitblatt, M. and Foster, N.},
  title         = {Machine-verified network controllers},
  journal       = {ACM SIGPLAN Notices},
  year          = {2013},
  volume        = {48},
  number        = {6},
  pages         = {483-494},
  note          = {cited By 11},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2499370.2462178},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84880119818&partnerID=40&md5=8a44a1fb399e0d80e9aa7edc116a5e0b},
}

@Conference{Marek2013429,
  author        = {Marek, L. and Zheng, Y. and Ansaloni, D. and Bulej, L. and Sarimbekov, A. and Binder, W. and Qi, Z.},
  title         = {Introduction to dynamic program analysis with DiSL},
  year          = {2013},
  pages         = {429-430},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2479871.2479940},
  groups        = {ACM, Duplicados},
  journal       = {ICPE 2013 - Proceedings of the 2013 ACM/SPEC International Conference on Performance Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878194047&partnerID=40&md5=0342052e83c1799070ef0a4b3473e055},
}

@Conference{Brataas2013335,
  author        = {Brataas, G. and Stav, E. and Lehrig, S. and Becker, S. and Kopčak, G. and Huljenic, D.},
  title         = {CloudScale: Scalability management for cloud systems},
  year          = {2013},
  pages         = {335-338},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1145/2479871.2479920},
  groups        = {Scopus,, excluidos},
  journal       = {ICPE 2013 - Proceedings of the 2013 ACM/SPEC International Conference on Performance Engineering},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878201490&partnerID=40&md5=6daf423c158fa52f35c5e9621bfd4f80},
}

@Conference{Campos2013149,
  author        = {Campos, E. and Freire, M. and Kulesza, U. and Bezerra, A. and Aranha, E.},
  title         = {Composition of domain specific modeling languages: An exploratory study},
  year          = {2013},
  pages         = {149-156},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878069607&partnerID=40&md5=2262612935b0b99509cc194db867eb4f},
}

@Conference{2013b,
  title         = {MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development},
  year          = {2013},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  journal       = {MODELSWARD 2013 - Proceedings of the 1st International Conference on Model-Driven Engineering and Software Development},
  keywords      = {rank5},
  page_count    = {373},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878092023&partnerID=40&md5=7622df767d7259992c8a75bca5a8508d},
}

@Conference{Wouters20131145,
  author        = {Wouters, L. and Gervais, M.-P.},
  title         = {Notation-driven vs metamodel-driven development of domain-specific modeling languages: An empirical study},
  year          = {2013},
  pages         = {1145-1146},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2480362.2480576},
  groups        = {Scopus, Inclusos},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877965650&partnerID=40&md5=1e2be584e3835ab0837a233a0565122a},
}

@Conference{Araújo20131246,
  author        = {Araújo, J. and Goulão, M. and Moreira, A. and Simão, I. and Amaral, V. and Baniassad, E.},
  title         = {Advanced modularity for building SPL feature models: A model-driven approach},
  year          = {2013},
  pages         = {1246-1253},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2480362.2480596},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877993149&partnerID=40&md5=5300b8f9dbe554ff470ef49206e1e307},
}

@Conference{LimaNeto2013252,
  author        = {Lima Neto, C.R. and Garcia, V.C.},
  title         = {Cloud testing framework},
  year          = {2013},
  pages         = {252-255},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2460999.2461037},
  groups        = {Scopus,, excluidos},
  journal       = {ACM International Conference Proceeding Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877281642&partnerID=40&md5=71789631f6c5134ab2b7550ae5d136cd},
}

@Article{Díaz2013,
  author        = {Díaz, O. and Arellano, C.B. and Azanza, M.},
  title         = {A language for end-user Web augmentation: Caring for producers and consumers alike},
  journal       = {ACM Transactions on the Web},
  year          = {2013},
  volume        = {7},
  number        = {2},
  note          = {cited By 8},
  __markedentry = {[Neto:5]},
  art_number    = {9},
  document_type = {Article},
  doi           = {10.1145/2460383.2460388},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879994457&partnerID=40&md5=812d606abcb0fd221147f821fd29e74a},
}

@Conference{Yamashita201337,
  author        = {Yamashita, K.},
  title         = {Modular construction of an analysis tool for mining software repositories},
  year          = {2013},
  pages         = {37-38},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2457392.2457409},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {AOSD 2013 Companion - Proceedings of the 2013 ACM on Aspect-Oriented Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875975038&partnerID=40&md5=d1ba7b0b93361d2e61ed75b305c16d0f},
}

@Conference{Bockisch20137,
  author        = {Bockisch, C. and Sewe, A.},
  title         = {Efficient language implementation with ALIA4J and EMFText forum demonstration},
  year          = {2013},
  pages         = {7-10},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2457392.2457398},
  groups        = {Scopus, Duplicados},
  journal       = {AOSD 2013 Companion - Proceedings of the 2013 ACM on Aspect-Oriented Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876000970&partnerID=40&md5=b6be3fcc80aa476b1d46c920f5487f4e},
}

@Conference{Cherrueau201313,
  author        = {Cherrueau, R.-A. and Chebaro, O. and Südholt, M.},
  title         = {Flexible aspect-based service adaptation for accountability properties in the cloud},
  year          = {2013},
  pages         = {13-17},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2451617.2451621},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {VariComp 2013 - Proceedings of the 4th International Workshop on Variability and Composition},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875987333&partnerID=40&md5=ed2a8a4fe3a5dc0ac567fc238bb3b2c3},
}

@Article{Regnell2013112,
  author        = {Regnell, B.},
  title         = {reqT.org - Towards a semi-formal, open and scalable requirements modeling tool},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7830 LNCS},
  pages         = {112-118},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-37422-7_8},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875863502&partnerID=40&md5=6fbca64715e1e417cb49438b8c7463d3},
}

@Conference{Hawick2013752,
  author        = {Hawick, K.A.},
  title         = {Fluent interfaces to a java-based internal domain-specific languages for graph generation and analysis},
  year          = {2013},
  pages         = {752-759},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.2316/P.2013.796-040},
  groups        = {Scopus, Inclusos},
  journal       = {IASTED Multiconferences - Proceedings of the IASTED International Conference on Software Engineering, SE 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875530991&partnerID=40&md5=1915bd473b7ec443e64f06cda2beaf7f},
}

@Article{Coutinho2013226,
  author        = {Coutinho, J.G.F. and Cardoso, J.M.P. and Carvalho, T. and Nobre, R. and Bhattacharya, S. and Diniz, P.C. and Fitzpatrick, L. and Nane, R.},
  title         = {Deriving resource efficient designs using the REFLECT aspect-oriented approach (extended abstract)},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7806 LNCS},
  pages         = {226-228},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36812-7_29},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875524173&partnerID=40&md5=8b191a05057b8479bff2888e5b1232b1},
}

@Article{Efftinge2013112,
  author        = {Efftinge, S. and Eysholdt, M. and Köhnlein, J. and Zarnekow, S. and Hasselbring, W. and Von Massow, R. and Hanus, M.},
  title         = {Xbase: Implementing domain-specific languages for Java},
  journal       = {ACM SIGPLAN Notices},
  year          = {2013},
  volume        = {48},
  number        = {3},
  pages         = {112-121},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2480361.2371419},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877917288&partnerID=40&md5=71c1bdd0b4783e71a1db8b772dbcd6dd},
}

@Article{Bollati2013,
  author        = {Bollati, V.A. and Vara, J.M. and Jiménez, Á. and Marcos, E.},
  title         = {Applying MDE to the (semi-)automatic development of model transformations},
  journal       = {Information and Software Technology},
  year          = {2013},
  volume        = {55},
  number        = {4},
  pages         = {699-718},
  note          = {cited By 18},
  document_type = {Conference Paper},
  doi           = {10.1016/j.infsof.2012.11.004},
  groups        = {ScienceDirect,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875216423&partnerID=40&md5=96c83ab5dd4d81c667c59e463d9ce47b},
}

@Article{Klann2013a,
  author        = {Klann, J.G. and Murphy, S.N.},
  title         = {Computing health quality measures using informatics for integrating biology and the bedside},
  journal       = {Journal of Medical Internet Research},
  year          = {2013},
  volume        = {15},
  number        = {4},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.2196/jmir.2493},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877350052&partnerID=40&md5=fa68bcddeb7f94119527812d6746a5af},
}

@Article{Höver201372,
  author        = {Höver, K.M. and Borgert, S. and Mühlhäuser, M.},
  title         = {A domain specific language for describing S-BPM processes},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {360 CCIS},
  pages         = {72-90},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36754-0_5},
  groups        = {Compendex,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874807314&partnerID=40&md5=9eda30bf751c9f9554ab1b4eb0b558f2},
}

@Article{Lamo20133,
  author        = {Lamo, Y. and Wang, X. and Mantz, F. and Bech, Ø. and Sandven, A. and Rutle, A.},
  title         = {DPF workbench: A multi-level language workbench for MDE [DPF-tööriistakast: Mitmetasandilised keeleprotsessorid mudel-orienteeritud projekteerimiseks]},
  journal       = {Proceedings of the Estonian Academy of Sciences},
  year          = {2013},
  volume        = {62},
  number        = {1},
  pages         = {3-15},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.3176/proc.2013.1.02},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874248418&partnerID=40&md5=39cca7b6ba5c9d9356d56d8f4d02f467},
}

@Article{Berg2013160,
  author        = {Berg, H. and Møller-Pedersen, B.},
  title         = {Type-safe symmetric composition of metamodels using templates},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7744 LNCS},
  pages         = {160-178},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36757-1_10},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874174876&partnerID=40&md5=0a332c2bb8b6b8a3163be27839ce50ae},
}

@Article{Gutíerrez201338,
  author        = {Gutíerrez, M.A. and Romero-Garćes, A. and Bustos, P. and Mart́inez, J.},
  title         = {Progress in RoboComp},
  journal       = {Journal of Physical Agents},
  year          = {2013},
  volume        = {7},
  number        = {1},
  pages         = {38-47},
  note          = {cited By 3},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873936206&partnerID=40&md5=4bb7c528f2eb9bbb4f1d147e466d672c},
}

@Conference{Sulzmann201371,
  author        = {Sulzmann, M. and Nicklisch-Franken, J. and Zechner, A.},
  title         = {Traceability and evidence of correctness of EDSL abstractions},
  year          = {2013},
  pages         = {71-74},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2426890.2426904},
  groups        = {ACM, Duplicados},
  journal       = {PEPM 2013 - Proceedings of the ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation, Co-located with POPL 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873446570&partnerID=40&md5=bd8794c8be69efdb7bab31e6af762380},
}

@Article{Bettini2013392,
  author        = {Bettini, L. and Stoll, D. and Völter, M. and Colameo, S.},
  title         = {Approaches and tools for implementing type systems in xtext},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7745 LNCS},
  pages         = {392-412},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36089-3_22},
  groups        = {Scopus, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872727139&partnerID=40&md5=7c2400a9cc05d31926fdea3fb644f6d2},
}

@Article{Combemale2013184,
  author        = {Combemale, B. and Hardebolle, C. and Jacquet, C. and Boulanger, F. and Baudry, B.},
  title         = {Bridging the chasm between executable metamodeling and models of computation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7745 LNCS},
  pages         = {184-203},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36089-3_11},
  groups        = {Scopus, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872727850&partnerID=40&md5=4c15b382cc74f16037c6842f73bf41df},
}

@Article{Durán2013332,
  author        = {Durán, F. and Zschaler, S. and Troya, J.},
  title         = {On the reusable specification of non-functional properties in DSLs},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {7745 LNCS},
  pages         = {332-351},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-36089-3_19},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872729102&partnerID=40&md5=ba911aa63e95c0c470c7efd61a91784e},
}

@Article{Djeddai2013131,
  author        = {Djeddai, S. and Mezghiche, M. and Strecker, M.},
  title         = {Combining verification and MDE illustrated by a formal java development},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {347 CCIS},
  pages         = {131-148},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35737-4-8},
  groups        = {Scopus, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872374026&partnerID=40&md5=3dffe4f26a891ee950a75d86c55899cb},
}

@Article{Lavrischeva2013212,
  author        = {Lavrischeva, E. and Ostrovski, A.},
  title         = {General disciplines and tools for E-learning software engineering},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {347 CCIS},
  pages         = {212-229},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35737-4-13},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872425602&partnerID=40&md5=cdc925472596d813c7c6f6bb8ba18c5f},
}

@Conference{Roth201351,
  author        = {Roth, B. and Jahn, M. and Jablonski, S.},
  title         = {On the way of bottom-up designing textual domain-specific modelling languages},
  year          = {2013},
  pages         = {51-55},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2541928.2541938},
  groups        = {Compendex, Duplicados},
  journal       = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892927957&partnerID=40&md5=bf80c86c7d072bb49714c2140f0ebdee},
}

@Conference{Wegeler20137,
  author        = {Wegeler, T. and Gutzeit, F. and Destailleur, A. and Dock, B.},
  title         = {Evaluating the benefits of using domain-specific modeling languages - An experience report},
  year          = {2013},
  pages         = {7-12},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2541928.2541930},
  groups        = {Scopus, Duplicados},
  journal       = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892927729&partnerID=40&md5=1544be56814d498b8177232f4e2032bd},
}

@Conference{Viana201389,
  author        = {Viana, M. and Penteado, R. and Do Prado, A. and Durelli, R.},
  title         = {F3T: From features to frameworks tool},
  year          = {2013},
  pages         = {89-98},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6800185},
  document_type = {Conference Paper},
  doi           = {10.1109/SBES.2013.15},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - 2013 27th Brazilian Symposium on Software Engineering, SBES 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900335129&partnerID=40&md5=b8fe2c676e609a1cb82d5a2345b3fc94},
}

@Conference{2013c,
  title         = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  year          = {2013},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  keywords      = {rank5},
  page_count    = {67},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897368892&partnerID=40&md5=0f4da033a2f7e5cdfd03a4c7004a93bd},
}

@Conference{Kelly201333,
  author        = {Kelly, S.},
  title         = {Empirical comparison of language workbenches},
  year          = {2013},
  pages         = {33-38},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1145/2541928.2541935},
  groups        = {Compendex, Inclusos},
  journal       = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892904069&partnerID=40&md5=0eac32a1db121355f1c7b57ef3217c20},
}

@Conference{Hiya201331,
  author        = {Hiya, S. and Hisazumi, K. and Fukuda, A. and Nakanishi, T.},
  title         = {Clooca : Web based tool for domain specific modeling},
  year          = {2013},
  volume        = {1115},
  pages         = {31-35},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921904982&partnerID=40&md5=d41c83c11632a0fb74e2611c8e522a52},
}

@Conference{VanBroeckhoven2013,
  author        = {Van Broeckhoven, F. and De Troyer, O.},
  title         = {ATTAC-L: A modeling language for educational virtual scenarios in the context of preventing cyber bullying},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6665300},
  document_type = {Conference Paper},
  doi           = {10.1109/SeGAH.2013.6665300},
  groups        = {IEEE, Duplicados},
  journal       = {SeGAH 2013 - IEEE 2nd International Conference on Serious Games and Applications for Health, Book of Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893503958&partnerID=40&md5=853b7897d64b646e0798ab90cb49384d},
}

@Article{deLara2013429,
  author        = {de Lara, J. and Guerra, E. and Cuadrado, J.S.},
  title         = {Model-driven engineering with domain-specific meta-modelling languages},
  journal       = {Software and Systems Modeling},
  year          = {2013},
  volume        = {14},
  number        = {1},
  pages         = {429-459},
  note          = {cited By 6},
  document_type = {Article},
  doi           = {10.1007/s10270-013-0367-z},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922338022&partnerID=40&md5=9221fd227d2d94dfe78e3aadba90057d},
}

@Conference{Lorenz201383,
  author        = {Lorenz, D.H. and Rosenan, B.},
  title         = {Source code management for projectional editing},
  year          = {2013},
  pages         = {83-84},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2508075.2508092},
  groups        = {Scopus, excluidos},
  journal       = {SPLASH 2013 - Proceedings of the 2013 Companion Publication for Conference on Systems, Programming, and Applications: Software for Humanity},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84888176027&partnerID=40&md5=f220adaec2ccd47a7ccbbce4a1627062},
}

@Conference{Athanasiadis201327,
  author        = {Athanasiadis, I.N. and Villa, F.},
  title         = {A roadmap to domain specific programming languages for environmental modeling: Key requirements and concepts},
  year          = {2013},
  pages         = {27-32},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2541928.2541934},
  groups        = {ACM, Duplicados},
  journal       = {DSM 2013 - Proceedings of the 2013 ACM Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892934368&partnerID=40&md5=7ef4f5a1de4067b4704c8f173d701bb2},
}

@Article{Iacovella20131,
  author        = {Iacovella, C.R. and Varga, G. and Sallai, J. and Mukherjee, S. and Ledeczi, A. and Cummings, P.T.},
  title         = {A model-integrated computing approach to nanomaterials simulation},
  journal       = {Theoretical Chemistry Accounts},
  year          = {2013},
  volume        = {132},
  number        = {1},
  pages         = {1-9},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1007/s00214-012-1315-7},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870608616&partnerID=40&md5=fb2977b81ed37ad3bf1876f0c65a6eeb},
}

@Conference{Senbalci2013116,
  author        = {Senbalci, C. and Altuntas, S. and Bozkus, Z. and Arsan, T.},
  title         = {Big data platform development with a domain specific language for telecom industries},
  year          = {2013},
  pages         = {116-120},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6729768},
  document_type = {Conference Paper},
  doi           = {10.1109/HONET.2013.6729768},
  groups        = {IEEE, Duplicados},
  journal       = {2013 High Capacity Optical Networks and Emerging/Enabling Technologies, HONET-CNS 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894499703&partnerID=40&md5=86aa7735a7da4c11108ede59b5befc0c},
}

@Conference{Farwick2013305,
  author        = {Farwick, M. and Trojer, T. and Breu, M. and Ginther, S. and Kleinlercher, J. and Doblander, A.},
  title         = {A case study on textual enterprise architecture modeling},
  year          = {2013},
  pages         = {305-309},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6690566},
  document_type = {Conference Paper},
  doi           = {10.1109/EDOCW.2013.40},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893515244&partnerID=40&md5=8a69deab18da13b22d9b53584c42b983},
}

@Conference{Tikhonova201341,
  author        = {Tikhonova, U. and Manders, M. and Van Den Brand, M. and Andova, S. and Verhoeff, T.},
  title         = {Applying model transformation and event-B for specifying an industrial DSL},
  year          = {2013},
  volume        = {1069},
  pages         = {41-50},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, Inclusos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924366864&partnerID=40&md5=9378976f1f721cfac6201eb55693192e},
}

@Conference{Barišić2013100,
  author        = {Barišić, A.},
  title         = {Iterative evaluation of domain-specific languages},
  year          = {2013},
  volume        = {1115},
  pages         = {100-105},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84921908002&partnerID=40&md5=53dc957efa2b982369336afbd020caf3},
}

@Article{Griebler2013105,
  author        = {Griebler, D. and Fernandes, L.G.},
  title         = {Towards a domain-specific language for patterns-oriented parallel programming},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2013},
  volume        = {8129 LNCS},
  pages         = {105-119},
  note          = {cited By 5},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-40922-6_8},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84887453277&partnerID=40&md5=133c1343bdc6d9a6e88335033af83da3},
}

@Book{Clark2013187,
  title         = {Domain engineering for software tools},
  year          = {2013},
  author        = {Clark, T. and Barn, B.S.},
  note          = {cited By 2},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-642-36654-3_8},
  groups        = {Scopus, excluidos},
  journal       = {Domain Engineering: Product Lines, Languages, and Conceptual Models},
  pages         = {187-209},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84956558285&partnerID=40&md5=3d2cdacc560e6d0ea1e8d430c2ceae52},
}

@Article{Groenewegen201335,
  author        = {Groenewegen, D.M. and Visser, E.},
  title         = {Integration of data validation and user interface concerns in a DSL for web applications},
  journal       = {Software and Systems Modeling},
  year          = {2013},
  volume        = {12},
  number        = {1},
  pages         = {35-52},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-010-0173-9},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874192309&partnerID=40&md5=b8ea44f2cf79b25ad21c223aac79bd5e},
}

@Conference{Arendt20131,
  author        = {Arendt, T. and Taentzer, G. and Weber, A.},
  title         = {Quality assurance of textual models within eclipse using OCL and model transformations},
  year          = {2013},
  volume        = {1092},
  pages         = {1-10},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924744874&partnerID=40&md5=47b645c2a0cc5c17fda2d4303d34f744},
}

@Conference{Krämer2013673,
  author        = {Krämer, M. and Ludlow, D. and Khan, Z.},
  title         = {Domain-specific languages for agile urban policy modelling},
  year          = {2013},
  pages         = {673-680},
  note          = {cited By 4},
  document_type = {Conference Paper},
  groups        = {Scopus, Inclusos},
  journal       = {Proceedings - 27th European Conference on Modelling and Simulation, ECMS 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84900298988&partnerID=40&md5=23aa82edb07070e8bda4fcc37218ab4a},
}

@Conference{Falkner2013,
  author        = {Falkner, K. and Chiprianov, V. and Falkner, N. and Szabo, C. and Puddy, G.},
  title         = {Modeling scenarios for the performance prediction of distributed real-time embedded systems},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6694495},
  document_type = {Conference Paper},
  doi           = {10.1109/MilCIS.2013.6694495},
  groups        = {Scopus, Duplicados},
  journal       = {2013 Military Communications and Information Systems Conference, MilCIS 2013 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893550461&partnerID=40&md5=e686c214e0ce819ec0566f71be769c2b},
}

@Article{Selim2013365,
  author        = {Selim, G.M.K. and Wang, S. and Cordy, J.R. and Dingel, J.},
  title         = {Model transformations for migrating legacy deployment models in the automotive industry},
  journal       = {Software and Systems Modeling},
  year          = {2013},
  volume        = {14},
  number        = {1},
  pages         = {365-381},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-013-0365-1},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922338189&partnerID=40&md5=420a75f1a937223c2030bc4f93c561b2},
}

@Conference{Ostermayer2013198,
  author        = {Ostermayer, L. and Sun, G. and Seipel, D.},
  title         = {Simplifying the development of rules using domain specific languages in DROOLS},
  year          = {2013},
  number        = {1306 REPORT NO.},
  pages         = {198-212},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {Technische Berichte des Instituts fur Informatik der Christian-Albrechts-Universitat zu Kiel},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84896623233&partnerID=40&md5=92ce55af8ca416b05b57308daaf99160},
}

@Conference{VanGijzel201393,
  author        = {Van Gijzel, B. and Nilsson, H.},
  title         = {Towards a framework for the implementation and verification of translations between argumentation models},
  year          = {2013},
  pages         = {93-103},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84910138595&partnerID=40&md5=f33648609013a518f4930da46f5f4b9f},
}

@Conference{Georg201363,
  author        = {Georg, G. and Troup, L.},
  title         = {Experiences developing a requirements language based on the psychological framework activity theory},
  year          = {2013},
  volume        = {1092},
  pages         = {63-72},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924706880&partnerID=40&md5=980fa7abd233b53b076c32a97bfaed5a},
}

@Article{Jia201336,
  author        = {Jia, X. and Jones, C.},
  title         = {Cross-Platform Application Development Using AXIOM as an Agile Model-Driven Approach},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {411 CCIS},
  pages         = {36-51},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-45404-2_3},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904738679&partnerID=40&md5=392f2022dd1e112432c3e3de86ae36cb},
}

@Conference{Bouabana-Tebibel2013217,
  author        = {Bouabana-Tebibel, T. and Rubin, S.H. and Habib, K. and Mellah, S. and Allata, L.},
  title         = {A component-based language specific to complex systems modeling},
  year          = {2013},
  pages         = {217-224},
  note          = {cited By 0},
  art_number    = {6642475},
  document_type = {Conference Paper},
  doi           = {10.1109/IRI.2013.6642475},
  groups        = {IEEE, Inclusos},
  journal       = {Proceedings of the 2013 IEEE 14th International Conference on Information Reuse and Integration, IEEE IRI 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891106867&partnerID=40&md5=cf41a0a66bc150651c3f00cfcb2b5420},
}

@Article{Yannopoulos201322,
  author        = {Yannopoulos, A. and Christodoulou, Y. and Bountris, E. and Savrami, K. and Douza, M.},
  title         = {Metadata, Domain Specific Languages and Visualisations as Internal Artifacts Driving an Agile Knowledge Engineering Methodology},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {390 CCIS},
  pages         = {22-34},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-319-03437-9_4},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904634769&partnerID=40&md5=0845f7d1448de70a26f4957ccc7b1089},
}

@Conference{Monahov2013337,
  author        = {Monahov, I. and Reschenhofer, T. and Matthes, F.},
  title         = {Design and prototypical implementation of a language empowering business users to define key performance indicators for enterprise architecture management},
  year          = {2013},
  pages         = {337-346},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6690570},
  document_type = {Conference Paper},
  doi           = {10.1109/EDOCW.2013.44},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893439616&partnerID=40&md5=029635409b0befad79268bc6c63ad096},
}

@Conference{Pramudianto2013703,
  author        = {Pramudianto, F. and Indra, I.R. and Jarke, M.},
  title         = {Model driven development for internet of things application prototyping},
  year          = {2013},
  volume        = {2013-January},
  number        = {January},
  pages         = {703-708},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the International Conference on Software Engineering and Knowledge Engineering, SEKE},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84937677098&partnerID=40&md5=cfe72eff4bb2824518922aa1a88ed160},
}

@Conference{Tyugu2013,
  author        = {Tyugu, E. and Grigorenko, P.},
  title         = {Components in model-based software development},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6710367},
  document_type = {Conference Paper},
  doi           = {10.1109/CSITechnol.2013.6710367},
  groups        = {IEEE, Duplicados},
  journal       = {CSIT 2013 - 9th International Conference on Computer Science and Information Technologies, Revised Selected Papers},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893929559&partnerID=40&md5=8c537963ef9538abddaa17707b0d23e4},
}

@Conference{Santiago201343,
  author        = {Santiago, D. and Cando, A. and Mack, C. and Nunez, G. and Thomas, T. and King, T.M.},
  title         = {Towards domain-specific testing languages for software-as-a-service},
  year          = {2013},
  volume        = {1118},
  pages         = {43-52},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, Duvida},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922890948&partnerID=40&md5=918270426669519e32054dc156b762c8},
}

@Conference{McCabe201389,
  author        = {McCabe, F. and Sperber, M.},
  title         = {Feel different on the Java platform: The star programming language},
  year          = {2013},
  pages         = {89-100},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2500828.2500837},
  groups        = {ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886446689&partnerID=40&md5=3dce3318fe42e7b552eb46ca6a877292},
}

@Conference{Lethrech2013,
  author        = {Lethrech, M. and Elmagrouni, I. and Nassar, M. and Kriouile, A. and Kenzi, A.},
  title         = {A generic metamodel for adaptable service oriented systems modeling using DSM approach},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6728120},
  document_type = {Conference Paper},
  doi           = {10.1109/ISKO-Maghreb.2013.6728120},
  groups        = {IEEE, Duplicados},
  journal       = {2013 3rd International Symposium ISKO-Maghreb},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84894115518&partnerID=40&md5=2e1d96341fb30a18cdc669b3c9cff402},
}

@Conference{Demuth201314,
  author        = {Demuth, A. and Lopez-Herrejon, R.E. and Egyed, A.},
  title         = {Co-evolution of metamodels and models through consistent change propagation},
  year          = {2013},
  volume        = {1090},
  pages         = {14-21},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923691306&partnerID=40&md5=00911383013374eb34a8e6a762364ba0},
}

@Conference{Arkin201363,
  author        = {Arkin, E. and Tekinerdogan, B.},
  title         = {Model-driven transformations for mapping parallel algorithms on parallel computing platforms},
  year          = {2013},
  volume        = {1118},
  pages         = {63-72},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922853619&partnerID=40&md5=4daddbf639c5a010277e27c19cf7ef7a},
}

@Conference{Urban2013177,
  author        = {Urban, B. and Steinlechner, H.},
  title         = {Case study: Implementing a Java JIT compiler in Haskell},
  year          = {2013},
  pages         = {177-180},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2500828.2500849},
  groups        = {Scopus,, excluidos},
  journal       = {ACM International Conference Proceeding Series},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886437379&partnerID=40&md5=3451c4340ce3f89a0e9562dd4e63e442},
}

@Conference{Gratien2013157,
  author        = {Gratien, J.-M.},
  title         = {Implementing lowest-order methods for diffusive problems with a DSEL},
  year          = {2013},
  volume        = {28},
  pages         = {157-178},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-1-4614-5055-9_10},
  groups        = {Scopus, excluidos},
  journal       = {Springer Proceedings in Mathematics and Statistics},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883319381&partnerID=40&md5=ed198eb89d84b82317f67dd55493f0c6},
}

@Conference{Widemann2013171,
  author        = {Widemann, B.T. and Lepper, M.},
  title         = {Paisley: A pattern matching library for arbitrary object models},
  year          = {2013},
  volume        = {P-215},
  pages         = {171-186},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84907308375&partnerID=40&md5=fd119cfc5dc78e976037da15f202aaef},
}

@Conference{Edwards2013144,
  author        = {Edwards, C. and Gruner, S.},
  title         = {A new tool for URDAD to Java EE EJB transformations'},
  year          = {2013},
  pages         = {144-153},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2513456.2513459},
  groups        = {Compendex, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84886295662&partnerID=40&md5=b439d257de8606ffff9e943c5fbd8910},
}

@Conference{Hofrichter201333,
  author        = {Hofrichter, O. and Gogolla, M. and Sohr, K.},
  title         = {UML/OCL based design and analysis of role-based access control policies},
  year          = {2013},
  volume        = {1102},
  pages         = {33-42},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922914373&partnerID=40&md5=9f1c4002bc15b75d52b1d7da7f0af1a4},
}

@Article{David2013,
  author        = {David, O. and Ascough, J.C. and Lloyd, W. and Green, T.R. and Rojas, K.W. and Leavesley, G.H. and Ahuja, L.R.},
  title         = {A software engineering perspective on environmental modeling framework design: The Object Modeling System},
  journal       = {Environmental Modelling and Software},
  year          = {2013},
  volume        = {39},
  pages         = {201-213},
  note          = {cited By 56},
  document_type = {Article},
  doi           = {10.1016/j.envsoft.2012.03.006},
  groups        = {ScienceDirect, ACM, Compendex,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870298278&partnerID=40&md5=79071d4d998422e8c98e53f3a35f2de9},
}

@Conference{Mayer20135,
  author        = {Mayer, P. and Schroeder, A.},
  title         = {Towards automated cross-language refactorings between Java and DSLs used by Java frameworks},
  year          = {2013},
  pages         = {5-8},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2541348.2541350},
  groups        = {ACM, Duplicados},
  journal       = {WRT 2013 - Proceedings of the 2013 ACM Workshop on Refactoring Tools},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892910987&partnerID=40&md5=9e85bc6a36268a880435dd9740dfa8c3},
}

@Conference{Zhang201321,
  author        = {Zhang, X. and Broenink, J.F.},
  title         = {A concurrent design approach and model management support to prevent inconsistencies in multidisciplinary modelling and simulation},
  year          = {2013},
  pages         = {21-28},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {19th European Concurrent Engineering Conference 2013, ECEC 2013 - 9th Future Business Technology Conference, FUBUTEC 2013},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922419287&partnerID=40&md5=0273985901b000487f477891e8875afd},
}

@Conference{Miloš201395,
  author        = {Miloš, S. and Budimac, Z. and Rakić, G. and Ivanović, M. and Heričko, M.},
  title         = {SSQSA ontology metrics front-end},
  year          = {2013},
  volume        = {1053},
  pages         = {95-101},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84924376145&partnerID=40&md5=d7c5fb87c9ded24fb7792a09e4ce6ef8},
}

@Article{Sprogis2013330,
  author        = {Sprogis, A. and Barzdins, J.},
  title         = {Specification, configuration and implementation of DSL tool},
  journal       = {Frontiers in Artificial Intelligence and Applications},
  year          = {2013},
  volume        = {249},
  pages         = {330-343},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.3233/978-1-61499-161-8-330},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873583817&partnerID=40&md5=540242e790b0e1d0f7747c0102c9d510},
}

@Conference{Silva2013520,
  author        = {Silva, R. and Mota, A. and Starr, R.R.},
  title         = {Creating GUI-based DSL formal tools},
  year          = {2013},
  pages         = {520-527},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6642514},
  document_type = {Conference Paper},
  doi           = {10.1109/IRI.2013.6642514},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings of the 2013 IEEE 14th International Conference on Information Reuse and Integration, IEEE IRI 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84891126631&partnerID=40&md5=c0c7296e2d20b6444444877716162546},
}

@Conference{Gurrola2013,
  author        = {Gurrola, E. and McGarry, M.P. and Luo, Y. and Cheng, N.},
  title         = {Downstream ONU buffer modeling for fiber to the drop point},
  year          = {2013},
  note          = {cited By 4},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Asia Communications and Photonics Conference, ACP},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84942368634&partnerID=40&md5=6fd048a6c435be5f5bf8a04b84322f86},
}

@Conference{Zhang2013485,
  author        = {Zhang, W. and Møller-Pedersen, B.},
  title         = {Tool integration models},
  year          = {2013},
  volume        = {1},
  pages         = {485-494},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6805441},
  document_type = {Conference Paper},
  doi           = {10.1109/APSEC.2013.70},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84936863586&partnerID=40&md5=710eab4562a74712f3cedf0d33cc70b3},
}

@Conference{Vallejo201380,
  author        = {Vallejo, P. and Kerboeuf, M. and Babau, J.-P.},
  title         = {Specification of a legacy tool by means of a dependency graph to improve its reusability},
  year          = {2013},
  volume        = {1090},
  pages         = {80-87},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923683268&partnerID=40&md5=e78eb96d68e87b5aae4decf146f69bfd},
}

@Conference{Wasserman201325,
  author        = {Wasserman, L.},
  title         = {Scalable, example-based refactorings with Refaster},
  year          = {2013},
  pages         = {25-28},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2541348.2541355},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {WRT 2013 - Proceedings of the 2013 ACM Workshop on Refactoring Tools},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892927448&partnerID=40&md5=b4e25109759c630337c139af2b6517f2},
}

@Conference{Milosavljevic2013235,
  author        = {Milosavljevic, G. and Filipovic, M. and Marsenic, V. and Pejakovic, D. and Dejanovic, I.},
  title         = {Kroki: A mockup-based tool for participatory development of business applications},
  year          = {2013},
  pages         = {235-242},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6645668},
  document_type = {Conference Paper},
  doi           = {10.1109/SoMeT.2013.6645668},
  groups        = {Compendex, Duplicados},
  journal       = {SoMeT 2013 - 12th IEEE International Conference on Intelligent Software Methodologies, Tools and Techniques, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898614198&partnerID=40&md5=adf5a8de88d65c16776205e92a4375b0},
}

@Conference{Trninic2013217,
  author        = {Trninic, B. and Sladic, G. and Milosavljevic, G. and Milosavljevic, B. and Konjovic, Z.},
  title         = {PolicyDSL: Towards generic access control management based on a policy metamodel},
  year          = {2013},
  pages         = {217-223},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6645665},
  document_type = {Conference Paper},
  doi           = {10.1109/SoMeT.2013.6645665},
  groups        = {Scopus, Duplicados},
  journal       = {SoMeT 2013 - 12th IEEE International Conference on Intelligent Software Methodologies, Tools and Techniques, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898605190&partnerID=40&md5=baff1fa674c634daf40cbbbd3d0f8597},
}

@Book{Koshima2013239,
  title         = {A reconciliation framework to support cooperative work with DSM},
  year          = {2013},
  author        = {Koshima, A.A. and Englebert, V. and Thiran, P.},
  note          = {cited By 3},
  document_type = {Book Chapter},
  doi           = {10.1007/978-3-642-36654-3_10},
  groups        = {Scopus,, excluidos},
  journal       = {Domain Engineering: Product Lines, Languages, and Conceptual Models},
  pages         = {239-259},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84906910699&partnerID=40&md5=7007e62ebd30fa6bbf5f4320cf4e8c26},
}

@Conference{2013d,
  title         = {2013 1st International Workshop on Live Programming, LIVE 2013 - Proceedings},
  year          = {2013},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {2013 1st International Workshop on Live Programming, LIVE 2013 - Proceedings},
  keywords      = {rank5},
  page_count    = {41},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897369450&partnerID=40&md5=9c14eedb4a9164fc0fd47bb623894023},
}

@Article{Bettini201352,
  author        = {Bettini, L.},
  title         = {Rapidly Implementing EMF Applications with EMF Components},
  journal       = {Communications in Computer and Information Science},
  year          = {2013},
  volume        = {411 CCIS},
  pages         = {52-65},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-45404-2_4},
  groups        = {SpingerLink, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84904765956&partnerID=40&md5=1e84cb732d09282d2ba8653190d58717},
}

@Conference{2013e,
  title         = {Proceedings - 17th IEEE International Enterprise Distributed Object Computing Conference Workshops, EDOCW 2013},
  year          = {2013},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {Proceedings - IEEE International Enterprise Distributed Object Computing Workshop, EDOC},
  keywords      = {rank3},
  page_count    = {388},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84897368976&partnerID=40&md5=6bd82313e5e40cf0517e013db1f9e8b7},
}

@Conference{Liu2013427,
  author        = {Liu, X. and Kubiatowicz, J.},
  title         = {Chisel-Q: Designing quantum circuits with a scala embedded language},
  year          = {2013},
  pages         = {427-434},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6657075},
  document_type = {Conference Paper},
  doi           = {10.1109/ICCD.2013.6657075},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {2013 IEEE 31st International Conference on Computer Design, ICCD 2013},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892552537&partnerID=40&md5=9b5bae001c45c4836466ba3e41252807},
}

@Article{Miller2013,
  author        = {Miller, R. and Plessow, F. and Rauh, M. and Gröschl, M. and Kirschbaum, C.},
  title         = {Comparison of salivary cortisol as measured by different immunoassays and tandem mass spectrometry},
  journal       = {Psychoneuroendocrinology},
  year          = {2013},
  volume        = {38},
  number        = {1},
  pages         = {50-57},
  note          = {cited By 36},
  document_type = {Article},
  doi           = {10.1016/j.psyneuen.2012.04.019},
  groups        = {ScienceDirect,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870392438&partnerID=40&md5=820e6e652f82c61839a1da264c46a547},
}

@Conference{Nakamura201223,
  author        = {Nakamura, H. and Nagano, R. and Hisazumi, K. and Kamei, Y. and Ubayashi, N. and Fukuda, A.},
  title         = {QORAL: An external domain-specific language for mining software repositories},
  year          = {2012},
  pages         = {23-29},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6363292},
  document_type = {Conference Paper},
  doi           = {10.1109/IWESEP.2012.20},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - 2012 4th International Workshop on Empirical Software Engineering in Practice, IWESEP 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871554764&partnerID=40&md5=af3edbbe34cee70b0113d0829c6d7344},
}

@Conference{NoAuthor2012,
  title         = {Proceedings - 2012 4th International Workshop on Empirical Software Engineering in Practice, IWESEP 2012},
  year          = {2012},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {Proceedings - 2012 4th International Workshop on Empirical Software Engineering in Practice, IWESEP 2012},
  keywords      = {rank5},
  page_count    = {60},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871585656&partnerID=40&md5=5296b566ae7d1c61397b54ab03f4ef28},
}

@Conference{Dayba2012105,
  author        = {Dayba, O. and Oĝuztüzün, H.},
  title         = {Kutulu: A domain-specific language for feature-driven product derivation},
  year          = {2012},
  pages         = {105-110},
  note          = {cited By 0},
  art_number    = {6340132},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSAC.2012.20},
  groups        = {Compendex, ACM, Inclusos},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870856743&partnerID=40&md5=3c3f64f8c0bccc35f98dd1e1e5b5bc1b},
}

@Conference{Niazi2012278,
  author        = {Niazi, M.F. and Seceleanu, T. and Tenhunen, H.},
  title         = {Towards reuse-based development for the on-chip distributed SoC architecture},
  year          = {2012},
  pages         = {278-283},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6341588},
  document_type = {Conference Paper},
  doi           = {10.1109/COMPSACW.2012.58},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings - International Computer Software and Applications Conference},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870827089&partnerID=40&md5=b008d0f9b62ae4d533d2ae82b609b2cb},
}

@Conference{Edwards2012161,
  author        = {Edwards, G. and Brun, Y. and Medvidovic, N.},
  title         = {Automated analysis and code generation for domain-specific models},
  year          = {2012},
  pages         = {161-170},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  art_number    = {6337714},
  document_type = {Conference Paper},
  doi           = {10.1109/WICSA-ECSA.212.24},
  groups        = {ACM, IEEE, Duplicados},
  journal       = {Proceedings of the 2012 Joint Working Conference on Software Architecture and 6th European Conference on Software Architecture, WICSA/ECSA 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870718040&partnerID=40&md5=24b3b8881c087c561f2cdb2c683267a6},
}

@Conference{Unutulmaz201261,
  author        = {Unutulmaz, A. and Dündar, G. and Fernández, F.V.},
  title         = {LDS based tools to ease template construction},
  year          = {2012},
  pages         = {61-64},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6339417},
  document_type = {Conference Paper},
  doi           = {10.1109/SMACD.2012.6339417},
  groups        = {Compendex, Duplicados},
  journal       = {2012 International Conference on Synthesis, Modeling, Analysis and Simulation Methods and Applications to Circuit Design, SMACD 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870581954&partnerID=40&md5=9bd80581b8130f178b7f7201e650f7d7},
}

@Article{Cassou20121445,
  author        = {Cassou, D. and Bruneau, J. and Consel, C. and Balland, E.},
  title         = {Toward a tool-based development methodology for pervasive computing applications},
  journal       = {IEEE Transactions on Software Engineering},
  year          = {2012},
  volume        = {38},
  number        = {6},
  pages         = {1445-1463},
  note          = {cited By 10},
  __markedentry = {[Neto:5]},
  art_number    = {6051438},
  document_type = {Article},
  doi           = {10.1109/TSE.2011.107},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870568451&partnerID=40&md5=d27c045f7eb75a1ba943f1e22a244aa8},
}

@Conference{Bernardi201273,
  author        = {Bernardi, M.L. and Cimitile, M. and Di Lucca, G. and Maggi, F.M.},
  title         = {M3D: A tool for the model driven development of web applications},
  year          = {2012},
  pages         = {73-80},
  note          = {cited By 4},
  document_type = {Conference Paper},
  doi           = {10.1145/2389936.2389951},
  groups        = {Scopus, excluidos},
  journal       = {International Conference on Information and Knowledge Management, Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870479284&partnerID=40&md5=17463d0c32bf4d60c0274936eaa55237},
}

@Article{Obrenović20121045,
  author        = {Obrenović, N. and Popović, A. and Aleksić, S. and Luković, I.},
  title         = {Transformations of check constraint pim specifications},
  journal       = {Computing and Informatics},
  year          = {2012},
  volume        = {31},
  number        = {5},
  pages         = {1045-1079},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870205389&partnerID=40&md5=affa0183944d8444c45c410495ca7c0e},
}

@Conference{Lugato201219,
  author        = {Lugato, D. and Palyart, M. and Engelvin, C.},
  title         = {Domain specific modeling for operations research simulation in a large industrial context},
  year          = {2012},
  pages         = {19-24},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2420918.2420924},
  groups        = {Compendex, Duplicados},
  journal       = {SPLASH 2012: DSM 2012 - Proceedings of the 2012 ACM Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872106103&partnerID=40&md5=7712c35ec16b284016dc2415dbf59322},
}

@Conference{Eichler2012194,
  author        = {Eichler, J. and Fuchs, A. and Lincke, N.},
  title         = {Supporting security engineering at design time with adequate tooling},
  year          = {2012},
  pages         = {194-201},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6417293},
  document_type = {Conference Paper},
  doi           = {10.1109/ICCSE.2012.34},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 15th IEEE International Conference on Computational Science and Engineering, CSE 2012 and 10th IEEE/IFIP International Conference on Embedded and Ubiquitous Computing, EUC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874096586&partnerID=40&md5=5c27a2687e636cd2156fddbe3fae9d61},
}

@Conference{Taromirad201245,
  author        = {Taromirad, M. and Paige, R.F.},
  title         = {Agile requirements traceability using domain-specific modelling languages},
  year          = {2012},
  pages         = {45-50},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1145/2467307.2467316},
  groups        = {Scopus,, Inclusos},
  journal       = {2012 Extreme Modeling Workshop, XM 2012 - Post-Proceedings, Satellite Event of the IEEE/ACM 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878189487&partnerID=40&md5=e473a507a510d0142052f305338a3a3d},
}

@Conference{Goldschmidt201259,
  author        = {Goldschmidt, T. and Becker, S. and Burger, E.},
  title         = {Towards a tool-oriented taxonomy of view-based modelling},
  year          = {2012},
  volume        = {P-201},
  pages         = {59-74},
  note          = {cited By 10},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Lecture Notes in Informatics (LNI), Proceedings - Series of the Gesellschaft fur Informatik (GI)},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875151896&partnerID=40&md5=ecbd61393ce8d0f2dc9406bccb928f49},
}

@Book{Mernik20121,
  title         = {Formal and practical aspects of domain-specific languages: Recent developments},
  year          = {2012},
  author        = {Mernik, M.},
  note          = {cited By 0},
  document_type = {Book},
  doi           = {10.4018/978-1-4666-2092-6},
  groups        = {Scopus, Inclusos},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  pages         = {1-651},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899330316&partnerID=40&md5=0b890cd561da378d2026750312ec5cf5},
}

@Conference{Hawick2012314,
  author        = {Hawick, K.A.},
  title         = {Engineering internal domain-specific language software for lattice-based simulations},
  year          = {2012},
  pages         = {314-321},
  note          = {cited By 4},
  document_type = {Conference Paper},
  doi           = {10.2316/P.2012.790-043},
  groups        = {Scopus, Inclusos},
  journal       = {Proceedings of the IASTED International Conference on Software Engineering and Applications, SEA 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876513267&partnerID=40&md5=802a6c612bc5a6d125790ad7609ff07d},
}

@Conference{Rose201215,
  author        = {Rose, L.M. and Kolovos, D.S. and Paige, R.F.},
  title         = {EuGENia live: A flexible graphical modelling tool},
  year          = {2012},
  pages         = {15-20},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2467307.2467311},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {2012 Extreme Modeling Workshop, XM 2012 - Post-Proceedings, Satellite Event of the IEEE/ACM 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878170988&partnerID=40&md5=36456f6311d34d841d084ca6c50acf8d},
}

@Article{Sedbrook201247,
  author        = {Sedbrook, T.A.},
  title         = {Modeling the REA enterprise ontology with a domain specific language},
  journal       = {Journal of Emerging Technologies in Accounting},
  year          = {2012},
  volume        = {9},
  number        = {1},
  pages         = {47-70},
  note          = {cited By 4},
  document_type = {Article},
  doi           = {10.2308/jeta-50406},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878955500&partnerID=40&md5=0d2c36120c5dd79af6ebedd665dc4605},
}

@Book{Sinkovics201232,
  title         = {Domain-specific language integration with c++ template metaprogramming},
  year          = {2012},
  author        = {Sinkovics, A. and Porkoláb, Z.},
  note          = {cited By 1},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch002},
  groups        = {Scopus, Inclusos},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  pages         = {32-55},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899376577&partnerID=40&md5=d2948286385796169c2fad7de4931f56},
}

@Conference{Zalila2012,
  author        = {Zalila, F. and Crégut, X. and Pantel, M.},
  title         = {Towards a generic approach for DSML v \&amp; v},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {2448081},
  document_type = {Conference Paper},
  doi           = {10.1145/2448076.2448081},
  groups        = {Compendex, Duplicados},
  journal       = {Modeling Wizards: 2nd International Master Class on Model-Driven Engineering, MW 2012 - Satellite Event of MODELS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876259070&partnerID=40&md5=cd7168c8bf4b6009e2a72831e7cf187e},
}

@Article{Arora20121583,
  author        = {Arora, R. and Bangalore, P. and Mernik, M.},
  title         = {Tools and techniques for non-invasive explicit parallelization},
  journal       = {Journal of Supercomputing},
  year          = {2012},
  volume        = {62},
  number        = {3},
  pages         = {1583-1608},
  note          = {cited By 2},
  document_type = {Article},
  doi           = {10.1007/s11227-012-0822-6},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869491347&partnerID=40&md5=0587b54c68fc78c23d1577ced971dfd8},
}

@Conference{Barišić2012342,
  author        = {Barišić, A. and Amaral, V. and Goulão, M.},
  title         = {Usability evaluation of domain-specific languages},
  year          = {2012},
  pages         = {342-347},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  art_number    = {6511840},
  document_type = {Conference Paper},
  doi           = {10.1109/QUATIC.2012.63},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - 2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878827111&partnerID=40&md5=08707507221071c459cf8f42a28c56fe},
}

@Conference{2012,
  title         = {2012 Extreme Modeling Workshop, XM 2012 - Post-Proceedings, Satellite Event of the IEEE/ACM 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  year          = {2012},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {2012 Extreme Modeling Workshop, XM 2012 - Post-Proceedings, Satellite Event of the IEEE/ACM 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  keywords      = {rank5},
  page_count    = {50},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878174549&partnerID=40&md5=1897b385da3564c9bfd4f8a60c63164f},
}

@Article{Koutsoukos2012,
  author        = {Koutsoukos, X. and Kottenstette, N. and Hall, J. and Eyisi, E. and Leblanc, H. and Porter, J. and Sztipanovits, J.},
  title         = {A passivity approach for model-based compositional design of networked control systems},
  journal       = {Transactions on Embedded Computing Systems},
  year          = {2012},
  volume        = {11},
  number        = {4},
  note          = {cited By 0},
  art_number    = {75},
  document_type = {Article},
  doi           = {10.1145/2362336.2362342},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872476416&partnerID=40&md5=6498605af9b91178536978258209f61b},
}

@Conference{Franchi2012607,
  author        = {Franchi, E.},
  title         = {A domain specific language approach for agent-based social network modeling},
  year          = {2012},
  pages         = {607-612},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {6425702},
  document_type = {Conference Paper},
  doi           = {10.1109/ASONAM.2012.102},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings of the 2012 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining, ASONAM 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874225499&partnerID=40&md5=e75cb20043f2b20dac6676a50afa8229},
}

@Conference{Bajaj20122651,
  author        = {Bajaj, M. and Scott, A. and Deming, D. and Wickstrom, G. and De Spain, M. and Zwemer, D. and Peak, R.},
  title         = {Maestro-a model-based systems engineering environment for complex electronic systems},
  year          = {2012},
  volume        = {4},
  pages         = {2651-2667},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {22nd Annual International Symposium of the International Council on Systems Engineering, INCOSE 2012 and the 8th Biennial European Systems Engineering Conference 2012, EuSEC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84884153385&partnerID=40&md5=420320e26f3803a2b89fec34e5ef84fd},
}

@Conference{BatarsehDr.2012920,
  author        = {Batarseh Dr., O. and McGinnis Dr., L. and Lorenz, J.},
  title         = {MBSE supports manufacturing system design},
  year          = {2012},
  volume        = {2},
  pages         = {920-944},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {22nd Annual International Symposium of the International Council on Systems Engineering, INCOSE 2012 and the 8th Biennial European Systems Engineering Conference 2012, EuSEC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883502112&partnerID=40&md5=ad28d5d0f097c998cb5faee4c4574701},
}

@Conference{Vollebregt2012,
  author        = {Vollebregt, T. and Kats, L.C.L. and Visser, E.},
  title         = {Declarative specification of template-based textual editors},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2427048.2427056},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the 12th Workshop on Language Descriptions, Tools, and Applications, LDTA 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873382337&partnerID=40&md5=46595f639de84a108fd07a04f526f66d},
}

@Conference{Adolf2012465,
  author        = {Adolf, D. and Ferranti, E. and Koch, S.},
  title         = {SmartScript - A domain-specific language for appliance control in Smart Grids},
  year          = {2012},
  pages         = {465-470},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  art_number    = {6486028},
  document_type = {Conference Paper},
  doi           = {10.1109/SmartGridComm.2012.6486028},
  groups        = {Compendex, Duplicados},
  journal       = {2012 IEEE 3rd International Conference on Smart Grid Communications, SmartGridComm 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84876020106&partnerID=40&md5=cbc0b9520431e2397e30ca8a86eb8c71},
}

@Conference{Spafford2012,
  author        = {Spafford, K.L. and Vetter, J.S.},
  title         = {Aspen: A domain specific language for performance modeling},
  year          = {2012},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6468530},
  document_type = {Conference Paper},
  doi           = {10.1109/SC.2012.20},
  groups        = {IEEE, Duplicados},
  journal       = {International Conference for High Performance Computing, Networking, Storage and Analysis, SC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877722624&partnerID=40&md5=f7291421df1089dc6623be456c0be0fc},
}

@Article{Kowalski20127,
  author        = {Kowalski, M. and Magott, J.},
  title         = {Time coordination of heterogeneous distance protections using a domain specific language},
  journal       = {E-Informatica Software Engineering Journal},
  year          = {2012},
  volume        = {6},
  number        = {1},
  pages         = {7-26},
  note          = {cited By 0},
  document_type = {Review},
  doi           = {10.5277/e-Inf120101},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84885164528&partnerID=40&md5=4f605ebae58f48ba06c4e72306b3edd4},
}

@Conference{Miyajima2012175,
  author        = {Miyajima, T. and Thomas, D. and Amano, H.},
  title         = {A domain specific language and toolchain for OpenCV Runtime Binary Acceleration using GPU},
  year          = {2012},
  pages         = {175-181},
  note          = {cited By 0},
  art_number    = {6424560},
  document_type = {Conference Paper},
  doi           = {10.1109/ICNC.2012.34},
  groups        = {ACM, IEEE,, Inclusos},
  journal       = {Proceedings of the 2012 3rd International Conference on Networking and Computing, ICNC 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874272435&partnerID=40&md5=b390ee86bd39c9eda9f6bb7035d21998},
}

@Article{Funk2012504,
  author        = {Funk, M. and Rauterberg, M.},
  title         = {PULP scription: A DSL for mobile HTML5 game applications},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7522 LNCS},
  pages         = {504-510},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33542-6_65},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875661885&partnerID=40&md5=e0f9a2bf799eb18294cba92b73295356},
}

@Conference{Ribeiro2012255,
  author        = {Ribeiro, A. and Da Silva, A.R.},
  title         = {Survey on cross-platforms and languages for mobile apps},
  year          = {2012},
  pages         = {255-260},
  note          = {cited By 9},
  __markedentry = {[Neto:5]},
  art_number    = {6511821},
  document_type = {Conference Paper},
  doi           = {10.1109/QUATIC.2012.56},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - 2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878881385&partnerID=40&md5=2718878bebb2f2a41a26df88ea37e162},
}

@Conference{Cartaxo201255,
  author        = {Cartaxo, B. and Costa, I. and Abrantes, D. and Santos, A. and Soares, S. and Garcia, V.},
  title         = {ESEML - Empirical software engineering modeling language},
  year          = {2012},
  pages         = {55-60},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2420918.2420933},
  groups        = {Scopus, Duplicados},
  journal       = {SPLASH 2012: DSM 2012 - Proceedings of the 2012 ACM Workshop on Domain-Specific Modeling},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872112647&partnerID=40&md5=4372fcb83253e8d1532df1475cc116ed},
}

@Article{Marek2012256,
  author        = {Marek, L. and Zheng, Y. and Ansaloni, D. and Sarimbekov, A. and Binder, W. and Tůma, P. and Qi, Z.},
  title         = {Java bytecode instrumentation made easy: The DiSL framework for dynamic program analysis},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7705 LNCS},
  pages         = {256-263},
  note          = {cited By 2},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35182-2_18},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872244805&partnerID=40&md5=846a0d739b64e0744447dc3a894c1b05},
}

@Article{Mehm2012536,
  author        = {Mehm, F. and Reuter, C. and Göbel, S. and Steinmetz, R.},
  title         = {Future trends in game authoring tools},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7522 LNCS},
  pages         = {536-541},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33542-6_70},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84875670361&partnerID=40&md5=baeb43b7cd4472c8faca630bc6bbc995},
}

@Conference{Kurpick2012,
  author        = {Kurpick, T. and Pinkernell, C. and Look, M. and Rumpe, B.},
  title         = {Modeling cyber-physical systems: Model-driven specification of energy efficient buildings},
  year          = {2012},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2491617.2491619},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the Modelling of the Physical World Workshop, MOTPW 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879835033&partnerID=40&md5=df73b58dc54087008020f91940df5360},
}

@Conference{Lipaczewski2012159,
  author        = {Lipaczewski, M. and Struck, S. and Ortmeier, F.},
  title         = {Using tool-supported model based safety analysis - Progress and experiences in SAML development},
  year          = {2012},
  pages         = {159-166},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  art_number    = {6375611},
  document_type = {Conference Paper},
  doi           = {10.1109/HASE.2012.34},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of IEEE International Symposium on High Assurance Systems Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871985443&partnerID=40&md5=7040abede723d3562bad0d098a696663},
}

@Book{Günther2012132,
  title         = {Iterative and pattern-based development of internal domain-specific languages},
  year          = {2012},
  author        = {Günther, S.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch006},
  groups        = {Scopus, Inclusos},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  pages         = {132-155},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899402340&partnerID=40&md5=b2f05f2b85d477cdfe79faafed530aad},
}

@Article{Wells2012,
  author        = {Wells, S. and Reed, C.A.},
  title         = {A domain specific language for describing diverse systems of dialogue},
  journal       = {Journal of Applied Logic},
  year          = {2012},
  volume        = {10},
  number        = {4},
  pages         = {309-329},
  note          = {cited By 9},
  document_type = {Conference Paper},
  doi           = {10.1016/j.jal.2012.09.001},
  groups        = {ScienceDirect,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869507112&partnerID=40&md5=17fec4b899737800c31da8fb2131cb9f},
}

@Conference{Karnitis201281,
  author        = {Karnitis, G. and Bicevskis, J. and Cerina-Berzina, J.},
  title         = {Integration of business modeling and IT modeling},
  year          = {2012},
  volume        = {924},
  pages         = {81-93},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {CEUR Workshop Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84893305912&partnerID=40&md5=08849c76162af8e20c46ceea66023beb},
}

@Article{Lu2012,
  author        = {Lu, Q. and Biery, K.A. and Kowalkowski, J.B.},
  title         = {Message correlation analysis tool for NOνA},
  journal       = {Journal of Physics: Conference Series},
  year          = {2012},
  volume        = {396},
  number        = {PART 1},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {012030},
  document_type = {Conference Paper},
  doi           = {10.1088/1742-6596/396/1/012030},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873293415&partnerID=40&md5=41fa4afa9ea54e08973e7276d0cac7e7},
}

@Article{Jacob20121560,
  author        = {Jacob, F. and Gray, J. and Carver, J.C. and Mernik, M. and Bangalore, P.},
  title         = {PPModel: A modeling tool for source code maintenance and optimization of parallel programs},
  journal       = {Journal of Supercomputing},
  year          = {2012},
  volume        = {62},
  number        = {3},
  pages         = {1560-1582},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s11227-012-0821-7},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869499266&partnerID=40&md5=009ff3598cd4d8d860e86e4f9cf5624f},
}

@Book{Chiprianov2012408,
  title         = {Integrating DSLs into a software engineering process: Application to collaborative construction of telecom services},
  year          = {2012},
  author        = {Chiprianov, V. and Kermarrec, Y. and Rouvrais, S.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch015},
  groups        = {Scopus, Inclusos},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  pages         = {408-434},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899355646&partnerID=40&md5=6edabb9ec49eab134f5b23cbec1d6e5f},
}

@Conference{Valero2012263,
  author        = {Valero, M. and Uluagac, S. and Venkatachalam, S. and Ramalingam, K.C. and Beyah, R.},
  title         = {The monitoring core: A framework for sensor security application development},
  year          = {2012},
  pages         = {263-271},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6502525},
  document_type = {Conference Paper},
  doi           = {10.1109/MASS.2012.6502525},
  groups        = {ACM, Duplicados},
  journal       = {MASS 2012 - 9th IEEE International Conference on Mobile Ad-Hoc and Sensor Systems},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877672946&partnerID=40&md5=e8ee910edc8ba10c0b1d09c2a99f57c1},
}

@Conference{Schivo2012447,
  author        = {Schivo, S. and Scholma, J. and Wanders, B. and Camacho, R.A.U. and Van Der Vet, P.E. and Karperien, M. and Langerak, R. and Van De Pol, J. and Post, J.N.},
  title         = {Modelling biological pathway dynamics with Timed Automata},
  year          = {2012},
  pages         = {447-453},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  art_number    = {6399719},
  document_type = {Conference Paper},
  doi           = {10.1109/BIBE.2012.6399719},
  groups        = {Scopus, Duplicados},
  journal       = {IEEE 12th International Conference on BioInformatics and BioEngineering, BIBE 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872875140&partnerID=40&md5=e5f8b51cf240434171b63230f23d51bf},
}

@Article{Sohr2012,
  author        = {Sohr, K. and Kuhlmann, M. and Gogolla, M. and Hu, H. and Ahn, G.-J.},
  title         = {Comprehensive two-level analysis of role-based delegation and revocation policies with UML and OCL},
  journal       = {Information and Software Technology},
  year          = {2012},
  volume        = {54},
  number        = {12},
  pages         = {1396-1417},
  note          = {cited By 10},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.infsof.2012.06.008},
  groups        = {Compendex, ACM, ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865777310&partnerID=40&md5=89c1e01c195d5cfa1c9d28d129123fde},
}

@Conference{Herb20122704,
  author        = {Herb, J.},
  title         = {Fault tree auto-generator: How to cope with highly redundant systems},
  year          = {2012},
  volume        = {4},
  pages         = {2704-2713},
  note          = {cited By 1},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {11th International Probabilistic Safety Assessment and Management Conference and the Annual European Safety and Reliability Conference 2012, PSAM11 ESREL 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873104407&partnerID=40&md5=7720019ccd35d0dade331107e1f43ddf},
}

@Book{Luković2012502,
  title         = {DSLs in action with model based approaches to information system development},
  year          = {2012},
  author        = {Luković, I. and Ivančević, V. and Aleksić, S. and Čeliković, M.},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch017},
  groups        = {Scopus, Duplicados},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  keywords      = {rank3},
  pages         = {502-532},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899281255&partnerID=40&md5=ff948d0d240489910fe339e3c76c975e},
}

@Conference{Ogunshile20128445,
  author        = {Ogunshile, E. and Saaj, C. and Chhaniyara, S. and Wang, X. and Langef, C. and Findlay, R.},
  title         = {Application of model based systems engineering for an asteroid lander},
  year          = {2012},
  volume        = {10},
  pages         = {8445-8453},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the International Astronautical Congress, IAC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84883507285&partnerID=40&md5=895c71a620cee27e8ed9eaa0d9a76908},
}

@Conference{Amaral2012261,
  author        = {Amaral, V. and Barroca, B. and Carreira, P.},
  title         = {Towards a robust solution in building automation systems: Supporting rapid prototyping and analysis},
  year          = {2012},
  pages         = {261-264},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6511822},
  document_type = {Conference Paper},
  doi           = {10.1109/QUATIC.2012.59},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - 2012 8th International Conference on the Quality of Information and Communications Technology, QUATIC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84878824180&partnerID=40&md5=0878286e1952ec1300df560692155bfc},
}

@Book{Kolomvatsos2012341,
  title         = {Creating, debugging, and testing mobile applications with the IPAC application creation environment},
  year          = {2012},
  author        = {Kolomvatsos, K. and Valkanas, G. and Patelis, P. and Hadjiefthymiades, S.},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch012},
  groups        = {Scopus, Duplicados},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  keywords      = {rank3},
  pages         = {341-364},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899253005&partnerID=40&md5=e6f782183684080b042900dab4147f8d},
}

@Conference{Balaban20123434,
  author        = {Balaban, G. and Logg, A. and Rognes, M.},
  title         = {A Newton method for fluid-structure interaction using full Jacobians based on automatic form differentiation},
  year          = {2012},
  pages         = {3434-3447},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {ECCOMAS 2012 - European Congress on Computational Methods in Applied Sciences and Engineering, e-Book Full Papers},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84871637791&partnerID=40&md5=9353b42deef27b8f259e715758fd5fc8},
}

@Book{Clark2012311,
  title         = {Software language engineering with XMF and XModeler},
  year          = {2012},
  author        = {Clark, T. and Willans, J.},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch011},
  groups        = {Scopus, Duplicados},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  keywords      = {rank3},
  pages         = {311-340},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867897692&partnerID=40&md5=9cd3a14b597cb154896fba30e7ea615f},
}

@Conference{Křikava201225,
  author        = {Křikava, F. and Collet, P.},
  title         = {On the use of an internal DSL for enriching EMF models},
  year          = {2012},
  pages         = {25-30},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2428516.2428521},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the 12th Workshop on OCL and Textual Modelling, OCL 2012 - Being Part of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873393247&partnerID=40&md5=0f726587971d5b0ceef91c910de7c04c},
}

@Book{Amrani2012270,
  title         = {A formal semantics of Kermeta},
  year          = {2012},
  author        = {Amrani, M.},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Book Chapter},
  doi           = {10.4018/978-1-4666-2092-6.ch010},
  groups        = {Duplicados},
  journal       = {Formal and Practical Aspects of Domain-Specific Languages: Recent Developments},
  keywords      = {rank3},
  pages         = {270-309},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84899342814&partnerID=40&md5=f15c11c4c005b114cceeb7886b3560a9},
}

@Conference{2012a,
  title         = {Proceedings of the 6th International Workshop on Multi-Paradigm Modeling, MPM 2012},
  year          = {2012},
  note          = {cited By 0},
  document_type = {Conference Review},
  journal       = {Proceedings of the 6th International Workshop on Multi-Paradigm Modeling, MPM 2012},
  keywords      = {rank5},
  page_count    = {80},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84882982852&partnerID=40&md5=b15cf773b55ecb42507e73879cdd6d31},
}

@Conference{McKean201245,
  author        = {McKean, D. and Sprinkle, J.},
  title         = {Heterogeneous multi-core systems: UML profiles vs. DSM approaches},
  year          = {2012},
  pages         = {45-48},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1145/2420918.2420930},
  groups        = {Scopus, excluidos},
  journal       = {SPLASH 2012: DSM 2012 - Proceedings of the 2012 ACM Workshop on Domain-Specific Modeling},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872105007&partnerID=40&md5=1e22e019933dd495aef1b89c8e61ca25},
}

@Conference{Alhosban2012,
  author        = {Alhosban, F. and Burd, L.},
  title         = {Aural instruction with visualization in E-Learning},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6462290},
  document_type = {Conference Paper},
  doi           = {10.1109/FIE.2012.6462290},
  groups        = {IEEE, Compendex, ACM, Duplicados},
  journal       = {Proceedings - Frontiers in Education Conference, FIE},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874693447&partnerID=40&md5=362133b0bd1aca14e592738ccc7cd194},
}

@Conference{2012b,
  title         = {Proceedings of the 12th Workshop on OCL and Textual Modelling, OCL 2012 - Being Part of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {Proceedings of the 12th Workshop on OCL and Textual Modelling, OCL 2012 - Being Part of the ACM/IEEE 15th International Conference on Model Driven Engineering Languages and Systems, MODELS 2012},
  keywords      = {rank3},
  page_count    = {62},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873388228&partnerID=40&md5=2c6c6f227bb320c6afec5b89b645a6fc},
}

@Conference{Puente2012,
  author        = {Puente, G. and Díaz, O.},
  title         = {WikiWhirl: Wiki refactoring made easy},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2462932.2462981},
  groups        = {Compendex, Duplicados},
  journal       = {WikiSym 2012 Conference Proceedings - 8th Annual International Symposium on Wikis and Open Collaboration},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84877619853&partnerID=40&md5=b54cea7fd00e53eaad3f2d5358e61310},
}

@Article{Diaz2012,
  author        = {Díaz, O. and Puente, G.},
  title         = {Wiki Scaffolding: Aligning wikis with the corporate strategy},
  journal       = {Information Systems},
  year          = {2012},
  volume        = {37},
  number        = {8},
  pages         = {737-752},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1016/j.is.2012.05.002},
  groups        = {Compendex, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864699257&partnerID=40&md5=3bb57c928fc35c84023ca4f011f171bf},
}

@Article{Sedlmajer2012123,
  author        = {Sedlmajer, N. and Buchs, D. and Hostettler, S. and Linard, A. and López Bóbeda, E. and Marechal, A.},
  title         = {A domain specific language approach for genetic regulatory mechanisms analysis},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7400 LNCS},
  pages         = {123-145},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35179-2_6},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870005663&partnerID=40&md5=b62825e20c0445482ffb4a1715f41fea},
}

@Article{Kaewchinporn2012466,
  author        = {Kaewchinporn, C. and Limpiyakorn, Y.},
  title         = {Semantic approach to verifying activity diagrams with a domain specific language},
  journal       = {Communications in Computer and Information Science},
  year          = {2012},
  volume        = {340 CCIS},
  pages         = {466-473},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-35267-6_62},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869753074&partnerID=40&md5=248efc8df35096b847b656ad0845df98},
}

@Article{2012c,
  title         = {Computer Applications for Software Engineering, Disaster Recovery, and Business Continuity - International Conferences, ASEA and DRBC 2012, Held in Conjunction with GST 2012, Proceedings},
  journal       = {Communications in Computer and Information Science},
  year          = {2012},
  volume        = {340 CCIS},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  keywords      = {rank3},
  page_count    = {475},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869847795&partnerID=40&md5=50ed69d3acd9f3c6e6b80204eec1482c},
}

@Article{Bourouis2012117,
  author        = {Bourouis, A. and Belattar, B.},
  title         = {Towards a metamodel for extended queuing networks},
  journal       = {International Journal of Simulation Modelling},
  year          = {2012},
  volume        = {11},
  number        = {3},
  pages         = {117-128},
  note          = {cited By 3},
  document_type = {Article},
  doi           = {10.2507/IJSIMM11(3)1.190},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869855008&partnerID=40&md5=05a382a2ddfdc1ee5fcb894b7822ba3f},
}

@Conference{Cardoso2012,
  author        = {Cardoso, J.M.P.},
  title         = {Programming strategies for runtime adaptability},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6322875},
  document_type = {Conference Paper},
  doi           = {10.1109/ReCoSoC.2012.6322875},
  groups        = {Scopus, Duplicados},
  journal       = {ReCoSoC 2012 - 7th International Workshop on Reconfigurable and Communication-Centric Systems-on-Chip, Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869217886&partnerID=40&md5=b3374bd5d7aee6caff8182aea634f4c2},
}

@Conference{Tesoriero2012,
  author        = {Tesoriero, R. and Gallud, J.A. and Villanueva, P.G. and Sebastián, G.},
  title         = {Interaction modeling on heterogeneous spaces},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {37},
  document_type = {Conference Paper},
  doi           = {10.1145/2379636.2379672},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869020794&partnerID=40&md5=3372ae5827275e27e37cfbcf410fa286},
}

@Conference{Heitkötter2012127,
  author        = {Heitkötter, H.},
  title         = {A framework for creating domain-specific process modeling languages},
  year          = {2012},
  pages         = {127-136},
  note          = {cited By 2},
  document_type = {Conference Paper},
  groups        = {Scopus,, Inclusos},
  journal       = {ICSOFT 2012 - Proceedings of the 7th International Conference on Software Paradigm Trends},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868688892&partnerID=40&md5=170a16bf44604b1e7b91fb68b3020cdc},
}

@Conference{Jia201224,
  author        = {Jia, X. and Jones, C.},
  title         = {AXIOM: A model-driven approach to cross-platform application development},
  year          = {2012},
  pages         = {24-33},
  note          = {cited By 8},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {ICSOFT 2012 - Proceedings of the 7th International Conference on Software Paradigm Trends},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868703078&partnerID=40&md5=43288c67603c602bb36c2036fd4bb727},
}

@Article{Hills201210,
  author        = {Hills, M. and Klint, P. and Vinju, J.J.},
  title         = {Program analysis scenarios in Rascal},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7571 LNCS},
  pages         = {10-30},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-34005-5_2},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868332980&partnerID=40&md5=5df3179bdfd391eafac20f01a6b6b602},
}

@Article{Zalila2012329,
  author        = {Zalila, F. and Crégut, X. and Pantel, M.},
  title         = {Leveraging formal verification tools for DSML users: A process modeling case study},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7610 LNCS},
  number        = {PART 2},
  pages         = {329-343},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-34032-1_34},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868277184&partnerID=40&md5=fc53636bba1827ad8e27220f78fb83f7},
}

@Article{Flammini2012190,
  author        = {Flammini, F. and Marrone, S. and Mazzocca, N. and Nardone, R. and Vittorini, V.},
  title         = {Model-driven V\&amp;V processes for computer based control systems: A unifying perspective},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7610 LNCS},
  number        = {PART 2},
  pages         = {190-204},
  note          = {cited By 9},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-34032-1_20},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868274424&partnerID=40&md5=10f5b1e5e9b167196738f7e1e95449b0},
}

@Article{Kilgo2012125,
  author        = {Kilgo, P. and Syriani, E. and Anderson, M.},
  title         = {A visual modeling language for RDIS and ROS nodes using AToM 3},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7628 LNAI},
  pages         = {125-136},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-34327-8_14},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868032338&partnerID=40&md5=b21d47bcd0bf9ba44c9e491f870e224c},
}

@Conference{Benchaïb201276,
  author        = {Benchaïb, Y. and Chaudet, C.},
  title         = {Using VIRMANEL and SILUMOD to study protocol for mobile multihop networks},
  year          = {2012},
  volume        = {1},
  pages         = {76-78},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6275847},
  document_type = {Conference Paper},
  doi           = {10.1109/SECON.2012.6275847},
  groups        = {Compendex, Duplicados},
  journal       = {Annual IEEE Communications Society Conference on Sensor, Mesh and Ad Hoc Communications and Networks workshops},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867940062&partnerID=40&md5=ec8036117863b4647dc1f96737432c12},
}

@Article{Maitrehenry201243,
  author        = {Maitrehenry, S. and Metge, S. and Aït-Ameur, Y. and Bieber, P.},
  title         = {An MDE-based synthesis of aircraft safety models},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7602 LNCS},
  pages         = {43-54},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33609-6_6},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867851140&partnerID=40&md5=4a87260c095d65f6e10ea169197650ad},
}

@Article{Mantz20123,
  author        = {Mantz, F. and Jurack, S. and Taentzer, G.},
  title         = {Graph transformation concepts for meta-model evolution guaranteeing permanent type conformance throughout model migration},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7233 LNCS},
  pages         = {3-18},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-34176-2_3},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867880463&partnerID=40&md5=bf6d6c8c99f31209b8413e84f37c3e01},
}

@Article{DeLara2012127,
  author        = {De Lara, J. and Guerra, E. and Sánchez-Cuadrado, J.},
  title         = {Abstracting modelling languages: A reutilization approach},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7328 LNCS},
  pages         = {127-143},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31095-9_9},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867808062&partnerID=40&md5=5df79c2aea26cc36540f1c935d6577d5},
}

@Conference{Efftinge2012112,
  author        = {Efftinge, S. and Eysholdt, M. and Köhnlein, J. and Zarnekow, S. and Hasselbring, W. and Von Massow, R. and Hanus, M.},
  title         = {Xbase: Implementing domain-specific languages for java},
  year          = {2012},
  pages         = {112-121},
  note          = {cited By 28},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2371401.2371419},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings of the 11th International Conference on Generative Programming and Component Engineering, GPCE'12},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867826990&partnerID=40&md5=bbbcf1c3d054221ecd71fc06426bc63c},
}

@Article{Puente2012646,
  author        = {Puente, G. and Díaz, O.},
  title         = {Wiki refactoring as mind map reshaping},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7328 LNCS},
  pages         = {646-661},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31095-9_42},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867749605&partnerID=40&md5=9ed690f7986b49c7e3d9fafca3f22ada},
}

@Conference{Zhang2012131,
  author        = {Zhang, X. and Broenink, J.F.},
  title         = {A structuring mechanism for embedded control systems using co-modelling and co-simulation},
  year          = {2012},
  pages         = {131-136},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, excluidos},
  journal       = {SIMULTECH 2012 - Proceedings of the 2nd International Conference on Simulation and Modeling Methodologies, Technologies and Applications},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867698687&partnerID=40&md5=69029ff3c0dce94b94aea6805419b406},
}

@Article{Noyrit201220,
  author        = {Noyrit, F. and Gérard, S. and Selic, B.},
  title         = {FacadeMetamodel: Masking UML},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7590 LNCS},
  pages         = {20-35},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33666-9_3},
  groups        = {Compendex, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867654098&partnerID=40&md5=26d824fa8adb250535cc2f663add99f1},
}

@Article{Rabbi201236,
  author        = {Rabbi, F. and MacCaull, W.},
  title         = {T <inf>□</inf>: A domain specific language for rapid workflow development},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7590 LNCS},
  pages         = {36-52},
  note          = {cited By 4},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33666-9_4},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867636032&partnerID=40&md5=91b54309c100b6ac37389e92f32e83fc},
}

@Article{Sánchez-Cuadrado20123,
  author        = {Sánchez-Cuadrado, J. and De Lara, J. and Guerra, E.},
  title         = {Bottom-up meta-modelling: An interactive approach},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7590 LNCS},
  pages         = {3-19},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33666-9_2},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867641043&partnerID=40&md5=55648ccff6f70ed465ec46b2d9f66bdf},
}

@Conference{Pike2012335,
  author        = {Pike, L. and Wegmann, N. and Niller, S. and Goodloe, A.},
  title         = {Experience report: A do-it-yourself high-assurance compiler},
  year          = {2012},
  pages         = {335-340},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2364527.2364553},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings of the ACM SIGPLAN International Conference on Functional Programming, ICFP},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867530181&partnerID=40&md5=beda7879f896692199856280a7a46a1c},
}

@Article{Rangarajan2012,
  author        = {Rangarajan, S. and Bhan, A. and Daoutidis, P.},
  title         = {Language-oriented rule-based reaction network generation and analysis: Description of RING},
  journal       = {Computers and Chemical Engineering},
  year          = {2012},
  volume        = {45},
  pages         = {114-123},
  note          = {cited By 22},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.compchemeng.2012.06.008},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863473783&partnerID=40&md5=c7eee241d5c2d5f588744505a1d36592},
}

@Conference{Krasts201280,
  author        = {Krasts, O. and Kleins, A. and Teilans, A.},
  title         = {Domain specific language for securities settlement systems},
  year          = {2012},
  pages         = {80-83},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6257291},
  document_type = {Conference Paper},
  doi           = {10.1109/ICDIPC.2012.6257291},
  groups        = {Scopus, Duplicados},
  journal       = {2012 2nd International Conference on Digital Information Processing and Communications, ICDIPC 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866687678&partnerID=40&md5=cb1bd68e059de41a706ed97772ea4585},
}

@Article{Jézéquel2012581,
  author        = {Jézéquel, J.-M. and Combemale, B. and Derrien, S. and Guy, C. and Rajopadhye, S.},
  title         = {Bridging the chasm between MDE and the world of compilation},
  journal       = {Software and Systems Modeling},
  year          = {2012},
  volume        = {11},
  number        = {4},
  pages         = {581-597},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0266-8},
  groups        = {ACM, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867896252&partnerID=40&md5=cec68ad28fe5c3dbd8d19672faf4c3f0},
}

@Article{Vara2012,
  author        = {Vara, J.M. and Marcos, E.},
  title         = {A framework for model-driven development of information systems: Technical decisions and lessons learned},
  journal       = {Journal of Systems and Software},
  year          = {2012},
  volume        = {85},
  number        = {10},
  pages         = {2368-2384},
  note          = {cited By 18},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.jss.2012.04.080},
  groups        = {ScienceDirect, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863612271&partnerID=40&md5=490c23a258c1aece0f0a98cf1e2c94a8},
}

@Conference{Benchaïb201267,
  author        = {Benchaïb, Y. and Chaudet, C.},
  title         = {Virmanel: A mobile multihop network virtualization tool},
  year          = {2012},
  pages         = {67-74},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2348688.2348703},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Proceedings of the Annual International Conference on Mobile Computing and Networking, MOBICOM},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84866603428&partnerID=40&md5=4f06fe395fa16151f9f494ff058ad7f3},
}

@Article{Čeliković20121075,
  author        = {Čeliković, M. and Luković, I. and Aleksić, S. and Ivančević, V.},
  title         = {A MOF based meta-model and a concrete DSL syntax of IIS*Case PIM concepts},
  journal       = {Computer Science and Information Systems},
  year          = {2012},
  volume        = {9},
  number        = {3},
  pages         = {1075-1103},
  note          = {cited By 5},
  document_type = {Article},
  doi           = {10.2298/CSIS120203034C},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867447310&partnerID=40&md5=1cfcd0d28d9202974b08765361cb05d5},
}

@Article{Eyisi2012,
  author        = {Eyisi, E. and Bai, J. and Riley, D. and Weng, J. and Yan, W. and Xue, Y. and Koutsoukos, X. and Sztipanovits, J.},
  title         = {NCSWT: An integrated modeling and simulation tool for networked control systems},
  journal       = {Simulation Modelling Practice and Theory},
  year          = {2012},
  volume        = {27},
  pages         = {90-111},
  note          = {cited By 11},
  document_type = {Article},
  doi           = {10.1016/j.simpat.2012.05.004},
  groups        = {Compendex, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863745324&partnerID=40&md5=b485925e5ad8c6dff9955a74ecbe01f5},
}

@Article{FisterJr.20121019,
  author        = {Fister Jr., I. and Mernik, M. and Fister, I. and Hrnčič, D.},
  title         = {Implementation of EasyTime formal semantics using a LISA compiler generator},
  journal       = {Computer Science and Information Systems},
  year          = {2012},
  volume        = {9},
  number        = {3},
  pages         = {1019-1044},
  note          = {cited By 5},
  document_type = {Article},
  doi           = {10.2298/CSIS111110021F},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867450257&partnerID=40&md5=33cab600413cc4ca6286308c6687ce73},
}

@Article{Mtibaa20122131,
  author        = {Mtibaa, S. and Tagina, M.},
  title         = {A combined Petri nets and model-driven engineering for requirements specification approach for Service-Based Applications analysis},
  journal       = {International Review on Computers and Software},
  year          = {2012},
  volume        = {7},
  number        = {5},
  pages         = {2131-2138},
  note          = {cited By 2},
  document_type = {Article},
  groups        = {Compendex,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84873302551&partnerID=40&md5=06337a08f370efa5fb5e2d2876f2b52b},
}

@Article{Pike2012,
  author        = {Pike, L. and Wegmann, N. and Niller, S. and Goodloe, A.},
  title         = {Experience report: A do-it-yourself high-assurance compiler},
  journal       = {ACM SIGPLAN Notices},
  year          = {2012},
  volume        = {47},
  number        = {9},
  pages         = {335-340},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2398856.2364553},
  groups        = {Scopus, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870459987&partnerID=40&md5=59407f7324b728922674856524ca6fb6},
}

@Article{Edge2012,
  author        = {Edge, M.E. and Falcone Sampaio, P.R.},
  title         = {The design of FFML: A rule-based policy modelling language for proactive fraud management in financial data streams},
  journal       = {Expert Systems with Applications},
  year          = {2012},
  volume        = {39},
  number        = {11},
  pages         = {9966-9985},
  note          = {cited By 9},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.eswa.2012.01.143},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859419845&partnerID=40&md5=097338e80359f04a61bb150a574a0db9},
}

@Article{Zimmermann2012,
  author        = {Zimmermann, O. and Miksovic, C. and Küster, J.M.},
  title         = {Reference architecture, metamodel, and modeling principles for architectural knowledge management in information technology services},
  journal       = {Journal of Systems and Software},
  year          = {2012},
  volume        = {85},
  number        = {9},
  pages         = {2014-2033},
  note          = {cited By 10},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1016/j.jss.2012.05.003},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863086998&partnerID=40&md5=9cc7ca7651355e841a3a5c7c5ce91691},
}

@Conference{Groce201212,
  author        = {Groce, A. and Erwig, M.},
  title         = {Finding common ground: Choose, assert, and assume},
  year          = {2012},
  pages         = {12-17},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/04000801.2336800},
  groups        = {ACM, Duplicados},
  journal       = {10th International Workshop on Dynamic Analysis, WODA 2012 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865304503&partnerID=40&md5=463ec07d5bc24566a20e72181afd7948},
}

@Article{Biehl2012283,
  author        = {Biehl, M. and Gu, W. and Loiret, F.},
  title         = {Model-based service discovery and orchestration for OSLC services in tool chains},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7387 LNCS},
  pages         = {283-290},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31753-8_21},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865145549&partnerID=40&md5=1a0d2ba5c77648efc21f318e1e80ed34},
}

@Article{Díaz2012431,
  author        = {Díaz, O. and De Sosa, J. and Arellano, C. and Trujillo, S.},
  title         = {Web-based tool integration: A web augmentation approach},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7387 LNCS},
  pages         = {431-434},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31753-8_37},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865112770&partnerID=40&md5=650a982192b9b0400068da63b5349af0},
}

@Article{Díaz2012465,
  author        = {Díaz, O. and Arellano, C.},
  title         = {Sticklet: An end-user client-side augmentation-based mashup tool},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7387 LNCS},
  pages         = {465-468},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31753-8_45},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865151561&partnerID=40&md5=2392f40166ffd72fb3739b580ed669d0},
}

@Conference{Kerner2012681,
  author        = {Kerner, A. and Cota, P.},
  title         = {Analyses and optimisation of ADSL/VDSL lines using ericsson APM system - Comparing results of two operators},
  year          = {2012},
  pages         = {681-685},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6240732},
  document_type = {Conference Paper},
  groups        = {IEEE, Duplicados},
  journal       = {MIPRO 2012 - 35th International Convention on Information and Communication Technology, Electronics and Microelectronics - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865099861&partnerID=40&md5=4b22d2eb7a3bd1f847fdd74331ac7335},
}

@Conference{Cho201222,
  author        = {Cho, H. and Gray, J. and Syriani, E.},
  title         = {Creating visual domain-specific modeling languages from end-user demonstration},
  year          = {2012},
  pages         = {22-28},
  note          = {cited By 12},
  __markedentry = {[Neto:5]},
  art_number    = {6226010},
  document_type = {Conference Paper},
  doi           = {10.1109/MISE.2012.6226010},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {2012 4th International Workshop on Modeling in Software Engineering, MiSE 2012 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864969491&partnerID=40&md5=abd251be242e9f42a9b1711189aca28a},
}

@Conference{Villanueva2012,
  author        = {Villanueva, M.J.},
  title         = {An agile model-driven approach for simplifying the development of genetic analysis tools},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6240414},
  document_type = {Conference Paper},
  doi           = {10.1109/RCIS.2012.6240414},
  groups        = {IEEE, Duplicados},
  journal       = {Proceedings - International Conference on Research Challenges in Information Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865040659&partnerID=40&md5=bf744099f7a8a5dc408867aea58ad2e5},
}

@Conference{Atlee2012,
  author        = {Atlee, J. and Baillargeon, R. and France, R. and Georg, G. and Moreira, A. and Rumpe, B. and Zschaler, S.},
  title         = {Welcome},
  year          = {2012},
  note          = {cited By 0},
  art_number    = {6226007},
  document_type = {Conference Paper},
  doi           = {10.1109/MISE.2012.6226007},
  groups        = {Scopus, excluidos},
  journal       = {2012 4th International Workshop on Modeling in Software Engineering, MiSE 2012 - Proceedings},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865030071&partnerID=40&md5=b8866d37fb87071a9a6e12606d1ffa37},
}

@Conference{Hadar2012228,
  author        = {Hadar, E. and Hadar, I. and Ferguson, D.F.},
  title         = {QDSL - Quality domain specific language for cloud composite applications: Short research paper},
  year          = {2012},
  pages         = {228-233},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CLOSER 2012 - Proceedings of the 2nd International Conference on Cloud Computing and Services Science},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864885221&partnerID=40&md5=294ad7a62d20a83806eba73f294a6015},
}

@Article{Rusu2012214,
  author        = {Rusu, V. and Lucanu, D.},
  title         = {A K-based formal framework for domain-specific modelling languages},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7421 LNCS},
  pages         = {214-231},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31762-0_14},
  groups        = {Scopus,, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864836809&partnerID=40&md5=c03c9c06b8871993ca9425ad7d49984a},
}

@Article{Sulzmann2012241,
  author        = {Sulzmann, M. and Zechner, A.},
  title         = {Model checking DSL-generated C source code},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7385 LNCS},
  pages         = {241-247},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31759-0_18},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864847442&partnerID=40&md5=d4ece09c12c3d97573e75e24b2e3cda8},
}

@Conference{Lai2012,
  author        = {Lai, Q. and Carpenter, A.},
  title         = {Defining and verifying behaviour of domain specific language with fUML},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2325276.2325277},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864832237&partnerID=40&md5=dbe3938891e70c6afbcb34522a79494e},
}

@Article{2012d,
  title         = {Model Checking Software - 19th International Workshop, SPIN 2012, Proceedings},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7385 LNCS},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  keywords      = {rank5},
  page_count    = {269},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864859128&partnerID=40&md5=ca279455b9aff760ae63c69fd85d7612},
}

@Conference{Li201232,
  author        = {Li, H. and Thompson, S.},
  title         = {Let's make refactoring tools user-extensible!},
  year          = {2012},
  pages         = {32-39},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2328876.2328881},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864718577&partnerID=40&md5=97e941b4345cae7ce6b5efaf679a91d0},
}

@Article{Guo2012,
  author        = {Guo, H. and Xu, C. and Zhou, T. and Block, T.M. and Guo, J.-T.},
  title         = {Characterization of the host factors required for hepadnavirus covalently closed circular (ccc) DNA formation},
  journal       = {PLoS ONE},
  year          = {2012},
  volume        = {7},
  number        = {8},
  note          = {cited By 11},
  art_number    = {e43270},
  document_type = {Article},
  doi           = {10.1371/journal.pone.0043270},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865060138&partnerID=40&md5=823623bedba1357aeed7bb4592479cb5},
}

@Conference{Prähofer2012293,
  author        = {Prähofer, H. and Hurnaus, D.},
  title         = {Leveraging formal verification techniques for design-time animation of reactive control programs},
  year          = {2012},
  pages         = {293-300},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.2316/P.2012.772-016},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the IASTED International Conference on Human-Computer Interaction, HCI 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864590379&partnerID=40&md5=48ca4773232e4b88dcee31971fb7171f},
}

@Article{Cabot201258,
  author        = {Cabot, J. and Gogolla, M.},
  title         = {Object constraint language (OCL): A definitive guide},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7320 LNCS},
  pages         = {58-90},
  note          = {cited By 13},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30982-3_3},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864335230&partnerID=40&md5=782d6e4777f72ad302018b05eb1a36be},
}

@Conference{Hallenberg201296,
  author        = {Hallenberg, N. and Carlsen, P.L.},
  title         = {Declarative automated test},
  year          = {2012},
  pages         = {96-102},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6228998},
  document_type = {Conference Paper},
  doi           = {10.1109/IWAST.2012.6228998},
  groups        = {IEEE, ACM, Duplicados},
  journal       = {2012 7th International Workshop on Automation of Software Test, AST 2012 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864262119&partnerID=40&md5=6fba474838f980d3b1f43d2a9c453f49},
}

@Conference{Song2012694,
  author        = {Song, M. and Tilevich, E.},
  title         = {Metadata invariants: Checking and inferring metadata coding conventions},
  year          = {2012},
  pages         = {694-704},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  art_number    = {6227148},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSE.2012.6227148},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864224509&partnerID=40&md5=9ffe40d3e2d85e40a44e95ffde6d1bdf},
}

@Conference{Song20121455,
  author        = {Song, M. and Tilevich, E.},
  title         = {Detecting metadata bugs on the fly},
  year          = {2012},
  pages         = {1455-1456},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6227067},
  document_type = {Conference Paper},
  doi           = {10.1109/ICSE.2012.6227067},
  groups        = {ACM, Duplicados},
  journal       = {Proceedings - International Conference on Software Engineering},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864243594&partnerID=40&md5=dbfa16c3f28a9984f166195be33275fa},
}

@Conference{Ratiu20129,
  author        = {Ratiu, D. and Schaetz, B. and Voelter, M. and Kolb, B.},
  title         = {Language engineering as an enabler for incrementally defined formal analyses},
  year          = {2012},
  pages         = {9-15},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  art_number    = {6229790},
  document_type = {Conference Paper},
  doi           = {10.1109/FormSERA.2012.6229790},
  groups        = {ACM, Duplicados},
  journal       = {2012 1st International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches, FormSERA 2012 - Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864218437&partnerID=40&md5=bd0a18ca72f57ba4176d50e7b113a1b1},
}

@Article{Selim201290,
  author        = {Selim, G.M.K. and Wang, S. and Cordy, J.R. and Dingel, J.},
  title         = {Model transformations for migrating legacy models: An industrial case study},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7349 LNCS},
  pages         = {90-101},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31491-9_9},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864032899&partnerID=40&md5=634ec71a6c78e28bab9bbc4b5775728d},
}

@Article{Burton2012428,
  author        = {Burton, F.R. and Paige, R.F. and Rose, L.M. and Kolovos, D.S. and Poulding, S. and Smith, S.},
  title         = {Solving acquisition problems using model-driven engineering},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7349 LNCS},
  pages         = {428-443},
  note          = {cited By 4},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31491-9_32},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864039408&partnerID=40&md5=b8d74c27d3dacedd3a669a3414f53a97},
}

@Article{DeLara2012259,
  author        = {De Lara, J. and Guerra, E.},
  title         = {Domain-specific textual meta-modelling languages for model driven engineering},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7349 LNCS},
  pages         = {259-274},
  note          = {cited By 5},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31491-9_20},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864067244&partnerID=40&md5=54b5a9522040936ce5359bf68abc31d7},
}

@Article{Ráth2012102,
  author        = {Ráth, I. and Hegedüs, Á. and Varró, D.},
  title         = {Derived features for EMF by integrating advanced model queries},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7349 LNCS},
  pages         = {102-117},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31491-9_10},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864056926&partnerID=40&md5=8673d8b0c036040893e3c495dfc0be5b},
}

@Conference{Haitzer201261,
  author        = {Haitzer, T. and Zdun, U.},
  title         = {DSL-based support for semi-automated architectural component model abstraction throughout the software lifecycle},
  year          = {2012},
  pages         = {61-70},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2304696.2304709},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {QoSA'12 - Proceedings of the 8th International ACM SIGSOFT Conference on the Quality of Software Architectures},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864058810&partnerID=40&md5=4da5a3401317e4815d8e54292a0998cc},
}

@Conference{Simic2012,
  author        = {Simic, H.},
  title         = {Predicate trees: A tool for descriptive subgraph extraction},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {24},
  document_type = {Conference Paper},
  doi           = {10.1145/2254129.2254160},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863911642&partnerID=40&md5=60a81e7f013f537f1321d6ae001f06c7},
}

@Conference{Hlaoui2012,
  author        = {Hlaoui, Y.B. and Ben Ayed, L.J. and Ben Fradj, I.},
  title         = {A model driven approach to compose and develop Grid service workflow applications},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6216638},
  document_type = {Conference Paper},
  doi           = {10.1109/ICITeS.2012.6216638},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {2012 International Conference on Information Technology and e-Services, ICITeS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863655025&partnerID=40&md5=524d138c1d23b155c0dee84d62b1d7df},
}

@Conference{Perrone20121320,
  author        = {Perrone, G. and Debois, S. and Hildebrandt, T.T.},
  title         = {A model checker for bigraphs},
  year          = {2012},
  pages         = {1320-1325},
  note          = {cited By 15},
  document_type = {Conference Paper},
  doi           = {10.1145/2245276.2231985},
  groups        = {Scopus,, excluidos},
  journal       = {Proceedings of the ACM Symposium on Applied Computing},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863594592&partnerID=40&md5=5ebb4824fb77d38c820de9ef85bb2929},
}

@Conference{Günter2012528,
  author        = {Günter, M.},
  title         = {Introducing MapLan to map banking survey data into a time series database},
  year          = {2012},
  pages         = {528-533},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2247596.2247658},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {ACM International Conference Proceeding Series},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863505046&partnerID=40&md5=e993f4d8681992aa81b036dca6797d72},
}

@Article{Lamo201237,
  author        = {Lamo, Y. and Wang, X. and Mantz, F. and MacCaull, W. and Rutle, A.},
  title         = {DPF Workbench: A diagrammatic multi-layer domain specific (meta-)modelling environment},
  journal       = {Studies in Computational Intelligence},
  year          = {2012},
  volume        = {429},
  pages         = {37-52},
  note          = {cited By 14},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30454-5_3},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863188824&partnerID=40&md5=d11005a7a2b538152f076a9f95f117c1},
}

@Article{Perrouin2012361,
  author        = {Perrouin, G. and Vanwormhoudt, G. and Morin, B. and Lahire, P. and Barais, O. and Jézéquel, J.-M.},
  title         = {Weaving variability into domain metamodels},
  journal       = {Software and Systems Modeling},
  year          = {2012},
  volume        = {11},
  number        = {3},
  pages         = {361-383},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-010-0186-4},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84863214077&partnerID=40&md5=35f8258c1d7020bb27b564513ffbfa84},
}

@Article{Nebeling2012447,
  author        = {Nebeling, M. and Grossniklaus, M. and Leone, S. and Norrie, M.C.},
  title         = {XCML: Providing context-aware language extensions for the specification of multi-device web applications},
  journal       = {World Wide Web},
  year          = {2012},
  volume        = {15},
  number        = {4},
  pages         = {447-481},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s11280-011-0152-2},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84858284409&partnerID=40&md5=bbb8aea6162dec236d14df78aae3233c},
}

@Article{Ragan-Kelley2012,
  author        = {Ragan-Kelley, J. and Adams, A. and Paris, S. and Levoy, M. and Amarasinghe, S. and Durand, F.},
  title         = {Decoupling algorithms from schedules for easy optimization of image processing pipelines},
  journal       = {ACM Transactions on Graphics},
  year          = {2012},
  volume        = {31},
  number        = {4},
  note          = {cited By 52},
  __markedentry = {[Neto:5]},
  art_number    = {32},
  document_type = {Article},
  doi           = {10.1145/2185520.2185528},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84869413301&partnerID=40&md5=590828f1fc2a59f6f3ce786e0b0cdc8d},
}

@Conference{Gargantini2012559,
  author        = {Gargantini, A. and Vavassori, P.},
  title         = {CITLAB: A laboratory for combinatorial interaction testing},
  year          = {2012},
  pages         = {559-568},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  art_number    = {6200153},
  document_type = {Conference Paper},
  doi           = {10.1109/ICST.2012.141},
  groups        = {ACM, IEEE, Duplicados},
  journal       = {Proceedings - IEEE 5th International Conference on Software Testing, Verification and Validation, ICST 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862305264&partnerID=40&md5=dcf97854033455e1d0188786bdeb22c0},
}

@Conference{Mészáros2012954,
  author        = {Mészáros, T. and Levendovszky, T.},
  title         = {Verified operational patterns with graph transformation},
  year          = {2012},
  pages         = {954-961},
  note          = {cited By 0},
  art_number    = {6200121},
  document_type = {Conference Paper},
  doi           = {10.1109/ICST.2012.201},
  groups        = {ACM, excluidos},
  journal       = {Proceedings - IEEE 5th International Conference on Software Testing, Verification and Validation, ICST 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862321782&partnerID=40&md5=13d54296699b3bbf99119ac31cdbb320},
}

@Article{Cazzola2012162,
  author        = {Cazzola, W.},
  title         = {Domain-specific languages in few steps: The Neverlang approach},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7306 LNCS},
  pages         = {162-177},
  note          = {cited By 17},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30564-1_11},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862239087&partnerID=40&md5=46be630ecb2a8fd0ef1e7aca6bf4b2bf},
}

@Article{Ansaloni201286,
  author        = {Ansaloni, D. and Binder, W. and Bockisch, C. and Bodden, E. and Hatun, K. and Marek, L. and Qi, Z. and Sarimbekov, A. and Sewe, A. and Tůma, P. and Zheng, Y.},
  title         = {Challenges for refinement and composition of instrumentations: Position paper},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7306 LNCS},
  pages         = {86-96},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30564-1_6},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862197109&partnerID=40&md5=f3443ed2ba6561b491810503d9816501},
}

@Article{George2012160,
  author        = {George, L. and Wider, A. and Scheidgen, M.},
  title         = {Type-safe model transformation languages as internal DSLs in Scala},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7307 LNCS},
  pages         = {160-175},
  note          = {cited By 9},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30476-7_11},
  groups        = {ACM, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862214370&partnerID=40&md5=151860637f1a889ac02af87c93c5d9ab},
}

@Article{Zheng2012353,
  author        = {Zheng, Y. and Ansaloni, D. and Marek, L. and Sewe, A. and Binder, W. and Villazón, A. and Tuma, P. and Qi, Z. and Mezini, M.},
  title         = {Turbo DiSL: Partial evaluation for high-level bytecode instrumentation},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7304 LNCS},
  pages         = {353-368},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30561-0_24},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862170550&partnerID=40&md5=701ac8173bfced10653da897df49ae78},
}

@Article{TrancónYWidemann2012240,
  author        = {Trancón Y Widemann, B. and Lepper, M.},
  title         = {Paisley: Pattern matching à la Carte},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7307 LNCS},
  pages         = {240-247},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-30476-7_16},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862174380&partnerID=40&md5=3030a64281db7b7fa32480c0e2ba16f0},
}

@Article{Nilsson2012354,
  author        = {Nilsson, A. and Hedin, G.},
  title         = {Metacompiling OWL ontologies},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {6940 LNCS},
  pages         = {354-366},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-28830-2_20},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861633230&partnerID=40&md5=5878a3ade90af3e89006a752c13ec960},
}

@Article{Kling2012180,
  author        = {Kling, W. and Jouault, F. and Wagelaar, D. and Brambilla, M. and Cabot, J.},
  title         = {MoScript: A DSL for querying and manipulating model repositories},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {6940 LNCS},
  pages         = {180-200},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-28830-2_10},
  groups        = {Scopus, Inclusos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861618093&partnerID=40&md5=a66302d45a84e298ffdf367a68f2973b},
}

@Article{Hayashi20121645,
  author        = {Hayashi, Y. and Mori, Y. and Yamashita, S. and Motoyama, K. and Higashi, T. and Jono, H. and Ando, Y. and Arima, H.},
  title         = {Potential use of lactosylated dendrimer (G3)/α-cyclodextrin conjugates as hepatocyte-specific siRNA carriers for the treatment of familial amyloidotic polyneuropathy},
  journal       = {Molecular Pharmaceutics},
  year          = {2012},
  volume        = {9},
  number        = {6},
  pages         = {1645-1653},
  note          = {cited By 26},
  document_type = {Article},
  doi           = {10.1021/mp200654g},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862013499&partnerID=40&md5=d14a61dc8786c9424bf47814546ebd51},
}

@Article{Selim2012292,
  author        = {Selim, A.A. and Sobh, K. and Fathy, S.M.},
  title         = {Hand-arm vibration syndrome clinical and neuro-physiological studies},
  journal       = {Australian Journal of Basic and Applied Sciences},
  year          = {2012},
  volume        = {6},
  number        = {6},
  pages         = {292-299},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867187799&partnerID=40&md5=cc0a2e09307e62526849d1dc534827c5},
}

@Conference{Tariq2012151,
  author        = {Tariq, M.U. and Nasir, H.A. and Muhammad, A. and Wolf, M.},
  title         = {Model-driven performance analysis of large scale irrigation networks},
  year          = {2012},
  pages         = {151-160},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {6197397},
  document_type = {Conference Paper},
  doi           = {10.1109/ICCPS.2012.23},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - 2012 IEEE/ACM 3rd International Conference on Cyber-Physical Systems, ICCPS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861503833&partnerID=40&md5=c07fc8dc043eb55c7f1fd96206523f34},
}

@Conference{Barateiro2012673,
  author        = {Barateiro, J. and Borbinha, J.},
  title         = {Managing risk data: From spreadsheets to information systems},
  year          = {2012},
  pages         = {673-676},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6196521},
  document_type = {Conference Paper},
  doi           = {10.1109/MELCON.2012.6196521},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings of the Mediterranean Electrotechnical Conference - MELECON},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861494083&partnerID=40&md5=deab19319e630ee0111af803994889f3},
}

@Article{Iglberger2012,
  author        = {Iglberger, K. and Hager, G. and Treibig, J. and Rüde, U.},
  title         = {Expression templates revisited: A performance analysis of current methodologies},
  journal       = {SIAM Journal on Scientific Computing},
  year          = {2012},
  volume        = {34},
  number        = {2},
  note          = {cited By 11},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1137/110830125},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861415840&partnerID=40&md5=4d8a0b27c52f6c79a02b9465d5a0d06a},
}

@Article{Wertlen2012,
  author        = {Wertlen, R. and Siebörger, I. and Tsietsi, M. and Shibeshi, Z. and Terzoli, A.},
  title         = {Research testbed networks: Practical tools for service delivery?},
  journal       = {Electronic Journal of Information Systems in Developing Countries},
  year          = {2012},
  volume        = {50},
  number        = {1},
  note          = {cited By 1},
  art_number    = {1},
  document_type = {Article},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861320218&partnerID=40&md5=4d7140a3bddd1934c682018676961bae},
}

@Conference{Hill201243,
  author        = {Hill, J.H.},
  title         = {Using parameterized attributes to improve testing capabilities with domain-Specific Modeling Languages},
  year          = {2012},
  pages         = {43-51},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6195167},
  document_type = {Conference Paper},
  doi           = {10.1109/ECBS.2012.47},
  groups        = {Compendex, Duplicados},
  journal       = {Proceedings - 2012 IEEE 19th International Conference and Workshops on Engineering of Computer-Based Systems, ECBS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862112677&partnerID=40&md5=2110b806b6118f9333fa584417932fe4},
}

@Conference{Dreesen2012222,
  author        = {Dreesen, R.},
  title         = {ViDL: A versatile ISA description language},
  year          = {2012},
  pages         = {222-231},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  art_number    = {6195190},
  document_type = {Conference Paper},
  doi           = {10.1109/ECBS.2012.49},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - 2012 IEEE 19th International Conference and Workshops on Engineering of Computer-Based Systems, ECBS 2012},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862062590&partnerID=40&md5=298083b9d551409eae55850561581b97},
}

@Conference{Cappiello2012473,
  author        = {Cappiello, C. and Matera, M. and Picozzi, M. and Caio, A. and Guevara, M.T.},
  title         = {MobiMash: End User Development for mobile mashups},
  year          = {2012},
  pages         = {473-474},
  note          = {cited By 7},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2187980.2188083},
  groups        = {ACM, Duplicados},
  journal       = {WWW'12 - Proceedings of the 21st Annual Conference on World Wide Web Companion},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861056066&partnerID=40&md5=8d833e658bfad0c35129f3d2075b9bc7},
}

@Article{Lúcio2012183,
  author        = {Lúcio, L. and Weißleder, S. and Fondement, F. and Cichos, H.},
  title         = {MoDeVVa 2011 workshop summary},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7167 LNCS},
  pages         = {183-186},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-29645-1_19},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860631640&partnerID=40&md5=23349aee5e256d8cb391d7ededb03397},
}

@Article{Raji2012202,
  author        = {Raji, A. and Dhaussy, P.},
  title         = {Use cases for context aware model-checking},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7167 LNCS},
  pages         = {202-216},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-29645-1_21},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860629540&partnerID=40&md5=9fcbf571161eddd8bf2e7d800505f47f},
}

@Conference{Marek2012239,
  author        = {Marek, L. and Villazon, A. and Zheng, Y. and Ansaloni, D. and Binder, W. and Qi, Z.},
  title         = {DiSL: A domain-specific language for bytecode instrumentation},
  year          = {2012},
  pages         = {239-250},
  note          = {cited By 36},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2162049.2162077},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {AOSD'12 - Proceedings of the 11th Annual International Conference on Aspect Oriented Software Development},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860475412&partnerID=40&md5=d93fc348c1fd724c8b9498c6129d5b68},
}

@Conference{Apter201247,
  author        = {Apter, Y. and Lorenz, D.H. and Mishali, O.},
  title         = {A debug interface for debugging multiple domain specific aspect languages},
  year          = {2012},
  pages         = {47-58},
  note          = {cited By 3},
  document_type = {Conference Paper},
  doi           = {10.1145/2162049.2162056},
  groups        = {IEEE,, Inclusos},
  journal       = {AOSD'12 - Proceedings of the 11th Annual International Conference on Aspect Oriented Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860487313&partnerID=40&md5=1f49779d0a6a6c6d03c0a9371a6a4c7a},
}

@Conference{Coutinho201227,
  author        = {Coutinho, J.G.F. and Carvalho, T. and Durand, S. and Cardoso, J.M.P. and Nobre, R. and Diniz, P.C. and Luk, W.},
  title         = {Experiments with the LARA aspect-oriented approach},
  year          = {2012},
  pages         = {27-30},
  note          = {cited By 4},
  document_type = {Conference Paper},
  doi           = {10.1145/2162110.2162129},
  groups        = {Scopus, excluidos},
  journal       = {AOSD'12 Companion - Proceedings of the 11th Annual International Conference on Aspect Oriented Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860487284&partnerID=40&md5=469069a6fb505fdc9b043e00a5afcae2},
}

@Conference{Cardoso2012179,
  author        = {Cardoso, J.M.P. and Carvalho, T. and Coutinho, J.G.F. and Luk, W. and Nobre, R. and Diniz, P.C. and Petrov, Z.},
  title         = {LARA: An aspect-oriented programming language for embedded systems},
  year          = {2012},
  pages         = {179-190},
  note          = {cited By 32},
  document_type = {Conference Paper},
  doi           = {10.1145/2162049.2162071},
  groups        = {Scopus, excluidos},
  journal       = {AOSD'12 - Proceedings of the 11th Annual International Conference on Aspect Oriented Software Development},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84860455879&partnerID=40&md5=9d12616f6200632fc75275168ba16ab6},
}

@Article{2012e,
  title         = {Reconfigurable Computing: Architectures, Tools and Applications - 8th International Symposium, ARC 2012, Proceedings},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7199 LNCS},
  note          = {cited By 0},
  document_type = {Conference Review},
  groups        = {Scopus},
  keywords      = {rank5},
  page_count    = {385},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859455507&partnerID=40&md5=1bb75fd1635fcb3286bbb0a9b7bda108},
}

@Article{Li2012501,
  author        = {Li, H. and Thompson, S.},
  title         = {A domain-specific language for scripting refactorings in Erlang},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7212 LNCS},
  pages         = {501-515},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-28872-2_34},
  groups        = {ACM, Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859150236&partnerID=40&md5=5ecb13adc26bd7d31404996c85ea7bfd},
}

@Article{Liu201219,
  author        = {Liu, S.-H. and Cardenas, A. and Mernik, M. and Bryant, B.R. and Gray, J. and Xiong, X.},
  title         = {Introducing domain-specific language implementation using web service-oriented technologies},
  journal       = {Multiagent and Grid Systems},
  year          = {2012},
  volume        = {8},
  number        = {1},
  pages         = {19-44},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.3233/MGS-2012-0183},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859048061&partnerID=40&md5=823cede71d8537b06e946284f26ac999},
}

@Article{Kos2012,
  author        = {Kos, T. and Kosar, T. and Mernik, M.},
  title         = {Development of data acquisition systems by using a domain-specific modeling language},
  journal       = {Computers in Industry},
  year          = {2012},
  volume        = {63},
  number        = {3},
  pages         = {181-192},
  note          = {cited By 11},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1016/j.compind.2011.09.004},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857786912&partnerID=40&md5=0217a81aac57ee8ec8ffc2d4e9927543},
}

@Article{Ressia2012,
  author        = {Ressia, J. and Bergel, A. and Nierstrasz, O. and Renggli, L.},
  title         = {Modeling domain-specific profilers},
  journal       = {Journal of Object Technology},
  year          = {2012},
  volume        = {11},
  number        = {1},
  note          = {cited By 1},
  art_number    = {a5},
  document_type = {Article},
  doi           = {10.5381/jot.2012.11.1.a5},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861680394&partnerID=40&md5=ce916bcc482d9e54fa20d0a174c8f029},
}

@Article{Langer2012,
  author        = {Langer, P. and Wieland, K. and Wimmer, M. and Cabot, J.},
  title         = {EMF profiles: A lightweight extension approach for EMF models},
  journal       = {Journal of Object Technology},
  year          = {2012},
  volume        = {11},
  number        = {1},
  note          = {cited By 24},
  art_number    = {a8},
  document_type = {Article},
  doi           = {10.5381/jot.2012.11.1.a8},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84861652844&partnerID=40&md5=75543cb06ec1340dc4d0394b1ae3b8aa},
}

@Article{Ubayashi2012942,
  author        = {Ubayashi, N. and Kamei, Y.},
  title         = {An extensible aspect-oriented modeling environment for constructing domain-specific languages},
  journal       = {IEICE Transactions on Information and Systems},
  year          = {2012},
  volume        = {E95-D},
  number        = {4},
  pages         = {942-958},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1587/transinf.E95.D.942},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84859350849&partnerID=40&md5=7c20698029c9a335b9930b6482eb1c2f},
}

@Article{García-Díaz2012127,
  author        = {García-Díaz, V. and G-Bustelo, B.C.P. and Sanjuán-Martínez, O. and Valdez, E.R.N. and Lovelle, J.M.C.},
  title         = {MCTest: Towards an improvement of match algorithms for models},
  journal       = {IET Software},
  year          = {2012},
  volume        = {6},
  number        = {2},
  pages         = {127-139},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1049/iet-sen.2011.0040},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84862107922&partnerID=40&md5=d489bcb4fd009664737f4b1db9efbbfc},
}

@Article{Hrnčič2012692,
  author        = {Hrnčič, D. and Mernik, M. and Bryant, B.R.},
  title         = {Improving grammar inference by a memetic algorithm},
  journal       = {IEEE Transactions on Systems, Man and Cybernetics Part C: Applications and Reviews},
  year          = {2012},
  volume        = {42},
  number        = {5},
  pages         = {692-703},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  art_number    = {6168851},
  document_type = {Article},
  doi           = {10.1109/TSMCC.2012.2186802},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84865429936&partnerID=40&md5=c1ac347b0bd7205540bcf7ce5b4c8fe3},
}

@Article{Parfieniuk201283,
  author        = {Parfieniuk, M. and Kazberuk, M. and Kowalewski, K.},
  title         = {A compiler for a domain-specific language for rapid implementation of DSP transforms and filter banks},
  journal       = {Studies in Computational Intelligence},
  year          = {2012},
  volume        = {401},
  pages         = {83-100},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1007/978-3-642-27446-6_8},
  groups        = {Scopus,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84858056334&partnerID=40&md5=35d19f1293b3d648bd10979e0949b629},
}

@Article{Kowalewski201235,
  author        = {Kowalewski, K. and Parfieniuk, M. and Świda, O. and Kazberuk, M.},
  title         = {Evaluation of docbook 5.0 in documenting research applications},
  journal       = {Studies in Computational Intelligence},
  year          = {2012},
  volume        = {401},
  pages         = {35-48},
  note          = {cited By 0},
  document_type = {Article},
  doi           = {10.1007/978-3-642-27446-6_4},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84858060544&partnerID=40&md5=84dc6237ccc887cea5780ef0ae078a48},
}

@Conference{Ureche201273,
  author        = {Ureche, V. and Rompf, T. and Sujeeth, A. and Chafi, H. and Odersky, M.},
  title         = {StagedSAC: A case study in performance-oriented DSL development},
  year          = {2012},
  pages         = {73-82},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857855320&partnerID=40&md5=b6c0df8a0be1d0d65e993cb6e128ac93},
}

@Conference{Klein2012285,
  author        = {Klein, C. and Clements, J. and Dimoulas, C. and Eastlund, C. and Felleisen, M. and Flatt, M. and McCarthy, J.A. and Rafkind, J. and Tobin-Hochstadt, S. and Findler, R.B.},
  title         = {Run your research: On the effectiveness of lightweight mechanization},
  year          = {2012},
  pages         = {285-296},
  note          = {cited By 12},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2103656.2103691},
  groups        = {Compendex, ACM, Duplicados},
  journal       = {Conference Record of the Annual ACM Symposium on Principles of Programming Languages},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857829551&partnerID=40&md5=f9ea92ea6965e8d366652e5135fd35c2},
}

@Conference{Schneider2012785,
  author        = {Schneider, O. and Dutchyn, C. and Osgood, N.},
  title         = {Towards Frabjous: A two-level system for functional reactive agent-based epidemic simulation},
  year          = {2012},
  pages         = {785-789},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2110363.2110458},
  groups        = {ACM, Duplicados},
  journal       = {IHI'12 - Proceedings of the 2nd ACM SIGHIT International Health Informatics Symposium},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857700314&partnerID=40&md5=b61b5757259841907b86e2adae7bd7f4},
}

@Article{Lindeman2012127,
  author        = {Lindeman, R.T. and Kats, L.C.L. and Visser, E.},
  title         = {Declaratively Defining Domain-Specific Language Debuggers},
  journal       = {ACM SIGPLAN Notices},
  year          = {2012},
  volume        = {47},
  number        = {3},
  pages         = {127-136},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2189751.2047885},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867508328&partnerID=40&md5=7adbbc110c40d655ab73a9b0f6ee67ba},
}

@Article{Mannadiar201265,
  author        = {Mannadiar, R. and Vangheluwe, H.},
  title         = {Modular artifact synthesis from domain-specific models},
  journal       = {Innovations in Systems and Software Engineering},
  year          = {2012},
  volume        = {8},
  number        = {1},
  pages         = {65-77},
  note          = {cited By 1},
  document_type = {Article},
  doi           = {10.1007/s11334-011-0157-0},
  groups        = {Scopus, Duvida},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856289498&partnerID=40&md5=b918704df48466ee923bbd031a449bf3},
}

@Article{Erdweg2012167,
  author        = {Erdweg, S. and Katsy, L.C.L. and Rendel, T. and Kästner, C. and Ostermann, K. and Vissery, E.},
  title         = {Growing a language environment with editor libraries},
  journal       = {ACM SIGPLAN Notices},
  year          = {2012},
  volume        = {47},
  number        = {3},
  pages         = {167-176},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2189751.2047891},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867537889&partnerID=40&md5=00d0e4dd307ae37c3268d4ac6cc59733},
}

@Article{CanovasIzquierdo2012,
  author        = {Cánovas Izquierdo, J.L. and Jouault, F. and Cabot, J. and García Molina, J.},
  title         = {API2MoL: Automating the building of bridges between APIs and Model-Driven Engineering},
  journal       = {Information and Software Technology},
  year          = {2012},
  volume        = {54},
  number        = {3},
  pages         = {257-273},
  note          = {cited By 11},
  document_type = {Article},
  doi           = {10.1016/j.infsof.2011.09.006},
  groups        = {ScienceDirect,, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855653094&partnerID=40&md5=26369b1adfd3ec407d05c77d62950e88},
}

@Article{Montenegro-Marín201223,
  author        = {Montenegro-Marín, C.E. and Cueva-Lovelle, J.M. and Sanjuán-Martínez, O. and García-Díaz, V.},
  title         = {Domain Specific Language for the generation of Learning Management Systems modules},
  journal       = {Journal of Web Engineering},
  year          = {2012},
  volume        = {11},
  number        = {1},
  pages         = {23-50},
  note          = {cited By 3},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  groups        = {Compendex, ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856244142&partnerID=40&md5=63f52dd70b235d7da21adc6b58bb036c},
}

@Article{Arora20121079,
  author        = {Arora, R. and Bangalore, P. and Mernik, M.},
  title         = {Raising the level of abstraction for developing message passing applications},
  journal       = {Journal of Supercomputing},
  year          = {2012},
  volume        = {59},
  number        = {2},
  pages         = {1079-1100},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s11227-010-0490-3},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855671508&partnerID=40&md5=d63896374c9a156261e5b5071da1fd4e},
}

@Article{Giavitto201219,
  author        = {Giavitto, J.-L.},
  title         = {The modeling and the simulation of the fluid machines of synthetic biology},
  journal       = {Lecture Notes in Computer Science (including subseries Lecture Notes in Artificial Intelligence and Lecture Notes in Bioinformatics)},
  year          = {2012},
  volume        = {7184 LNCS},
  pages         = {19-34},
  note          = {cited By 1},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-28024-5_3},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84856118515&partnerID=40&md5=9228aaa8bd96d87b3e04dc13ecda3a14},
}

@Article{Lace201270,
  author        = {Lace, L. and Liepiņš, R. and Rencis, E.},
  title         = {Architecture and language for semantic reduction of domain-specific models in BPMS},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2012},
  volume        = {128 LNBIP},
  pages         = {70-84},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33281-4_6},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84867725004&partnerID=40&md5=f6f6db0a65984a7cf2ae74f4017bee45},
}

@Article{Blouin2012321,
  author        = {Blouin, A. and Combemale, B. and Baudry, B. and Beaudoux, O.},
  title         = {Kompren: modeling and generating model slicers},
  journal       = {Software and Systems Modeling},
  year          = {2012},
  volume        = {14},
  number        = {1},
  pages         = {321-337},
  note          = {cited By 4},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1007/s10270-012-0300-x},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84922337702&partnerID=40&md5=39d8e0d914f3ba355dec834114054302},
}

@Conference{Cho2012705,
  author        = {Cho, H. and Gray, J. and Syriani, E.},
  title         = {Syntax map: A modeling language for capturing requirements of graphical DSML},
  year          = {2012},
  volume        = {1},
  pages         = {705-708},
  note          = {cited By 1},
  __markedentry = {[Neto:5]},
  art_number    = {6462730},
  document_type = {Conference Paper},
  doi           = {10.1109/APSEC.2012.20},
  groups        = {Scopus, Duplicados},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874631313&partnerID=40&md5=75b00a38e33a41301551c4bca11b0247},
}

@Conference{Combemale2012282,
  author        = {Combemale, B. and Crégut, X. and Pantel, M.},
  title         = {A design pattern to build executable DSMLs and associated V \&amp; V tools},
  year          = {2012},
  volume        = {1},
  pages         = {282-287},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  art_number    = {6462664},
  document_type = {Conference Paper},
  doi           = {10.1109/APSEC.2012.79},
  groups        = {Compendex, IEEE, Duplicados},
  journal       = {Proceedings - Asia-Pacific Software Engineering Conference, APSEC},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84874632560&partnerID=40&md5=c2ebe0412a09509ae9f23d6f8c98544c},
}

@Conference{Barnett2012157,
  author        = {Barnett, R.J. and Cowley, C.},
  title         = {A ruby domain specific language (DSL) for web mashups},
  year          = {2012},
  pages         = {157-164},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus,, Inclusos},
  journal       = {Proceedings of the IADIS International Conference WWW/Internet 2012, ICWI 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84946063976&partnerID=40&md5=54551c1431cbc2a0fbcfcd5d21804d3f},
}

@Conference{2012f,
  title         = {ESM 2012 - 2012 European Simulation and Modelling Conference: Modelling and Simulation 2012},
  year          = {2012},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Duplicados},
  journal       = {ESM 2012 - 2012 European Simulation and Modelling Conference: Modelling and Simulation 2012},
  keywords      = {rank3},
  page_count    = {424},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84898956579&partnerID=40&md5=594015d963cef2a259b16b3e9fa1e93d},
}

@Article{Rabbi2012265,
  author        = {Rabbi, F. and MacCaull, W.},
  title         = {Model driven workflow development with T<inf>□</inf>},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2012},
  volume        = {112 LNBIP},
  pages         = {265-279},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-31069-0_23},
  groups        = {Compendex, SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84864697839&partnerID=40&md5=80ecdc76521ab95c29700366d759adbe},
}

@Article{Hernandez2012736,
  author        = {Hernandez, G.I. and Perez, B.L. and Fuente, A.A.J.},
  title         = {Specific modeling for procedures in eGovernment domain [Modelado específico de procedimientos en el dominio de la administración electrónica]},
  journal       = {RISTI - Revista Iberica de Sistemas e Tecnologias de Informacao},
  year          = {2012},
  volume        = {2012},
  number        = {9},
  pages         = {736},
  note          = {cited By 0},
  document_type = {Article},
  groups        = {Compendex, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84912150145&partnerID=40&md5=475543eb23d75e4b24b9daea39856a4a},
}

@Article{Hemingway2012217,
  author        = {Hemingway, G. and Neema, H. and Nine, H. and Sztipanovits, J. and Karsai, G.},
  title         = {Rapid synthesis of high-level architecture-based heterogeneous simulation: A model-based integration approach},
  journal       = {SIMULATION},
  year          = {2012},
  volume        = {88},
  number        = {2},
  pages         = {217-232},
  note          = {cited By 16},
  __markedentry = {[Neto:5]},
  document_type = {Article},
  doi           = {10.1177/0037549711401950},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84855646869&partnerID=40&md5=fae5ae68a5809615cc8538df773f9cea},
}

@Conference{Cabanillas201251,
  author        = {Cabanillas, C. and Del-Rió-ortega, A. and Resinas, M. and Ruiz-Cortés, A.},
  title         = {CRISTAL: Collection of resource-centric supporting tools and languages},
  year          = {2012},
  volume        = {936},
  pages         = {51-56},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84892658291&partnerID=40&md5=472693fd8e9ca781468e424d16647bf0},
}

@Article{Djuric20123,
  author        = {Djuric, D. and Devedzic, V.},
  title         = {Incorporating the ontology paradigm into software engineering: Enhancing domain-driven programming in Clojure/Java},
  journal       = {IEEE Transactions on Systems, Man and Cybernetics Part C: Applications and Reviews},
  year          = {2012},
  volume        = {42},
  number        = {1},
  pages         = {3-14},
  note          = {cited By 5},
  __markedentry = {[Neto:5]},
  art_number    = {5766765},
  document_type = {Article},
  doi           = {10.1109/TSMCC.2011.2140316},
  groups        = {ACM, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84655176389&partnerID=40&md5=406f32d984a5b3099d9a1c23f9f8dbfc},
}

@Conference{Magklaras201251,
  author        = {Magklaras, G. and Furnell, S.M.},
  title         = {The insider threat prediction and specification language},
  year          = {2012},
  pages         = {51-61},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings of the 9th International Network Conference, INC 2012},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84905277295&partnerID=40&md5=1ad947df4fd523c543cc2e49f30382f2},
}

@Article{2012g,
  title         = {Business Process Model and Notation - 4th International Workshop, BPMN 2012, Proceedings},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2012},
  volume        = {125 LNBIP},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  document_type = {Conference Review},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  page_count    = {134},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84911354264&partnerID=40&md5=505344c49b74b221312647ba7b216c6d},
}

@Article{Talaga2012103,
  author        = {Talaga, P.G. and Chapin, S.J.},
  title         = {Towards a guaranteed (X)HTML compliant dynamic web application},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2012},
  volume        = {101 LNBIP},
  pages         = {103-115},
  note          = {cited By 0},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-28082-5-8},
  groups        = {Scopus, excluidos},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84879719994&partnerID=40&md5=abf56b8517fb46bdbda62d9fc0a011fd},
}

@Article{Kopp201238,
  author        = {Kopp, O. and Binz, T. and Breitenbücher, U. and Leymann, F.},
  title         = {BPMN4TOSCA: A domain-specific language to model management plans for composite applications},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2012},
  volume        = {125 LNBIP},
  pages         = {38-52},
  note          = {cited By 12},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-33155-8_4},
  groups        = {Compendex, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84870341884&partnerID=40&md5=342a47eee4649bbd38fdd28235e85e4b},
}

@Conference{Wisely2012177,
  author        = {Wisely, M. and Leopold, J.L.},
  title         = {Semi-automated generation of domain-specific, natural language-based, visual programming languages},
  year          = {2012},
  pages         = {177-180},
  note          = {cited By 0},
  document_type = {Conference Paper},
  groups        = {Scopus, excluidos},
  journal       = {Proceedings: DMS 2012 - 18th International Conference on Distributed Multimedia Systems},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923861760&partnerID=40&md5=fbdf400b5c588893998704c53dd51844},
}

@Article{Klein2012,
  author        = {Klein, C. and Clements, J. and Dimoulas, C. and Eastlund, C. and Felleisen, M. and Flatt, M. and McCarthy, J.A. and Rafkind, J. and Sam, T.H. and Findler, R.B.},
  title         = {Run your research: On the effectiveness of lightweight mechanization},
  journal       = {ACM SIGPLAN Notices},
  year          = {2012},
  volume        = {47},
  number        = {1},
  pages         = {285-296},
  note          = {cited By 6},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1145/2103621.2103691},
  groups        = {Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84857163145&partnerID=40&md5=3349a36c2e3920cd12b09146f993f166},
}

@Article{Zikra2012172,
  author        = {Zikra, I.},
  title         = {Implementing the unifying meta-model for enterprise modeling and model-driven development: An experience report},
  journal       = {Lecture Notes in Business Information Processing},
  year          = {2012},
  volume        = {134 LNBIP},
  pages         = {172-187},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  doi           = {10.1007/978-3-642-34549-4-13},
  groups        = {SpingerLink, Duplicados},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84868368111&partnerID=40&md5=dcdfa1acb2776e3fab641703360516d1},
}

@Conference{Lavrischeva2012176,
  author        = {Lavrischeva, E. and Ostrovski, A. and Radetskiy, I.},
  title         = {Approach to e-learning fundamental aspects of software engineering},
  year          = {2012},
  volume        = {848},
  pages         = {176-187},
  note          = {cited By 2},
  __markedentry = {[Neto:5]},
  document_type = {Conference Paper},
  groups        = {Compendex, Duplicados},
  journal       = {CEUR Workshop Proceedings},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84872405555&partnerID=40&md5=df7c07b60bf40dc5084b84404635c182},
}

@Book{Falk2012210,
  title         = {Genome-wide ChIP-DSL profiling of promoter methylation patterns associated with cancer and stem cell differentiation},
  year          = {2012},
  author        = {Falk, J.D.},
  note          = {cited By 0},
  document_type = {Book Chapter},
  doi           = {10.1017/CBO9780511777271.020},
  groups        = {Scopus, excluidos},
  journal       = {Epigenomics: From Chromatin Biology to Therapeutics},
  pages         = {210-222},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84923479064&partnerID=40&md5=8ae2c41f18320c980081c8b51f9e024c},
}

@Article{Franky2016533,
  author          = {Franky, M.C.a and Pavlich-Mariscal, J.A.a and Acero, M.C.b and Zambrano, A.b and Olarte, J.C.c and Camargo, J.b and Pinzón, N.b},
  title           = {A practical experience of implementing a model driven environment in a software development organization},
  journal         = {International Journal of Web Information Systems},
  year            = {2016},
  volume          = {12},
  number          = {4},
  pages           = {533-556},
  note            = {cited By 0},
  __markedentry   = {[Neto:5]},
  abstract        = {Purpose - This purpose of this paper is to present ISML-MDE, a model-driven environment that includes ISML, a platform-independent modeling language for enterprise applications; ISML-GEN, a code generation framework to automatically generate code from models; and LionWizard, a tool to automatically integrate different components into a unified codebase. Design/methodology/approach - The development comprises five stages: standardizing architecture; refactoring and adapting existing components; automating their integration; developing a modeling language; and creating code generators. After development, model-to-code ratios in ISML-MDE are measured for different applications. Findings - The average model-to-code ratio is approximately 1:4.6 when using the code generators from arbitrary models. If a model transformation is performed previously to the code generation, this ratio raises to 1:115. The current validation efforts show that ISML properly supports several DSL essential characteristics described by Kahraman and Bilgen (2015). Research limitations/implications - ISML-MDE was tested on relatively small applications. Further validation of the approach requires measurement of development times and their comparison with previous similar projects, to determine the gains in productivity. Originality/value - The value of ISML-MDE can be summarized as follows: ISML-MDE has the potential to significantly reduce development times, because of an adequate use of models and transformations. The design of ISML-MDE addresses real-world development requirements, obtained from a tight interaction between the researchers and the software development company. The underlying process has been thoroughly documented and it is believed it can be used as a reference for future developments of MDE tools under similar conditions. © Emerald Group Publishing Limited.},
  affiliation     = {Dpto. de Ingeniería de Sistemas, Pontificia Universidad Javeriana, Bogota, Colombia; Heinsohn Business Technology, Bogota, Colombia; Pontificia Universidad Javeriana, Bogota, Colombia},
  author_keywords = {Code generation; Enterprise applications; Legacy components integration; Model-driven engineering; Xtext},
  document_type   = {Article},
  doi             = {10.1108/IJWIS-04-2016-0025},
  groups          = {Todos A, Duplicados},
  keywords        = {rank3},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994230374&partnerID=40&md5=ae2cd5acd22da30d9ae96a10c916039d},
}

@Conference{MoraSegura201679,
  author          = {Mora Segura, A.a and Pescador, A.a and De Lara, J.a and Wimmer, M.b},
  title           = {An extensible meta-modelling assistant},
  year            = {2016},
  pages           = {79-88},
  note            = {cited By 0},
  __markedentry   = {[Neto:5]},
  abstract        = {Meta-models play a pivotal role in Model-Driven Engineering (MDE). They are used to create domain-specific models, and to type model management operations like model transformations or code generators. However, even though creating meta-models is a common activity, it is currently mostly a manual activity, which does not profit from existing knowledge. In order to facilitate the meta-modelling task, we propose an extensible meta-modelling assistant. While primarily focussed on helping in the creation of meta- models, it can also help in creating models. The assistant permits the provision of heterogeneous data description sources (like ontologies, RDF data, XML schemas, database schemas and meta-models), and enables their uniform querying. Different kinds of queries are supported, and improved through synonym search. Query results are prioritized through sense disambiguation, can be graphically visualized, and incorporated into the (meta-)model being built. The assistant has been realized within Eclipse, and its architecture has been designed to be independent of the meta-modelling technology used. As a proof- of-concept, we show its integration within DSL-tao, a pattern-based meta-modelling tool built by our group, and two other tools developed by third-parties. The usefulness of the system is illustrated with a running example in the process modelling domain. © 2016 IEEE.},
  affiliation     = {Modelling and Software Engineering Research Group, Universidad Autónoma de Madrid, Spain; Business Informatics Group, TU Wien, Austria},
  art_number      = {7579377},
  author_keywords = {(Meta-)modelling environments; Domain-specific languages; Language engineering.; Meta-modelling; Meta-modelling assistant; Modelling},
  document_type   = {Conference Paper},
  doi             = {10.1109/EDOC.2016.7579377},
  groups          = {Todos A, Scopus, IEEE, Compendex, Duplicados},
  journal         = {Proceedings - 2016 IEEE 20th International Enterprise Distributed Object Computing Conference, EDOC 2016},
  keywords        = {rank3},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994399256&partnerID=40&md5=7904c207cc55d83336a7436b1ccee7c4},
}

@Article{Izquierdo2016,
  author          = {Izquierdo, J.L.C.a and Cabot, J.a b},
  title           = {Collaboro: A collaborative (meta) modeling tool},
  journal         = {PeerJ},
  year            = {2016},
  volume          = {2016},
  number          = {10},
  note            = {cited By 0},
  abstract        = {Software development is becoming more and more collaborative, emphasizing the role of end-users in the development process to make sure the final product will satisfy customer needs. This is especially relevant when developing Domain-Specific Modeling Languages (DSMLs), which are modeling languages specifically designed to carry out the tasks of a particular domain. While end-users are actually the experts of the domain for which a DSML is developed, their participation in the DSML specification process is still rather limited nowadays. In this paper, we propose a more community-aware language development process by enabling the active participation of all community members (both developers and end-users) from the very beginning. Our proposal, called Collaboro, is based on a DSML itself enabling the representation of change proposals during the language design and the discussion (and trace back) of possible solutions, comments and decisions arisen during the collaboration. Collaboro also incorporates a metric-based recommender system to help community members to define high-quality notations for the DSMLs. We also show how Collaboro can be used at the model-level to facilitate the collaborative specification of software models. Tool support is available both as an Eclipse plug-in a web-based solution. © 2016 Cánovas Izquierdo and Cabot.},
  affiliation     = {Universitat Oberta de Catalunya (UOC), Barcelona, Spain; Institució Catalana de Recerca i Estudis Avançats (ICREA), Barcelona, Spain},
  art_number      = {e84},
  author_keywords = {Collaborative development; Domain-specific languages; Model-driven development},
  document_type   = {Article},
  doi             = {10.7717/cs.84},
  groups          = {Todos A, Scopus, excluidos},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994568469&partnerID=40&md5=a1d83d99fc0889fce54c15aa5192f7c0},
}

@Article{López-Fernández2016104,
  author          = {López-Fernández, J.J. and Guerra, E. and de Lara, J.},
  title           = {Combining unit and specification-based testing for meta-model validation and verification},
  journal         = {Information Systems},
  year            = {2016},
  volume          = {62},
  pages           = {104-135},
  note            = {cited By 0},
  __markedentry   = {[Neto:5]},
  abstract        = {Meta-models play a cornerstone role in Model-Driven Engineering as they are used to define the abstract syntax of modelling languages, and so models and all sorts of model transformations depend on them. However, there are scarce tools and methods supporting their Validation and Verification (V&V), which are essential activities for the proper engineering of meta-models. In order to fill this gap, we propose two complementary meta-model V&V languages. The first one has similar philosophy to the xUnit framework, as it enables the definition of meta-model unit test suites comprising model fragments and assertions on their (in-)correctness. The second one is directed to express and verify expected properties of a meta-model, including domain and design properties, quality criteria and platform-specific requirements. As a proof of concept, we have developed tooling for both languages in the Eclipse platform, and illustrate its use within an example-driven approach for meta-model construction. The expressiveness of our languages is demonstrated by their application to build a library of meta-model quality issues, which has been evaluated over the ATL zoo of meta-models and some OMG specifications. The results show that integrated support for meta-model V&V (as the one we propose here) is urgently needed in meta-modelling environments. © 2016 Elsevier Ltd},
  affiliation     = {Computer Science Department, Universidad Autónoma de Madrid, Spain},
  author_keywords = {Domain-specific modelling languages; Meta-model quality; Meta-modelling; Model-driven engineering; Validation & verification},
  document_type   = {Article},
  doi             = {10.1016/j.is.2016.06.008},
  groups          = {Todos A, ScienceDirect, Duplicados},
  keywords        = {rank3},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994525407&partnerID=40&md5=68617b490ce6303540bf2486008043d6},
}

@Article{Rabbi201693,
  author          = {Rabbi, F.a b and Lamo, Y.a and Yu, I.C.b and Kristensen, L.M.a},
  title           = {Diagrammatic development of domain specific modelling languages with WebDPF},
  journal         = {International Journal of Information System Modeling and Design},
  year            = {2016},
  volume          = {7},
  number          = {3},
  pages           = {93-114},
  note            = {cited By 0},
  abstract        = {Domain specific modelling languages reduce the effort required to specify systems by providing higher level abstractions. Although this is a promising approach for reducing the complexity of system specifications, creating a new domain specific modelling language is a complex task. WebDPF is a web-based metamodelling tool that aims to reduce the effort required to develop domain specific modelling languages. The proposed technique is based on model transformations which enhances a modelling language with auto-completion. WebDPF supports multilevel metamodelling, diagrammatic specification of model constraints, and development, simulation and analysis of model transformation systems. The authors study the termination of the underlying model transformation systems and provide sufficient condition for termination. The tool is equipped with a scalable model navigation facility that enables a modeler to deal with large models. © 2016, IGI Global.},
  affiliation     = {Bergen University College, Bergen, Norway; University of Oslo, Oslo, Norway},
  author_keywords = {Domain specific modelling; Metamodelling; Model completion; Model driven engineering; Model transformation},
  document_type   = {Article},
  doi             = {10.4018/IJISMD.2016070105},
  groups          = {Todos A, Scopus, Inclusos},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994525217&partnerID=40&md5=be15c27b7f62049134c7cabfe8ee341f},
}

@Conference{Wortmann2016,
  author        = {Wortmann, A. and Beet, M.},
  title         = {Domain specific languages for efficient satellite control software development},
  year          = {2016},
  volume        = {SP-736},
  note          = {cited By 0},
  abstract      = {We present the motivation and an approach for the efficient development of satellite control software (flight software, onboard software) based on domain specific languages. Significant technological advances in the field of language workbenches have enabled us to develop extensions to the C programming language specific to the needs of satellite flight software. The approach is very promising as it combines the flexibility and efficiency of the C language with high-level abstractions known from modeling-tools and allows for additional adaptation specific to the space domain.},
  affiliation   = {OHB System AG, Universitätsallee 27-29, Bremen, Germany},
  document_type = {Conference Paper},
  groups        = {Todos A, Scopus, Inclusos},
  journal       = {European Space Agency, (Special Publication) ESA SP},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994252466&partnerID=40&md5=77729be0e402e6b330c04d07d7c2ea91},
}

@Conference{2016e,
  title         = {European Space Agency, (Special Publication) ESA SP},
  year          = {2016},
  volume        = {SP-736},
  note          = {cited By 0},
  abstract      = {The proceedings contain 54 papers. The topics discussed include: domain specific languages for efficient satellite control software development; porting of micropython to Leon platforms; inspector - a supporting tool for AIT/AIV phase; benefits of MBSE in the system to software transition; validating a timing simulator for the NGMP multicore processor; control loop processor (CLP) - platform for hard real-time space applications; and integrating FMEA in a model-driven methodology.},
  document_type = {Conference Review},
  groups        = {Todos A, excluidos},
  journal       = {European Space Agency, (Special Publication) ESA SP},
  page_count    = {312},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994332522&partnerID=40&md5=3dc2bd36c2e183db5bedd68a9dfe3ec6},
}

@Article{Bettini2016,
  author          = {Bettini, L.},
  title           = {Implementing type systems for the IDE with Xsemantics},
  journal         = {Journal of Logical and Algebraic Methods in Programming},
  year            = {2016},
  volume          = {85},
  number          = {5},
  pages           = {655-680},
  note            = {cited By 0},
  __markedentry   = {[Neto:5]},
  abstract        = {Xsemantics is a DSL for writing type systems, reduction rules and, in general, relation rules for languages implemented in Xtext (Xtext is an Eclipse framework for rapidly building languages together with all the typical IDE tooling). Xsemantics aims at reducing the gap between the formalization of a language (i.e., type system and operational semantics) and the actual implementation in Xtext, since it uses a syntax that resembles the rules in a formal setting. In this paper we present the main features of Xsemantics for implementing type systems and reduction rules through examples (Featherweight Java and lambda calculus). We show how such implementations are close to the actual formalizations, and how Xsemantics can be a helpful tool when proving the type safety of a language. We also describe the new features of Xsemantics that help achieving a modular and efficient implementation of type systems. In particular, we focus on specific implementation techniques for implementing type systems that are suited for the IDE (in our context, Eclipse), in order to keep the tooling responsive and guarantee a good user experience. © 2015 Elsevier Inc.},
  affiliation     = {Dipartimento di Informatica, Università di Torino, Italy},
  author_keywords = {DSL; Eclipse; Implementation; Semantics; Type systems},
  document_type   = {Article},
  doi             = {10.1016/j.jlamp.2015.11.005},
  groups          = {Todos A, Compendex, Duplicados},
  keywords        = {rank3},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994876809&partnerID=40&md5=22cdca93303e0e1caa24a3696b535a7d},
}

@Conference{Kapre2016,
  author        = {Kapre, N.a and Bayliss, S.b},
  title         = {Survey of domain-specific languages for FPGA computing},
  year          = {2016},
  note          = {cited By 0},
  __markedentry = {[Neto:5]},
  abstract      = {High-performance FPGA programming has typically been the exclusive domain of a small band of specialized hardware developers. They are capable of reasoning about implementation concerns at the register-transfer level (RTL) which is analogous to assembly-level programming in software. Sometimes these developers are required to push further down to manage even lower levels of abstraction closer to physical aspects of the design such as detailed layout to meet critical design constraints. In contrast, software programmers have long since moved away from textual assembly-level programming towards relying on graphical integrated development environments (IDEs), high-level compilers, smart static analysis tools and runtime systems that optimize, manage and assist the program development tasks. Domain-specific languages (DSLs) can bridge this productivity gap by providing higher levels of abstraction in environments close to the domain of application expert. DSLs carefully limit the set of programming constructs to minimize programmer mistakes while also enabling a rich set of domain-specific optimizations and program transformations. With a large number of DSLs to choose from, an inexperienced FPGA user may be confused about how to select an appropriate one for the intended domain. In this paper, we review a combination of legacy and state-of-the-art DSLs available for FPGA development and provide a taxonomy and classification to guide selection and correct use of the framework. © 2016 EPFL.},
  affiliation   = {School of Computer Science and Engineering, Nanyang Technological University, Singapore, Singapore; Department of Electrical and Electronic Engineering, Imperial College London, London, United Kingdom},
  art_number    = {7577380},
  document_type = {Conference Paper},
  doi           = {10.1109/FPL.2016.7577380},
  groups        = {Todos A, Scopus, Duplicados},
  journal       = {FPL 2016 - 26th International Conference on Field-Programmable Logic and Applications},
  keywords      = {rank3},
  source        = {Scopus},
  url           = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994851801&partnerID=40&md5=85ca91ace5c18d4dd69f3f00f2633091},
}

@Article{Solms201659,
  author          = {Solms, F. and Pieterse, V.},
  title           = {Towards a generic DSL for automated marking systems},
  journal         = {Communications in Computer and Information Science},
  year            = {2016},
  volume          = {642},
  pages           = {59-66},
  note            = {cited By 0},
  __markedentry   = {[Neto:5]},
  abstract        = {The automated static and dynamic assessment of programs makes it practical to increase the learning opportunities of large student classes through the regular assessment of programming assignments. Automatic assessments are traditionally specified in tool-specific languages which are closely linked to the functionality and implementation of a particular tool. This paper considers existing specification languages for assessments and proposes a generic and extensible domain-specific language for the specification of programming assignment assessments. © Springer International Publishing AG 2016.},
  affiliation     = {Department of Computer Science, University of Pretoria, Pretoria, South Africa},
  author_keywords = {Automated assessment; DSL; Software testing; Syntax},
  document_type   = {Conference Paper},
  doi             = {10.1007/978-3-319-47680-3_6},
  groups          = {Todos A, Compendex, Duplicados},
  keywords        = {rank3},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994091965&partnerID=40&md5=e77741d4f9d334f484f14546a3e244c7},
}

@Article{Bock201641,
  author          = {Bock, A.a and Frank, U.a and Bergmann, A.b and Strecker, S.b},
  title           = {Towards support for strategic decision processes using enterprise models: A critical reconstruction of strategy analysis tools},
  journal         = {Lecture Notes in Business Information Processing},
  year            = {2016},
  volume          = {267},
  pages           = {41-56},
  note            = {cited By 0},
  abstract        = {Strategic decision processes are traditionally thought to affect an organization’s long-term success, motivating the development of strategy analysis tools. But ordinary strategy analysis tools have been criticized on several grounds, such as the neglect of organizational context and ill-defined concepts. This paper explores whether enterprise models can provide a richer foundation for strategic analysis, intending to lay the ground for the development of a modeling language. Specifically, the paper analyzes key concepts of traditional strategy analysis tools, reconstructs these concepts in the form of a meta model, and demonstrates integration potentials with enterprise models. The paper closes with implications and lessons learned for future research. © IFIP International Federation for Information Processing 2016.},
  affiliation     = {Research Group Information Systems and Enterprise Modeling, University of Duisburg-Essen, Essen, Germany; Enterprise Modelling Research Group, University of Hagen, Hagen, Germany},
  author_keywords = {Domain-specific modelling languages; Enterprise modelling; Strategic decision processes; Strategy analysis tools},
  document_type   = {Conference Paper},
  doi             = {10.1007/978-3-319-48393-1_4},
  groups          = {Todos A, Scopus, excluidos},
  source          = {Scopus},
  url             = {https://www.scopus.com/inward/record.uri?eid=2-s2.0-84994877082&partnerID=40&md5=424f95c65ce691f7c235028c7977aec5},
}

@InBook{Ulitin2016,
  pages     = {159--173},
  title     = {Combination of DSL and DCSP for Decision Support in Dynamic Contexts},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Ulitin, Boris and Babkin, Eduard and Babkina, Tatiana},
  editor    = {{\v{R}}epa, V{\'a}clav and Bruckner, Tom{\'a}{\v{s}}},
  address   = {Cham},
  booktitle = {Perspectives in Business Informatics Research: 15th International Conference, BIR 2016, Prague, Czech Republic, September 15--16, 2016, Proceedings},
  doi       = {10.1007/978-3-319-45321-7_12},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-45321-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-45321-7_12},
}

@Article{Reimann2013,
  author   = {Reimann, Jan and Seifert, Mirko and A{\ss}mann, Uwe},
  title    = {On the reuse and recommendation of model refactoring specifications},
  journal  = {Software {\&} Systems Modeling},
  year     = {2013},
  volume   = {12},
  number   = {3},
  pages    = {579--596},
  abstract = {Refactorings can be used to improve the structure of software artefacts while preserving the semantics of the encapsulated information. Various types of refactorings have been proposed and implemented for programming languages (e.g., Java or C{\#}). With the advent of (MDSD), a wealth of modelling languages rises and the need for restructuring models similar to programs has emerged. Since parts of these modelling languages are often very similar, we consider it beneficial to reuse the core transformation steps of refactorings across languages. In this sense, reusing the abstract transformation steps and the abstract participating elements suggests itself. Previous work in this field indicates that refactorings can be specified generically to foster their reuse. However, existing approaches can handle certain types of modelling languages only and solely reuse refactorings once per language. In this paper, a novel approach based on role models to specify generic refactorings is presented. Role models are suitable for this problem since they support declaration of roles which have to be played in a certain context. Assigned to generic refactoring, contexts are different refactorings and roles are the participating elements. We discuss how this resolves the limitations of previous works, as well as how specific refactorings can be defined as extensions to generic ones. The approach was implemented in our tool Refactory based on the (EMF) and evaluated using multiple modelling languages and refactorings. In addition, this paper investigates on the recommendation of refactoring specifications. This is motivated by the fact that language designers have many possibilities to enable refactorings in their modelling languages with regard to the language structures. To overcome this problem and to support language designers in deciding which refactorings to enable, we propose a solution and a prototypical implementation.},
  doi      = {10.1007/s10270-012-0243-2},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-012-0243-2},
}

@InBook{Rademacher2016,
  pages     = {650--662},
  title     = {Towards a Model-Based Architecture for Road Traffic Management Systems},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Rademacher, Florian and Lammert, Mirco and Khan, Marius and Sachweh, Sabine},
  editor    = {Dregvaite, Giedre and Damasevicius, Robertas},
  address   = {Cham},
  booktitle = {Information and Software Technologies: 22nd International Conference, ICIST 2016, Druskininkai, Lithuania, October 13-15, 2016, Proceedings},
  doi       = {10.1007/978-3-319-46254-7_53},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-46254-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-46254-7_53},
}

@InBook{Aßmann2013,
  pages     = {293--318},
  title     = {Ontology-Guided Software Engineering in the MOST Workbench},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {A{\ss}mann, Uwe and Zivkovic, Srdjan and Miksa, Krzysztof and Siegemund, Katja and Bartho, Andreas and Rahmani, Tirdad and Thomas, Edward and Pan, Jeff Z.},
  editor    = {Pan, Jeff Z. and Staab, Steffen and A{\ss}mann, Uwe and Ebert, J{\"u}rgen and Zhao, Yuting},
  address   = {Berlin, Heidelberg},
  booktitle = {Ontology-Driven Software Development},
  doi       = {10.1007/978-3-642-31226-7_13},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-31226-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-31226-7_13},
}

@InBook{Śmiałek2015,
  pages     = {67--99},
  title     = {Defining RSL},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {{\'{S}}mia{\l}ek, Micha{\l} and Nowakowski, Wiktor},
  address   = {Cham},
  booktitle = {From Requirements to Java in a Snap: Model-Driven Requirements Engineering in Practice},
  doi       = {10.1007/978-3-319-12838-2_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-12838-2},
  url       = {http://dx.doi.org/10.1007/978-3-319-12838-2_3},
}

@InBook{Jézéquel2015,
  pages     = {1--13},
  title     = {When Systems Engineering Meets Software Language Engineering},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {J{\'e}z{\'e}quel, Jean-Marc and M{\'e}ndez-Acu{\~{n}}a, David and Degueule, Thomas and Combemale, Benoit and Barais, Olivier},
  editor    = {Boulanger, Fr{\'e}d{\'e}ric and Krob, Daniel and Morel, G{\'e}rard and Roussel, Jean-Claude},
  address   = {Cham},
  booktitle = {Complex Systems Design {\&} Management: Proceedings of the Fifth International Conference on Complex Systems Design {\&} Management CSD{\&}M 2014},
  doi       = {10.1007/978-3-319-11617-4_1},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-319-11617-4},
  url       = {http://dx.doi.org/10.1007/978-3-319-11617-4_1},
}

@InBook{Granada2014,
  pages     = {535--551},
  title     = {Enabling the Development of Cognitive Effective Visual DSLs},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Granada, David and Vara, Juan M. and Bollati, Veronica A. and Marcos, Esperanza},
  editor    = {Dingel, Juergen and Schulte, Wolfram and Ramos, Isidro and Abrah{\~a}o, Silvia and Insfran, Emilio},
  address   = {Cham},
  booktitle = {Model-Driven Engineering Languages and Systems: 17th International Conference, MODELS 2014, Valencia, Spain, September 28 -- October 3, 2014. Proceedings},
  doi       = {10.1007/978-3-319-11653-2_33},
  groups    = {SCOPUS, Inclusos},
  isbn      = {978-3-319-11653-2},
  url       = {http://dx.doi.org/10.1007/978-3-319-11653-2_33},
}

@InBook{Gjøsæter2015,
  pages         = {91--105},
  title         = {LanguageLab - A Meta-modelling Environment},
  publisher     = {Springer International Publishing},
  year          = {2015},
  author        = {Gj{\o}s{\ae}ter, Terje and Prinz, Andreas},
  editor        = {Fischer, Joachim and Scheidgen, Markus and Schieferdecker, Ina and Reed, Rick},
  address       = {Cham},
  __markedentry = {[Neto:5]},
  booktitle     = {SDL 2015: Model-Driven Engineering for Smart Cities: 17th International SDL Forum, Berlin, Germany, October 12-14, 2015, Proceedings},
  doi           = {10.1007/978-3-319-24912-4_8},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  isbn          = {978-3-319-24912-4},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-319-24912-4_8},
}

@Article{Pfeiffer2015,
  author   = {Pfeiffer, Rolf-Helge and W{\k{a}}sowski, Andrzej},
  title    = {The design space of multi-language development environments},
  journal  = {Software {\&} Systems Modeling},
  year     = {2015},
  volume   = {14},
  number   = {1},
  pages    = {383--411},
  abstract = {Non-trivial software systems integrate many artifacts expressed in multiple modeling and programming languages. However, even though these artifacts heavily depend on each other, existing development environments do not sufficiently support handling relations between artifacts in different languages. By means of a literature survey, tool prototyping, and experiments, we study the design space of multi-language development environments (MLDEs)---tools that consider cross-language relations as first artifacts. We ask: What is the state of the art in the MLDE space? What are the design choices and challenges faced by tool builders? To what extent are MLDEs desired by users, and what aspects of MLDEs are particularly helpful? Our main conclusions are that (a) cross-language relations are ubiquitous and troublesome in multi-language systems, (b) users highly appreciate cross-language support mechanisms of MLDEs, and (c) generic MLDEs clearly advance the state of the art in tooling for language integration. The technical artifacts resulting from this study include a feature model of the MLDE design space, a data set of harvested cross-language relations in a case study system (JTrac) and two MLDE prototypes, TexMo and Coral, that implement two radically different choices in the design space.},
  doi      = {10.1007/s10270-013-0376-y},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-013-0376-y},
}

@InBook{Quadri2014,
  pages     = {57--89},
  title     = {MADES EU FP7 Project: Model-Driven Methodology for Real Time Embedded Systems},
  publisher = {Springer Berlin Heidelberg},
  year      = {2014},
  author    = {Quadri, Imran R. and Bagnato, Alessandra and Sadovykh, Andrey},
  editor    = {Khan, Mohammad Ayoub and Saeed, Saqib and Darwish, Ashraf and Abraham, Ajith},
  address   = {Berlin, Heidelberg},
  booktitle = {Embedded and Real Time System Development: A Software Engineering Perspective: Concepts, Methods and Principles},
  doi       = {10.1007/978-3-642-40888-5_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-40888-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-40888-5_3},
}

@InBook{Bohner2012,
  pages     = {121--158},
  title     = {Accommodating Adaptive Systems Complexity with Change Tolerance},
  publisher = {Springer London},
  year      = {2012},
  author    = {Bohner, Shawn and Ravichandar, Ramya and Milluzzi, Andrew},
  editor    = {Hinchey, Mike and Coyle, Lorcan},
  address   = {London},
  booktitle = {Conquering Complexity},
  doi       = {10.1007/978-1-4471-2297-5_6},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-1-4471-2297-5},
  url       = {http://dx.doi.org/10.1007/978-1-4471-2297-5_6},
}

@InBook{Asmann2013,
  pages     = {1--15},
  title     = {Introduction},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {A{\ss}mann, Uwe and Ebert, J{\"u}rgen and Pan, Jeff Z. and Staab, Steffen and Zhao, Yuting},
  editor    = {Pan, Jeff Z. and Staab, Steffen and A{\ss}mann, Uwe and Ebert, J{\"u}rgen and Zhao, Yuting},
  address   = {Berlin, Heidelberg},
  booktitle = {Ontology-Driven Software Development},
  doi       = {10.1007/978-3-642-31226-7_1},
  isbn      = {978-3-642-31226-7},
  keywords  = {rank5},
  url       = {http://dx.doi.org/10.1007/978-3-642-31226-7_1},
}

@InBook{Guo2015,
  pages     = {499--508},
  title     = {An Evaluation of an Enhanced Model Driven Approach for Computer Game Creation},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Guo, Hong and Gao, Shang and Krogstie, John and Tr{\ae}tteberg, Hallvard},
  editor    = {Gaaloul, Khaled and Schmidt, Rainer and Nurcan, Selmin and Guerreiro, S{\'e}rgio and Ma, Qin},
  address   = {Cham},
  booktitle = {Enterprise, Business-Process and Information Systems Modeling: 16th International Conference, BPMDS 2015, 20th International Conference, EMMSAD 2015, Held at CAiSE 2015, Stockholm, Sweden, June 8-9, 2015, Proceedings},
  doi       = {10.1007/978-3-319-19237-6_32},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-19237-6},
  url       = {http://dx.doi.org/10.1007/978-3-319-19237-6_32},
}

@InBook{Miksa2013,
  pages     = {69--94},
  title     = {Case Studies for Marrying Ontology and Software Technologies},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Miksa, Krzysztof and Sabina, Pawel and Friesen, Andreas and Rahmani, Tirdad and Lemcke, Jens and Wende, Christian and Zivkovic, Srdjan and A{\ss}mann, Uwe and Bartho, Andreas},
  editor    = {Pan, Jeff Z. and Staab, Steffen and A{\ss}mann, Uwe and Ebert, J{\"u}rgen and Zhao, Yuting},
  address   = {Berlin, Heidelberg},
  booktitle = {Ontology-Driven Software Development},
  doi       = {10.1007/978-3-642-31226-7_4},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-31226-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-31226-7_4},
}

@InBook{Schmidt2013,
  pages     = {222--238},
  title     = {Refactorings in Language Development with Asymmetric Bidirectional Model Transformations},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Schmidt, Martin and Wider, Arif and Scheidgen, Markus and Fischer, Joachim and von Klinski, Sebastian},
  editor    = {Khendek, Ferhat and Toeroe, Maria and Gherbi, Abdelouahed and Reed, Rick},
  address   = {Berlin, Heidelberg},
  booktitle = {SDL 2013: Model-Driven Dependability Engineering: 16th International SDL Forum, Montreal, Canada, June 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-642-38911-5_13},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-642-38911-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-38911-5_13},
}

@InBook{Anjorin2013,
  pages     = {124--143},
  title     = {A Framework for Bidirectional Model-to-Platform Transformations},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Anjorin, Anthony and Saller, Karsten and Rose, Sebastian and Sch{\"u}rr, Andy},
  editor    = {Czarnecki, Krzysztof and Hedin, G{\"o}rel},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 5th International Conference, SLE 2012, Dresden, Germany, September 26-28, 2012, Revised Selected Papers},
  doi       = {10.1007/978-3-642-36089-3_8},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-36089-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_8},
}

@InBook{Miao2014,
  pages     = {506--509},
  title     = {PLATE Workbench: A PBL Authoring Tool},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Miao, Yongwu and Samaka, Mohammed and Wang, Disi},
  editor    = {Rensing, Christoph and de Freitas, Sara and Ley, Tobias and Mu{\~{n}}oz-Merino, Pedro J.},
  address   = {Cham},
  booktitle = {Open Learning and Teaching in Educational Communities: 9th European Conference on Technology Enhanced Learning, EC-TEL 2014, Graz, Austria, September 16-19, 2014, Proceedings},
  doi       = {10.1007/978-3-319-11200-8_52},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-11200-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-11200-8_52},
}

@InBook{Voelter2013,
  pages     = {383--430},
  title     = {Language and IDE Modularization and Composition with MPS},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Voelter, Markus},
  editor    = {L{\"a}mmel, Ralf and Saraiva, Jo{\~a}o and Visser, Joost},
  address   = {Berlin, Heidelberg},
  booktitle = {Generative and Transformational Techniques in Software Engineering IV: International Summer School, GTTSE 2011, Braga, Portugal, July 3-9, 2011. Revised Papers},
  doi       = {10.1007/978-3-642-35992-7_11},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-35992-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-35992-7_11},
}

@InBook{Axelsson2012,
  pages     = {402--439},
  title     = {Feldspar: Application and Implementation},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Axelsson, Emil and Sheeran, Mary},
  editor    = {Zs{\'o}k, Vikt{\'o}ria and Horv{\'a}th, Zolt{\'a}n and Plasmeijer, Rinus},
  address   = {Berlin, Heidelberg},
  booktitle = {Central European Functional Programming School: 4th Summer School, CEFP 2011, Budapest, Hungary, June 14-24, 2011, Revised Selected Papers},
  doi       = {10.1007/978-3-642-32096-5_8},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-32096-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-32096-5_8},
}

@InBook{Djeddai2013,
  pages     = {131--148},
  title     = {Combining Verification and MDE Illustrated by a Formal Java Development},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Djeddai, Selma and Mezghiche, Mohamed and Strecker, Martin},
  editor    = {Ermolayev, Vadim and Mayr, Heinrich C. and Nikitchenko, Mykola and Spivakovsky, Aleksander and Zholtkevych, Grygoriy},
  address   = {Berlin, Heidelberg},
  booktitle = {ICT in Education, Research, and Industrial Applications: 8th International Conference, ICTERI 2012, Kherson, Ukraine, June 6-10, 2012, Revised Selected Papers},
  doi       = {10.1007/978-3-642-35737-4_8},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-642-35737-4},
  url       = {http://dx.doi.org/10.1007/978-3-642-35737-4_8},
}

@InBook{Erwig2012,
  pages     = {243--262},
  title     = {Semantics First!},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Erwig, Martin and Walkingshaw, Eric},
  editor    = {Sloane, Anthony and A{\ss}mann, Uwe},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 4th International Conference, SLE 2011, Braga, Portugal, July 3-4, 2011, Revised Selected Papers},
  doi       = {10.1007/978-3-642-28830-2_14},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-28830-2},
  url       = {http://dx.doi.org/10.1007/978-3-642-28830-2_14},
}

@InBook{LópezAbad2013,
  pages     = {117--137},
  title     = {OEPI Portal},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {L{\'o}pez Abad, Jos{\'e} Antonio and Meyerholt, Daniel},
  editor    = {Dada, Ali and Stanoevska, Katarina and G{\'o}mez, Jorge Marx},
  address   = {Berlin, Heidelberg},
  booktitle = {Organizations' Environmental Performance Indicators: Measuring, Monitoring, and Management},
  doi       = {10.1007/978-3-642-32720-9_10},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-32720-9},
  url       = {http://dx.doi.org/10.1007/978-3-642-32720-9_10},
}

@InBook{Rumpe2016,
  pages     = {209--213},
  title     = {Further Reading},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Rumpe, Bernhard},
  address   = {Cham},
  booktitle = {Modeling with UML: Language, Concepts, Methods},
  doi       = {10.1007/978-3-319-33933-7_7},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-33933-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-33933-7_7},
}

@InBook{vanderStorm2013,
  pages     = {4--23},
  title     = {Object Grammars},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {van der Storm, Tijs and Cook, William R. and Loh, Alex},
  editor    = {Czarnecki, Krzysztof and Hedin, G{\"o}rel},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 5th International Conference, SLE 2012, Dresden, Germany, September 26-28, 2012, Revised Selected Papers},
  doi       = {10.1007/978-3-642-36089-3_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-36089-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_2},
}

@Article{Djeddai2014,
  author   = {Djeddai, Selma and Strecker, Martin and Mezghiche, Mohamed},
  title    = {Integrating a Formal Development for DSLs into Meta-Modeling},
  journal  = {Journal on Data Semantics},
  year     = {2014},
  volume   = {3},
  number   = {3},
  pages    = {143--155},
  abstract = {Formal methods (such as interactive provers) are increasingly used in software engineering. They offer a formal frame that guarantees the correctness of developments. Nevertheless, they use complex notations that might be difficult to understand for unaccustomed users. On the contrary, visual specification languages use intuitive notations and aiming at easing the specification and understanding of software systems. Moreover, these languages and concomitant environments permit to automatically generate graphical interfaces or editors for Domain Specific Languages starting from a meta-model. However, they suffer from a lack of precise semantics. We are interested in combining these two complementary technologies by mapping the elements of the one into the other. In this paper, we present a generic transformation process from functional data structures, commonly used in proof assistants, to Ecore models and vice versa. This translation method is based on Model-driven engineering and defined by a set of bidirectional transformation rules. These rules are detailed and represented in a formal description. Our approach is implemented in the Eclipse environment and illustrated with a case study.},
  doi      = {10.1007/s13740-013-0030-4},
  groups   = {SpringerLink, Inclusos},
  issn     = {1861-2040},
  url      = {http://dx.doi.org/10.1007/s13740-013-0030-4},
}

@InBook{Tranoris2012,
  pages     = {201--212},
  title     = {FSToolkit: Adopting Software Engineering Practices for Enabling Definitions of Federated Resource Infrastructures},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Tranoris, Christos and Denazis, Spyros},
  editor    = {{\'A}lvarez, Federico and Cleary, Frances and Daras, Petros and Domingue, John and Galis, Alex and Garcia, Ana and Gavras, Anastasius and Karnourskos, Stamatis and Krco, Srdjan and Li, Man-Sze and Lotz, Volkmar and M{\"u}ller, Henning and Salvadori, Elio and Sassen, Anne-Marie and Schaffers, Hans and Stiller, Burkhard and Tselentis, Georgios and Turkama, Petra and Zahariadis, Theodore},
  address   = {Berlin, Heidelberg},
  booktitle = {The Future Internet: Future Internet Assembly 2012: From Promises to Reality},
  doi       = {10.1007/978-3-642-30241-1_18},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-30241-1},
  url       = {http://dx.doi.org/10.1007/978-3-642-30241-1_18},
}

@InBook{Bettini2013,
  pages     = {392--412},
  title     = {Approaches and Tools for Implementing Type Systems in Xtext},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Bettini, Lorenzo and Stoll, Dietmar and V{\"o}lter, Markus and Colameo, Serano},
  editor    = {Czarnecki, Krzysztof and Hedin, G{\"o}rel},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 5th International Conference, SLE 2012, Dresden, Germany, September 26-28, 2012, Revised Selected Papers},
  doi       = {10.1007/978-3-642-36089-3_22},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-642-36089-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_22},
}

@InBook{Adar2014,
  pages     = {665--675},
  title     = {GUESS},
  publisher = {Springer New York},
  year      = {2014},
  author    = {Adar, Eytan},
  editor    = {Alhajj, Reda and Rokne, Jon},
  address   = {New York, NY},
  booktitle = {Encyclopedia of Social Network Analysis and Mining},
  doi       = {10.1007/978-1-4614-6170-8_300},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-1-4614-6170-8},
  url       = {http://dx.doi.org/10.1007/978-1-4614-6170-8_300},
}

@InBook{Kearney2014,
  pages     = {185--197},
  title     = {Security Design Patterns in the MASTER Workbench},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Kearney, Paul J. and Sinclair, David A. and Wagner, Sebastian},
  editor    = {Blackwell, Clive and Zhu, Hong},
  address   = {Cham},
  booktitle = {Cyberpatterns: Unifying Design Patterns with Security and Attack Patterns},
  doi       = {10.1007/978-3-319-04447-7_15},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-04447-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-04447-7_15},
}

@InBook{Silva2014,
  pages     = {105--125},
  title     = {Formal MDE-Based Tool Development},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Silva, Robson and Mota, Alexandre and Starr, Rodrigo Rizzi},
  editor    = {Bouabana-Tebibel, Thouraya and Rubin, Stuart H.},
  address   = {Cham},
  booktitle = {Integration of Reusable Systems},
  doi       = {10.1007/978-3-319-04717-1_5},
  groups    = {SCOPUS, Compendex, excluidos},
  isbn      = {978-3-319-04717-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-04717-1_5},
}

@InBook{Duddy2012,
  pages     = {357--383},
  title     = {Representing USDL for Humans and Tools},
  publisher = {Springer US},
  year      = {2012},
  author    = {Duddy, Keith and Heinrich, Matthias and Heinzl, Steffen and Knechtel, Martin and Pedrinaci, Carlos and Schmeling, Benjamin and Smith, Virginia},
  editor    = {Barros, Alistair and Oberle, Daniel},
  address   = {Boston, MA},
  booktitle = {Handbook of Service Description: USDL and Its Methods},
  doi       = {10.1007/978-1-4614-1864-1_14},
  groups    = {SpringerLink, Duvida},
  isbn      = {978-1-4614-1864-1},
  url       = {http://dx.doi.org/10.1007/978-1-4614-1864-1_14},
}

@InBook{Juhász2015,
  pages     = {479--506},
  title     = {Rea: Workflows for Cyber-Physical Systems},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Juh{\'a}sz, D{\'a}vid and Domoszlai, L{\'a}szl{\'o} and Kr{\'a}lik, Barnab{\'a}s},
  editor    = {Zs{\'o}k, Vikt{\'o}ria and Horv{\'a}th, Zolt{\'a}n and Csat{\'o}, Lehel},
  address   = {Cham},
  booktitle = {Central European Functional Programming School: 5th Summer School, CEFP 2013, Cluj-Napoca, Romania, July 8-20, 2013, Revised Selected Papers},
  doi       = {10.1007/978-3-319-15940-9_14},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-15940-9},
  url       = {http://dx.doi.org/10.1007/978-3-319-15940-9_14},
}

@InBook{Soh2013,
  pages     = {429--436},
  title     = {Scarab: A Rapid Prototyping Tool for SAT-Based Constraint Programming Systems},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Soh, Takehide and Tamura, Naoyuki and Banbara, Mutsunori},
  editor    = {J{\"a}rvisalo, Matti and Van Gelder, Allen},
  address   = {Berlin, Heidelberg},
  booktitle = {Theory and Applications of Satisfiability Testing -- SAT 2013: 16th International Conference, Helsinki, Finland, July 8-12, 2013. Proceedings},
  doi       = {10.1007/978-3-642-39071-5_34},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-39071-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-39071-5_34},
}

@InBook{Dingel2016,
  pages     = {3--18},
  title     = {Complexity is the Only Constant: Trends in Computing and Their Relevance to Model Driven Engineering},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Dingel, Juergen},
  editor    = {Echahed, Rachid and Minas, Mark},
  address   = {Cham},
  booktitle = {Graph Transformation: 9th International Conference, ICGT 2016, in Memory of Hartmut Ehrig, Held as Part of STAF 2016, Vienna, Austria, July 5-6, 2016, Proceedings},
  doi       = {10.1007/978-3-319-40530-8_1},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-40530-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-40530-8_1},
}

@InBook{Cazzola2013,
  pages     = {17--32},
  title     = {Neverlang 2 -- Componentised Language Development for the JVM},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Cazzola, Walter and Vacchi, Edoardo},
  editor    = {Binder, Walter and Bodden, Eric and L{\"o}we, Welf},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Composition: 12th International Conference, SC 2013, Budapest, Hungary, June 19, 2013. Proceedings},
  doi       = {10.1007/978-3-642-39614-4_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-39614-4},
  url       = {http://dx.doi.org/10.1007/978-3-642-39614-4_2},
}

@InBook{Birken2014,
  pages         = {407--424},
  title         = {Building Code Generators for DSLs Using a Partial Evaluator for the Xtend Language},
  publisher     = {Springer Berlin Heidelberg},
  year          = {2014},
  author        = {Birken, Klaus},
  editor        = {Margaria, Tiziana and Steffen, Bernhard},
  address       = {Berlin, Heidelberg},
  __markedentry = {[Neto:5]},
  booktitle     = {Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change: 6th International Symposium, ISoLA 2014, Imperial, Corfu, Greece, October 8-11, 2014, Proceedings, Part I},
  doi           = {10.1007/978-3-662-45234-9_29},
  groups        = {ACM, SCOPUS, Duplicados},
  isbn          = {978-3-662-45234-9},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-662-45234-9_29},
}

@InBook{Djeddai2012,
  pages         = {55--66},
  title         = {Integrating a Formal Development for DSLs into Meta-modeling},
  publisher     = {Springer Berlin Heidelberg},
  year          = {2012},
  author        = {Djeddai, Selma and Strecker, Martin and Mezghiche, Mohamed},
  editor        = {Abell{\'o}, Alberto and Bellatreche, Ladjel and Benatallah, Boualem},
  address       = {Berlin, Heidelberg},
  __markedentry = {[Neto:5]},
  booktitle     = {Model and Data Engineering: 2nd International Conference, MEDI 2012, Poitiers, France, October 3-5, 2012. Proceedings},
  doi           = {10.1007/978-3-642-33609-6_7},
  groups        = {Duplicados},
  isbn          = {978-3-642-33609-6},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-642-33609-6_7},
}

@InBook{Jörges2013,
  pages     = {39--71},
  title     = {Extreme Model-Driven Development and jABC},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {J{\"o}rges, Sven},
  address   = {Berlin, Heidelberg},
  booktitle = {Construction and Evolution of Code Generators: A Model-Driven and Service-Oriented Approach},
  doi       = {10.1007/978-3-642-36127-2_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-36127-2},
  url       = {http://dx.doi.org/10.1007/978-3-642-36127-2_3},
}

@InBook{Amann2015,
  pages     = {121--158},
  title     = {Software Mining Studies: Goals, Approaches, Artifacts, and Replicability},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Amann, Sven and Beyer, Stefanie and Kevic, Katja and Gall, Harald},
  editor    = {Meyer, Bertrand and Nordio, Martin},
  address   = {Cham},
  booktitle = {Software Engineering: International Summer Schools, LASER 2013-2014, Elba, Italy, Revised Tutorial Lectures},
  doi       = {10.1007/978-3-319-28406-4_5},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-28406-4},
  url       = {http://dx.doi.org/10.1007/978-3-319-28406-4_5},
}

@InBook{Pavletic2015,
  pages     = {33--49},
  title     = {Extensible Debugger Framework for Extensible Languages},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Pavletic, Domenik and Voelter, Markus and Raza, Syed Aoun and Kolb, Bernd and Kehrer, Timo},
  editor    = {de la Puente, Juan Antonio and Vardanega, Tullio},
  address   = {Cham},
  booktitle = {Reliable Software Technologies -- Ada-Europe 2015: 20th Ada-Europe International Conference on Reliable Software Technologies, Madrid Spain, June 22-26, 2015, Proceedings},
  doi       = {10.1007/978-3-319-19584-1_3},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-319-19584-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-19584-1_3},
}

@InBook{Brauer2015,
  pages     = {407--418},
  title     = {Smalltalk Applications in Industry},
  publisher = {Springer Fachmedien Wiesbaden},
  year      = {2015},
  author    = {Brauer, Johannes},
  address   = {Wiesbaden},
  booktitle = {Programming Smalltalk -- Object-Orientation from the Beginning: An introduction to the principles of programming},
  doi       = {10.1007/978-3-658-06823-3_18},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-658-06823-3},
  url       = {http://dx.doi.org/10.1007/978-3-658-06823-3_18},
}

@InBook{Kossakowski2012,
  pages     = {409--434},
  title     = {JavaScript as an Embedded DSL},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Kossakowski, Grzegorz and Amin, Nada and Rompf, Tiark and Odersky, Martin},
  editor    = {Noble, James},
  address   = {Berlin, Heidelberg},
  booktitle = {ECOOP 2012 -- Object-Oriented Programming: 26th European Conference, Beijing, China, June 11-16, 2012. Proceedings},
  doi       = {10.1007/978-3-642-31057-7_19},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-31057-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-31057-7_19},
}

@InBook{Pfeiffer2012,
  pages     = {178--193},
  title     = {TexMo: A Multi-language Development Environment},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Pfeiffer, Rolf-Helge and W{\k{a}}sowski, Andrzej},
  editor    = {Vallecillo, Antonio and Tolvanen, Juha-Pekka and Kindler, Ekkart and St{\"o}rrle, Harald and Kolovos, Dimitris},
  address   = {Berlin, Heidelberg},
  booktitle = {Modelling Foundations and Applications: 8th European Conference, ECMFA 2012, Kgs. Lyngby, Denmark, July 2-5, 2012. Proceedings},
  doi       = {10.1007/978-3-642-31491-9_15},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-31491-9},
  url       = {http://dx.doi.org/10.1007/978-3-642-31491-9_15},
}

@InBook{Homer2014,
  pages     = {131--156},
  title     = {Graceful Dialects},
  publisher = {Springer Berlin Heidelberg},
  year      = {2014},
  author    = {Homer, Michael and Jones, Timothy and Noble, James and Bruce, Kim B. and Black, Andrew P.},
  editor    = {Jones, Richard},
  address   = {Berlin, Heidelberg},
  booktitle = {ECOOP 2014 -- Object-Oriented Programming: 28th European Conference, Uppsala, Sweden, July 28 -- August 1, 2014. Proceedings},
  doi       = {10.1007/978-3-662-44202-9_6},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-662-44202-9},
  url       = {http://dx.doi.org/10.1007/978-3-662-44202-9_6},
}

@Article{Sinnott2016,
  author   = {Sinnott, R. O. and Voorsluys, W.},
  title    = {A scalable Cloud-based system for data-intensive spatial analysis},
  journal  = {International Journal on Software Tools for Technology Transfer},
  year     = {2016},
  volume   = {18},
  number   = {6},
  pages    = {587--605},
  abstract = {Advances in Cloud computing technology and the availability of affordable and easy to use Cloud services are enabling a multitude of scientific applications to use these resources as primary or secondary computing infrastructure. The urban and built environment research domain is one area that can benefit greatly from Cloud computing. The global population growth and increase in the size and population of cities raise many challenges for governments, planners and researchers alike. The Australian Urban Research Infrastructure Network (AURIN---                  http://www.aurin.org.au                                  ) project has been tasked with developing an advanced platform (e-Infrastructure) across Australia to tackle these challenges. The platform leverages large-scale Cloud resources to provide federated data access to, at present over 1100 data sets from major and often definitive government and industry data-rich organisations, and for scalable data processing and visualisation. The original AURIN tools were developed using the object modelling system (OMS) and supported integrated workflows to define and enact/re-enact scientific processes. More recently the work has evolved to focus more on delivery of a workbench offering a rich range of tools delivered through an extensible workflow environment. In this paper, we provide the background to AURIN including the scientific drivers that are shaping the work and the realisation of the Cloud-based AURIN environment. We focus in particular on the workflow environment and show how it seamlessly utilizes the Cloud for urban research processes focused especially on data-intensive spatial analysis. We illustrate the utilisation of this workflow environment across a range of case studies reflecting urban research activities.},
  doi      = {10.1007/s10009-015-0398-6},
  groups   = {SpringerLink, excluidos},
  issn     = {1433-2787},
  url      = {http://dx.doi.org/10.1007/s10009-015-0398-6},
}

@InBook{Sun2013,
  pages     = {118--133},
  title     = {Using Model Types to Support Contract-Aware Model Substitutability},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Sun, Wuliang and Combemale, Benoit and Derrien, Steven and France, Robert B.},
  editor    = {Van Gorp, Pieter and Ritter, Tom and Rose, Louis M.},
  address   = {Berlin, Heidelberg},
  booktitle = {Modelling Foundations and Applications: 9th European Conference, ECMFA 2013, Montpellier, France, July 1-5, 2013. Proceedings},
  doi       = {10.1007/978-3-642-39013-5_9},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-39013-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-39013-5_9},
}

@InBook{Ratiu2013,
  pages     = {465--471},
  title     = {Using Language Engineering to Lift Languages and Analyses at the Domain Level},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Ratiu, Daniel and Voelter, Markus and Kolb, Bernd and Schaetz, Bernhard},
  editor    = {Brat, Guillaume and Rungta, Neha and Venet, Arnaud},
  address   = {Berlin, Heidelberg},
  booktitle = {NASA Formal Methods: 5th International Symposium, NFM 2013, Moffett Field, CA, USA, May 14-16, 2013. Proceedings},
  doi       = {10.1007/978-3-642-38088-4_35},
  groups    = {Compendex, excluidos},
  isbn      = {978-3-642-38088-4},
  url       = {http://dx.doi.org/10.1007/978-3-642-38088-4_35},
}

@InBook{Graf2012,
  pages     = {187--199},
  title     = {Requirements, Traceability and DSLs in Eclipse with the Requirements Interchange Format (ReqIF)},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Graf, Andreas and Sasidharan, Nirmal and G{\"u}rsoy, {\"O}mer},
  editor    = {Hammami, Omar and Krob, Daniel and Voirin, Jean-Luc},
  address   = {Berlin, Heidelberg},
  booktitle = {Complex Systems Design {\&} Management: Proceedings of the Second International Conference on Complex Systems Design {\&} Management CSDM 2011},
  doi       = {10.1007/978-3-642-25203-7_13},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-25203-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-25203-7_13},
}

@InBook{Neron2015,
  pages     = {205--231},
  title     = {A Theory of Name Resolution},
  publisher = {Springer Berlin Heidelberg},
  year      = {2015},
  author    = {Neron, Pierre and Tolmach, Andrew and Visser, Eelco and Wachsmuth, Guido},
  editor    = {Vitek, Jan},
  address   = {Berlin, Heidelberg},
  booktitle = {Programming Languages and Systems: 24th European Symposium on Programming, ESOP 2015, Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015, London, UK, April 11-18, 2015, Proceedings},
  doi       = {10.1007/978-3-662-46669-8_9},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-662-46669-8},
  url       = {http://dx.doi.org/10.1007/978-3-662-46669-8_9},
}

@Article{Bourgoin2014a,
  author        = {Bourgoin, Mathias and Chailloux, Emmanuel and Lamotte, Jean-Luc},
  title         = {Efficient Abstractions for GPGPU Programming},
  journal       = {International Journal of Parallel Programming},
  year          = {2014},
  volume        = {42},
  number        = {4},
  pages         = {583--600},
  __markedentry = {[Neto:5]},
  abstract      = {General purpose (GP)GPU programming demands to couple highly parallel computing units with classic CPUs to obtain a high performance. Heterogenous systems lead to complex designs combining multiple paradigms and programming languages to manage each hardware architecture. In this paper, we present tools to harness GPGPU programming through the high-level OCaml programming language. We describe the SPOC library that allows to handle GPGPU subprograms (kernels) and data transfers between devices. We then present how SPOC expresses GPGPU kernel: through interoperability with common low-level extensions (from Cuda and OpenCL frameworks) but also via an embedded DSL for OCaml. Using simple benchmarks as well as a real world HPC software, we show that SPOC can offer a high performance while efficiently easing development. To allow better abstractions over tasks and data, we introduce some parallel skeletons built upon SPOC as well as composition constructs over those skeletons.},
  doi           = {10.1007/s10766-013-0261-x},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {1573-7640},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10766-013-0261-x},
}

@InBook{Atkinson2014,
  pages     = {18--34},
  title     = {Level-Agnostic Designation of Model Elements},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Atkinson, Colin and Gerbig, Ralph},
  editor    = {Cabot, Jordi and Rubin, Julia},
  address   = {Cham},
  booktitle = {Modelling Foundations and Applications: 10th European Conference, ECMFA 2014, Held as Part of STAF 2014, York, UK, July 21-25, 2014. Proceedings},
  doi       = {10.1007/978-3-319-09195-2_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-09195-2},
  url       = {http://dx.doi.org/10.1007/978-3-319-09195-2_2},
}

@InBook{Gomolka2013,
  pages     = {82--97},
  title     = {Structure Editors: Old Hat or Future Vision?},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Gomolka, Andreas and Humm, Bernhard},
  editor    = {Maciaszek, Leszek A. and Zhang, Kang},
  address   = {Berlin, Heidelberg},
  booktitle = {Evaluation of Novel Approaches to Software Engineering: 6th International Conference, ENASE 2011, Beijing, China, June 8-11, 2011. Revised Selected Papers},
  doi       = {10.1007/978-3-642-32341-6_6},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-32341-6},
  url       = {http://dx.doi.org/10.1007/978-3-642-32341-6_6},
}

@InBook{vanRozen2015,
  pages     = {18--33},
  title     = {Origin Tracking + Text Differencin = Textual Model Differencing},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {van Rozen, Riemer and van der Storm, Tijs},
  editor    = {Kolovos, Dimitris and Wimmer, Manuel},
  address   = {Cham},
  booktitle = {Theory and Practice of Model Transformations: 8th International Conference, ICMT 2015, Held as Part of STAF 2015, L'Aquila, Italy, July 20-21, 2015. Proceedings},
  doi       = {10.1007/978-3-319-21155-8_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-21155-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-21155-8_2},
}

@InBook{Svendsen2012,
  pages     = {53--67},
  title     = {Towards Evolution of Generic Variability Models},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Svendsen, Andreas and Zhang, Xiaorui and Haugen, {\O}ystein and M{\o}ller-Pedersen, Birger},
  editor    = {Kienzle, J{\"o}rg},
  address   = {Berlin, Heidelberg},
  booktitle = {Models in Software Engineering: Workshops and Symposia at MODELS 2011, Wellington, New Zealand, October 16-21, 2011, Reports and Revised Selected Papers},
  doi       = {10.1007/978-3-642-29645-1_8},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-29645-1},
  url       = {http://dx.doi.org/10.1007/978-3-642-29645-1_8},
}

@InBook{Erdweg2014,
  pages     = {489--514},
  title     = {Capture-Avoiding and Hygienic Program Transformations},
  publisher = {Springer Berlin Heidelberg},
  year      = {2014},
  author    = {Erdweg, Sebastian and van der Storm, Tijs and Dai, Yi},
  editor    = {Jones, Richard},
  address   = {Berlin, Heidelberg},
  booktitle = {ECOOP 2014 -- Object-Oriented Programming: 28th European Conference, Uppsala, Sweden, July 28 -- August 1, 2014. Proceedings},
  doi       = {10.1007/978-3-662-44202-9_20},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-662-44202-9},
  url       = {http://dx.doi.org/10.1007/978-3-662-44202-9_20},
}

@InBook{Sánchez-BarbudoHerrera2016,
  pages     = {3--18},
  title     = {A Domain Specific Transformation Language to Bridge Concrete and Abstract Syntax},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {S{\'a}nchez-Barbudo Herrera, Adolfo and Willink, Edward D. and Paige, Richard F.},
  editor    = {Van Gorp, Pieter and Engels, Gregor},
  address   = {Cham},
  booktitle = {Theory and Practice of Model Transformations: 9th International Conference, ICMT 2016, Held as Part of STAF 2016, Vienna, Austria, July 4-5, 2016, Proceedings},
  doi       = {10.1007/978-3-319-42064-6_1},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-42064-6},
  url       = {http://dx.doi.org/10.1007/978-3-319-42064-6_1},
}

@InBook{Amálio2016,
  pages     = {450--465},
  title     = {Checking SysML Models for Co-simulation},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Am{\'a}lio, Nuno and Payne, Richard and Cavalcanti, Ana and Woodcock, Jim},
  editor    = {Ogata, Kazuhiro and Lawford, Mark and Liu, Shaoying},
  address   = {Cham},
  booktitle = {Formal Methods and Software Engineering: 18th International Conference on Formal Engineering Methods, ICFEM 2016, Tokyo, Japan, November 14-18, 2016, Proceedings},
  doi       = {10.1007/978-3-319-47846-3_28},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-47846-3},
  url       = {http://dx.doi.org/10.1007/978-3-319-47846-3_28},
}

@InBook{MirSeyedNazari2015,
  pages     = {356--372},
  title     = {Identifying Code Generation Candidates Using Software Categories},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Mir Seyed Nazari, Pedram and Rumpe, Bernhard},
  editor    = {Desfray, Philippe and Filipe, Joaquim and Hammoudi, Slimane and Pires, Lu{\'i}s Ferreira},
  address   = {Cham},
  booktitle = {Model-Driven Engineering and Software Development: Third International Conference, MODELSWARD 2015, Angers, France, February 9-11, 2015, Revised Selected Papers},
  doi       = {10.1007/978-3-319-27869-8_21},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-27869-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-27869-8_21},
}

@InBook{Kulkarni2013,
  pages     = {220--235},
  title     = {Model Driven Software Development},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Kulkarni, Vinay},
  editor    = {Van Gorp, Pieter and Ritter, Tom and Rose, Louis M.},
  address   = {Berlin, Heidelberg},
  booktitle = {Modelling Foundations and Applications: 9th European Conference, ECMFA 2013, Montpellier, France, July 1-5, 2013. Proceedings},
  doi       = {10.1007/978-3-642-39013-5_16},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-39013-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-39013-5_16},
}

@Article{Pérez-Sánchez2016,
  author   = {P{\'e}rez-S{\'a}nchez, Horacio and Rezaei, Vahid and Mezhuyev, Vitaliy and Man, Duhu and Pe{\~{n}}a-Garc{\'i}a, Jorge and den-Haan, Helena and Gesing, Sandra},
  title    = {Developing science gateways for drug discovery in a grid environment},
  journal  = {SpringerPlus},
  year     = {2016},
  volume   = {5},
  number   = {1},
  pages    = {1300},
  abstract = {Methods for in silico screening of large databases of molecules increasingly complement and replace experimental techniques to discover novel compounds to combat diseases. As these techniques become more complex and computationally costly we are faced with an increasing problem to provide the research community of life sciences with a convenient tool for high-throughput virtual screening on distributed computing resources.},
  doi      = {10.1186/s40064-016-2914-x},
  groups   = {SpringerLink, excluidos},
  issn     = {2193-1801},
  url      = {http://dx.doi.org/10.1186/s40064-016-2914-x},
}

@InBook{Kett2014,
  pages     = {425--437},
  title     = {Integrated Service Engineering (ISE)},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Kett, Holger and Winkler, Matthias and Kadner, Kay},
  editor    = {Wahlster, Wolfgang and Grallert, Hans-Joachim and Wess, Stefan and Friedrich, Hermann and Widenka, Thomas},
  address   = {Cham},
  booktitle = {Towards the Internet of Services: The THESEUS Research Program},
  doi       = {10.1007/978-3-319-06755-1_33},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-06755-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-06755-1_33},
}

@InBook{Voelter2014,
  pages     = {41--61},
  title     = {Towards User-Friendly Projectional Editors},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Voelter, Markus and Siegmund, Janet and Berger, Thorsten and Kolb, Bernd},
  editor    = {Combemale, Beno{\^i}t and Pearce, David J. and Barais, Olivier and Vinju, Jurgen J.},
  address   = {Cham},
  booktitle = {Software Language Engineering: 7th International Conference, SLE 2014, V{\"a}ster{\aa}s, Sweden, September 15-16, 2014. Proceedings},
  doi       = {10.1007/978-3-319-11245-9_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-11245-9},
  url       = {http://dx.doi.org/10.1007/978-3-319-11245-9_3},
}

@InBook{Fuhrer2013,
  pages     = {101--158},
  title     = {Leveraging Static Analysis in an IDE},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Fuhrer, Robert M.},
  editor    = {L{\"a}mmel, Ralf and Saraiva, Jo{\~a}o and Visser, Joost},
  address   = {Berlin, Heidelberg},
  booktitle = {Generative and Transformational Techniques in Software Engineering IV: International Summer School, GTTSE 2011, Braga, Portugal, July 3-9, 2011. Revised Papers},
  doi       = {10.1007/978-3-642-35992-7_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-35992-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-35992-7_3},
}

@Article{ref1,
  title    = {Abstracts Accepted for American Conference on Pharmacometrics 2014 (ACoP5)},
  journal  = {Journal of Pharmacokinetics and Pharmacodynamics},
  year     = {2014},
  volume   = {41},
  number   = {1},
  pages    = {7--101},
  doi      = {10.1007/s10928-014-9379-8},
  issn     = {1573-8744},
  keywords = {rank5},
  url      = {http://dx.doi.org/10.1007/s10928-014-9379-8},
}

@InBook{Cassagne2016,
  pages     = {303--317},
  title     = {An Efficient, Portable and Generic Library for Successive Cancellation Decoding of Polar Codes},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Cassagne, Adrien and Le Gal, Bertrand and Leroux, Camille and Aumage, Olivier and Barthou, Denis},
  editor    = {Shen, Xipeng and Mueller, Frank and Tuck, James},
  address   = {Cham},
  booktitle = {Languages and Compilers for Parallel Computing: 28th International Workshop, LCPC 2015, Raleigh, NC, USA, September 9-11, 2015, Revised Selected Papers},
  doi       = {10.1007/978-3-319-29778-1_19},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-29778-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-29778-1_19},
}

@InBook{Krijnen2015,
  pages     = {397--406},
  title     = {Assessing Implicit Knowledge in BIM Models with Machine Learning},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Krijnen, Thomas and Tamke, Martin},
  editor    = {Thomsen, Mette Ramsgaard and Tamke, Martin and Gengnagel, Christoph and Faircloth, Billie and Scheurer, Fabian},
  address   = {Cham},
  booktitle = {Modelling Behaviour: Design Modelling Symposium 2015},
  doi       = {10.1007/978-3-319-24208-8_33},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-24208-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-24208-8_33},
}

@InBook{Müller2014,
  pages     = {1--37},
  title     = {Control Systems for Accelerators, Operational Tools},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {M{\"u}ller, Roland},
  editor    = {Jaeschke, Eberhard and Khan, Shaukat and Schneider, Jochen R. and Hastings, Jerome B.},
  address   = {Cham},
  booktitle = {Synchrotron Light Sources and Free-Electron Lasers: Accelerator Physics, Instrumentation and Science Applications},
  doi       = {10.1007/978-3-319-04507-8_17-1},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-04507-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-04507-8_17-1},
}

@InBook{Müller2016,
  pages         = {629--670},
  title         = {Control Systems for Accelerators: Operational Tools},
  publisher     = {Springer International Publishing},
  year          = {2016},
  author        = {M{\"u}ller, Roland},
  editor        = {Jaeschke, Eberhard J. and Khan, Shaukat and Schneider, Jochen R. and Hastings, Jerome B.},
  address       = {Cham},
  __markedentry = {[Neto:5]},
  booktitle     = {Synchrotron Light Sources and Free-Electron Lasers: Accelerator Physics, Instrumentation and Science Applications},
  doi           = {10.1007/978-3-319-14394-1_17},
  groups        = {Duplicados},
  isbn          = {978-3-319-14394-1},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-319-14394-1_17},
}

@InBook{Balis2016,
  pages     = {281--290},
  title     = {A Lightweight Approach for Deployment of Scientific Workflows in Cloud Infrastructures},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Balis, Bartosz and Figiela, Kamil and Malawski, Maciej and Pawlik, Maciej and Bubak, Marian},
  editor    = {Wyrzykowski, Roman and Deelman, Ewa and Dongarra, Jack and Karczewski, Konrad and Kitowski, Jacek and Wiatr, Kazimierz},
  address   = {Cham},
  booktitle = {Parallel Processing and Applied Mathematics: 11th International Conference, PPAM 2015, Krakow, Poland, September 6-9, 2015. Revised Selected Papers, Part I},
  doi       = {10.1007/978-3-319-32149-3_27},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-32149-3},
  url       = {http://dx.doi.org/10.1007/978-3-319-32149-3_27},
}

@InBook{Wider2012,
  pages     = {367--377},
  title     = {Towards Combinators for Bidirectional Model Transformations in Scala},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Wider, Arif},
  editor    = {Sloane, Anthony and A{\ss}mann, Uwe},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 4th International Conference, SLE 2011, Braga, Portugal, July 3-4, 2011, Revised Selected Papers},
  doi       = {10.1007/978-3-642-28830-2_21},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-28830-2},
  url       = {http://dx.doi.org/10.1007/978-3-642-28830-2_21},
}

@Article{Davis2012,
  author   = {Davis, W. Roger and Laplante, Phillip A. and Sand{\'e}n, Bo I.},
  title    = {A real-time virtual machine implementation for small microcontrollers},
  journal  = {Innovations in Systems and Software Engineering},
  year     = {2012},
  volume   = {8},
  number   = {3},
  pages    = {223--241},
  abstract = {A way to host a full general purpose virtual machine (VM) interpreter on a very small microcontroller platform is described. This machine provides a comprehensive set of general and enhanced functionality efficiently by abstracting the VM instruction set. Measurements were made on the execution of software programs in the virtual machine while running on the target platform in order to demonstrate the machine's capabilities. Additionally, multitasking capabilities were added to the baseline and found to perform efficiently within the VM. The results proved to be satisfactory and demonstrate that a robust virtual machine can be made available for very small embedded platforms based on simple microcontrollers, such as those that are widely found in aerospace applications.},
  doi      = {10.1007/s11334-012-0188-1},
  groups   = {SpringerLink, excluidos},
  issn     = {1614-5054},
  url      = {http://dx.doi.org/10.1007/s11334-012-0188-1},
}

@InBook{Bockermann2014,
  pages     = {393--404},
  title     = {A Visual Programming Approach to Big Data Analytics},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Bockermann, Christian},
  editor    = {Marcus, Aaron},
  address   = {Cham},
  booktitle = {Design, User Experience, and Usability. User Experience Design for Diverse Interaction Platforms and Environments: Third International Conference, DUXU 2014, Held as Part of HCI International 2014, Heraklion, Crete, Greece, June 22-27, 2014, Proceedings, Part II},
  doi       = {10.1007/978-3-319-07626-3_36},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-07626-3},
  url       = {http://dx.doi.org/10.1007/978-3-319-07626-3_36},
}

@InBook{Iglesias2015,
  pages     = {258--268},
  title     = {Computable Representation of Antimicrobial Recommendations Using Clinical Rules: A Clinical Information Systems Perspective},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Iglesias, Natalia and Juarez, Jose M. and Campos, Manuel and Palacios, Francisco},
  editor    = {Ferr{\'a}ndez Vicente, Jos{\'e} Manuel and {\'A}lvarez-S{\'a}nchez, Jos{\'e} Ram{\'o}n and de la Paz L{\'o}pez, F{\'e}lix and Toledo-Moreo, Fco. Javier and Adeli, Hojjat},
  address   = {Cham},
  booktitle = {Artificial Computation in Biology and Medicine: International Work-Conference on the Interplay Between Natural and Artificial Computation, IWINAC 2015, Elche, Spain, June 1-5, 2015, Proceedings, Part I},
  doi       = {10.1007/978-3-319-18914-7_27},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-18914-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-18914-7_27},
}

@InBook{Hermann2014,
  pages     = {122--137},
  title     = {Triple Graph Grammars in the Large for Translating Satellite Procedures},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Hermann, Frank and Gottmann, Susann and Nachtigall, Nico and Ehrig, Hartmut and Braatz, Benjamin and Morelli, Gianluigi and Pierre, Alain and Engel, Thomas and Ermel, Claudia},
  editor    = {Di Ruscio, Davide and Varr{\'o}, D{\'a}niel},
  address   = {Cham},
  booktitle = {Theory and Practice of Model Transformations: 7th International Conference, ICMT 2014, Held as Part of STAF 2014, York, UK, July 21-22, 2014. Proceedings},
  doi       = {10.1007/978-3-319-08789-4_9},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-08789-4},
  url       = {http://dx.doi.org/10.1007/978-3-319-08789-4_9},
}

@InBook{Klint2013,
  pages     = {36--55},
  title     = {Micro-Machinations},
  publisher = {Springer International Publishing},
  year      = {2013},
  author    = {Klint, Paul and van Rozen, Riemer},
  editor    = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
  address   = {Cham},
  booktitle = {Software Language Engineering: 6th International Conference, SLE 2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-319-02654-1_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-02654-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_3},
}

@InBook{Bagge2013,
  pages     = {33--49},
  title     = {Walk Your Tree Any Way You Want},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Bagge, Anya Helene and L{\"a}mmel, Ralf},
  editor    = {Duddy, Keith and Kappel, Gerti},
  address   = {Berlin, Heidelberg},
  booktitle = {Theory and Practice of Model Transformations: 6th International Conference, ICMT 2013, Budapest, Hungary, June 18-19, 2013. Proceedings},
  doi       = {10.1007/978-3-642-38883-5_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-38883-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-38883-5_3},
}

@InBook{Pergl2012,
  pages     = {511--518},
  title     = {OpenCASE-- A Tool for Ontology-Centred Conceptual Modelling},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Pergl, Robert and T{\r{u}}ma, Jakub},
  editor    = {Bajec, Marko and Eder, Johann},
  address   = {Berlin, Heidelberg},
  booktitle = {Advanced Information Systems Engineering Workshops: CAiSE 2012 International Workshops, Gda{\'{n}}sk, Poland, June 25-26, 2012. Proceedings},
  doi       = {10.1007/978-3-642-31069-0_42},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-31069-0},
  url       = {http://dx.doi.org/10.1007/978-3-642-31069-0_42},
}

@InBook{Lagos2015,
  pages     = {36--47},
  title     = {Preserving Consistency in Domain-Specific Business Processes Through Semantic Representation of Artefacts},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Lagos, Nikolaos and Mos, Adrian and Vion-Dury, Jean-Yves and Chanod, Jean-Pierre},
  editor    = {Abramowicz, Witold},
  address   = {Cham},
  booktitle = {Business Information Systems Workshops: BIS 2015 International Workshops, Pozna{\'{n}}, Poland, June 24-26, 2015, Revised Papers},
  doi       = {10.1007/978-3-319-26762-3_4},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-26762-3},
  url       = {http://dx.doi.org/10.1007/978-3-319-26762-3_4},
}

@InBook{Bettini2013a,
  pages         = {52--65},
  title         = {Rapidly Implementing EMF Applications with EMF Components},
  publisher     = {Springer Berlin Heidelberg},
  year          = {2013},
  author        = {Bettini, Lorenzo},
  editor        = {Cordeiro, Jos{\'e} and Hammoudi, Slimane and van Sinderen, Marten},
  address       = {Berlin, Heidelberg},
  __markedentry = {[Neto:5]},
  booktitle     = {Software and Data Technologies: 7th International Conference, ICSOFT 2012, Rome, Italy, July 24-27, 2012, Revised Selected Papers},
  doi           = {10.1007/978-3-642-45404-2_4},
  groups        = {SCOPUS, Duplicados},
  isbn          = {978-3-642-45404-2},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-642-45404-2_4},
}

@InBook{García2013,
  pages     = {144--163},
  title     = {Model Transformation Co-evolution: A Semi-automatic Approach},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Garc{\'i}a, Jokin and Diaz, Oscar and Azanza, Maider},
  editor    = {Czarnecki, Krzysztof and Hedin, G{\"o}rel},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 5th International Conference, SLE 2012, Dresden, Germany, September 26-28, 2012, Revised Selected Papers},
  doi       = {10.1007/978-3-642-36089-3_9},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-36089-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_9},
}

@InBook{Brodskiy2014,
  pages     = {158--169},
  title     = {Fault Avoidance in Development of Robot Motion-Control Software by Modeling the Computation},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Brodskiy, Yury and Wilterdink, Robert and Stramigioli, Stefano and Broenink, Jan},
  editor    = {Brugali, Davide and Broenink, Jan F. and Kroeger, Torsten and MacDonald, Bruce A.},
  address   = {Cham},
  booktitle = {Simulation, Modeling, and Programming for Autonomous Robots: 4th International Conference, SIMPAR 2014, Bergamo, Italy, October 20-23, 2014. Proceedings},
  doi       = {10.1007/978-3-319-11900-7_14},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-11900-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-11900-7_14},
}

@InBook{Kramer2013,
  pages     = {108--124},
  title     = {Achieving Practical Genericity in Model Weaving through Extensibility},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Kramer, Max E. and Klein, Jacques and Steel, Jim R. H. and Morin, Brice and Kienzle, J{\"o}rg and Barais, Olivier and J{\'e}z{\'e}quel, Jean-Marc},
  editor    = {Duddy, Keith and Kappel, Gerti},
  address   = {Berlin, Heidelberg},
  booktitle = {Theory and Practice of Model Transformations: 6th International Conference, ICMT 2013, Budapest, Hungary, June 18-19, 2013. Proceedings},
  doi       = {10.1007/978-3-642-38883-5_12},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-38883-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-38883-5_12},
}

@InBook{Nam2016,
  pages     = {926--941},
  title     = {Integrated Modeling Workflow for Security Assurance},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Nam, Min-Young and Delange, Julien and Feiler, Peter},
  editor    = {Margaria, Tiziana and Steffen, Bernhard},
  address   = {Cham},
  booktitle = {Leveraging Applications of Formal Methods, Verification and Validation: Foundational Techniques: 7th International Symposium, ISoLA 2016, Imperial, Corfu, Greece, October 10--14, 2016, Proceedings, Part I},
  doi       = {10.1007/978-3-319-47166-2_64},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-47166-2},
  url       = {http://dx.doi.org/10.1007/978-3-319-47166-2_64},
}

@InBook{Matias2015,
  pages     = {339--348},
  title     = {Modular Acquisition and Stimulation System for Timestamp-Driven Neuroscience Experiments},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Matias, Paulo and Guariento, Rafael T. and de Almeida, Lirio O. B. and Slaets, Jan F. W.},
  editor    = {Sano, Kentaro and Soudris, Dimitrios and H{\"u}bner, Michael and Diniz, Pedro C.},
  address   = {Cham},
  booktitle = {Applied Reconfigurable Computing: 11th International Symposium, ARC 2015, Bochum, Germany, April 13-17, 2015, Proceedings},
  doi       = {10.1007/978-3-319-16214-0_29},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-16214-0},
  url       = {http://dx.doi.org/10.1007/978-3-319-16214-0_29},
}

@Article{Wang2016,
  author   = {Wang, Disi and Samaka, Mohammed and Miao, Yongwu and Ali, Zeyad and Hoppe, H. Ulrich},
  title    = {A model-driven PBL application to support the authoring, delivery, and execution of PBL processes},
  journal  = {Research and Practice in Technology Enhanced Learning},
  year     = {2016},
  volume   = {11},
  number   = {1},
  pages    = {6},
  abstract = {As problem-based learning (PBL) is becoming more and more popular, there is also a growing interest in developing and using technologies in the implementation of PBL. However, teachers may have difficulties to design and deliver a pedagogically well-designed and technically smoothly executable online or blended PBL process on their own because they lack appropriate expertise in learning theories and design methods as well as a deeper understanding of the potential affordances of the available technologies. From this premise, we are committed to developing and testing methods and tools to support the design and delivery of online or hybrid PBL processes with high flexibility and a low threshold of usage requirements. This paper presents a technical approach to develop a web-based PBL application that supports both authoring and run-time usage. In comparison with other tools and technical approaches, it is concluded that a combined use of a model-driven approach and semi-structured data management appears to be a promising approach to effectively and efficiently support the authoring, delivering, and execution of design-time and run-time PBL processes.},
  doi      = {10.1186/s41039-016-0030-8},
  groups   = {SpringerLink, excluidos},
  issn     = {1793-7078},
  url      = {http://dx.doi.org/10.1186/s41039-016-0030-8},
}

@InBook{Steffen2016,
  pages     = {22--46},
  title     = {Archimedean Points: The Essence for Mastering Change},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Steffen, Bernhard and Naujokat, Stefan},
  editor    = {Steffen, Bernhard},
  address   = {Cham},
  booktitle = {Transactions on Foundations for Mastering Change I},
  doi       = {10.1007/978-3-319-46508-1_3},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-46508-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-46508-1_3},
}

@InBook{Méndez-Acuña2016,
  pages     = {368--383},
  title     = {Reverse-Engineering Reusable Language Modules from Legacy Domain-Specific Languages},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {M{\'e}ndez-Acu{\~{n}}a, David and Galindo, Jos{\'e} A. and Combemale, Benoit and Blouin, Arnaud and Baudry, Benoit and Le Guernic, Gurvan},
  editor    = {Kapitsaki, Georgia M. and Santana de Almeida, Eduardo},
  address   = {Cham},
  booktitle = {Software Reuse: Bridging with Social-Awareness: 15th International Conference, ICSR 2016, Limassol, Cyprus, June 5-7, 2016, Proceedings},
  doi       = {10.1007/978-3-319-35122-3_24},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-35122-3},
  url       = {http://dx.doi.org/10.1007/978-3-319-35122-3_24},
}

@InBook{Mustafiz2016,
  pages     = {785--797},
  title     = {Towards Modular Language Design Using Language Fragments: The Hybrid Systems Case Study},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {Mustafiz, Sadaf and Barroca, Bruno and Gomes, Claudio and Vangheluwe, Hans},
  editor    = {Latifi, Shahram},
  address   = {Cham},
  booktitle = {Information Technology: New Generations: 13th International Conference on Information Technology},
  doi       = {10.1007/978-3-319-32467-8_68},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-32467-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-32467-8_68},
}

@InBook{López-Fernández2016,
  pages     = {101--117},
  title     = {Example-Based Generation of Graphical Modelling Environments},
  publisher = {Springer International Publishing},
  year      = {2016},
  author    = {L{\'o}pez-Fern{\'a}ndez, Jes{\'u}s J. and Garmendia, Antonio and Guerra, Esther and de Lara, Juan},
  editor    = {W{\k{a}}sowski, Andrzej and L{\"o}nn, Henrik},
  address   = {Cham},
  booktitle = {Modelling Foundations and Applications: 12th European Conference, ECMFA 2016, Held as Part of STAF 2016, Vienna, Austria, July 6-7, 2016, Proceedings},
  doi       = {10.1007/978-3-319-42061-5_7},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-319-42061-5},
  url       = {http://dx.doi.org/10.1007/978-3-319-42061-5_7},
}

@InBook{Khalilov2016,
  pages         = {447--464},
  title         = {Modeling and Optimizing Automotive Electric/Electronic (E/E) Architectures: Towards Making Clafer Accessible to Practitioners},
  publisher     = {Springer International Publishing},
  year          = {2016},
  author        = {Khalilov, Eldar and Ross, Jordan and Antkiewicz, Micha{\l} and V{\"o}lter, Markus and Czarnecki, Krzysztof},
  editor        = {Margaria, Tiziana and Steffen, Bernhard},
  address       = {Cham},
  __markedentry = {[Neto:5]},
  booktitle     = {Leveraging Applications of Formal Methods, Verification and Validation: Discussion, Dissemination, Applications: 7th International Symposium, ISoLA 2016, Imperial, Corfu, Greece, October 10-14, 2016, Proceedings, Part II},
  doi           = {10.1007/978-3-319-47169-3_37},
  groups        = {SCOPUS, Duplicados},
  isbn          = {978-3-319-47169-3},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-319-47169-3_37},
}

@Article{Tairas2015,
  author        = {Tairas, Robert and Cabot, Jordi},
  title         = {Corpus-based analysis of domain-specific languages},
  journal       = {Software {\&} Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {889--904},
  __markedentry = {[Neto:5]},
  abstract      = {As more domain-specific languages (DSLs) are designed and developed, the need to evaluate these languages becomes an essential part of the overall DSL life cycle. Corpus-based analysis can serve as an evaluation mechanism to identify characteristics of the language after it has been deployed by looking at how end-users employ it in practice. This analysis that is based on actual usage of the language brings a new perspective which can be considered by a language engineer when working toward improving the language. In this paper, we describe our utilization of corpus-based analysis techniques and exemplify them on the evaluation of the Puppet and ATL DSLs. We also outline an Eclipse plug-in, which is a generic corpus-based DSL analysis tool that can accommodate the evaluation of different DSLs.},
  doi           = {10.1007/s10270-013-0352-6},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-013-0352-6},
}

@InBook{Sporer2015,
  pages     = {41--50},
  title     = {A Lean Automotive E/E-System Design Approach with Open Toolbox Access},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Sporer, Harald},
  editor    = {O'Connor, Rory V. and Umay Akkaya, Mariye and Kemaneci, Kerem and Yilmaz, Murat and Poth, Alexander and Messnarz, Richard},
  address   = {Cham},
  booktitle = {Systems, Software and Services Process Improvement: 22nd European Conference, EuroSPI 2015, Ankara, Turkey, September 30 -- October 2, 2015. Proceedings},
  doi       = {10.1007/978-3-319-24647-5_4},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-24647-5},
  url       = {http://dx.doi.org/10.1007/978-3-319-24647-5_4},
}

@InBook{Ratiu2015,
  pages     = {72--82},
  title     = {Safety.Lab: Model-Based Domain Specific Tooling for Safety Argumentation},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Ratiu, Daniel and Zeller, Marc and Killian, Lennart},
  editor    = {Koornneef, Floor and van Gulijk, Coen},
  address   = {Cham},
  booktitle = {Computer Safety, Reliability, and Security: SAFECOMP 2015 Workshops, ASSURE, DECSoS. ISSE, ReSA4CI, and SASSUR, Delft, The Netherlands, September 22, 2015, Proceedings},
  doi       = {10.1007/978-3-319-24249-1_7},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-24249-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-24249-1_7},
}

@Article{Qamar2015,
  author        = {Qamar, Ahsan and Wikander, Jan and During, Carl},
  title         = {Managing dependencies in mechatronic design: a case study on dependency management between mechanical design and system design},
  journal       = {Engineering with Computers},
  year          = {2015},
  volume        = {31},
  number        = {3},
  pages         = {631--646},
  __markedentry = {[Neto:5]},
  abstract      = {In this paper, we have investigated the role of dependencies in the design process of mechatronic products. Since explicit modeling of dependencies is largely considered unnecessary today, current languages do not support dependency modeling due to lack of sufficiently expressive language constructs. However, this paper argues that modeling dependencies is important in managing the overall design process. The paper highlights dependencies between two important viewpoints: system design and mechanical design. We have looked closely at how mechanical design (supported by CAD tools) establishes a backbone for the overall design concept. Mechanical design cannot be isolated from other design activities, and the mismanagement of dependencies there leads to problems in other domains too. To illustrate the process, the paper presents an example of modeling dependencies between system hierarchy in OMG SysML{\texttrademark} and the CAD assembly in Solid Edge for a mechatronic design example. The paper presents two different approaches to capturing dependencies---using a general purpose modeling language such as SysML and using a domain specific modeling language (DSML). We argue for using a DSML instead of a general purpose language and provide a DSML called the dependency modeling language (DML). An example DML model for a two degree of freedom robot use case is discussed. The paper also illustrates the complete process of capturing dependencies in a general purpose modeling language like SysML, which served as a good exercise on how to fetch data from a CAD tool and how to represent dependencies inside a significantly different modeling language. Lessons learned from doing this were applied to the construction of DML. Our aim for the future is to reduce the human effort required to build dependency models. Machine learning techniques and automated model transformations are valuable techniques to support this cause.},
  doi           = {10.1007/s00366-014-0366-x},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1435-5663},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s00366-014-0366-x},
}

@InBook{Ouhammou2015,
  pages     = {283--295},
  title     = {MoSaRT Framework: A Collaborative Tool for Modeling and Analyzing Embedded Real-Time Systems},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Ouhammou, Yassine and Grolleau, Emmanuel and Richard, Micha{\"e}l and Richard, Pascal and Madiot, Fr{\'e}d{\'e}ric},
  editor    = {Boulanger, Fr{\'e}d{\'e}ric and Krob, Daniel and Morel, G{\'e}rard and Roussel, Jean-Claude},
  address   = {Cham},
  booktitle = {Complex Systems Design {\&} Management: Proceedings of the Fifth International Conference on Complex Systems Design {\&} Management CSD{\&}M 2014},
  doi       = {10.1007/978-3-319-11617-4_20},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-11617-4},
  url       = {http://dx.doi.org/10.1007/978-3-319-11617-4_20},
}

@InBook{Mooij2015,
  pages     = {66--81},
  title     = {Cost-Effective Industrial Software Rejuvenation Using Domain-Specific Models},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Mooij, Arjan J. and Eggen, Gernot and Hooman, Jozef and van Wezep, Hans},
  editor    = {Kolovos, Dimitris and Wimmer, Manuel},
  address   = {Cham},
  booktitle = {Theory and Practice of Model Transformations: 8th International Conference, ICMT 2015, Held as Part of STAF 2015, L'Aquila, Italy, July 20-21, 2015. Proceedings},
  doi       = {10.1007/978-3-319-21155-8_6},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-21155-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-21155-8_6},
}

@Article{Merilinna2015,
  author   = {Merilinna, Janne and Yrj{\"o}nen, Anton and R{\"a}ty, Tomi},
  title    = {NFR+ framework method to support bi-directional traceability of non-functional requirements},
  journal  = {Computer Science - Research and Development},
  year     = {2015},
  volume   = {30},
  number   = {1},
  pages    = {35--49},
  abstract = {Accurate and correctly defined requirements are of importance to ensure the production of feasible products. For requirements engineering, it is not enough that functional requirements are accurately defined and considered in software development but vital non-functional requirements require special attention because they often are cross-cutting concerns and difficult to interpret during design. Not only requirements have to be carefully considered but they also have to be implemented and the implementation must be validated against the original requirements. This is facilitated if a bi-directional traceability link between requirements and implementation is maintained. NFR+ Framework supported by a tool enables to do that in the context of Domain-Specific Modeling (DSM). In this publication, we propose a method for applying such a framework supported by a tool to enable maintaining a bi-directional traceability link between in the development process phases with careful attention on maintaining traceability over different typical tool boundaries existing in the context of DSM.},
  doi      = {10.1007/s00450-012-0205-5},
  groups   = {SpringerLink, excluidos},
  issn     = {1865-2042},
  url      = {http://dx.doi.org/10.1007/s00450-012-0205-5},
}

@Article{Jezequel2015,
  author        = {J{\'e}z{\'e}quel, Jean-Marc and Combemale, Benoit and Barais, Olivier and Monperrus, Martin and Fouquet, Fran{\c{c}}ois},
  title         = {Mashup of metalanguages and its implementation in the Kermeta language workbench},
  journal       = {Software {\&} Systems Modeling},
  year          = {2015},
  volume        = {14},
  number        = {2},
  pages         = {905--920},
  __markedentry = {[Neto:5]},
  abstract      = {With the growing use of domain-specific languages (DSL) in industry, DSL design and implementation goes far beyond an activity for a few experts only and becomes a challenging task for thousands of software engineers. DSL implementation indeed requires engineers to care for various concerns, from abstract syntax, static semantics, behavioral semantics, to extra-functional issues such as runtime performance. This paper presents an approach that uses one metalanguage per language implementation concern. We show that the usage and combination of those metalanguages is simple and intuitive enough to deserve the term mashup. We evaluate the approach by completely implementing the non-trivial fUML modeling language, a semantically sound and executable subset of the Unified Modeling Language (UML).},
  doi           = {10.1007/s10270-013-0354-4},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-013-0354-4},
}

@InBook{Iber2015,
  pages     = {155--171},
  title     = {A Textual Domain-Specific Language Based on the UML Testing Profile},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Iber, Johannes and Kajtazovi{\'{c}}, Nermin and Macher, Georg and H{\"o}ller, Andrea and Rauter, Tobias and Kreiner, Christian},
  editor    = {Desfray, Philippe and Filipe, Joaquim and Hammoudi, Slimane and Pires, Lu{\'i}s Ferreira},
  address   = {Cham},
  booktitle = {Model-Driven Engineering and Software Development: Third International Conference, MODELSWARD 2015, Angers, France, February 9-11, 2015, Revised Selected Papers},
  doi       = {10.1007/978-3-319-27869-8_9},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-27869-8},
  url       = {http://dx.doi.org/10.1007/978-3-319-27869-8_9},
}

@Article{Hebig2015,
  author   = {Hebig, Regina and Giese, Holger},
  title    = {On the complex nature of MDE evolution and its impact on changeability},
  journal  = {Software {\&} Systems Modeling},
  year     = {2015},
  pages    = {1--24},
  abstract = {In model-driven engineering (MDE), a particular MDE setting of employed languages and automated and manual activities has major impact on productivity. Furthermore, it has been observed that such MDE settings evolve over time. However, currently not much is known about this evolution and its impact on the MDE setting's maturity, i.e., on changeability and other productivity dimensions. Research so far focuses on evolution of separate building blocks, such as (modeling-) languages, tools, or transformation, only. In this article, we address the lack of knowledge about evolution of MDE settings by investigating case studies from different companies. The first results reveal (1) that there is evolution that affects the composition of an MDE setting (structural evolution) and has the potential to strongly impact aspects, such as changeability and (2) that this structural evolution actually occurs in practice. Based on these first results, we investigated (3) whether there are cases in practice, where structural evolution already altered the risks of changeability given by the respective MDE setting. Therefore, we search and identify examples for such evolution steps on MDE settings from practice and collected six case studies on evolution histories in detail. As a result, we show in this paper that structural evolution (a) is not seldom in practice and (b) sometimes leads to the introduction of changeability risks.},
  doi      = {10.1007/s10270-015-0464-2},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-015-0464-2},
}

@Article{Filho2015,
  author   = {Filho, Jo{\~a}o Bosco Ferreira and Barais, Olivier and Acher, Mathieu and Le Noir, J{\'e}r{\^o}me and Legay, Axel and Baudry, Benoit},
  title    = {Generating counterexamples of model-based software product lines},
  journal  = {International Journal on Software Tools for Technology Transfer},
  year     = {2015},
  volume   = {17},
  number   = {5},
  pages    = {585--600},
  abstract = {In a model-based software product line (MSPL), the variability of the domain is characterized in a variability model and the core artifacts are base models conforming to a modeling language (also called metamodel). A realization model connects the features of the variability model to the base model elements, triggering operations over these elements based on a configuration. The design space of an MSPL is extremely complex to manage for the engineer, since the number of variants may be exponential and the derived product models have to be conforming to numerous well-formedness and business rules. In this paper, the objective is to provide a way to generate MSPLs, called counterexamples (also called antipatterns), that can produce invalid product models despite a valid configuration in the variability model. We describe the foundations and motivate the usefulness of counterexamples (e.g., inference of guidelines or domain-specific rules to avoid earlier the specification of incorrect mappings; testing oracles for increasing the robustness of derivation engines given a modeling language). We provide a generic process, based on the common variability language (CVL) to randomly search the space of MSPLs for a specific modeling language. We develop LineGen a tool on top of CVL and modeling technologies to support the methodology and the process. LineGen targets different scenarios and is flexible to work either with just a domain metamodel as input or also with pre-defined variability models and base models. We validate the effectiveness of this process for three formalisms at different scales (up to 247 metaclasses and 684 rules). We also apply the approach in the context of a real industrial scenario involving a large-scale metamodel.},
  doi      = {10.1007/s10009-014-0341-2},
  groups   = {SpringerLink, excluidos},
  issn     = {1433-2787},
  url      = {http://dx.doi.org/10.1007/s10009-014-0341-2},
}

@InBook{Deantoni2015,
  pages     = {70--87},
  title     = {Domain Globalization: Using Languages to Support Technical and Social Coordination},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Deantoni, Julien and Brun, C{\'e}dric and Caillaud, Benoit and France, Robert B. and Karsai, Gabor and Nierstrasz, Oscar and Syriani, Eugene},
  editor    = {Combemale, Benoit and Cheng, Betty H.C. and France, Robert B. and J{\'e}z{\'e}quel, Jean-Marc and Rumpe, Bernhard},
  address   = {Cham},
  booktitle = {Globalizing Domain-Specific Languages: International Dagstuhl Seminar, Dagstuhl Castle, Germany, October 5-10, 2014, Revised Papers},
  doi       = {10.1007/978-3-319-26172-0_5},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-26172-0},
  url       = {http://dx.doi.org/10.1007/978-3-319-26172-0_5},
}

@InBook{Cheng2015,
  pages     = {1--6},
  title     = {On the Globalization of Domain-Specific Languages},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Cheng, Betty H. C. and Combemale, Benoit and France, Robert B. and J{\'e}z{\'e}quel, Jean-Marc and Rumpe, Bernhard},
  editor    = {Combemale, Benoit and Cheng, Betty H.C. and France, Robert B. and J{\'e}z{\'e}quel, Jean-Marc and Rumpe, Bernhard},
  address   = {Cham},
  booktitle = {Globalizing Domain-Specific Languages: International Dagstuhl Seminar, Dagstuhl Castle, Germany, October 5-10, 2014, Revised Papers},
  doi       = {10.1007/978-3-319-26172-0_1},
  groups    = {ACM, SCOPUS, Inclusos},
  isbn      = {978-3-319-26172-0},
  url       = {http://dx.doi.org/10.1007/978-3-319-26172-0_1},
}

@InBook{Bryant2015,
  pages     = {43--69},
  title     = {Globalized Domain Specific Language Engineering},
  publisher = {Springer International Publishing},
  year      = {2015},
  author    = {Bryant, Barrett and J{\'e}z{\'e}quel, Jean-Marc and L{\"a}mmel, Ralf and Mernik, Marjan and Schindler, Martin and Steinmann, Friedrich and Tolvanen, Juha-Pekka and Vallecillo, Antonio and V{\"o}lter, Markus},
  editor    = {Combemale, Benoit and Cheng, Betty H.C. and France, Robert B. and J{\'e}z{\'e}quel, Jean-Marc and Rumpe, Bernhard},
  address   = {Cham},
  booktitle = {Globalizing Domain-Specific Languages: International Dagstuhl Seminar, Dagstuhl Castle, Germany, October 5-10, 2014, Revised Papers},
  doi       = {10.1007/978-3-319-26172-0_4},
  groups    = {SCOPUS, Compendex, Inclusos},
  isbn      = {978-3-319-26172-0},
  url       = {http://dx.doi.org/10.1007/978-3-319-26172-0_4},
}

@Article{Walter2014,
  author   = {Walter, Tobias and Parreiras, Fernando Silva and Staab, Steffen},
  title    = {An ontology-based framework for domain-specific modeling},
  journal  = {Software {\&} Systems Modeling},
  year     = {2014},
  volume   = {13},
  number   = {1},
  pages    = {83--108},
  abstract = {Domain-specific languages (DSLs) provide abstractions and notations for better understanding and easier modeling of applications in a special domain. Current shortcomings of DSLs include learning curve and formal semantics. This paper reports on a framework that allows the use of ontology technologies to describe and reason on DSLs. The formal semantics of OWL together with reasoning services allows for addressing constraint definition, progressive evaluation, suggestions, and debugging. The approach integrates existing metamodels and concrete syntaxes in a new technical space. A scenario in which domain models for network devices are created illustrates the framework.},
  doi      = {10.1007/s10270-012-0249-9},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-012-0249-9},
}

@InBook{Visic2014,
  pages     = {162--173},
  title     = {Developing Conceptual Modeling Tools Using a DSL},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Visic, Niksa and Karagiannis, Dimitris},
  editor    = {Buchmann, Robert and Kifor, Claudiu Vasile and Yu, Jian},
  address   = {Cham},
  booktitle = {Knowledge Science, Engineering and Management: 7th International Conference, KSEM 2014, Sibiu, Romania, October 16-18, 2014. Proceedings},
  doi       = {10.1007/978-3-319-12096-6_15},
  groups    = {SCOPUS, Compendex, excluidos},
  isbn      = {978-3-319-12096-6},
  url       = {http://dx.doi.org/10.1007/978-3-319-12096-6_15},
}

@InBook{SánchezCuadrado2014,
  pages         = {196--212},
  title         = {Towards the Systematic Construction of Domain-Specific Transformation Languages},
  publisher     = {Springer International Publishing},
  year          = {2014},
  author        = {S{\'a}nchez Cuadrado, Jes{\'u}s and Guerra, Esther and de Lara, Juan},
  editor        = {Cabot, Jordi and Rubin, Julia},
  address       = {Cham},
  __markedentry = {[Neto:5]},
  booktitle     = {Modelling Foundations and Applications: 10th European Conference, ECMFA 2014, Held as Part of STAF 2014, York, UK, July 21-25, 2014. Proceedings},
  doi           = {10.1007/978-3-319-09195-2_13},
  groups        = {ACM, SCOPUS, Duplicados},
  isbn          = {978-3-319-09195-2},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-319-09195-2_13},
}

@InBook{Schneider2014,
  pages     = {231--242},
  title     = {Structured Design and Development of Domain-Specific Languages in Robotics},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Schneider, Sven and Hochgeschwender, Nico and Kraetzschmar, Gerhard K.},
  editor    = {Brugali, Davide and Broenink, Jan F. and Kroeger, Torsten and MacDonald, Bruce A.},
  address   = {Cham},
  booktitle = {Simulation, Modeling, and Programming for Autonomous Robots: 4th International Conference, SIMPAR 2014, Bergamo, Italy, October 20-23, 2014. Proceedings},
  doi       = {10.1007/978-3-319-11900-7_20},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-11900-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-11900-7_20},
}

@InBook{Nordmann2014,
  pages         = {195--206},
  title         = {A Survey on Domain-Specific Languages in Robotics},
  publisher     = {Springer International Publishing},
  year          = {2014},
  author        = {Nordmann, Arne and Hochgeschwender, Nico and Wrede, Sebastian},
  editor        = {Brugali, Davide and Broenink, Jan F. and Kroeger, Torsten and MacDonald, Bruce A.},
  address       = {Cham},
  __markedentry = {[Neto:5]},
  booktitle     = {Simulation, Modeling, and Programming for Autonomous Robots: 4th International Conference, SIMPAR 2014, Bergamo, Italy, October 20-23, 2014. Proceedings},
  doi           = {10.1007/978-3-319-11900-7_17},
  groups        = {ACM, SCOPUS, Duplicados},
  isbn          = {978-3-319-11900-7},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-319-11900-7_17},
}

@InBook{Naujokat2014,
  pages     = {481--498},
  title     = {Domain-Specific Code Generator Modeling: A Case Study for Multi-faceted Concurrent Systems},
  publisher = {Springer Berlin Heidelberg},
  year      = {2014},
  author    = {Naujokat, Stefan and Traonouez, Louis-Marie and Isberner, Malte and Steffen, Bernhard and Legay, Axel},
  editor    = {Margaria, Tiziana and Steffen, Bernhard},
  address   = {Berlin, Heidelberg},
  booktitle = {Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change: 6th International Symposium, ISoLA 2014, Imperial, Corfu, Greece, October 8-11, 2014, Proceedings, Part I},
  doi       = {10.1007/978-3-662-45234-9_33},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-662-45234-9},
  url       = {http://dx.doi.org/10.1007/978-3-662-45234-9_33},
}

@InBook{Miao2014a,
  pages     = {179--189},
  title     = {Towards Pedagogy-Driven Learning Design: A Case Study of Problem-Based Learning Design},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Miao, Yongwu and Ally, Mohamed and Samaka, Mohammed and Tsinakos, Avgoustos A.},
  editor    = {Popescu, Elvira and Lau, Rynson W. H. and Pata, Kai and Leung, Howard and Laanpere, Mart},
  address   = {Cham},
  booktitle = {Advances in Web-Based Learning -- ICWL 2014: 13th International Conference, Tallinn, Estonia, August 14-17, 2014. Proceedings},
  doi       = {10.1007/978-3-319-09635-3_20},
  groups    = {SCOPUS, Compendex, excluidos},
  isbn      = {978-3-319-09635-3},
  url       = {http://dx.doi.org/10.1007/978-3-319-09635-3_20},
}

@Article{Leitner2014,
  author        = {Leitner, Andrea and Preschern, Christopher and Kreiner, Christian},
  title         = {Effective development of automation systems through domain-specific modeling in a small enterprise context},
  journal       = {Software {\&} Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {35--54},
  __markedentry = {[Neto:5]},
  abstract      = {High development and maintenance costs and a high error rate are the major problems in the development of automation systems, which are mainly caused by bad communication and inefficient reuse methods. To overcome these problems, we propose a more systematic reuse approach. Though systematic reuse approaches such as software product lines are appealing, they tend to involve rather burdensome development and management processes. This paper focuses on small enterprises. Since such companies are often unable to perform a ``big bang'' adoption of the software product line, we suggest an incremental, more lightweight process to transition from single-system development to software product line development. Besides the components of the transition process, this paper discusses tool selection, DSL technology, stakeholder communication support, and business considerations. Although based on problems from the automation system domain, we believe the approach may be general enough to be applicable in other domains as well. The approach has proven successful in two case studies. First, we applied it to a research project for the automation of a logistics lab model, and in the second case (a real-life industry case), we investigated the approaches suitability for fish farm automation systems. Several metrics were collected throughout the evolution of each case, and this paper presents the data for single system development, clone{\&}own and software product line development. The results and observable effects are compared, discussed, and finally summarized in a list of lessons learned.},
  doi           = {10.1007/s10270-012-0289-1},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-012-0289-1},
}

@InBook{Křikava2014,
  pages     = {569--585},
  title     = {SIGMA: Scala Internal Domain-Specific Languages for Model Manipulations},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {K{\v{r}}ikava, Filip and Collet, Philippe and France, Robert B.},
  editor    = {Dingel, Juergen and Schulte, Wolfram and Ramos, Isidro and Abrah{\~a}o, Silvia and Insfran, Emilio},
  address   = {Cham},
  booktitle = {Model-Driven Engineering Languages and Systems: 17th International Conference, MODELS 2014, Valencia, Spain, September 28 -- October 3, 2014. Proceedings},
  doi       = {10.1007/978-3-319-11653-2_35},
  groups    = {SCOPUS, Compendex, Inclusos},
  isbn      = {978-3-319-11653-2},
  url       = {http://dx.doi.org/10.1007/978-3-319-11653-2_35},
}

@InBook{Goldschmidt2014,
  pages         = {242--253},
  title         = {Towards an Infrastructure for Domain-Specific Languages in a Multi-domain Cloud Platform},
  publisher     = {Springer International Publishing},
  year          = {2014},
  author        = {Goldschmidt, Thomas},
  editor        = {Cabot, Jordi and Rubin, Julia},
  address       = {Cham},
  __markedentry = {[Neto:5]},
  booktitle     = {Modelling Foundations and Applications: 10th European Conference, ECMFA 2014, Held as Part of STAF 2014, York, UK, July 21-25, 2014. Proceedings},
  doi           = {10.1007/978-3-319-09195-2_16},
  groups        = {ACM, SCOPUS, Duplicados},
  isbn          = {978-3-319-09195-2},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-319-09195-2_16},
}

@Article{Ebert2014,
  author   = {Ebert, J{\"u}rgen and Horn, Tassilo},
  title    = {GReTL: an extensible, operational, graph-based transformation language},
  journal  = {Software {\&} Systems Modeling},
  year     = {2014},
  volume   = {13},
  number   = {1},
  pages    = {301--321},
  abstract = {This article introduces the graph-based transformation language GReTL. GReTL is operational, and transformations are either specified in plain Java using the GReTL API or in a simple domain-specific language. GReTL follows the conception of incrementally constructing the target metamodel together with the target graph. When creating a new metamodel element, a set-based semantic expression is specified that describes the set of instances that have to be created in the target graph. This expression is defined as a query on the source graph. GReTL is a kernel language consisting of a minimal set of operations, but it is designed for being extensible. Custom higher-level operations can be built on top of the kernel operations easily. After a description of the foundations of GReTL, its most important elements are introduced along with a transformation example in the field of metamodel integration. Insights into the design of the GReTL API are given, and a convenience copy operation is implemented to demonstrate GReTL's extensibility.},
  doi      = {10.1007/s10270-012-0250-3},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-012-0250-3},
}

@InBook{CorredorPérez2014,
  pages     = {19--53},
  title     = {Exploring Major Architectural Aspects of the Web of Things},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Corredor P{\'e}rez, Iv{\'a}n and Bernardos Barbolla, Ana M.},
  editor    = {Mukhopadhyay, Subhas Chandra},
  address   = {Cham},
  booktitle = {Internet of Things: Challenges and Opportunities},
  doi       = {10.1007/978-3-319-04223-7_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-04223-7},
  url       = {http://dx.doi.org/10.1007/978-3-319-04223-7_2},
}

@InBook{Collet2014,
  pages         = {273--288},
  title         = {Domain Specific Languages for Managing Feature Models: Advances and Challenges},
  publisher     = {Springer Berlin Heidelberg},
  year          = {2014},
  author        = {Collet, Philippe},
  editor        = {Margaria, Tiziana and Steffen, Bernhard},
  address       = {Berlin, Heidelberg},
  __markedentry = {[Neto:5]},
  booktitle     = {Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change: 6th International Symposium, ISoLA 2014, Imperial, Corfu, Greece, October 8-11, 2014, Proceedings, Part I},
  doi           = {10.1007/978-3-662-45234-9_20},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  isbn          = {978-3-662-45234-9},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-662-45234-9_20},
}

@InBook{Chiş2014,
  pages     = {102--121},
  title     = {The Moldable Debugger: A Framework for Developing Domain-Specific Debuggers},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Chi{\c{s}}, Andrei and G{\^i}rba, Tudor and Nierstrasz, Oscar},
  editor    = {Combemale, Beno{\^i}t and Pearce, David J. and Barais, Olivier and Vinju, Jurgen J.},
  address   = {Cham},
  booktitle = {Software Language Engineering: 7th International Conference, SLE 2014, V{\"a}ster{\aa}s, Sweden, September 15-16, 2014. Proceedings},
  doi       = {10.1007/978-3-319-11245-9_6},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-11245-9},
  url       = {http://dx.doi.org/10.1007/978-3-319-11245-9_6},
}

@InBook{Blakes2014,
  pages     = {1--41},
  title     = {Infobiotics Workbench: A P Systems Based Tool for Systems and Synthetic Biology},
  publisher = {Springer International Publishing},
  year      = {2014},
  author    = {Blakes, Jonathan and Twycross, Jamie and Konur, Savas and Romero-Campero, Francisco Jose and Krasnogor, Natalio and Gheorghe, Marian},
  editor    = {Frisco, Pierluigi and Gheorghe, Marian and P{\'e}rez-Jim{\'e}nez, Mario J.},
  address   = {Cham},
  booktitle = {Applications of Membrane Computing in Systems and Synthetic Biology},
  doi       = {10.1007/978-3-319-03191-0_1},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-319-03191-0},
  url       = {http://dx.doi.org/10.1007/978-3-319-03191-0_1},
}

@Article{Biehl2014,
  author        = {Biehl, Matthias and El-Khoury, Jad and Loiret, Fr{\'e}d{\'e}ric and T{\"o}rngren, Martin},
  title         = {On the modeling and generation of service-oriented tool chains},
  journal       = {Software {\&} Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {2},
  pages         = {461--480},
  __markedentry = {[Neto:5]},
  abstract      = {Tool chains have grown from ad-hoc solutions to complex software systems, which often have a service-oriented architecture. With service-oriented tool integration, development tools are made available as services, which can be orchestrated to form tool chains. Due to the increasing sophistication and size of tool chains, there is a need for a systematic development approach for service-oriented tool chains. We propose a domain-specific modeling language (DSML) that allows us to describe the tool chain on an appropriate level of abstraction. We present how this language supports three activities when developing service-oriented tool chains: communication, design and realization. A generative approach supports the realization of the tool chain using the service component architecture. We present experiences from an industrial case study, which applies the DSML to support the creation of a service-oriented tool chain. We evaluate the approach both qualitatively and quantitatively by comparing it with a traditional development approach.},
  doi           = {10.1007/s10270-012-0275-7},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-012-0275-7},
}

@Article{Aßmann2014,
  author        = {A{\ss}mann, Uwe and Bartho, Andreas and B{\"u}rger, Christoff and Cech, Sebastian and Demuth, Birgit and Heidenreich, Florian and Johannes, Jendrik and Karol, Sven and Polowinski, Jan and Reimann, Jan and Schroeter, Julia and Seifert, Mirko and Thiele, Michael and Wende, Christian and Wilke, Claas},
  title         = {DropsBox: the Dresden Open Software Toolbox},
  journal       = {Software {\&} Systems Modeling},
  year          = {2014},
  volume        = {13},
  number        = {1},
  pages         = {133--169},
  __markedentry = {[Neto:5]},
  abstract      = {The Dresden Open Software Toolbox (DropsBox) is a software modelling toolbox consisting of a set of open source tools developed by the Software Technology Group at TU Dresden. The DropsBox is built on top of the Eclipse Platform and the Eclipse Modeling Framework. The DropsBox contributes to the development and application of domain-specific language changes (DSLs) in model-driven software development. It can be customised by tool and language developers to support various activities of a DSL's life cycle ranging from language design to language application and evolution. In this paper, we provide an overview of the DSL life cycle, the DropsBox tools, and their interaction on a common example. Furthermore, we discuss our experiences in developing and integrating tools for DropsBox in an academic environment.},
  doi           = {10.1007/s10270-012-0284-6},
  groups        = {ACM, SCOPUS, Compendex, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-012-0284-6},
}

@InBook{Ardolino2014,
  pages     = {173--188},
  title     = {Engineering Domain-Specific Languages for Games},
  publisher = {Apress},
  year      = {2014},
  author    = {Ardolino, Alessandro and Arnaud, Remi and Berinstein, Paula and Franco, Simon and Herubel, Adrien and McCutchan, John and Nedelcu, Nicusor and Nitschke, Benjamin and Robinet, Fabrice and Ronchi, Christian and Samour, Gustavo and Turkowski, Rita and Walter, Robert},
  address   = {Berkeley, CA},
  booktitle = {Game Development Tool Essentials},
  doi       = {10.1007/978-1-4302-6701-0_13},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-1-4302-6701-0},
  url       = {http://dx.doi.org/10.1007/978-1-4302-6701-0_13},
}

@Article{Walderhaug2013,
  author   = {Walderhaug, St{\aa}le},
  title    = {Design and evaluation of the ModelHealth toolchain for continuity of care web services},
  journal  = {Automated Software Engineering},
  year     = {2013},
  volume   = {20},
  number   = {2},
  pages    = {185--235},
  abstract = {Motivation: Systems interoperability is a key challenge in providing continuity of care to all patients. The challenge is addressed with information standards and new approaches to systems integration based on service-oriented architectures. Model-driven development promise utilities that are suitable for software service development in the healthcare domain, but development tools are still immature and their industry uptake is low. The knowledge about how model-driven development tools can become more useful to the healthcare software developers should be strengthened. Approach: This paper presents the ModelHealth toolchain that was created in four design/assess cycles, involving 28 students and 41 professional developers in the period 2007--2010. The toolchain provides design assistance for creating software services based on concepts from the CEN-13940 standard for continuity of care, which facilitates development of interoperable software services. Results: The CEN-13940 standard was successfully incorporated into the ModelHealth Toolchain assisting developers in creating software service design models that adhered to the standard. The developers expressed that improved understanding of the target system, documentation generation, and artifact traceability were essential utilities of the model-driven approach. Conclusion: The paper concludes healthcare domain knowledge can be successfully incorporated in a model-driven development toolchain, providing valuable input to the healthcare software service design process. A set of recommendations on how to incorporate domain specific concepts into model-driven development tools is provided. To our knowledge, no other scientific publications have reported from healthcare specific model-driven tool design and evaluations. Our recommendations extend and nuance existing knowledge on model-driven development tooling in general.},
  doi      = {10.1007/s10515-012-0115-6},
  groups   = {SpringerLink, excluidos},
  issn     = {1573-7535},
  url      = {http://dx.doi.org/10.1007/s10515-012-0115-6},
}

@Article{Voelter2013a,
  author        = {Voelter, Markus and Ratiu, Daniel and Kolb, Bernd and Schaetz, Bernhard},
  title         = {mbeddr: instantiating a language workbench in the embedded software domain},
  journal       = {Automated Software Engineering},
  year          = {2013},
  volume        = {20},
  number        = {3},
  pages         = {339--390},
  __markedentry = {[Neto:5]},
  abstract      = {Tools can boost software developer productivity, but building custom tools is prohibitively expensive, especially for small organizations. For example, embedded programmers often have to use low-level C with limited IDE support, and integrated into an off-the-shelf tool chain in an ad-hoc way.},
  doi           = {10.1007/s10515-013-0120-4},
  groups        = {SCOPUS, Compendex, Duplicados},
  issn          = {1573-7535},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10515-013-0120-4},
}

@InBook{Vacchi2013,
  pages     = {76--95},
  title     = {Variability Support in Domain-Specific Language Development},
  publisher = {Springer International Publishing},
  year      = {2013},
  author    = {Vacchi, Edoardo and Cazzola, Walter and Pillay, Suresh and Combemale, Beno{\^i}t},
  editor    = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
  address   = {Cham},
  booktitle = {Software Language Engineering: 6th International Conference, SLE 2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-319-02654-1_5},
  groups    = {SCOPUS, Compendex, Inclusos},
  isbn      = {978-3-319-02654-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_5},
}

@InBook{Sujeeth2013,
  pages     = {52--78},
  title     = {Composition and Reuse with Compiled Domain-Specific Languages},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Sujeeth, Arvind K. and Rompf, Tiark and Brown, Kevin J. and Lee, HyoukJoong and Chafi, Hassan and Popic, Victoria and Wu, Michael and Prokopec, Aleksandar and Jovanovic, Vojin and Odersky, Martin and Olukotun, Kunle},
  editor    = {Castagna, Giuseppe},
  address   = {Berlin, Heidelberg},
  booktitle = {ECOOP 2013 -- Object-Oriented Programming: 27th European Conference, Montpellier, France, July 1-5, 2013. Proceedings},
  doi       = {10.1007/978-3-642-39038-8_3},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-39038-8},
  url       = {http://dx.doi.org/10.1007/978-3-642-39038-8_3},
}

@Article{Mohagheghi2013,
  author   = {Mohagheghi, Parastoo and Gilani, Wasif and Stefanescu, Alin and Fernandez, Miguel A. and Nordmoen, Bj{\o}rn and Fritzsche, Mathias},
  title    = {Where does model-driven engineering help? Experiences from three industrial cases},
  journal  = {Software {\&} Systems Modeling},
  year     = {2013},
  volume   = {12},
  number   = {3},
  pages    = {619--639},
  abstract = {There have been few experience reports from industry on how Model-Driven Engineering (MDE) is applied and what the benefits are. This paper summarizes the experiences of three large industrial participants in a European research project with the objective of developing techniques and tools for applying MDE on the development of large and complex software systems. The participants had varying degrees of previous experience with MDE. They found MDE to be particularly useful for providing abstractions of complex systems at multiple levels or from different viewpoints, for the development of domain-specific models that facilitate communication with non-technical experts, for the purposes of simulation and testing, and for the consumption of models for analysis, such as performance-related decision support and system design improvements. From the industrial perspective, a methodology is considered to be useful and cost-efficient if it is possible to reuse solutions in multiple projects or products. However, developing reusable solutions required extra effort and sometimes had a negative impact on the performance of tools. While the companies identified several benefits of MDE, merging different tools with one another in a seamless development environment required several transformations, which increased the required implementation effort and complexity. Additionally, user-friendliness of tools and the provision of features for managing models of complex systems were identified as crucial for a wider industrial adoption of MDE.},
  doi      = {10.1007/s10270-011-0219-7},
  groups   = {SCOPUS, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-011-0219-7},
}

@InBook{Mayerhofer2013,
  pages     = {56--75},
  title     = {xMOF: Executable DSMLs Based on fUML},
  publisher = {Springer International Publishing},
  year      = {2013},
  author    = {Mayerhofer, Tanja and Langer, Philip and Wimmer, Manuel and Kappel, Gerti},
  editor    = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
  address   = {Cham},
  booktitle = {Software Language Engineering: 6th International Conference, SLE 2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-319-02654-1_4},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-319-02654-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_4},
}

@InBook{Klotzbücher2013,
  pages     = {58--68},
  title     = {A Lightweight, Composable Metamodelling Language for Specification and Validation of Internal Domain Specific Languages},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Klotzb{\"u}cher, Markus and Bruyninckx, Herman},
  editor    = {Machado, Ricardo J. and Maciel, Rita Suzana P. and Rubin, Julia and Botterweck, Goetz},
  address   = {Berlin, Heidelberg},
  booktitle = {Model-Based Methodologies for Pervasive and Embedded Software: 8th International Workshop, MOMPES 2012, Essen, Germany, September 4, 2012. Revised Papers},
  doi       = {10.1007/978-3-642-38209-3_4},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-38209-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-38209-3_4},
}

@InBook{Joerges2013,
  pages     = {11--38},
  title     = {The State of the Art in Code Generation},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {J{\"o}rges, Sven},
  address   = {Berlin, Heidelberg},
  booktitle = {Construction and Evolution of Code Generators: A Model-Driven and Service-Oriented Approach},
  doi       = {10.1007/978-3-642-36127-2_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-36127-2},
  url       = {http://dx.doi.org/10.1007/978-3-642-36127-2_2},
}

@InBook{Izquierdo2013,
  pages     = {101--110},
  title     = {Engaging End-Users in the Collaborative Development of Domain-Specific Modelling Languages},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Izquierdo, Javier Luis C{\'a}novas and Cabot, Jordi and L{\'o}pez-Fern{\'a}ndez, Jes{\'u}s J. and Cuadrado, Jes{\'u}s S{\'a}nchez and Guerra, Esther and de Lara, Juan},
  editor    = {Luo, Yuhua},
  address   = {Berlin, Heidelberg},
  booktitle = {Cooperative Design, Visualization, and Engineering: 10th International Conference, CDVE 2013, Alcudia, Mallorca, Spain, September 22-25, 2013. Proceedings},
  doi       = {10.1007/978-3-642-40840-3_16},
  groups    = {SCOPUS, Compendex, excluidos},
  isbn      = {978-3-642-40840-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-40840-3_16},
}

@InBook{Heidenreich2013,
  pages         = {322--345},
  title         = {Model-Based Language Engineering with EMFText},
  publisher     = {Springer Berlin Heidelberg},
  year          = {2013},
  author        = {Heidenreich, Florian and Johannes, Jendrik and Karol, Sven and Seifert, Mirko and Wende, Christian},
  editor        = {L{\"a}mmel, Ralf and Saraiva, Jo{\~a}o and Visser, Joost},
  address       = {Berlin, Heidelberg},
  __markedentry = {[Neto:5]},
  booktitle     = {Generative and Transformational Techniques in Software Engineering IV: International Summer School, GTTSE 2011, Braga, Portugal, July 3-9, 2011. Revised Papers},
  doi           = {10.1007/978-3-642-35992-7_9},
  groups        = {SCOPUS, Duplicados},
  isbn          = {978-3-642-35992-7},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-642-35992-7_9},
}

@InBook{Hebig2013,
  pages     = {436--453},
  title     = {On the Complex Nature of MDE Evolution},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Hebig, Regina and Giese, Holger and Stallmann, Florian and Seibel, Andreas},
  editor    = {Moreira, Ana and Sch{\"a}tz, Bernhard and Gray, Jeff and Vallecillo, Antonio and Clarke, Peter},
  address   = {Berlin, Heidelberg},
  booktitle = {Model-Driven Engineering Languages and Systems: 16th International Conference, MODELS 2013, Miami, FL, USA, September 29 -- October 4, 2013. Proceedings},
  doi       = {10.1007/978-3-642-41533-3_27},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-41533-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-41533-3_27},
}

@InBook{Hatun2013,
  pages     = {245--281},
  title     = {Engineering Adaptive Embedded Software: Managing Complexity and Evolution},
  publisher = {Springer New York},
  year      = {2013},
  author    = {Hatun, Kardelen and de Roo, Arjan and Bergmans, Lodewijk and Bockisch, Christoph and Ak{\c{s}}it, Mehmet},
  editor    = {Basten, Twan and Hamberg, Roelof and Reckers, Frans and Verriet, Jacques},
  address   = {New York, NY},
  booktitle = {Model-Based Design of Adaptive Embedded Systems},
  doi       = {10.1007/978-1-4614-4821-1_8},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-1-4614-4821-1},
  url       = {http://dx.doi.org/10.1007/978-1-4614-4821-1_8},
}

@Article{Groenewegen2013,
  author        = {Groenewegen, Danny M. and Visser, Eelco},
  title         = {Integration of data validation and user interface concerns in a DSL for web applications},
  journal       = {Software {\&} Systems Modeling},
  year          = {2013},
  volume        = {12},
  number        = {1},
  pages         = {35--52},
  __markedentry = {[Neto:5]},
  abstract      = {Data validation rules constitute the constraints that data input and processing must adhere to in addition to the structural constraints imposed by a data model. Web modeling tools do not make all types of data validation explicit in their models, hampering full code generation and model expressivity. Web application frameworks do not offer a consistent interface for data validation. In this paper, we present a solution for the integration of declarative data validation rules with user interface models in the domain of web applications, unifying syntax, mechanisms for error handling, and semantics of validation checks, and covering value well-formedness, data invariants, input assertions, and action assertions. We have implemented the approach in WebDSL, a domain-specific language for the definition of web applications.},
  doi           = {10.1007/s10270-010-0173-9},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-010-0173-9},
}

@InBook{Fehrenbach2013,
  pages     = {96--116},
  title     = {Software Evolution to Domain-Specific Languages},
  publisher = {Springer International Publishing},
  year      = {2013},
  author    = {Fehrenbach, Stefan and Erdweg, Sebastian and Ostermann, Klaus},
  editor    = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
  address   = {Cham},
  booktitle = {Software Language Engineering: 6th International Conference, SLE 2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-319-02654-1_6},
  groups    = {SCOPUS, Compendex, Inclusos},
  isbn      = {978-3-319-02654-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_6},
}

@InBook{Erdweg2013,
  pages     = {197--217},
  title     = {The State of the Art in Language Workbenches},
  publisher = {Springer International Publishing},
  year      = {2013},
  author    = {Erdweg, Sebastian and van der Storm, Tijs and V{\"o}lter, Markus and Boersma, Meinte and Bosman, Remi and Cook, William R. and Gerritsen, Albert and Hulshout, Angelo and Kelly, Steven and Loh, Alex and Konat, Gabri{\"e}l D. P. and Molina, Pedro J. and Palatnik, Martin and Pohjonen, Risto and Schindler, Eugen and Schindler, Klemens and Solmi, Riccardo and Vergu, Vlad A. and Visser, Eelco and van der Vlist, Kevin and Wachsmuth, Guido H. and van der Woning, Jimi},
  editor    = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
  address   = {Cham},
  booktitle = {Software Language Engineering: 6th International Conference, SLE 2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-319-02654-1_11},
  groups    = {SCOPUS, Compendex, Inclusos},
  isbn      = {978-3-319-02654-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_11},
}

@InBook{Combemale2013,
  pages     = {184--203},
  title     = {Bridging the Chasm between Executable Metamodeling and Models of Computation},
  publisher = {Springer Berlin Heidelberg},
  year      = {2013},
  author    = {Combemale, Beno{\^i}t and Hardebolle, C{\'e}cile and Jacquet, Christophe and Boulanger, Fr{\'e}d{\'e}ric and Baudry, Benoit},
  editor    = {Czarnecki, Krzysztof and Hedin, G{\"o}rel},
  address   = {Berlin, Heidelberg},
  booktitle = {Software Language Engineering: 5th International Conference, SLE 2012, Dresden, Germany, September 26-28, 2012, Revised Selected Papers},
  doi       = {10.1007/978-3-642-36089-3_11},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-642-36089-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-36089-3_11},
}

@InBook{Combemale2013a,
  pages     = {365--384},
  title     = {Reifying Concurrency for Executable Metamodeling},
  publisher = {Springer International Publishing},
  year      = {2013},
  author    = {Combemale, Beno{\^i}t and De Antoni, Julien and Larsen, Matias Vara and Mallet, Fr{\'e}d{\'e}ric and Barais, Olivier and Baudry, Benoit and France, Robert B.},
  editor    = {Erwig, Martin and Paige, Richard F. and Van Wyk, Eric},
  address   = {Cham},
  booktitle = {Software Language Engineering: 6th International Conference, SLE 2013, Indianapolis, IN, USA, October 26-28, 2013. Proceedings},
  doi       = {10.1007/978-3-319-02654-1_20},
  groups    = {SCOPUS, Compendex, excluidos},
  isbn      = {978-3-319-02654-1},
  url       = {http://dx.doi.org/10.1007/978-3-319-02654-1_20},
}

@Article{Cicchetti2013,
  author   = {Cicchetti, Antonio and Di Ruscio, Davide and Iovino, Ludovico and Pierantonio, Alfonso},
  title    = {Managing the evolution of data-intensive Web applications by model-driven techniques},
  journal  = {Software {\&} Systems Modeling},
  year     = {2013},
  volume   = {12},
  number   = {1},
  pages    = {53--83},
  abstract = {The adoption of Model-Driven Engineering (MDE) in the development of Web Applications permitted to decouple the functional description of applications from the underlying implementation platform. This is of paramount relevance for preserving the intellectual property encoded in models and making applications, languages and processes resilient to technological changes. This paper proposes a model-driven approach for supporting the migration and evolution of data-intensive Web applications. In particular, model differencing techniques are considered to realize a migration facility capable of detecting the modifications a model underwent during its lifecycle and to automatically derive from them the programs that are capable of migrating/adapting also those aspects which are not directly derivable from the source models, as for instance the data persistently stored in a database and the page layout usually written using graphic templates. The approach is validated by considering applications described with the beContent and WebML modeling languages.},
  doi      = {10.1007/s10270-011-0193-0},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-011-0193-0},
}

@InBook{Zikra2012,
  pages     = {172--187},
  title     = {Implementing the Unifying Meta-model for Enterprise Modeling and Model-Driven Development: An Experience Report},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Zikra, Iyad},
  editor    = {Sandkuhl, Kurt and Seigerroth, Ulf and Stirna, Janis},
  address   = {Berlin, Heidelberg},
  booktitle = {The Practice of Enterprise Modeling: 5th IFIP WG 8.1 Working Conference, PoEM 2012, Rostock, Germany, November 7-8, 2012. Proceedings},
  doi       = {10.1007/978-3-642-34549-4_13},
  groups    = {SCOPUS, excluidos},
  isbn      = {978-3-642-34549-4},
  url       = {http://dx.doi.org/10.1007/978-3-642-34549-4_13},
}

@InBook{Wagelaar2012,
  pages     = {192--207},
  title     = {Translational Semantics of a Co-evolution Specific Language with the EMF Transformation Virtual Machine},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Wagelaar, Dennis and Iovino, Ludovico and Di Ruscio, Davide and Pierantonio, Alfonso},
  editor    = {Hu, Zhenjiang and de Lara, Juan},
  address   = {Berlin, Heidelberg},
  booktitle = {Theory and Practice of Model Transformations: 5th International Conference, ICMT 2012, Prague, Czech Republic, May 28-29, 2012. Proceedings},
  doi       = {10.1007/978-3-642-30476-7_13},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-30476-7},
  url       = {http://dx.doi.org/10.1007/978-3-642-30476-7_13},
}

@InBook{Sinlapalun2012,
  pages     = {80--87},
  title     = {ARSL: A Domain Specific Language for Aircraft Separation Minima Determination},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Sinlapalun, Sakon and Limpiyakorn, Yachai},
  editor    = {Kim, Tai-hoon and Ramos, Carlos and Kim, Haeng-kon and Kiumi, Akingbehin and Mohammed, Sabah and {\'{S}}l{\k{e}}zak, Dominik},
  address   = {Berlin, Heidelberg},
  booktitle = {Computer Applications for Software Engineering, Disaster Recovery, and Business Continuity: International Conferences, ASEA and DRBC 2012, Held in Conjunction with GST 2012, Jeju Island, Korea, November 28-December 2, 2012. Proceedings},
  doi       = {10.1007/978-3-642-35267-6_11},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-35267-6},
  url       = {http://dx.doi.org/10.1007/978-3-642-35267-6_11},
}

@InBook{Rabbi2012,
  pages     = {36--52},
  title     = {T □: A Domain Specific Language for Rapid Workflow Development},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Rabbi, Fazle and MacCaull, Wendy},
  editor    = {France, Robert B. and Kazmeier, J{\"u}rgen and Breu, Ruth and Atkinson, Colin},
  address   = {Berlin, Heidelberg},
  booktitle = {Model Driven Engineering Languages and Systems: 15th International Conference, MODELS 2012, Innsbruck, Austria, September 30--October 5, 2012. Proceedings},
  doi       = {10.1007/978-3-642-33666-9_4},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-33666-9},
  url       = {http://dx.doi.org/10.1007/978-3-642-33666-9_4},
}

@InBook{Rabbi2012a,
  pages         = {265--279},
  title         = {Model Driven Workflow Development with T □},
  publisher     = {Springer Berlin Heidelberg},
  year          = {2012},
  author        = {Rabbi, Fazle and MacCaull, Wendy},
  editor        = {Bajec, Marko and Eder, Johann},
  address       = {Berlin, Heidelberg},
  __markedentry = {[Neto:5]},
  booktitle     = {Advanced Information Systems Engineering Workshops: CAiSE 2012 International Workshops, Gda{\'{n}}sk, Poland, June 25-26, 2012. Proceedings},
  doi           = {10.1007/978-3-642-31069-0_23},
  groups        = {SCOPUS, Duplicados},
  isbn          = {978-3-642-31069-0},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/978-3-642-31069-0_23},
}

@InBook{Lamo2012,
  pages     = {37--52},
  title     = {DPF Workbench: A Diagrammatic Multi-Layer Domain Specific (Meta-)Modelling Environment},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Lamo, Yngve and Wang, Xiaoliang and Mantz, Florian and MacCaull, Wendy and Rutle, Adrian},
  editor    = {Lee, Roger},
  address   = {Berlin, Heidelberg},
  booktitle = {Computer and Information Science 2012},
  doi       = {10.1007/978-3-642-30454-5_3},
  groups    = {SCOPUS, Duvida},
  isbn      = {978-3-642-30454-5},
  url       = {http://dx.doi.org/10.1007/978-3-642-30454-5_3},
}

@Article{Jézéquel2012,
  author        = {J{\'e}z{\'e}quel, Jean-Marc and Combemale, Benoit and Derrien, Steven and Guy, Cl{\'e}ment and Rajopadhye, Sanjay},
  title         = {Bridging the chasm between MDE and the world of compilation},
  journal       = {Software {\&} Systems Modeling},
  year          = {2012},
  volume        = {11},
  number        = {4},
  pages         = {581--597},
  __markedentry = {[Neto:5]},
  abstract      = {Modeling and transforming have always been the cornerstones of software system development, albeit often investigated by different research communities. Modeling addresses how information is represented and processed, while transformation cares about what the results of processing this information are. To address the growing complexity of software systems, model-driven engineering (MDE) leverages domain-specific languages to define abstract models of systems and automated methods to process them. Meanwhile, compiler technology mostly concentrates on advanced techniques and tools for program transformation. For this, it has developed complex analyses and transformations (from lexical and syntactic to semantic analyses, down to platform-specific optimizations). These two communities appear today quite complementary and are starting to meet again in the software language engineering (SLE) field. SLE addresses all the stages of a software language lifecycle, from its definition to its tooling. In this article, we show how SLE can lean on the expertise of both MDE and compiler research communities and how each community can bring its solutions to the other one. We then draw a picture of the current state of SLE and of the challenges it has still to face.},
  doi           = {10.1007/s10270-012-0266-8},
  groups        = {ACM, SCOPUS, Duplicados},
  issn          = {1619-1374},
  keywords      = {rank3},
  url           = {http://dx.doi.org/10.1007/s10270-012-0266-8},
}

@InBook{Flammini2012,
  pages     = {190--204},
  title     = {Model-Driven V{\&}V Processes for Computer Based Control Systems: A Unifying Perspective},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Flammini, Francesco and Marrone, Stefano and Mazzocca, Nicola and Nardone, Roberto and Vittorini, Valeria},
  editor    = {Margaria, Tiziana and Steffen, Bernhard},
  address   = {Berlin, Heidelberg},
  booktitle = {Leveraging Applications of Formal Methods, Verification and Validation. Applications and Case Studies: 5th International Symposium, ISoLA 2012, Heraklion, Crete, Greece, October 15-18, 2012, Proceedings, Part II},
  doi       = {10.1007/978-3-642-34032-1_20},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-34032-1},
  url       = {http://dx.doi.org/10.1007/978-3-642-34032-1_20},
}

@Article{Clark2012,
  author   = {Clark, Tony and Muller, Pierre-Alain},
  title    = {Exploiting model driven technology: a tale of two startups},
  journal  = {Software {\&} Systems Modeling},
  year     = {2012},
  volume   = {11},
  number   = {4},
  pages    = {481--493},
  abstract = {This article describes the experiences of two independent start-up companies that were created in the white-heat of the early days of model-based engineering. Each company aimed to revolutionise software development by raising the level of abstraction through modelling. The article describes the context, technical innovations, business experiences, demise and lessons learned by each company.},
  doi      = {10.1007/s10270-012-0260-1},
  groups   = {SpringerLink, excluidos},
  issn     = {1619-1374},
  url      = {http://dx.doi.org/10.1007/s10270-012-0260-1},
}

@InBook{Belmonte2012,
  pages     = {50--63},
  title     = {A Model Based Approach for Safety Analysis},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Belmonte, Fabien and Soubiran, Elie},
  editor    = {Ortmeier, Frank and Daniel, Peter},
  address   = {Berlin, Heidelberg},
  booktitle = {Computer Safety, Reliability, and Security: SAFECOMP 2012 Workshops: Sassur, ASCoMS, DESEC4LCCI, ERCIM/EWICS, IWDE, Magdeburg, Germany, September 25-28, 2012. Proceedings},
  doi       = {10.1007/978-3-642-33675-1_5},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-33675-1},
  url       = {http://dx.doi.org/10.1007/978-3-642-33675-1_5},
}

@InBook{Andova2012,
  pages     = {21--57},
  title     = {MDE Basics with a DSL Focus},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Andova, Suzana and van den Brand, Mark G. J. and Engelen, Luc J. P. and Verhoeff, Tom},
  editor    = {Bernardo, Marco and Cortellessa, Vittorio and Pierantonio, Alfonso},
  address   = {Berlin, Heidelberg},
  booktitle = {Formal Methods for Model-Driven Engineering: 12th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2012, Bertinoro, Italy, June 18-23, 2012. Advanced Lectures},
  doi       = {10.1007/978-3-642-30982-3_2},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-30982-3},
  url       = {http://dx.doi.org/10.1007/978-3-642-30982-3_2},
}

@InBook{Ammann2012,
  pages     = {779--782},
  title     = {Verification of Behavioral Domain-Specific Languages with a Model Checker},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Ammann, Christian},
  editor    = {Zhang, Tianbiao},
  address   = {Berlin, Heidelberg},
  booktitle = {Mechanical Engineering and Technology: Selected and Revised Results of the 2011 International Conference on Mechanical Engineering and Technology, London, UK, November 24-25, 2011},
  doi       = {10.1007/978-3-642-27329-2_107},
  groups    = {SpringerLink, Inclusos},
  isbn      = {978-3-642-27329-2},
  url       = {http://dx.doi.org/10.1007/978-3-642-27329-2_107},
}

@InBook{Alloush2012,
  pages     = {100--111},
  title     = {Linking Telecom Service High-Level Abstract Models to Simulators Based on Model Transformations: The IMS Case Study},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Alloush, Iyas and Chiprianov, Vanea and Kermarrec, Yvon and Rouvrais, Siegfried},
  editor    = {Szab{\'o}, R{\'o}bert and Vid{\'a}cs, Attila},
  address   = {Berlin, Heidelberg},
  booktitle = {Information and Communication Technologies: 18th EUNICE/ IFIP WG 6.2, 6.6 International Conference, EUNICE 2012, Budapest, Hungary, August 29-31, 2012. Proceedings},
  doi       = {10.1007/978-3-642-32808-4_10},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-32808-4},
  url       = {http://dx.doi.org/10.1007/978-3-642-32808-4_10},
}

@InBook{Agt2012,
  pages     = {4--11},
  title     = {Supporting Software Language Engineering by Automated Domain Knowledge Acquisition},
  publisher = {Springer Berlin Heidelberg},
  year      = {2012},
  author    = {Agt, Henning},
  editor    = {Kienzle, J{\"o}rg},
  address   = {Berlin, Heidelberg},
  booktitle = {Models in Software Engineering: Workshops and Symposia at MODELS 2011, Wellington, New Zealand, October 16-21, 2011, Reports and Revised Selected Papers},
  doi       = {10.1007/978-3-642-29645-1_2},
  groups    = {SpringerLink, excluidos},
  isbn      = {978-3-642-29645-1},
  url       = {http://dx.doi.org/10.1007/978-3-642-29645-1_2},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: groupstree:
0 AllEntriesGroup:;
1 ExplicitGroup:Duplicados\;0\;;
1 ExplicitGroup:Inclusos\;0\;;
1 ExplicitGroup:excluidos\;0\;;
1 ExplicitGroup:Duvida\;0\;;
}
